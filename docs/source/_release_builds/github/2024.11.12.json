{
    "ckan": {
        "ckanext-canada": {
            "url": "https://api.github.com/repos/open-data/ckanext-canada/compare/7986755ea35777ce37c09dbf75e7f883747acdad...6e940c9c3ee4db4156537679c0236fe37632735b",
            "html_url": "https://github.com/open-data/ckanext-canada/compare/7986755ea35777ce37c09dbf75e7f883747acdad...6e940c9c3ee4db4156537679c0236fe37632735b",
            "permalink_url": "https://github.com/open-data/ckanext-canada/compare/open-data:7986755...open-data:6e940c9",
            "diff_url": "https://github.com/open-data/ckanext-canada/compare/7986755ea35777ce37c09dbf75e7f883747acdad...6e940c9c3ee4db4156537679c0236fe37632735b.diff",
            "patch_url": "https://github.com/open-data/ckanext-canada/compare/7986755ea35777ce37c09dbf75e7f883747acdad...6e940c9c3ee4db4156537679c0236fe37632735b.patch",
            "base_commit": {
                "sha": "7986755ea35777ce37c09dbf75e7f883747acdad",
                "node_id": "C_kwDOAGzkrtoAKDc5ODY3NTVlYTM1Nzc3Y2UzN2MwOWRiZjc1ZTdmODgzNzQ3YWNkYWQ",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "97247789+JVickery-TBS@users.noreply.github.com",
                        "date": "2024-10-15T13:28:54Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-10-15T13:28:54Z"
                    },
                    "message": "Merge pull request #1520 from open-data/change/markdown-helper-popup\n\nTranslate Markdown Help Popup",
                    "tree": {
                        "sha": "7db29ed8f01dba7bdb13b6de04c6229431796e7f",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/7db29ed8f01dba7bdb13b6de04c6229431796e7f"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnDm4WCRC1aQ7uu5UhlAAAm3AQAKJg5UauLYrymHEmQdLXQoKh\ntEPSAJo7AYJOR8mh/IL5dHu5fvf5RFiBrOtHCSCDH1EfuPivfvoTNSbNLixi2qTK\n6nFHO3PgYyCiPUXrhvhSw4rir+P8zqgfB2tbUu0IrVkvtjBBbYWa92depWn/n/by\nO5OpoNRNO2LOSlb5GGrz6I5Eorm4KVs1ppt15WsaTmh7Js6KLdjIXx6UrUM8qXZ+\nwlUkpZ4AJt907LN+mbRxcERX1O9ImFjj8Nt8FAIxSqUoFKvtQr+8pX7tVNtX6siw\nB01F98j4zsZdt2qGKiF8B8SpK80z95ZR2V3bEpRSqvNhNdB0WLNF5QqqRR8y3N5+\nJVTGxa+2q4y5GNKELc4gJPJm4VOUkKkwkgnjtL0YuZu81MPswDMkP87ghba0RwRr\nKWnUzSYLQHnuM9wqC5sLoVIg2b1HqnLeS/50vgImqk53JIpBXQxtlJtSYo2OSSZU\narIPmjZcEADdlNJ1oOGfhi+XrLHGn5zW2fG5PAEJ4iMRI6rH4BSOouwokzKAxVK2\nb1EwTKmTp8UR63ZxqqVmZn25JABqL2/GBh1BuUcKk8hAKJBcvj1CuDD9yy3kUqAc\nWYh0hy21dFHTVVewav/hRvT3VKRneUM+ol6HY/Nk9JRuBDZxha/CTS5FqRNjKXCy\n3lPMZuKODQwrbwyHJ/iD\n=cS96\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 7db29ed8f01dba7bdb13b6de04c6229431796e7f\nparent b7743231685f899397f1ae516606bbf01418c3a6\nparent 2667ddd0276d7e81e8ca3cc7efb9f99d366bff38\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1728998934 -0400\ncommitter GitHub <noreply@github.com> 1728998934 -0400\n\nMerge pull request #1520 from open-data/change/markdown-helper-popup\n\nTranslate Markdown Help Popup",
                        "verified_at": "2024-11-05T13:52:52Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                "html_url": "https://github.com/open-data/ckanext-canada/commit/7986755ea35777ce37c09dbf75e7f883747acdad",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "b7743231685f899397f1ae516606bbf01418c3a6",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b7743231685f899397f1ae516606bbf01418c3a6",
                        "html_url": "https://github.com/open-data/ckanext-canada/commit/b7743231685f899397f1ae516606bbf01418c3a6"
                    },
                    {
                        "sha": "2667ddd0276d7e81e8ca3cc7efb9f99d366bff38",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2667ddd0276d7e81e8ca3cc7efb9f99d366bff38",
                        "html_url": "https://github.com/open-data/ckanext-canada/commit/2667ddd0276d7e81e8ca3cc7efb9f99d366bff38"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "7986755ea35777ce37c09dbf75e7f883747acdad",
                "node_id": "C_kwDOAGzkrtoAKDc5ODY3NTVlYTM1Nzc3Y2UzN2MwOWRiZjc1ZTdmODgzNzQ3YWNkYWQ",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "97247789+JVickery-TBS@users.noreply.github.com",
                        "date": "2024-10-15T13:28:54Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-10-15T13:28:54Z"
                    },
                    "message": "Merge pull request #1520 from open-data/change/markdown-helper-popup\n\nTranslate Markdown Help Popup",
                    "tree": {
                        "sha": "7db29ed8f01dba7bdb13b6de04c6229431796e7f",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/7db29ed8f01dba7bdb13b6de04c6229431796e7f"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnDm4WCRC1aQ7uu5UhlAAAm3AQAKJg5UauLYrymHEmQdLXQoKh\ntEPSAJo7AYJOR8mh/IL5dHu5fvf5RFiBrOtHCSCDH1EfuPivfvoTNSbNLixi2qTK\n6nFHO3PgYyCiPUXrhvhSw4rir+P8zqgfB2tbUu0IrVkvtjBBbYWa92depWn/n/by\nO5OpoNRNO2LOSlb5GGrz6I5Eorm4KVs1ppt15WsaTmh7Js6KLdjIXx6UrUM8qXZ+\nwlUkpZ4AJt907LN+mbRxcERX1O9ImFjj8Nt8FAIxSqUoFKvtQr+8pX7tVNtX6siw\nB01F98j4zsZdt2qGKiF8B8SpK80z95ZR2V3bEpRSqvNhNdB0WLNF5QqqRR8y3N5+\nJVTGxa+2q4y5GNKELc4gJPJm4VOUkKkwkgnjtL0YuZu81MPswDMkP87ghba0RwRr\nKWnUzSYLQHnuM9wqC5sLoVIg2b1HqnLeS/50vgImqk53JIpBXQxtlJtSYo2OSSZU\narIPmjZcEADdlNJ1oOGfhi+XrLHGn5zW2fG5PAEJ4iMRI6rH4BSOouwokzKAxVK2\nb1EwTKmTp8UR63ZxqqVmZn25JABqL2/GBh1BuUcKk8hAKJBcvj1CuDD9yy3kUqAc\nWYh0hy21dFHTVVewav/hRvT3VKRneUM+ol6HY/Nk9JRuBDZxha/CTS5FqRNjKXCy\n3lPMZuKODQwrbwyHJ/iD\n=cS96\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 7db29ed8f01dba7bdb13b6de04c6229431796e7f\nparent b7743231685f899397f1ae516606bbf01418c3a6\nparent 2667ddd0276d7e81e8ca3cc7efb9f99d366bff38\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1728998934 -0400\ncommitter GitHub <noreply@github.com> 1728998934 -0400\n\nMerge pull request #1520 from open-data/change/markdown-helper-popup\n\nTranslate Markdown Help Popup",
                        "verified_at": "2024-11-05T13:52:52Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                "html_url": "https://github.com/open-data/ckanext-canada/commit/7986755ea35777ce37c09dbf75e7f883747acdad",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "b7743231685f899397f1ae516606bbf01418c3a6",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b7743231685f899397f1ae516606bbf01418c3a6",
                        "html_url": "https://github.com/open-data/ckanext-canada/commit/b7743231685f899397f1ae516606bbf01418c3a6"
                    },
                    {
                        "sha": "2667ddd0276d7e81e8ca3cc7efb9f99d366bff38",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2667ddd0276d7e81e8ca3cc7efb9f99d366bff38",
                        "html_url": "https://github.com/open-data/ckanext-canada/commit/2667ddd0276d7e81e8ca3cc7efb9f99d366bff38"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 39,
            "behind_by": 0,
            "total_commits": 39,
            "commits": [
                {
                    "sha": "9890991d49ec014e031bec80fc77948885393d8f",
                    "node_id": "C_kwDOAGzkrtoAKDk4OTA5OTFkNDllYzAxNGUwMzFiZWM4MGZjNzc5NDg4ODUzOTNkOGY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-18T20:26:43Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-18T20:26:43Z"
                        },
                        "message": "feat(dev): heavily improve post to portal;\n\n- Added DB model for portal sync tracking.\n- Heaving improved copy-datasets and PortalUpdater code to catch all exceptions and log them.\n- Added logic actions and views to show all the new stuff.",
                        "tree": {
                            "sha": "6766d205f520c9c409238026915d6b7a4af8e16c",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/6766d205f520c9c409238026915d6b7a4af8e16c"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/9890991d49ec014e031bec80fc77948885393d8f",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9890991d49ec014e031bec80fc77948885393d8f",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/9890991d49ec014e031bec80fc77948885393d8f",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9890991d49ec014e031bec80fc77948885393d8f/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7986755ea35777ce37c09dbf75e7f883747acdad",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7986755ea35777ce37c09dbf75e7f883747acdad"
                        }
                    ]
                },
                {
                    "sha": "fc407f50a824092b75b70ec2991aec67f41e5d1f",
                    "node_id": "C_kwDOAGzkrtoAKGZjNDA3ZjUwYTgyNDA5MmI3NWI3MGVjMjk5MWFlYzY3ZjQxZTVkMWY",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-10-22T13:07:00Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-10-22T13:07:00Z"
                        },
                        "message": "show available resource metadata under Additional Information",
                        "tree": {
                            "sha": "1b5ec0d6820c284cf271e99b5ec2f6fb619dc634",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/1b5ec0d6820c284cf271e99b5ec2f6fb619dc634"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/fc407f50a824092b75b70ec2991aec67f41e5d1f",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/fc407f50a824092b75b70ec2991aec67f41e5d1f",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/fc407f50a824092b75b70ec2991aec67f41e5d1f",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/fc407f50a824092b75b70ec2991aec67f41e5d1f/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7986755ea35777ce37c09dbf75e7f883747acdad",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7986755ea35777ce37c09dbf75e7f883747acdad"
                        }
                    ]
                },
                {
                    "sha": "74178f889571a8c9d887f6fc8a2396f349251bff",
                    "node_id": "C_kwDOAGzkrtoAKDc0MTc4Zjg4OTU3MWE4YzlkODg3ZjZmYzhhMjM5NmYzNDkyNTFiZmY",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-10-22T13:19:05Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-10-22T13:19:05Z"
                        },
                        "message": "add changelog for PR# 1523",
                        "tree": {
                            "sha": "9f7a38bc68f0d9ab8aa1748db3404544610ea89e",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/9f7a38bc68f0d9ab8aa1748db3404544610ea89e"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/74178f889571a8c9d887f6fc8a2396f349251bff",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/74178f889571a8c9d887f6fc8a2396f349251bff",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/74178f889571a8c9d887f6fc8a2396f349251bff",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/74178f889571a8c9d887f6fc8a2396f349251bff/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "fc407f50a824092b75b70ec2991aec67f41e5d1f",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/fc407f50a824092b75b70ec2991aec67f41e5d1f",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/fc407f50a824092b75b70ec2991aec67f41e5d1f"
                        }
                    ]
                },
                {
                    "sha": "1326dd811f538a43db4857413dfa35f0c7909b7a",
                    "node_id": "C_kwDOAGzkrtoAKDEzMjZkZDgxMWY1MzhhNDNkYjQ4NTc0MTNkZmEzNWYwYzc5MDliN2E",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-22T16:50:51Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-22T16:50:51Z"
                        },
                        "message": "feat(dev): changelog, context manager, view pager;\n\n- Finalized the pagination for the view and logic function.\n- Updated the model.\n- Updated the migration script.\n- Fixed upgrade db for `canada_public` in test base class.\n- Added a context manager to capture and format exceptions.",
                        "tree": {
                            "sha": "83fd6cba086d1b0cbd6176a7f5ee34100dc9192a",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/83fd6cba086d1b0cbd6176a7f5ee34100dc9192a"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/1326dd811f538a43db4857413dfa35f0c7909b7a",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1326dd811f538a43db4857413dfa35f0c7909b7a",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/1326dd811f538a43db4857413dfa35f0c7909b7a",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1326dd811f538a43db4857413dfa35f0c7909b7a/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9890991d49ec014e031bec80fc77948885393d8f",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9890991d49ec014e031bec80fc77948885393d8f",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9890991d49ec014e031bec80fc77948885393d8f"
                        }
                    ]
                },
                {
                    "sha": "004a19f8ca8a5b1683c453a33278a8a082cac67e",
                    "node_id": "C_kwDOAGzkrtoAKDAwNGExOWY4Y2E4YTViMTY4M2M0NTNhMzMyNzhhOGEwODJjYWM2N2U",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-22T17:36:55Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-22T17:36:55Z"
                        },
                        "message": "feat(misc): i18n, cli vanity;\n\n- Error labels for PortalUpdater.\n- New messages.",
                        "tree": {
                            "sha": "dfbab32b156efb639790437ec0142e759b9074fc",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/dfbab32b156efb639790437ec0142e759b9074fc"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/004a19f8ca8a5b1683c453a33278a8a082cac67e",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/004a19f8ca8a5b1683c453a33278a8a082cac67e",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/004a19f8ca8a5b1683c453a33278a8a082cac67e",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/004a19f8ca8a5b1683c453a33278a8a082cac67e/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1326dd811f538a43db4857413dfa35f0c7909b7a",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1326dd811f538a43db4857413dfa35f0c7909b7a",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/1326dd811f538a43db4857413dfa35f0c7909b7a"
                        }
                    ]
                },
                {
                    "sha": "648fc92651fc73848386d1b471944212d7d860fe",
                    "node_id": "C_kwDOAGzkrtoAKDY0OGZjOTI2NTFmYzczODQ4Mzg2ZDFiNDcxOTQ0MjEyZDdkODYwZmU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-22T17:43:20Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-22T17:43:20Z"
                        },
                        "message": "revert(misc): unused import;\n\n- Removed unused import.",
                        "tree": {
                            "sha": "fe168e358f7cbc797dee16bca4b7b8c8271cdd22",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/fe168e358f7cbc797dee16bca4b7b8c8271cdd22"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/648fc92651fc73848386d1b471944212d7d860fe",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/648fc92651fc73848386d1b471944212d7d860fe",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/648fc92651fc73848386d1b471944212d7d860fe",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/648fc92651fc73848386d1b471944212d7d860fe/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "004a19f8ca8a5b1683c453a33278a8a082cac67e",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/004a19f8ca8a5b1683c453a33278a8a082cac67e",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/004a19f8ca8a5b1683c453a33278a8a082cac67e"
                        }
                    ]
                },
                {
                    "sha": "824bc783c21d7c66e8e11565fc41a646eeb0aa4d",
                    "node_id": "C_kwDOAGzkrtoAKDgyNGJjNzgzYzIxZDdjNjZlOGUxMTU2NWZjNDFhNjQ2ZWViMGFhNGQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-25T14:50:53Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-25T14:50:53Z"
                        },
                        "message": "feat(cli): context managers;\n\n- Heavily improved the context managers.",
                        "tree": {
                            "sha": "62e4928f842dfcfa1284d577cf46d792c8b67aa8",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/62e4928f842dfcfa1284d577cf46d792c8b67aa8"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/824bc783c21d7c66e8e11565fc41a646eeb0aa4d",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/824bc783c21d7c66e8e11565fc41a646eeb0aa4d",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/824bc783c21d7c66e8e11565fc41a646eeb0aa4d",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/824bc783c21d7c66e8e11565fc41a646eeb0aa4d/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "648fc92651fc73848386d1b471944212d7d860fe",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/648fc92651fc73848386d1b471944212d7d860fe",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/648fc92651fc73848386d1b471944212d7d860fe"
                        }
                    ]
                },
                {
                    "sha": "02cb676bc1299d2f6dd10c31872938a795c92fa4",
                    "node_id": "C_kwDOAGzkrtoAKDAyY2I2NzZiYzEyOTlkMmY2ZGQxMGMzMTg3MjkzOGE3OTVjOTJmYTQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-28T15:00:07Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-28T15:00:07Z"
                        },
                        "message": "feat(misc): comments;\n\n- Added inline comment for tests.\n- Fixed return of abort in new view.",
                        "tree": {
                            "sha": "3d2255eaa1bb4becd157f0a662038bb867c7c0f1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/3d2255eaa1bb4becd157f0a662038bb867c7c0f1"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/02cb676bc1299d2f6dd10c31872938a795c92fa4",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/02cb676bc1299d2f6dd10c31872938a795c92fa4",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/02cb676bc1299d2f6dd10c31872938a795c92fa4",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/02cb676bc1299d2f6dd10c31872938a795c92fa4/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "824bc783c21d7c66e8e11565fc41a646eeb0aa4d",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/824bc783c21d7c66e8e11565fc41a646eeb0aa4d",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/824bc783c21d7c66e8e11565fc41a646eeb0aa4d"
                        }
                    ]
                },
                {
                    "sha": "579948e32add00f54b1e7bd219f25453bb5ef138",
                    "node_id": "C_kwDOAGzkrtoAKDU3OTk0OGUzMmFkZDAwZjU0YjFlN2JkMjE5ZjI1NDUzYmI1ZWYxMzg",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T15:45:31Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T15:45:31Z"
                        },
                        "message": "feat(templates): operation guide links;\n\n- Updated old GCPedia links to new HTML Drupal Guide.",
                        "tree": {
                            "sha": "0c953640f1f9d45b94e87fcd12f6b2c1764bf4ac",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/0c953640f1f9d45b94e87fcd12f6b2c1764bf4ac"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/579948e32add00f54b1e7bd219f25453bb5ef138",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/579948e32add00f54b1e7bd219f25453bb5ef138",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/579948e32add00f54b1e7bd219f25453bb5ef138",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/579948e32add00f54b1e7bd219f25453bb5ef138/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7986755ea35777ce37c09dbf75e7f883747acdad",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7986755ea35777ce37c09dbf75e7f883747acdad"
                        }
                    ]
                },
                {
                    "sha": "51f1a7f27f010d46b4abaa043b2fb056143c8821",
                    "node_id": "C_kwDOAGzkrtoAKDUxZjFhN2YyN2YwMTBkNDZiNGFiYWEwNDNiMmZiMDU2MTQzYzg4MjE",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T15:53:29Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T15:53:29Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "1ca18d46a431b2e5e27686bd87667e624eb591c9",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/1ca18d46a431b2e5e27686bd87667e624eb591c9"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/51f1a7f27f010d46b4abaa043b2fb056143c8821",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/51f1a7f27f010d46b4abaa043b2fb056143c8821",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/51f1a7f27f010d46b4abaa043b2fb056143c8821",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/51f1a7f27f010d46b4abaa043b2fb056143c8821/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "579948e32add00f54b1e7bd219f25453bb5ef138",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/579948e32add00f54b1e7bd219f25453bb5ef138",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/579948e32add00f54b1e7bd219f25453bb5ef138"
                        }
                    ]
                },
                {
                    "sha": "21a746def7ddad66a2c6743608434f7a1dbc6b6a",
                    "node_id": "C_kwDOAGzkrtoAKDIxYTc0NmRlZjdkZGFkNjZhMmM2NzQzNjA4NDM0ZjdhMWRiYzZiNmE",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T19:40:50Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T19:40:50Z"
                        },
                        "message": "feat(i18n): strings;\n\n- Added new translation strings.",
                        "tree": {
                            "sha": "ad2877ee2cfff5664e0da45593173b1788745a41",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/ad2877ee2cfff5664e0da45593173b1788745a41"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/21a746def7ddad66a2c6743608434f7a1dbc6b6a",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/21a746def7ddad66a2c6743608434f7a1dbc6b6a",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/21a746def7ddad66a2c6743608434f7a1dbc6b6a",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/21a746def7ddad66a2c6743608434f7a1dbc6b6a/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "02cb676bc1299d2f6dd10c31872938a795c92fa4",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/02cb676bc1299d2f6dd10c31872938a795c92fa4",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/02cb676bc1299d2f6dd10c31872938a795c92fa4"
                        }
                    ]
                },
                {
                    "sha": "9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f",
                    "node_id": "C_kwDOAGzkrtoAKDlmYTFkMmY5ZmVmMzc4ZDBiY2I0MjgwMGNiOWMzOWVkNzRlYzY1MGY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-30T15:32:24Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-30T15:32:24Z"
                        },
                        "message": "fix(cli): return tuple;\n\n- Return tuple in early return of unchanged data dictionary and file hash.",
                        "tree": {
                            "sha": "6e4c72ea21300e9e52b535c2cc472be24ec4fa86",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/6e4c72ea21300e9e52b535c2cc472be24ec4fa86"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "21a746def7ddad66a2c6743608434f7a1dbc6b6a",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/21a746def7ddad66a2c6743608434f7a1dbc6b6a",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/21a746def7ddad66a2c6743608434f7a1dbc6b6a"
                        }
                    ]
                },
                {
                    "sha": "15b8db0a3712420b70961284d593b52c36da81bd",
                    "node_id": "C_kwDOAGzkrtoAKDE1YjhkYjBhMzcxMjQyMGI3MDk2MTI4NGQ1OTNiNTJjMzZkYTgxYmQ",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-11-01T16:00:31Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-11-01T16:00:31Z"
                        },
                        "message": "OPEN-2475: Add Django Search to Hospitality PD in Makefile",
                        "tree": {
                            "sha": "a1b548e81140ea784fbb2cdd81050a7e85903220",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/a1b548e81140ea784fbb2cdd81050a7e85903220"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/15b8db0a3712420b70961284d593b52c36da81bd",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/15b8db0a3712420b70961284d593b52c36da81bd",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/15b8db0a3712420b70961284d593b52c36da81bd",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/15b8db0a3712420b70961284d593b52c36da81bd/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7986755ea35777ce37c09dbf75e7f883747acdad",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7986755ea35777ce37c09dbf75e7f883747acdad"
                        }
                    ]
                },
                {
                    "sha": "a52e69b4876589642428f08e0739a4aef5a38971",
                    "node_id": "C_kwDOAGzkrtoAKGE1MmU2OWI0ODc2NTg5NjQyNDI4ZjA4ZTA3MzlhNGFlZjVhMzg5NzE",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-11-01T16:09:52Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-11-01T16:09:52Z"
                        },
                        "message": "OPEN-2475: Add Django Search to Hospitality PD in Makefile",
                        "tree": {
                            "sha": "0c94827ee5ce44d6510e83e9edc31625f8aa40c4",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/0c94827ee5ce44d6510e83e9edc31625f8aa40c4"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/a52e69b4876589642428f08e0739a4aef5a38971",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a52e69b4876589642428f08e0739a4aef5a38971",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/a52e69b4876589642428f08e0739a4aef5a38971",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a52e69b4876589642428f08e0739a4aef5a38971/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "15b8db0a3712420b70961284d593b52c36da81bd",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/15b8db0a3712420b70961284d593b52c36da81bd",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/15b8db0a3712420b70961284d593b52c36da81bd"
                        }
                    ]
                },
                {
                    "sha": "9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                    "node_id": "C_kwDOAGzkrtoAKDljNTAxNzVjMDU5YTY4NDBmOWFlYjliOWRiNzlkYmJiYzgxMTZkMDQ",
                    "commit": {
                        "author": {
                            "name": "Ross Thompson",
                            "email": "thriuin@users.noreply.github.com",
                            "date": "2024-11-01T17:42:51Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-01T17:42:51Z"
                        },
                        "message": "Merge pull request #1527 from open-data/open-2475-hospitality-search-makefile\n\nOPEN-2475: Add Django Search to Hospitality PD in Makefile",
                        "tree": {
                            "sha": "0c94827ee5ce44d6510e83e9edc31625f8aa40c4",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/0c94827ee5ce44d6510e83e9edc31625f8aa40c4"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnJRMbCRC1aQ7uu5UhlAAAyN0QAEjIjeVDIB81iCJ+8nVQxkB0\n1qwv3y+/T1IQw22gtP/y09oAsHQGgOXZuMe68trAeGrajc6jiZ5k2qms3NxEO2Oe\nWxiq5UGuwAbJ7UCEl1FmrRAvBLYI+VzRtbAOLJpZCZrZQugZmHBjObyUErr7E8EP\nb2EANjkl0X5nRYeHe0xYHX/+4Yd49adF0QeCIWSodRIEaPtKSd248IsIkAvaqsI1\nynE1lRlwxEvD7u5fHvcg8/0cSs+zq/iGKDk2qwHVugF7f6I/0GN2Yx2FQZJ3nvQ3\nMGM/JgyZ1WCzKBhhQVbSp+fKpvzE5NtbQqJpnxs+DRK7/Mv3u9MRN288QYoJdzec\nAnJAnxbATjj1kVOHvytJyywxR0f3PT5ZKc8jWlbAgDJY9fSZx7LHzCq8lOpq8/Fb\nyWttWpcvgc579Y7461WZqndBKgNmKnb+ZH4TSD/Ie7kTbfn8xn5pyalSVsMa3EGf\nC01tXAnNtAYNUfovd0Dm113uimy3jmR72eSatGSqskp/YZTrhxbzMryEMxfjRGL6\nE1H2fDv05qqjCWWywJCvPL+GG+jKSKHyWSNNZ28Eb5BrrtNIOZGYnrQo45ridBi0\nRL80NexvO3BQJotNzWH3nP/ivuTCSyvIhHAEwzxbLpuSurlBWYGpQ+tIbtSRWhmb\ntzmzzQ4/OZC5WYpurx6J\n=B2zU\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 0c94827ee5ce44d6510e83e9edc31625f8aa40c4\nparent 7986755ea35777ce37c09dbf75e7f883747acdad\nparent a52e69b4876589642428f08e0739a4aef5a38971\nauthor Ross Thompson <thriuin@users.noreply.github.com> 1730482971 -0400\ncommitter GitHub <noreply@github.com> 1730482971 -0400\n\nMerge pull request #1527 from open-data/open-2475-hospitality-search-makefile\n\nOPEN-2475: Add Django Search to Hospitality PD in Makefile",
                            "verified_at": "2024-11-05T17:00:26Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c50175c059a6840f9aeb9b9db79dbbbc8116d04/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7986755ea35777ce37c09dbf75e7f883747acdad",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7986755ea35777ce37c09dbf75e7f883747acdad",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7986755ea35777ce37c09dbf75e7f883747acdad"
                        },
                        {
                            "sha": "a52e69b4876589642428f08e0739a4aef5a38971",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a52e69b4876589642428f08e0739a4aef5a38971",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/a52e69b4876589642428f08e0739a4aef5a38971"
                        }
                    ]
                },
                {
                    "sha": "7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e",
                    "node_id": "C_kwDOAGzkrtoAKDdiZjI2MGM5MGU1NzNiY2IxMmRjYzQ5YWE5M2JkY2VlMmZmYzRlMmU",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-05T17:00:03Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-05T17:00:03Z"
                        },
                        "message": "remove rebuilding of reclassification and hospitalityq from makefile",
                        "tree": {
                            "sha": "695d70ef303e16c0758f516067c6db030f176214",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/695d70ef303e16c0758f516067c6db030f176214"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9c50175c059a6840f9aeb9b9db79dbbbc8116d04"
                        }
                    ]
                },
                {
                    "sha": "2024af1d585243b8d04b3259b75dc8094a4a0663",
                    "node_id": "C_kwDOAGzkrtoAKDIwMjRhZjFkNTg1MjQzYjhkMDRiMzI1OWI3NWRjODA5NGE0YTA2NjM",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-05T17:04:20Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-05T17:04:20Z"
                        },
                        "message": "add changelog for PR# 1528",
                        "tree": {
                            "sha": "83aa228bb8e9af6c0394f323570e3473aa01d9e9",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/83aa228bb8e9af6c0394f323570e3473aa01d9e9"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/2024af1d585243b8d04b3259b75dc8094a4a0663",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2024af1d585243b8d04b3259b75dc8094a4a0663",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/2024af1d585243b8d04b3259b75dc8094a4a0663",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2024af1d585243b8d04b3259b75dc8094a4a0663/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7bf260c90e573bcb12dcc49aa93bdcee2ffc4e2e"
                        }
                    ]
                },
                {
                    "sha": "fa8f63bfb818512dc4e068520d93759bfed55b20",
                    "node_id": "C_kwDOAGzkrtoAKGZhOGY2M2JmYjgxODUxMmRjNGUwNjg1MjBkOTM3NTliZmVkNTViMjA",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-05T17:48:44Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-05T17:48:44Z"
                        },
                        "message": "update tests for makefile",
                        "tree": {
                            "sha": "dac6c6cca5c609902c9c4dd7080fdb95ddb1e319",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/dac6c6cca5c609902c9c4dd7080fdb95ddb1e319"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/fa8f63bfb818512dc4e068520d93759bfed55b20",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/fa8f63bfb818512dc4e068520d93759bfed55b20",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/fa8f63bfb818512dc4e068520d93759bfed55b20",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/fa8f63bfb818512dc4e068520d93759bfed55b20/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "2024af1d585243b8d04b3259b75dc8094a4a0663",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2024af1d585243b8d04b3259b75dc8094a4a0663",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/2024af1d585243b8d04b3259b75dc8094a4a0663"
                        }
                    ]
                },
                {
                    "sha": "ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5",
                    "node_id": "C_kwDOAGzkrtoAKGZmNWY5NTRmYzJjMjFmNmUyMmMxMzkzYjhkNjRmODEwZThkNWQ0ZTU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-07T13:23:37Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-07T13:23:37Z"
                        },
                        "message": "feat(cli): activity deletion;\n\n- Improved activity deletion capabilities.\n- Updated template copy and translations.",
                        "tree": {
                            "sha": "2aa5a51dc6f55d53a2a0d8c5051907059f302388",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/2aa5a51dc6f55d53a2a0d8c5051907059f302388"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9c50175c059a6840f9aeb9b9db79dbbbc8116d04"
                        }
                    ]
                },
                {
                    "sha": "43e74b59596d76dd9b9d377605d06d16939af7b1",
                    "node_id": "C_kwDOAGzkrtoAKDQzZTc0YjU5NTk2ZDc2ZGQ5YjlkMzc3NjA1ZDA2ZDE2OTM5YWY3YjE",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-07T13:25:37Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-07T13:25:37Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "00129b23e83ed83e01bfed4fc2a75d4c592a41ed",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/00129b23e83ed83e01bfed4fc2a75d4c592a41ed"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/43e74b59596d76dd9b9d377605d06d16939af7b1",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/43e74b59596d76dd9b9d377605d06d16939af7b1",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/43e74b59596d76dd9b9d377605d06d16939af7b1",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/43e74b59596d76dd9b9d377605d06d16939af7b1/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/ff5f954fc2c21f6e22c1393b8d64f810e8d5d4e5"
                        }
                    ]
                },
                {
                    "sha": "a0a07d6ca624081b325dd92e37e530014dfb4187",
                    "node_id": "C_kwDOAGzkrtoAKGEwYTA3ZDZjYTYyNDA4MWIzMjVkZDkyZTM3ZTUzMDAxNGRmYjQxODc",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-07T14:03:04Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-07T14:03:04Z"
                        },
                        "message": "feat(i18n): fr string;\n\n- Added French translation string.",
                        "tree": {
                            "sha": "23432ef3ffba448febdb8567b68e9211750a9bd1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/23432ef3ffba448febdb8567b68e9211750a9bd1"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/a0a07d6ca624081b325dd92e37e530014dfb4187",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a0a07d6ca624081b325dd92e37e530014dfb4187",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/a0a07d6ca624081b325dd92e37e530014dfb4187",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a0a07d6ca624081b325dd92e37e530014dfb4187/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "43e74b59596d76dd9b9d377605d06d16939af7b1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/43e74b59596d76dd9b9d377605d06d16939af7b1",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/43e74b59596d76dd9b9d377605d06d16939af7b1"
                        }
                    ]
                },
                {
                    "sha": "2d964cccc9127a2c97bc5aa523e67cb6d4f658ee",
                    "node_id": "C_kwDOAGzkrtoAKDJkOTY0Y2NjYzkxMjdhMmM5N2JjNWFhNTIzZTY3Y2I2ZDRmNjU4ZWU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T19:55:19Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T19:55:19Z"
                        },
                        "message": "feat(dev): max resources;\n\n- Max resources per dataset.",
                        "tree": {
                            "sha": "447d6d71a79348b985ee556b4ded3e4f55bc5518",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/447d6d71a79348b985ee556b4ded3e4f55bc5518"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/2d964cccc9127a2c97bc5aa523e67cb6d4f658ee",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2d964cccc9127a2c97bc5aa523e67cb6d4f658ee",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/2d964cccc9127a2c97bc5aa523e67cb6d4f658ee",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2d964cccc9127a2c97bc5aa523e67cb6d4f658ee/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9c50175c059a6840f9aeb9b9db79dbbbc8116d04"
                        }
                    ]
                },
                {
                    "sha": "e2bd1fc21d69b59716005ce3db0a2000bfeabd3e",
                    "node_id": "C_kwDOAGzkrtoAKGUyYmQxZmMyMWQ2OWI1OTcxNjAwNWNlM2RiMGEyMDAwYmZlYWJkM2U",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T20:00:05Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T20:00:05Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "3fdb26fbe728d2bf81375c479053206c8ccfc3ed",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/3fdb26fbe728d2bf81375c479053206c8ccfc3ed"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/e2bd1fc21d69b59716005ce3db0a2000bfeabd3e",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/e2bd1fc21d69b59716005ce3db0a2000bfeabd3e",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/e2bd1fc21d69b59716005ce3db0a2000bfeabd3e",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/e2bd1fc21d69b59716005ce3db0a2000bfeabd3e/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "2d964cccc9127a2c97bc5aa523e67cb6d4f658ee",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2d964cccc9127a2c97bc5aa523e67cb6d4f658ee",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/2d964cccc9127a2c97bc5aa523e67cb6d4f658ee"
                        }
                    ]
                },
                {
                    "sha": "49eba3e819d9ef24021bba65dc626c4d44dd99c2",
                    "node_id": "C_kwDOAGzkrtoAKDQ5ZWJhM2U4MTlkOWVmMjQwMjFiYmE2NWRjNjI2YzRkNDRkZDk5YzI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T20:01:51Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T20:01:51Z"
                        },
                        "message": "fix(templates): syntax;\n\n- Use local variable.",
                        "tree": {
                            "sha": "4b2c339ecc140ad379b7172a36275d3c1ec0e147",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/4b2c339ecc140ad379b7172a36275d3c1ec0e147"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/49eba3e819d9ef24021bba65dc626c4d44dd99c2",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/49eba3e819d9ef24021bba65dc626c4d44dd99c2",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/49eba3e819d9ef24021bba65dc626c4d44dd99c2",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/49eba3e819d9ef24021bba65dc626c4d44dd99c2/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "e2bd1fc21d69b59716005ce3db0a2000bfeabd3e",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/e2bd1fc21d69b59716005ce3db0a2000bfeabd3e",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/e2bd1fc21d69b59716005ce3db0a2000bfeabd3e"
                        }
                    ]
                },
                {
                    "sha": "b25a874962cddc08062e551e488adf426031ff06",
                    "node_id": "C_kwDOAGzkrtoAKGIyNWE4NzQ5NjJjZGRjMDgwNjJlNTUxZTQ4OGFkZjQyNjAzMWZmMDY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T20:03:12Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T20:03:12Z"
                        },
                        "message": "fix(templates): syntax;\n\n- Use local variable.",
                        "tree": {
                            "sha": "d84c97149e09c5402a87b2ad7f79cd0198231ff1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/d84c97149e09c5402a87b2ad7f79cd0198231ff1"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/b25a874962cddc08062e551e488adf426031ff06",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b25a874962cddc08062e551e488adf426031ff06",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/b25a874962cddc08062e551e488adf426031ff06",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b25a874962cddc08062e551e488adf426031ff06/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "49eba3e819d9ef24021bba65dc626c4d44dd99c2",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/49eba3e819d9ef24021bba65dc626c4d44dd99c2",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/49eba3e819d9ef24021bba65dc626c4d44dd99c2"
                        }
                    ]
                },
                {
                    "sha": "3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                    "node_id": "C_kwDOAGzkrtoAKDNhY2RlN2FhYTViMjI0ZGFiMmM5MTdhMDVhZmU2NmQ4MWUwZGNjZWQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2024-11-12T14:23:02Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T14:23:02Z"
                        },
                        "message": "Merge pull request #1522 from open-data/feature/package-sync-tracking\n\nPortalUpdater Improvements and PackageSync Model",
                        "tree": {
                            "sha": "c3d1357de14f14804df9aa8d9b24d416c43296a1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/c3d1357de14f14804df9aa8d9b24d416c43296a1"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM2TGCRC1aQ7uu5UhlAAAaW0QAA8MgiVsBKokOfWUBu0y1UhT\ngEEW5xTgXyWXU4ypQJIeE5UK9FQMxkJcIYNJo7atU5pP/6rlyEvDx1UfL9cUyx8I\nrJOuRd7walXfMpyyTt8Nys/2jzv6DeGka6a9YOJUORmBEiUxb62c2XT4ltyQKHg+\nvUrPBPtvDly5VIBEsI4e4J6fm73JrjvmuTzaYgb/ZkGSKSNa0G4jqjhzfhGWbWy/\nuZwk8YC6G7lTHSlCTtJ70WkBxsBYcUICDyzvJFoMWT0beohfKrnlsbJI2HAQ1h/s\nV9glv3/w8ZePliUVxKFT2ssx9B40DXmki0sR88zdrpPy5VgHmCKkGfDo/0+4w1ew\nDY8anV5LpSM7xkuUp0hr+gKDR1vobEKzwoR0zWbF+D1/c1AcmwrdlykwoQMP5T0K\n0ZRiIuFRwktjDQdpdAbbwQYJYoi2GSwrLt2QtRBwBBPSDpAqfy4uouX1mVbNNMEd\nlAoYsH4BSRnshH7f8Re8CfmqRmMYcNZ8ye3YkxNshn8yGgIwWQWAPwkpoXv7JNtM\n5os4mJnUr+YsEqTJWsj9fXxsWEf9I1Awjt1scnmKHM58LI/HCyMq+sry790qHMjX\nD1frjz8CoADiBgxh7HNr4V6dF0UWpKUmxXtYo7CFPI5PtkhvPbolitNm8p0uPoS2\nBCDW1S1ty62Oz7f+D62s\n=Km8n\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree c3d1357de14f14804df9aa8d9b24d416c43296a1\nparent 9c50175c059a6840f9aeb9b9db79dbbbc8116d04\nparent 9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1731421382 -0500\ncommitter GitHub <noreply@github.com> 1731421382 -0500\n\nMerge pull request #1522 from open-data/feature/package-sync-tracking\n\nPortalUpdater Improvements and PackageSync Model",
                            "verified_at": "2024-11-12T14:23:05Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3acde7aaa5b224dab2c917a05afe66d81e0dcced/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c50175c059a6840f9aeb9b9db79dbbbc8116d04",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9c50175c059a6840f9aeb9b9db79dbbbc8116d04"
                        },
                        {
                            "sha": "9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9fa1d2f9fef378d0bcb42800cb9c39ed74ec650f"
                        }
                    ]
                },
                {
                    "sha": "69ab83456bcccf765cfb4503d162bed4cf8a00fb",
                    "node_id": "C_kwDOAGzkrtoAKDY5YWI4MzQ1NmJjY2NmNzY1Y2ZiNDUwM2QxNjJiZWQ0Y2Y4YTAwZmI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:30:22Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:30:22Z"
                        },
                        "message": "Merge branch 'master' into feature/activity-deletion-segmentation\n\n# Conflicts:\n#\tckanext/canada/i18n/ckanext-canada.pot\n#\tckanext/canada/i18n/en/LC_MESSAGES/ckanext-canada.po\n#\tckanext/canada/i18n/fr/LC_MESSAGES/ckanext-canada.po\n### RESOLVED.",
                        "tree": {
                            "sha": "036b20990d6412b9d8465cb2e8feed665b7ae7bb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/036b20990d6412b9d8465cb2e8feed665b7ae7bb"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/69ab83456bcccf765cfb4503d162bed4cf8a00fb",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/69ab83456bcccf765cfb4503d162bed4cf8a00fb",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/69ab83456bcccf765cfb4503d162bed4cf8a00fb",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/69ab83456bcccf765cfb4503d162bed4cf8a00fb/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "a0a07d6ca624081b325dd92e37e530014dfb4187",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a0a07d6ca624081b325dd92e37e530014dfb4187",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/a0a07d6ca624081b325dd92e37e530014dfb4187"
                        },
                        {
                            "sha": "3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/3acde7aaa5b224dab2c917a05afe66d81e0dcced"
                        }
                    ]
                },
                {
                    "sha": "d0211f5c97f33037fa0caf545b2779e236847539",
                    "node_id": "C_kwDOAGzkrtoAKGQwMjExZjVjOTdmMzMwMzdmYTBjYWY1NDViMjc3OWUyMzY4NDc1Mzk",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2024-11-12T14:30:32Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T14:30:32Z"
                        },
                        "message": "Merge pull request #1529 from open-data/feature/activity-deletion-segmentation\n\nImproved Activity Deletion Capabilities",
                        "tree": {
                            "sha": "036b20990d6412b9d8465cb2e8feed665b7ae7bb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/036b20990d6412b9d8465cb2e8feed665b7ae7bb"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/d0211f5c97f33037fa0caf545b2779e236847539",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM2aICRC1aQ7uu5UhlAAANrkQABNPTitf9DIRhdApGY7GEdeI\nSK8n7EJJ61qj2LIxzBXr4h390ZToSXzMU2vXX8ZnMYaI+Aw5q1OJi/l+A4Cq8915\nj9zgQMbVLyfpfWujV9/7LTYiUxiwwPZMOJANpH8Tcjkp7R+YJNR+2zeAsBbptvwn\nfMypt4wH9AXQrdeHJptdkVg3Xb4mJneAPWHEedqEq7VFV4/ba12ivvoxbYOOzFMo\nooRHxubKFG66p6Yqvsml0w5qmdlIYjEROnDTab/CrCCapd+dDewzjcmtV4g1F20L\ncj/Z6/nI87LUi1oFiwD3KJ2jhXwt2AIuUDjToMrnD7hjRVh9A7RDt0e+G4g1zOw4\nE0QMYsxlF76cIIdqFOFlRrRQFbWnFeCDgVh2BWJmSIVeYcNODWWGwM40pZgKmNVI\nus8v6LaylQwPcAe786UpW9ueoHlAW3SQZ2p8fqgTAFG4bKR2C6nVvcR3Pfu+14o4\n5F90ec0cOIjgsKSFdN9mLVomq+Y5Ch5bu99PFAl/k5CIV5YphLCdto81+jtYD6fl\nT+Cn1qincBDLdAkyz9ICXUhBM3P/V7atZR3Nk4yFgtHg33H9ln5wUEGSSyZHpD+I\nqCLIGiBKTFuLgG7Vi5gbzK8WCk7mMsQh1L8AwB0+DcSfw73YzGsdhimn5vpgBHHF\nwtKqcH2fiUozeOrBr4eZ\n=73dV\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 036b20990d6412b9d8465cb2e8feed665b7ae7bb\nparent 3acde7aaa5b224dab2c917a05afe66d81e0dcced\nparent 69ab83456bcccf765cfb4503d162bed4cf8a00fb\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1731421832 -0500\ncommitter GitHub <noreply@github.com> 1731421832 -0500\n\nMerge pull request #1529 from open-data/feature/activity-deletion-segmentation\n\nImproved Activity Deletion Capabilities",
                            "verified_at": "2024-11-12T14:30:34Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/d0211f5c97f33037fa0caf545b2779e236847539",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/d0211f5c97f33037fa0caf545b2779e236847539",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/d0211f5c97f33037fa0caf545b2779e236847539/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3acde7aaa5b224dab2c917a05afe66d81e0dcced",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/3acde7aaa5b224dab2c917a05afe66d81e0dcced"
                        },
                        {
                            "sha": "69ab83456bcccf765cfb4503d162bed4cf8a00fb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/69ab83456bcccf765cfb4503d162bed4cf8a00fb",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/69ab83456bcccf765cfb4503d162bed4cf8a00fb"
                        }
                    ]
                },
                {
                    "sha": "569c932728c1e4adec3cfb8777b7c26888755b6d",
                    "node_id": "C_kwDOAGzkrtoAKDU2OWM5MzI3MjhjMWU0YWRlYzNjZmI4Nzc3YjdjMjY4ODg3NTViNmQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:38:22Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:38:22Z"
                        },
                        "message": "fix(templates): syntax;\n\n- Use greater equals.",
                        "tree": {
                            "sha": "9be5f88599fecea9380652c9774e7f814cab293c",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/9be5f88599fecea9380652c9774e7f814cab293c"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/569c932728c1e4adec3cfb8777b7c26888755b6d",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/569c932728c1e4adec3cfb8777b7c26888755b6d",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/569c932728c1e4adec3cfb8777b7c26888755b6d",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/569c932728c1e4adec3cfb8777b7c26888755b6d/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "b25a874962cddc08062e551e488adf426031ff06",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b25a874962cddc08062e551e488adf426031ff06",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/b25a874962cddc08062e551e488adf426031ff06"
                        }
                    ]
                },
                {
                    "sha": "ae5e645a162426c96b065db7905d6d5ca4f1a377",
                    "node_id": "C_kwDOAGzkrtoAKGFlNWU2NDVhMTYyNDI2Yzk2YjA2NWRiNzkwNWQ2ZDVjYTRmMWEzNzc",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:38:43Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:38:43Z"
                        },
                        "message": "fix(logic): validator logic;\n\n- Save DB run inside of condition.",
                        "tree": {
                            "sha": "1e4922f8a329190ef94bc13346966c707a6bc379",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/1e4922f8a329190ef94bc13346966c707a6bc379"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/ae5e645a162426c96b065db7905d6d5ca4f1a377",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ae5e645a162426c96b065db7905d6d5ca4f1a377",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/ae5e645a162426c96b065db7905d6d5ca4f1a377",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ae5e645a162426c96b065db7905d6d5ca4f1a377/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "569c932728c1e4adec3cfb8777b7c26888755b6d",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/569c932728c1e4adec3cfb8777b7c26888755b6d",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/569c932728c1e4adec3cfb8777b7c26888755b6d"
                        }
                    ]
                },
                {
                    "sha": "4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb",
                    "node_id": "C_kwDOAGzkrtoAKDRiM2ZiN2YwNGJkMDFlMWE2YmIwYzRhNjA3OTkyODZlNjQ1YzEwZmI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:38:49Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T14:38:49Z"
                        },
                        "message": "Merge branch 'master' into feature/limit-resources-per-dataset",
                        "tree": {
                            "sha": "8b06817d599b96b034c9f28e36b10a573a183b9d",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/8b06817d599b96b034c9f28e36b10a573a183b9d"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "ae5e645a162426c96b065db7905d6d5ca4f1a377",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ae5e645a162426c96b065db7905d6d5ca4f1a377",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/ae5e645a162426c96b065db7905d6d5ca4f1a377"
                        },
                        {
                            "sha": "d0211f5c97f33037fa0caf545b2779e236847539",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/d0211f5c97f33037fa0caf545b2779e236847539",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/d0211f5c97f33037fa0caf545b2779e236847539"
                        }
                    ]
                },
                {
                    "sha": "5845e8468a1ddf1ed98d970ab3da7938d8fc0e79",
                    "node_id": "C_kwDOAGzkrtoAKDU4NDVlODQ2OGExZGRmMWVkOThkOTcwYWIzZGE3OTM4ZDhmYzBlNzk",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2024-11-12T14:39:32Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T14:39:32Z"
                        },
                        "message": "Merge pull request #1530 from open-data/feature/limit-resources-per-dataset\n\nResource Limit per Dataset",
                        "tree": {
                            "sha": "8b06817d599b96b034c9f28e36b10a573a183b9d",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/8b06817d599b96b034c9f28e36b10a573a183b9d"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/5845e8468a1ddf1ed98d970ab3da7938d8fc0e79",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM2ikCRC1aQ7uu5UhlAAAC/4QAHOS03tByaWU01TM9sroA+Pk\nHNaEa+CGQP9Tdbs/IjQClknxseSu8Fl/sjpS9DmDNP7W1RFVrNxVNevGISEvjfdc\ne1ThASAAWNo2NjCKnLhRlbHP/0Jb9EvBcVUm+o2jzoMwBfi7orkfV2pf+35Ok1XL\nnN1ImHN1MUOJkPfaLmrYIx1wegQzD4hmxDlQu74MpG4SitYr2k1A463ojlj0sprx\nNg0V6XxyBiX0ZQX+2s+iVakOth4FI6qusAupB58jlMIYj4t7k2ENa10ZUG51gQuG\nR3b22k+6Hzl7UhbnfZkqkEi0Mlf3WSegWT87vxwN0W7C1PlD1hKLxAxe1zcWPN9/\n4HsZ+OlxVVRO7jjkASfPZ+G9mDyj/BY/k6j+tkGukniXJwZXiUHB901KpucGCRMY\nuewKbI1JWAqPYxJs46bg0cetW0TNPSbFai1WiJ0JIKxPggZh7b1F8iLMMCSNN1fP\n1uqEa615A+eDZx1tUPkZGoEgqVtKglK8p7cLm0DZEkjHL925mzSpgjig0r/8GD4x\nvbhL18pzsvA2YcC6QgLF3l4h1bVBno7nsHmKNWRMZYOb3K5AtoyzOX3HAyEIq+RC\nulgj9meBJQNs2ofP7DBCOXBTrh4d8y23geZWDp4x4AmyP4Ed5Wkm9Gp1RdyLoIsv\n6F20YITz83rrQpB7QkDx\n=RQmA\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 8b06817d599b96b034c9f28e36b10a573a183b9d\nparent d0211f5c97f33037fa0caf545b2779e236847539\nparent 4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1731422372 -0500\ncommitter GitHub <noreply@github.com> 1731422372 -0500\n\nMerge pull request #1530 from open-data/feature/limit-resources-per-dataset\n\nResource Limit per Dataset",
                            "verified_at": "2024-11-12T14:39:34Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/5845e8468a1ddf1ed98d970ab3da7938d8fc0e79",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/5845e8468a1ddf1ed98d970ab3da7938d8fc0e79",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/5845e8468a1ddf1ed98d970ab3da7938d8fc0e79/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "d0211f5c97f33037fa0caf545b2779e236847539",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/d0211f5c97f33037fa0caf545b2779e236847539",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/d0211f5c97f33037fa0caf545b2779e236847539"
                        },
                        {
                            "sha": "4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/4b3fb7f04bd01e1a6bb0c4a60799286e645c10fb"
                        }
                    ]
                },
                {
                    "sha": "92842605f8bd8de105ba1874eb020bd2ad06486b",
                    "node_id": "C_kwDOAGzkrtoAKDkyODQyNjA1ZjhiZDhkZTEwNWJhMTg3NGViMDIwYmQyYWQwNjQ4NmI",
                    "commit": {
                        "author": {
                            "name": "Rabia Sajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:41:11Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T14:41:11Z"
                        },
                        "message": "Merge pull request #1523 from open-data/resource-metadata\n\nshow available resource metadata under Additional Information",
                        "tree": {
                            "sha": "b6beb40a5585695a7680c20ef27d6d93a9272931",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/b6beb40a5585695a7680c20ef27d6d93a9272931"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/92842605f8bd8de105ba1874eb020bd2ad06486b",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM2kHCRC1aQ7uu5UhlAAAD3YQAJEPs6YM/ptOEx1cKJIvENSW\nm2uO0tTl1qLfPP6mB2/nD6swf5beFjvKxMIJxgHGkgLhybsoR7R+hCBP4DtSqMis\n2Y6fmJo4IMhiwP0fppFm2NUeq5mui5pQI95T/9lNSgXuBZe2jHhyfti3jLlMPdqn\nHp1/WMr0jBEg1nGhuBnkDYkueoxbP+iafmfBBayUstcdxKvTgtXsZoVbM4ZMp+wb\nfJVi7s0pkSV7H7ZGc3lnk/u6fidNP86S2OX2cskTOLSwM0IdPF6Ly7M4KHzWILwM\nhYSmPTFrcK6vYqJC1tOpjDf/A9cxLyriQ7cuRXjBuif5oRwkUhCRqJvEAQtjRrzz\nR7CNLD/4kIwpGSc9z86A8m4zZUqp7pN31UsaCQRLeWAOjw8cbclyV74OdtQGrLSp\nL3RdHYEGt6fHDwRTsDSjqjMnXFsUmCN+aQoiUW7UAchFJ8DEp3iAsrWezS80dmyp\n/JIy0mz7EsI8zHSf655fNumKG1OuI4uZ/aPkv4t9/qSwAuGtsyT5R4c2hTYd8m43\nnDE2MGfum/c4OK9WKGWeywDFcNQicwgQE1qcUeLdVcX9HyNtxWQp1uu8qlGGaYYA\nUQGAVOq2dD35+S9lJi+KL9JgtOSVfwgS7rq5qq3t2VthNaIINP2lXFWvntCg2QbK\nuJ1wN0iDJarF4LThkczr\n=arF2\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree b6beb40a5585695a7680c20ef27d6d93a9272931\nparent 5845e8468a1ddf1ed98d970ab3da7938d8fc0e79\nparent 74178f889571a8c9d887f6fc8a2396f349251bff\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1731422471 -0500\ncommitter GitHub <noreply@github.com> 1731422471 -0500\n\nMerge pull request #1523 from open-data/resource-metadata\n\nshow available resource metadata under Additional Information",
                            "verified_at": "2024-11-12T14:41:13Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/92842605f8bd8de105ba1874eb020bd2ad06486b",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/92842605f8bd8de105ba1874eb020bd2ad06486b",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/92842605f8bd8de105ba1874eb020bd2ad06486b/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "5845e8468a1ddf1ed98d970ab3da7938d8fc0e79",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/5845e8468a1ddf1ed98d970ab3da7938d8fc0e79",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/5845e8468a1ddf1ed98d970ab3da7938d8fc0e79"
                        },
                        {
                            "sha": "74178f889571a8c9d887f6fc8a2396f349251bff",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/74178f889571a8c9d887f6fc8a2396f349251bff",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/74178f889571a8c9d887f6fc8a2396f349251bff"
                        }
                    ]
                },
                {
                    "sha": "a4144db8badc368d66144d96d437929865edbebb",
                    "node_id": "C_kwDOAGzkrtoAKGE0MTQ0ZGI4YmFkYzM2OGQ2NjE0NGQ5NmQ0Mzc5Mjk4NjVlZGJlYmI",
                    "commit": {
                        "author": {
                            "name": "Rabia Sajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:42:07Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T14:42:07Z"
                        },
                        "message": "Merge pull request #1528 from open-data/remove-rebuild-searches-from-make\n\nremove rebuilding of reclassification and hospitalityq from makefile",
                        "tree": {
                            "sha": "fa32b42ffdac20db1d1ea60f2164e6ae464bbe0a",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/fa32b42ffdac20db1d1ea60f2164e6ae464bbe0a"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/a4144db8badc368d66144d96d437929865edbebb",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM2k/CRC1aQ7uu5UhlAAAByQQAGgddE0zD/smZRWzS/vziwiw\ny1KoI1Nb3KA0faHDonaGBVnb+OMSr3GiBU9w6+X3ogU5dm4t8o15/iXzmQsOzlfi\n69wnhcsE6UY1DitpJbVHgUl9YrXR0qw8p4HcbyhpQxkCQOE9Fv5kPOZ4Y+tXk3LR\n9X73gbipb7UG2tmcLG1GW3vEWc7D28I+1pP4AQFyT21c0FNnqLX0eFtq4BV4mRnd\n/rQu9/wQtWhC5Rxu4N30MfvqA56cfjjC7Wu8umQtTTRoHZmHUilzBLg2TGy7R6xw\n27uTHyKDqdeRfyKyDsTxfJXmFtrPsyeTnnYr6KbMF9ijlu9DxT388UTxEJmjx1dT\nuNz4tZaG7YMKc0F7tImGPZNDuTI6Iup4q0nRMQ1HxE4o5go0vS/JXyQdtIp3c+hR\n+DCBMsCZZxLXmNJZOic2Qrgkusjie4l/CtxFn0nOZNLk3tnOoUz0kRoYJUmhn1pA\n2yKoWVY7z+hjr9ZlLR4PzwKdegeS5PJVTRxkFx/va7on5CbPJX8SdvANCNQX6USh\nuE9zpkCC0DklFSc7oIVzq9OOFXUTC1wQIWt+V79RCe2objBEF8ssQwBaAZE9DpN2\nt4b3Iora3qIplUZZuMU7riOkzhgs8uMrxoJWAzOGufkAi/vHYIp0tW2LEe4zqjes\nH3yp64vusIck3ZveVeL4\n=s1/i\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree fa32b42ffdac20db1d1ea60f2164e6ae464bbe0a\nparent 92842605f8bd8de105ba1874eb020bd2ad06486b\nparent fa8f63bfb818512dc4e068520d93759bfed55b20\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1731422527 -0500\ncommitter GitHub <noreply@github.com> 1731422527 -0500\n\nMerge pull request #1528 from open-data/remove-rebuild-searches-from-make\n\nremove rebuilding of reclassification and hospitalityq from makefile",
                            "verified_at": "2024-11-12T14:42:10Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a4144db8badc368d66144d96d437929865edbebb",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/a4144db8badc368d66144d96d437929865edbebb",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a4144db8badc368d66144d96d437929865edbebb/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "92842605f8bd8de105ba1874eb020bd2ad06486b",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/92842605f8bd8de105ba1874eb020bd2ad06486b",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/92842605f8bd8de105ba1874eb020bd2ad06486b"
                        },
                        {
                            "sha": "fa8f63bfb818512dc4e068520d93759bfed55b20",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/fa8f63bfb818512dc4e068520d93759bfed55b20",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/fa8f63bfb818512dc4e068520d93759bfed55b20"
                        }
                    ]
                },
                {
                    "sha": "c881a0b7527c2a3d6b471562c1d03431af1837a0",
                    "node_id": "C_kwDOAGzkrtoAKGM4ODFhMGI3NTI3YzJhM2Q2YjQ3MTU2MmMxZDAzNDMxYWYxODM3YTA",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:02:53Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:02:53Z"
                        },
                        "message": "feat(templates): operations guide link helper;\n\n- Added helper and config option for operations guide links.",
                        "tree": {
                            "sha": "48c8e866f5068f3dfb0a1296324894c033c22298",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/48c8e866f5068f3dfb0a1296324894c033c22298"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/c881a0b7527c2a3d6b471562c1d03431af1837a0",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/c881a0b7527c2a3d6b471562c1d03431af1837a0",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/c881a0b7527c2a3d6b471562c1d03431af1837a0",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/c881a0b7527c2a3d6b471562c1d03431af1837a0/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "51f1a7f27f010d46b4abaa043b2fb056143c8821",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/51f1a7f27f010d46b4abaa043b2fb056143c8821",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/51f1a7f27f010d46b4abaa043b2fb056143c8821"
                        }
                    ]
                },
                {
                    "sha": "6acb25a276fb6891bd9a22588c494490a471c2a8",
                    "node_id": "C_kwDOAGzkrtoAKDZhY2IyNWEyNzZmYjY4OTFiZDlhMjI1ODhjNDk0NDkwYTQ3MWMyYTg",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:03:50Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:03:50Z"
                        },
                        "message": "Merge branch 'master' into feature/operations-guide-links\n\n# Conflicts:\n#\tckanext/canada/helpers.py\n#\tckanext/canada/plugins.py\n### RESOLVED.",
                        "tree": {
                            "sha": "247f5e26bf73fe520e76ce39c0dfaf4e10ca4c69",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/247f5e26bf73fe520e76ce39c0dfaf4e10ca4c69"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/6acb25a276fb6891bd9a22588c494490a471c2a8",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/6acb25a276fb6891bd9a22588c494490a471c2a8",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/6acb25a276fb6891bd9a22588c494490a471c2a8",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/6acb25a276fb6891bd9a22588c494490a471c2a8/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "c881a0b7527c2a3d6b471562c1d03431af1837a0",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/c881a0b7527c2a3d6b471562c1d03431af1837a0",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/c881a0b7527c2a3d6b471562c1d03431af1837a0"
                        },
                        {
                            "sha": "a4144db8badc368d66144d96d437929865edbebb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a4144db8badc368d66144d96d437929865edbebb",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/a4144db8badc368d66144d96d437929865edbebb"
                        }
                    ]
                },
                {
                    "sha": "3f31646c9a5c4142b2a3f00251255db05b8545a6",
                    "node_id": "C_kwDOAGzkrtoAKDNmMzE2NDZjOWE1YzQxNDJiMmEzZjAwMjUxMjU1ZGIwNWI4NTQ1YTY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:10:54Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:10:54Z"
                        },
                        "message": "feat(i18n): build;\n\n- New translation for operations guide.",
                        "tree": {
                            "sha": "6c95da29ceb1d2ac326815b9424df736c91ff917",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/6c95da29ceb1d2ac326815b9424df736c91ff917"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/3f31646c9a5c4142b2a3f00251255db05b8545a6",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3f31646c9a5c4142b2a3f00251255db05b8545a6",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/3f31646c9a5c4142b2a3f00251255db05b8545a6",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3f31646c9a5c4142b2a3f00251255db05b8545a6/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "6acb25a276fb6891bd9a22588c494490a471c2a8",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/6acb25a276fb6891bd9a22588c494490a471c2a8",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/6acb25a276fb6891bd9a22588c494490a471c2a8"
                        }
                    ]
                },
                {
                    "sha": "4a2bfe441771522769c89e5079cd31adccff9960",
                    "node_id": "C_kwDOAGzkrtoAKDRhMmJmZTQ0MTc3MTUyMjc2OWM4OWU1MDc5Y2QzMWFkY2NmZjk5NjA",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2024-11-12T15:12:56Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T15:12:56Z"
                        },
                        "message": "Merge pull request #1524 from open-data/feature/operations-guide-links\n\nGCPedia to Operation Guide Links",
                        "tree": {
                            "sha": "6c95da29ceb1d2ac326815b9424df736c91ff917",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/6c95da29ceb1d2ac326815b9424df736c91ff917"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/4a2bfe441771522769c89e5079cd31adccff9960",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM3B4CRC1aQ7uu5UhlAAAaMwQAIUfQpZPmhDC7nCoHhR6wBFP\ns5x03NZMn8OUt8gJcqavHEEdoKXCfRdAVTCPoxdlhLxQN8/WSG6by1k4iLOBA4iu\nECMoXuczCy6YInNQB/XhyjGhHl6bmB4M8Lz7N/0EhSlsBCGoj3zRHx1VOkiPGHYd\n9/tVe17loaR9QSt5DKR8Y12M0IRsICKoGOBIQCkPa5Y6kJOXOYWCBHimrHr6Uwjy\n+31RIAsYii9zw4bEgm6z/fsrBcgqLKlQyv8rka2ky/M0mKg2zmRHhgjW0+osZ/yL\naZJ/NaIcL36XAosyqcjEkThCBq8e/pJ4d6y8sgveJQTpJyRyNtGBDPTkAPHXk2Vc\nI7WUFJ8xXZFRKPjsApkQl35XA0ivrVfe2FzZmZ8tdA/6gns/D+2gK9SGrEYWqIHR\nZpeVSnjHEeRvFxkmaNeEN8l5KpvZsZFRIoUJZFyhffwfkxLrgoLfG/r1cS+o0VYa\n0HqJIcwNo+qRuIKdRjtxaz5DWb/YYRLONGI0z9poPSTngAFVDnNAXl8ueutPTWS5\nCM7LRctaItdYF5BR3H3EGMhhDiMc/SAsNa4jaTUqAORUtKTOUmdrCzpYooco/Vmh\nVPsNcgY71mvS0dpRH41sHN2g0YgGLgq3c3kgdY3MiXdym8xfBfbAyQUtmm8VZe8g\nlr1oK9Lgi0ioCblm5wtb\n=Zd20\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 6c95da29ceb1d2ac326815b9424df736c91ff917\nparent a4144db8badc368d66144d96d437929865edbebb\nparent 3f31646c9a5c4142b2a3f00251255db05b8545a6\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1731424376 -0500\ncommitter GitHub <noreply@github.com> 1731424376 -0500\n\nMerge pull request #1524 from open-data/feature/operations-guide-links\n\nGCPedia to Operation Guide Links",
                            "verified_at": "2024-11-12T15:12:58Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/4a2bfe441771522769c89e5079cd31adccff9960",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/4a2bfe441771522769c89e5079cd31adccff9960",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/4a2bfe441771522769c89e5079cd31adccff9960/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "a4144db8badc368d66144d96d437929865edbebb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/a4144db8badc368d66144d96d437929865edbebb",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/a4144db8badc368d66144d96d437929865edbebb"
                        },
                        {
                            "sha": "3f31646c9a5c4142b2a3f00251255db05b8545a6",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3f31646c9a5c4142b2a3f00251255db05b8545a6",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/3f31646c9a5c4142b2a3f00251255db05b8545a6"
                        }
                    ]
                },
                {
                    "sha": "6e940c9c3ee4db4156537679c0236fe37632735b",
                    "node_id": "C_kwDOAGzkrtoAKDZlOTQwYzljM2VlNGRiNDE1NjUzNzY3OWMwMjM2ZmUzNzYzMjczNWI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:45:38Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-12T15:45:38Z"
                        },
                        "message": "fix(i18n): missing;\n\n- Added merge conflicted translations back in.",
                        "tree": {
                            "sha": "af4168a7f048129dce91960c65bc5aaa4b2cfa3c",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/af4168a7f048129dce91960c65bc5aaa4b2cfa3c"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/6e940c9c3ee4db4156537679c0236fe37632735b",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/6e940c9c3ee4db4156537679c0236fe37632735b",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/6e940c9c3ee4db4156537679c0236fe37632735b",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/6e940c9c3ee4db4156537679c0236fe37632735b/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "4a2bfe441771522769c89e5079cd31adccff9960",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/4a2bfe441771522769c89e5079cd31adccff9960",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/4a2bfe441771522769c89e5079cd31adccff9960"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "6547aeeb5ac8f564d761e2c4902955dbccd7cfad",
                    "filename": "bin/pd/Makefile",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 5,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/bin%2Fpd%2FMakefile",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/bin%2Fpd%2FMakefile",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fpd%2FMakefile?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -454,8 +454,8 @@ upload-hospitalityq: $(workdir)/filtered/hospitalityq.csv $(workdir)/filtered/ho\n .PHONY: rebuild-hospitalityq\n rebuild-hospitalityq: $(workdir)/filtered/hospitalityq.csv $(workdir)/filtered/hospitalityq-nil.csv\n \t@$(echo_date) Rebuilding Hospitality Expenses...\n-\t$(ckan_command) -c $(portal_ini) pd rebuild hospitalityq --lenient --has-nil \\\n-\t-f \"$(workdir)/filtered/hospitalityq.csv\" -f \"$(workdir)/filtered/hospitalityq-nil.csv\"\n+\t@$(oc_search) import_data_csv --csv \"$(workdir)/filtered/hospitalityq.csv\" --search hospitalityq --quiet\n+\t@$(oc_search) import_data_csv --csv \"$(workdir)/filtered/hospitalityq-nil.csv\" --search hospitalityq --quiet --nothing_to_report\n \n $(workdir)/hospitalityq.csv:\n \t$(ckan_command) -c $(registry_ini) $(combine) hospitalityq -d $(workdir)\n@@ -554,9 +554,6 @@ upload-reclassification: $(workdir)/filtered/reclassification.csv $(workdir)/fil\n .PHONY: rebuild-reclassification\n rebuild-reclassification: $(workdir)/filtered/reclassification.csv $(workdir)/filtered/reclassification-nil.csv\n \t@$(echo_date) Rebuilding Position Reclassification...\n-\t$(ckan_command) -c $(portal_ini) pd rebuild reclassification --lenient --has-nil \\\n-\t-f \"$(workdir)/filtered/reclassification.csv\" -f \"$(workdir)/filtered/reclassification-nil.csv\"\n-\t@$(echo_date) Rebuilding Advanced Search...\n \t@$(oc_search) import_data_csv --csv \"$(workdir)/filtered/reclassification.csv\" --search reclassification\n \t@$(oc_search) import_data_csv --csv \"$(workdir)/filtered/reclassification-nil.csv\" --search reclassification --nothing_to_report\t\n "
                },
                {
                    "sha": "4225be3968224b8d2d59dcdcfcc1798dcddecf25",
                    "filename": "changes/1522.feature",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1522.feature",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1522.feature",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1522.feature?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1 @@\n+Added `PackageSync` model for the `package_sync` table which tracks the PortalUpdater process and saves the states for the packages."
                },
                {
                    "sha": "57f7027997d964f5b512b2c2dfb95725e8811a80",
                    "filename": "changes/1523.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1523.changes",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1523.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1523.changes?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1 @@\n+Display resource metadata such as Language, Format etc. on the resource page under 'Additional Information'.\n\\ No newline at end of file"
                },
                {
                    "sha": "c61a73b31cdedb0ac230ef8d04a092abd7f452ef",
                    "filename": "changes/1524.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1524.changes",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1524.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1524.changes?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1 @@\n+The old GCPedia links now link to the Operations Guide. Text `GCPEDIA` changed to `Operations Guide`."
                },
                {
                    "sha": "bcc211ae86cdd32cfcf7b04559add30968e24be9",
                    "filename": "changes/1527.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1527.changes",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1527.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1527.changes?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1 @@\n+Adding the Django Search to the PD Makefile for the Hospitalityq type."
                },
                {
                    "sha": "dc907e28a87f3892cfe5f58cee035581023bdc52",
                    "filename": "changes/1528.changes",
                    "status": "added",
                    "additions": 4,
                    "deletions": 0,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1528.changes",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1528.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1528.changes?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,4 @@\n+Remove rebuilding the following searches from the Makefike:\n+- reclassification\n+- hospitalityq\n+The above searches are now rebuilt using the Django search.\n\\ No newline at end of file"
                },
                {
                    "sha": "2b909ba299d2eafdb7fe4f7aa4a5954a1120ca46",
                    "filename": "changes/1529.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1529.changes",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1529.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1529.changes?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1 @@\n+Added `--include-types` and `--exclude-types` options to the `delete-activities` command."
                },
                {
                    "sha": "a5b8f8dc052d81de61490a0597c58d4702b72be8",
                    "filename": "changes/1530.feature",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1530.feature",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/changes%2F1530.feature",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1530.feature?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1 @@\n+The number of resources per dataset can now be limited with the `ckanext.canada.max_resources_per_dataset` config option."
                },
                {
                    "sha": "f727934286e55086a7c30ca41e261b0a21e2f451",
                    "filename": "ckanext/canada/auth.py",
                    "status": "modified",
                    "additions": 22,
                    "deletions": 3,
                    "changes": 25,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fauth.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fauth.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fauth.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -1,5 +1,6 @@\n from ckan.plugins.toolkit import chained_auth_function, config\n from ckan.authz import has_user_permission_for_group_or_org, is_sysadmin\n+from ckan.plugins import plugin_loaded\n \n \n def _is_reporting_user(context):\n@@ -10,19 +11,19 @@ def _is_reporting_user(context):\n # block datastore-modifying APIs on the portal\n @chained_auth_function\n def datastore_create(up_func, context, data_dict):\n-    if 'canada_internal' not in config.get('ckan.plugins'):\n+    if not plugin_loaded('canada_internal'):\n         return {'success': False}\n     return up_func(context, data_dict)\n \n @chained_auth_function\n def datastore_delete(up_func, context, data_dict):\n-    if 'canada_internal' not in config.get('ckan.plugins'):\n+    if not plugin_loaded('canada_internal'):\n         return {'success': False}\n     return up_func(context, data_dict)\n \n @chained_auth_function\n def datastore_upsert(up_func, context, data_dict):\n-    if 'canada_internal' not in config.get('ckan.plugins'):\n+    if not plugin_loaded('canada_internal'):\n         return {'success': False}\n     return up_func(context, data_dict)\n \n@@ -51,3 +52,21 @@ def organization_list(context, data_dict):\n \n def organization_show(context, data_dict):\n     return {'success': bool(context.get('user'))}\n+\n+\n+def portal_sync_info(context, data_dict):\n+    \"\"\"\n+    Registry users have to be logged in.\n+\n+    Anyone on public Portal can access.\n+    \"\"\"\n+    if plugin_loaded('canada_internal'):\n+        return {'success': bool(context.get('user'))}\n+    return {'success': True}\n+\n+\n+def list_out_of_sync_packages(context, data_dict):\n+    \"\"\"\n+    Only sysadmins can list the out of sync packages.\n+    \"\"\"\n+    return {'success': False}"
                },
                {
                    "sha": "4ad7752c5d7b1b352649e53d54a423d89920691a",
                    "filename": "ckanext/canada/cli.py",
                    "status": "modified",
                    "additions": 341,
                    "deletions": 99,
                    "changes": 440,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fcli.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fcli.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fcli.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -12,10 +12,12 @@\n import requests\n from collections import defaultdict\n \n+from typing import Optional, Union, Tuple\n+\n from contextlib import contextmanager\n from urllib.request import URLError\n from urllib.parse import urlparse\n-from datetime import datetime, timedelta\n+from datetime import datetime, timedelta, timezone\n \n from ckan.logic import get_action\n from ckan import model\n@@ -38,6 +40,7 @@\n import ckanext.datastore.backend.postgres as datastore\n \n from ckanext.canada import triggers\n+from ckanext.canada import model as canada_model\n \n BOM = \"\\N{bom}\"\n \n@@ -143,9 +146,9 @@ def _portal_update(self, activity_date):\n             log = open(self.log, 'a')\n \n         registry = LocalCKAN()\n-        source_ds = str(datastore.get_write_engine().url)\n+        source_datastore_uri = str(datastore.get_write_engine().url)\n \n-        def changed_package_id_runs(start_date, verbose=False):\n+        def changed_package_id_runs(start_date, verbose:Optional[bool]=False):\n             # retrieve a list of changed packages from the registry\n             while True:\n                 packages, next_date = _changed_packages_since(\n@@ -163,7 +166,7 @@ def changed_package_id_runs(start_date, verbose=False):\n             'canada',\n             'copy-datasets',\n             '-o',\n-            source_ds,\n+            source_datastore_uri,\n             '-u',\n             self.ckan_user\n         ]\n@@ -183,7 +186,7 @@ def changed_package_id_runs(start_date, verbose=False):\n         # Advance generator so we may call send() below\n         next(pool)\n \n-        def append_log(finished, package_id, action, reason):\n+        def append_log(finished, package_id, action, reason, error: Optional[Union[str, None]]=None):\n             if not log:\n                 return\n             log.write(json.dumps([\n@@ -193,6 +196,8 @@ def append_log(finished, package_id, action, reason):\n                 action,\n                 reason,\n                 ]) + '\\n')\n+            if error:\n+                log.write(error + '\\n')\n             log.flush()\n \n         with _quiet_int_pipe():\n@@ -209,17 +214,35 @@ def append_log(finished, package_id, action, reason):\n                 stats = completion_stats(self.processes)\n                 while result is not None:\n                     try:\n-                        package_id, action, reason = json.loads(result)\n+                        package_id, action, reason, error, failure_reason, failure_trace, do_update_sync_success_time = json.loads(result)\n                     except Exception as e:\n                         if self.verbose:\n                             print(\"Worker proccess failed on:\")\n                             print(result)\n                         raise Exception(e)\n-                    print(job_ids, next(stats), finished, package_id, \\\n-                        action, reason)\n-                    append_log(finished, package_id, action, reason)\n+                    _stats = next(stats)\n+                    print(job_ids, _stats, finished, package_id, action, reason)\n+                    if error:\n+                        # NOTE: you can pipe stderr from the portal-update command to be able to tell if there are any errors\n+                        print(job_ids, _stats, finished, package_id, 'ERROR', error, file=sys.stderr)\n+\n+                    append_log(finished, package_id, action, reason, error)\n                     job_ids, finished, result = next(pool)\n \n+                    # save the sync state in the database\n+                    last_successful_sync = None\n+                    if do_update_sync_success_time:\n+                        last_successful_sync = datetime.now(timezone.utc)\n+                    else:\n+                        sync_obj = canada_model.PackageSync.get(package_id=package_id)\n+                        if sync_obj:\n+                            last_successful_sync = sync_obj.last_successful_sync\n+\n+                    canada_model.PackageSync.upsert(package_id=package_id,\n+                                                    last_successful_sync=last_successful_sync,\n+                                                    error_on=failure_reason or None,\n+                                                    error=failure_trace or None)\n+\n                 print(\" --- next batch starting at: \" + next_date.isoformat())\n                 append_log(\n                     None,\n@@ -231,8 +254,11 @@ def append_log(finished, package_id, action, reason):\n             self._portal_update_completed = True\n \n \n-def _changed_packages_since(registry, since_time, ids_only=False, verbose=False):\n+def _changed_packages_since(registry: LocalCKAN, since_time: str,\n+                            ids_only: Optional[bool]=False, verbose: Optional[bool]=False):\n     \"\"\"\n+    PortalUpdater member: Gathers packages based on activity.\n+\n     Query source ckan instance for packages changed since_time.\n     returns (packages, next since_time to query) or (None, None)\n     when no more changes are found.\n@@ -278,13 +304,14 @@ def _changed_packages_since(registry, since_time, ids_only=False, verbose=False)\n     return packages, since_time\n \n \n-def _copy_datasets(source, user, mirror=False, verbose=False):\n+def _copy_datasets(source_datastore_uri: Optional[Union[str, None]], user: Optional[Union[str, None]]=None,\n+                   mirror: Optional[bool]=False, verbose: Optional[bool]=False):\n     \"\"\"\n-    A process that accepts packages on stdin which are compared\n-    to the local version of the same package.  The local package is\n-    then created, updated, deleted or left unchanged.  This process\n-    outputs that action as a string 'created', 'updated', 'deleted'\n-    or 'unchanged'\n+    PortalUpdater member: Syncs package dicts from the stdin (valid JSON).\n+\n+    A process that accepts packages on stdin which are compared o the local version of the same package.\n+    The local package is hen created, updated, deleted or left unchanged. This process outputs that\n+    action as a string 'created', 'updated', 'deleted' or 'unchanged'.\n     \"\"\"\n     with _quiet_int_pipe():\n         portal = LocalCKAN(username = user)\n@@ -293,9 +320,38 @@ def _copy_datasets(source, user, mirror=False, verbose=False):\n \n         packages = iter(sys.stdin.readline, '')\n         for package in packages:\n+\n+            failure_reason = ''\n+            failure_trace = ''\n+            error =  ''  # will output to stderr, while action gets outputted to stdout\n+            do_update_sync_success_time = False\n+\n+            @contextmanager\n+            def _capture_exception_details(_reason: str, _package_id: str):\n+                \"\"\"\n+                Context manager to handle exceptions for Package actions.\n+                \"\"\"\n+                nonlocal failure_reason, failure_trace, error, do_update_sync_success_time\n+                try:\n+                    yield\n+                except Exception as e:\n+                    failure_reason = _reason\n+                    failure_trace = traceback.format_exc()\n+                    # do not need to concatenate as there can only be one error for packages\n+                    error = '\\n  %s failed for ' % _reason\n+                    if _package_id:\n+                        error += '%s ' % _package_id\n+                    else:\n+                        error += 'unknown '\n+                    error += str(e)\n+                    if verbose:\n+                        error += '\\n    Failed with Error: %s' % failure_trace\n+                    do_update_sync_success_time = False\n+                    pass\n+\n             source_pkg = json.loads(package)\n             package_id = source_pkg['id']\n-            reason = None\n+            reason = ''\n             target_deleted = False\n             if source_pkg and source_pkg['state'] == 'deleted':\n                 source_pkg = None\n@@ -345,38 +401,89 @@ def _copy_datasets(source, user, mirror=False, verbose=False):\n                 target_pkg = get_datastore_and_views(target_pkg, portal, verbose=verbose)\n                 _trim_package(target_pkg)\n \n-            target_hash = {}\n+            resource_file_hashes = {}\n \n             if action == 'skip':\n                 pass\n             elif target_pkg is None and source_pkg is None:\n                 action = 'unchanged'\n                 reason = reason or 'deleted on registry'\n+                do_update_sync_success_time = False  # do not update sync time if nothing changed\n             elif target_deleted:\n                 action = 'updated'\n                 reason = 'undeleting on target'\n-                portal.action.package_update(**source_pkg)\n-                for r in source_pkg['resources']:\n-                    target_hash[r['id']] = r.get('hash')\n-                action += _add_datastore_and_views(source_pkg, portal, target_hash, source, verbose=verbose)\n+                with _capture_exception_details('package_update', package_id):\n+                    portal.action.package_update(**source_pkg)\n+                    do_update_sync_success_time = True\n+                if not failure_reason:  # only try adding datastores and views if no errors\n+                    for r in source_pkg['resources']:\n+                        # use Registry file hashes for force undelete\n+                        resource_file_hashes[r['id']] = r.get('hash')\n+                    _action, _error, failure_reason, failure_trace = _add_datastore_and_views(source_pkg, portal,\n+                                                                                              resource_file_hashes,\n+                                                                                              source_datastore_uri,\n+                                                                                              verbose=verbose)\n+                    action += _action\n+                    error += _error\n+                    if failure_reason:\n+                        reason += ' ERRORED'\n+                        do_update_sync_success_time = False\n+                else:\n+                    reason += ' ERRORED'\n+                    do_update_sync_success_time = False\n             elif target_pkg is None:\n                 action = 'created'\n-                portal.action.package_create(**source_pkg)\n-                action += _add_datastore_and_views(source_pkg, portal, target_hash, source, verbose=verbose)\n+                with _capture_exception_details('package_create', package_id):\n+                    portal.action.package_create(**source_pkg)\n+                    do_update_sync_success_time = True\n+                if not failure_reason:  # only try adding datastores and views if no errors\n+                    _action, _error, failure_reason, failure_trace = _add_datastore_and_views(source_pkg, portal,\n+                                                                                              resource_file_hashes,\n+                                                                                              source_datastore_uri,\n+                                                                                              verbose=verbose)\n+                    action += _action\n+                    error += _error\n+                    if failure_reason:\n+                        reason += ' ERRORED'\n+                        do_update_sync_success_time = False\n+                else:\n+                    reason += ' ERRORED'\n+                    do_update_sync_success_time = False\n             elif source_pkg is None:\n                 action = 'deleted'\n-                portal.action.package_delete(id=package_id)\n+                with _capture_exception_details('package_delete', package_id):\n+                    portal.action.package_delete(id=package_id)\n+                    do_update_sync_success_time = True\n+                if failure_reason:\n+                    reason += ' ERRORED'\n+                    do_update_sync_success_time = False\n             elif source_pkg == target_pkg:\n                 action = 'unchanged'\n                 reason = 'no difference found'\n+                do_update_sync_success_time = False  # do not update sync time if nothing changed\n             else:\n                 action = 'updated'\n                 for r in target_pkg['resources']:\n-                    target_hash[r['id']] = r.get('hash')\n-                portal.action.package_update(**source_pkg)\n-                action += _add_datastore_and_views(source_pkg, portal, target_hash, source, verbose=verbose)\n+                    # use Portal file hashes\n+                    resource_file_hashes[r['id']] = r.get('hash')\n+                with _capture_exception_details('package_update', package_id):\n+                    portal.action.package_update(**source_pkg)\n+                    do_update_sync_success_time = True\n+                if not failure_reason:  # only try adding datastores and views if no errors\n+                    _action, _error, failure_reason, failure_trace = _add_datastore_and_views(source_pkg, portal,\n+                                                                                              resource_file_hashes,\n+                                                                                              source_datastore_uri,\n+                                                                                              verbose=verbose)\n+                    error += _error\n+                    action += _action\n+                    if failure_reason:\n+                        reason += ' ERRORED'\n+                        do_update_sync_success_time = False\n+                else:\n+                    reason += ' ERRORED'\n+                    do_update_sync_success_time = False\n \n-            sys.stdout.write(json.dumps([package_id, action, reason]) + '\\n')\n+            sys.stdout.write(json.dumps([package_id, action, reason, error, failure_reason, failure_trace, do_update_sync_success_time]) + '\\n')\n             sys.stdout.flush()\n \n \n@@ -664,8 +771,10 @@ def _bulk_validate():\n     log.close()\n \n \n-def _trim_package(pkg):\n+def _trim_package(pkg: Optional[Union[dict, None]]=None):\n     \"\"\"\n+    PortalUpdater member: removes keys from provided package dict.\n+\n     remove keys from pkg that we don't care about when comparing\n     or updating/creating packages.  Also try to convert types and\n     create missing fields that will be present in package_show.\n@@ -699,81 +808,184 @@ def _trim_package(pkg):\n             pkg[k] = ''\n \n \n-def _add_datastore_and_views(package, portal, res_hash, ds, verbose=False):\n+def _add_datastore_and_views(package: dict, portal: LocalCKAN, resource_file_hashes: dict,\n+                             source_datastore_uri: str, verbose: Optional[bool]=False) -> Tuple[str, str, str, str]:\n+    \"\"\"\n+    PortalUpdater member: Syncs DataDictionaries, Resource Views, and DataStore tables.\n+    \"\"\"\n     # create datastore table and views for each resource of the package\n     action = ''\n+    error = ''\n+    failure_reason = ''\n+    failure_trace = ''\n     for resource in package['resources']:\n         res_id = resource['id']\n         if res_id in package.keys():\n             if 'data_dict' in package[res_id].keys():\n-                action += _add_to_datastore(portal, resource, package[res_id], res_hash, ds, verbose=verbose)\n+                _action, _error, _failure_reason, _failure_trace = _add_to_datastore(portal, resource,\n+                                                                                     package[res_id], resource_file_hashes,\n+                                                                                     source_datastore_uri, verbose=verbose)\n+                action += _action\n+                error += _error\n+                if failure_reason:\n+                    failure_reason += ',%s' % _failure_reason  # comma separate multiple failure reasons\n+                    failure_trace += '\\n\\n%s' % _failure_trace  # separate multiple failure traces with newlines\n+                else:\n+                    failure_reason = _failure_reason\n+                    failure_trace = _failure_trace\n             if 'views' in package[res_id].keys():\n-                action += _add_views(portal, resource, package[res_id], verbose=verbose)\n-    return action\n+                _action, _error, _failure_reason, _failure_trace = _add_views(portal, resource, package[res_id], verbose=verbose)\n+                action += _action\n+                error += _error\n+                if failure_reason:\n+                    failure_reason += ',%s' % _failure_reason  # comma separate multiple failure reasons\n+                    failure_trace += '\\n\\n%s' % _failure_trace  # separate multiple failure traces with newlines\n+                else:\n+                    failure_reason = _failure_reason\n+                    failure_trace = _failure_trace\n+    return action, error, failure_reason, failure_trace\n \n \n-def _delete_datastore_and_views(package, portal):\n-    # remove datastore table and views for each resource of the package\n+def _add_to_datastore(portal: LocalCKAN, resource: dict, resource_details: dict,\n+                      resource_file_hashes: dict, source_datastore_uri: str, verbose: Optional[bool]=False) -> Tuple[str, str, str, str]:\n+    \"\"\"\n+    PortalUpdater member: Syncs DataDictionaries and DataStore tables.\n+    \"\"\"\n     action = ''\n-    for resource in package['resources']:\n-        res_id = resource['id']\n-        try:\n-            portal.call_action('datastore_delete', {\"id\": resource['id'], \"force\": True})\n-            action += '\\n  datastore-deleted for ' + resource['id']\n-        except NotFound:\n-            action += '\\n  failed to delete datastore for ' + resource['id']\n-        try:\n-            portal.call_action('resource_view_clear', {\"id\": resource['id'], \"force\": True})\n-            action += '\\n  views-deleted for ' + resource['id']\n-        except NotFound:\n-            action += '\\n  failed to delete all views for ' + resource['id']\n-    return action\n+    error = ''\n+    failure_reason = ''\n+    failure_trace = ''\n \n+    @contextmanager\n+    def _capture_exception_details(_reason: str, _resource_id: str):\n+        \"\"\"\n+        Context manager to handle exceptions for DataStore Resource actions.\n+        \"\"\"\n+        nonlocal failure_reason, failure_trace, error\n+        try:\n+            yield\n+        except Exception as e:\n+            if failure_reason:\n+                # comma separate multiple failure reasons\n+                failure_reason += ',%s' % _reason\n+            else:\n+                failure_reason = _reason\n+            if _resource_id:\n+                failure_reason += \"[resource_id=%s]\" % _resource_id\n+            if failure_trace:\n+                # separate multiple failure traces with newlines\n+                failure_trace += '\\n\\n%s' % traceback.format_exc()\n+            else:\n+                failure_trace = traceback.format_exc()\n+            # always concatenate as there can be multiple errors\n+            error += '\\n  %s failed for ' % _reason\n+            if _resource_id:\n+                error += 'resource %s ' % _resource_id\n+            else:\n+                error += 'unknown '\n+            error += str(e)\n+            if verbose:\n+                error += '\\n    Failed with Error: %s' % failure_trace\n+            pass\n \n-def _add_to_datastore(portal, resource, resource_details, t_hash, source_ds_url, verbose=False):\n-    action = ''\n     try:\n         portal.call_action('datastore_search', {'resource_id': resource['id'], 'limit': 0})\n-        if t_hash.get(resource['id']) \\\n-                and t_hash.get(resource['id']) == resource.get('hash')\\\n+        if resource_file_hashes.get(resource['id']) \\\n+                and resource_file_hashes.get(resource['id']) == resource.get('hash')\\\n                 and _datastore_dictionary(portal, resource['id']) == resource_details['data_dict']:\n             if verbose:\n                 action += '\\n  File hash and Data Dictionary has not changed, skipping DataStore for %s...' % resource['id']\n-            return action\n+            return action, error, failure_reason, failure_trace\n         else:\n-            portal.call_action('datastore_delete', {\"id\": resource['id'], \"force\": True})\n-            action += '\\n  datastore-deleted for ' + resource['id']\n+            with _capture_exception_details('datastore_delete', resource['id']):\n+                portal.call_action('datastore_delete', {\"id\": resource['id'], \"force\": True})\n+                action += '\\n  datastore-deleted for ' + resource['id']\n     except NotFound:\n         # not an issue, resource does not exist in datastore\n         if verbose:\n             action += '\\n  DataStore does not exist for resource %s...trying to create it...' % resource['id']\n         pass\n \n-    portal.call_action('datastore_create',\n-                       {\"resource_id\": resource['id'],\n-                        \"fields\": resource_details['data_dict'],\n-                        \"force\": True})\n-\n-    action += '\\n  datastore-created for ' + resource['id']\n-\n-    # load data\n-    target_ds_url = str(datastore.get_write_engine().url)\n-    cmd1 = subprocess.Popen(['pg_dump', source_ds_url, '-a', '-t', resource['id']], stdout=subprocess.PIPE)\n-    cmd2 = subprocess.Popen(['psql', target_ds_url], stdin=cmd1.stdout, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n-    out, err = cmd2.communicate()\n-    action += ' data-loaded' if not err else ' data-load-failed'\n-    if verbose:\n-        if resource_details['data_dict']:\n-            action += '\\n    Using DataStore fields:'\n-            for field in resource_details['data_dict']:\n-                action += '\\n      %s' % field['id']\n+    datastore_created = False\n+    with _capture_exception_details('datastore_create', resource['id']):\n+        portal.call_action('datastore_create',\n+                           {\"resource_id\": resource['id'],\n+                            \"fields\": resource_details['data_dict'],\n+                            \"force\": True})\n+\n+        action += '\\n  datastore-created for ' + resource['id']\n+        datastore_created = True\n+\n+    if datastore_created:\n+        # load data only if datastore_create was successful\n+        target_datastore_uri = str(datastore.get_write_engine().url)\n+        cmd1 = subprocess.Popen(['pg_dump', source_datastore_uri, '-a', '-t', resource['id']], stdout=subprocess.PIPE)\n+        cmd2 = subprocess.Popen(['psql', target_datastore_uri], stdin=cmd1.stdout, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+        out, err = cmd2.communicate()\n+        if not err:\n+            action += ' data-loaded'\n+            if verbose:\n+                if resource_details['data_dict']:\n+                    action += '\\n    Using DataStore fields:'\n+                    for field in resource_details['data_dict']:\n+                        action += '\\n      %s' % field['id']\n+                else:\n+                    action += '\\n    There are no DataStore fields!!!'\n         else:\n-            action += '\\n    There are no DataStore fields!!!'\n-    return action\n+            with _capture_exception_details('datastore_load', resource['id']):\n+                raise datastore.DataError('Failed to dump and load datastore data from the Registry to the Portal')\n+            # special addition of subprocess error output, we know that an error has occurred\n+            if failure_reason:\n+                failure_trace += '\\n\\npsql command error: %s' % err  # output pg_dump and psql load command errors\n+            else:\n+                failure_trace += '\\n\\npsql command error: %s' % err  # output pg_dump and psql load command errors\n+\n+    return action, error, failure_reason, failure_trace\n \n \n-def _add_views(portal, resource, resource_details, verbose=False):\n+def _add_views(portal: LocalCKAN, resource: dict, resource_details: dict, verbose: Optional[bool]=False) -> Tuple[str, str, str, str]:\n+    \"\"\"\n+    PortalUpdater member: Syncs Resource Views.\n+    \"\"\"\n     action = ''\n+    error = ''\n+    failure_reason = ''\n+    failure_trace = ''\n+\n+    @contextmanager\n+    def _capture_exception_details(_reason: Union[str, None], _resource_id: str, _view_id: str):\n+        \"\"\"\n+        Context manager to handle exceptions for Resource View actions.\n+        \"\"\"\n+        nonlocal failure_reason, failure_trace, error\n+        try:\n+            yield\n+        except Exception as e:\n+            if failure_reason:\n+                # comma separate multiple failure reasons\n+                failure_reason += ',%s' % _reason\n+            else:\n+                failure_reason = _reason\n+            if _resource_id:\n+                failure_reason += \"[resource_id=%s]\" % _resource_id\n+            if _view_id:\n+                failure_reason += \"[view_id=%s]\" % _view_id\n+            if failure_trace:\n+                # separate multiple failure traces with newlines\n+                failure_trace += '\\n\\n%s' % traceback.format_exc()\n+            else:\n+                failure_trace = traceback.format_exc()\n+            # always concatenate as there can be multiple errors\n+            error += '\\n  %s failed for ' % _reason\n+            if _resource_id and _view_id:\n+                error += 'view %s for resource %s ' % (_view_id, _resource_id)\n+            else:\n+                error += 'unknown '\n+            error += str(e)\n+            if verbose:\n+                error += '\\n    Failed with Error: %s' % failure_trace\n+            pass\n+\n     target_views = portal.call_action('resource_view_list', {'id': resource['id']})\n     for src_view in resource_details['views']:\n         view_action = 'resource_view_create'\n@@ -782,14 +994,9 @@ def _add_views(portal, resource, resource_details, verbose=False):\n                 view_action = None if target_view == src_view else 'resource_view_update'\n \n         if view_action:\n-            try:\n+            with _capture_exception_details(view_action, resource['id'], src_view['id']):\n                 portal.call_action(view_action, src_view)\n-                action += '\\n  ' + view_action + ' ' + src_view['id'] + ' for resource ' + resource['id']\n-            except ValidationError as e:\n-                action += '\\n  ' + view_action + ' failed for view ' + src_view['id'] + ' for resource ' + resource['id']\n-                if verbose:\n-                    action += '\\n    Failed with ValidationError: %s' % e.error_dict\n-                pass\n+                action += '\\n  %s %s for resource %s' % (view_action, src_view['id'], resource['id'])\n \n     for target_view in target_views:\n         to_delete = True\n@@ -799,10 +1006,11 @@ def _add_views(portal, resource, resource_details, verbose=False):\n                 break\n         if to_delete:\n             view_action = 'resource_view_delete'\n-            portal.call_action(view_action, {'id':target_view['id']})\n-            action += '\\n  ' + view_action + ' ' + src_view['id'] + ' for resource ' + resource['id']\n+            with _capture_exception_details(view_action, resource['id'], src_view['id']):\n+                portal.call_action(view_action, {'id':target_view['id']})\n+                action += '\\n  %s %s for resource %s' % (view_action, src_view['id'], resource['id'])\n \n-    return action\n+    return action, error, failure_reason, failure_trace\n \n \n def get_datastore_and_views(package, ckan_instance, verbose=False):\n@@ -908,7 +1116,7 @@ def _quiet_int_pipe():\n             raise\n \n \n-def _get_user(user):\n+def _get_user(user:Optional[Union[str, None]]=None) -> str:\n     if user is not None:\n         return user\n     return get_action('get_site_user')({'ignore_auth': True}).get('name')\n@@ -980,6 +1188,8 @@ def portal_update(portal_ini,\n                   delay=60,\n                   verbose=False):\n     \"\"\"\n+    PortalUpdater member: CKAN cli command entrance to run the PortalUpdater stack.\n+\n     Collect batches of packages modified at local CKAN since activity_date\n     and apply the package updates to the portal instance for all\n     packages with published_date set to any time in the past.\n@@ -1029,13 +1239,14 @@ def portal_update(portal_ini,\n     is_flag=True,\n     help=\"Increase verbosity\",\n )\n-def copy_datasets(mirror=False, ckan_user=None, source=None, verbose=False):\n+def copy_datasets(mirror: Optional[bool]=False, ckan_user: Optional[Union[str, None]]=None,\n+                  source: Optional[Union[str, None]]=None, verbose: Optional[bool]=False):\n     \"\"\"\n-    A process that accepts packages on stdin which are compared\n-    to the local version of the same package.  The local package is\n-    then created, updated, deleted or left unchanged.  This process\n-    outputs that action as a string 'created', 'updated', 'deleted'\n-    or 'unchanged'\n+    PortalUpdater member: CKAN cli command entrance to sync packages from stdin (valid JSON).\n+\n+    A process that accepts packages on stdin which are compared to the local version of the same package.\n+    The local package is then created, updated, deleted or left unchanged. This process outputs that\n+    action as a string 'created', 'updated', 'deleted' or 'unchanged'.\n \n     Full Usage:\\n\n         canada copy-datasets [-m] [-o <source url>]\n@@ -1166,14 +1377,39 @@ def bulk_validate():\n     help=u\"Number of days to go back. E.g. 120 will keep 120 days of activities. Default: 90\",\n     default=90\n )\n+@click.option(\n+    \"-i\",\n+    \"--include-types\",\n+    help=\"Activity types to include in the deletion. E.g. 'resource create' (MULTIPLE)\",\n+    default=None,\n+    multiple=True\n+)\n+@click.option(\n+    \"-e\",\n+    \"--exclude-types\",\n+    help=\"Activity types to exclude in the deletion. E.g. 'datastore create' (MULTIPLE)\",\n+    default=None,\n+    multiple=True\n+)\n @click.option(u\"-q\", u\"--quiet\", is_flag=True, help=u\"Suppress human interaction.\", default=False)\n-def delete_activities(days=90, quiet=False):\n+def delete_activities(days=90, include_types=None, exclude_types=None, quiet=False):\n     \"\"\"Delete rows from the activity table past a certain number of days.\n     \"\"\"\n+    if len(include_types) == 1:\n+        include_types = f\"('{include_types[0]}')\"\n+    if len(exclude_types) == 1:\n+        exclude_types = f\"('{exclude_types[0]}')\"\n+    if include_types:\n+        click.echo(f'Including activity_type {include_types}')\n+    if exclude_types:\n+        click.echo(f'Excluding activity_type {exclude_types}')\n     activity_count = model.Session.execute(\n-                        u\"SELECT count(*) FROM activity \"\n-                        \"WHERE timestamp < NOW() - INTERVAL '{d} days';\"\n-                        .format(d=days)) \\\n+                        \"SELECT count(*) FROM activity \"\n+                        \"WHERE timestamp < NOW() - INTERVAL '{d} days' {i} {e};\"\n+                        .format(\n+                            d=days,\n+                            i=\"AND activity_type IN {i}\".format(i=include_types) if include_types else \"\",\n+                            e=\"AND activity_type NOT IN {e}\".format(e=exclude_types) if exclude_types else \"\")) \\\n                         .fetchall()[0][0]\n \n     if not bool(activity_count):\n@@ -1184,7 +1420,13 @@ def delete_activities(days=90, quiet=False):\n         click.confirm(u\"\\nAre you sure you want to delete {num} activities?\"\n                           .format(num=activity_count), abort=True)\n \n-    model.Session.execute(u\"DELETE FROM activity WHERE timestamp < NOW() - INTERVAL '{d} days';\".format(d=days))\n+    model.Session.execute(\n+        \"DELETE FROM activity \"\n+        \"WHERE timestamp < NOW() - INTERVAL '{d} days' {i} {e};\"\n+        .format(\n+            d=days,\n+            i=\"AND activity_type IN {i}\".format(i=include_types) if include_types else \"\",\n+            e=\"AND activity_type NOT IN {e}\".format(e=exclude_types) if exclude_types else \"\"))\n     model.Session.commit()\n \n     click.echo(u\"\\nDeleted {num} rows from the activity table\".format(num=activity_count))"
                },
                {
                    "sha": "8f598af1f4430c915bd004c42ea04791d0a8cd07",
                    "filename": "ckanext/canada/helpers.py",
                    "status": "modified",
                    "additions": 24,
                    "deletions": 0,
                    "changes": 24,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fhelpers.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fhelpers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fhelpers.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -1,3 +1,5 @@\n+from typing import Optional, Union\n+\n import json\n import re\n import inspect\n@@ -901,3 +903,25 @@ def is_user_locked(user_name):\n         return True\n \n     return False\n+\n+\n+def operations_guide_link(stub: Optional[Union[str, None]]=None) -> str:\n+    \"\"\"\n+    Return a string for a link to the Registry Operations Guide.\n+    \"\"\"\n+    try:\n+        return json.loads(config.get('ckanext.canada.operations_guide_link'))\n+    except Exception:\n+        guide_link = {'en': 'https://open.canada.ca/en/registry-operations-guide',\n+                      'fr': 'https://ouvert.canada.ca/fr/guide-operations-registre'}\n+    guide_link = guide_link.get(h.lang(), guide_link.get('en'))\n+    if not stub:\n+        landing = 'ton-compte' if h.lang() == 'fr' else 'your-account'\n+        return f'{guide_link}/{landing}'\n+    return f'{guide_link}/{stub}'\n+\n+\n+def max_resources_per_dataset():\n+    max_resource_count = config.get('ckanext.canada.max_resources_per_dataset', None)\n+    if max_resource_count:\n+        return int(max_resource_count)"
                },
                {
                    "sha": "541795b0eda8b501347bcd65e1be8cfc63780004",
                    "filename": "ckanext/canada/i18n/ckanext-canada.pot",
                    "status": "modified",
                    "additions": 159,
                    "deletions": 111,
                    "changes": 270,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fi18n%2Fckanext-canada.pot",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fi18n%2Fckanext-canada.pot",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fi18n%2Fckanext-canada.pot?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: ckanext-canada 0.4.0\\n\"\n \"Report-Msgid-Bugs-To: EMAIL@ADDRESS\\n\"\n-\"POT-Creation-Date: 2024-10-10 13:20+0000\\n\"\n+\"POT-Creation-Date: 2024-11-12 15:06+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -103,44 +103,44 @@ msgstr \"\"\n msgid \"Invalid business number\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:288 ckanext/canada/helpers.py:289\n+#: ckanext/canada/helpers.py:290 ckanext/canada/helpers.py:291\n msgid \"Treasury Board of Canada Secretariat\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:580 ckanext/canada/strings.py:13\n-#: ckanext/canada/view.py:1196\n+#: ckanext/canada/helpers.py:582 ckanext/canada/strings.py:13\n+#: ckanext/canada/view.py:1198\n msgid \"Members not found\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:706\n+#: ckanext/canada/helpers.py:708\n msgid \"Data awaiting load to DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:707\n+#: ckanext/canada/helpers.py:709\n msgid \"Loading data into DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:708\n+#: ckanext/canada/helpers.py:710\n msgid \"Data loaded into DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:709\n+#: ckanext/canada/helpers.py:711\n msgid \"Failed to load data into DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:710\n+#: ckanext/canada/helpers.py:712\n msgid \"Data available in DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:711\n+#: ckanext/canada/helpers.py:713\n msgid \"Resource not active in DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:712\n+#: ckanext/canada/helpers.py:714\n msgid \"DataStore status unknown\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:779 ckanext/canada/templates/home/quick_links.html:65\n+#: ckanext/canada/helpers.py:781 ckanext/canada/templates/home/quick_links.html:65\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:28\n #: ckanext/canada/templates/snippets/cdts/header.html:31\n #: ckanext/canada/templates/snippets/dataset_facets.html:3\n@@ -149,7 +149,7 @@ msgstr \"\"\n msgid \"Open Data\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:780 ckanext/canada/templates/home/quick_links.html:79\n+#: ckanext/canada/helpers.py:782 ckanext/canada/templates/home/quick_links.html:79\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:30\n #: ckanext/canada/templates/snippets/cdts/header.html:54\n #: ckanext/canada/templates/snippets/dataset_facets.html:5\n@@ -158,48 +158,48 @@ msgstr \"\"\n msgid \"Open Information\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:789\n+#: ckanext/canada/helpers.py:791\n #: ckanext/canada/templates/snippets/dataset_facets.html:26\n msgid \"Request sent to data owner - awaiting response\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:793\n+#: ckanext/canada/helpers.py:795\n #: ckanext/canada/templates/snippets/publish_facet.html:43\n msgid \"Pending\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:794 ckanext/canada/templates/package/read.html:15\n+#: ckanext/canada/helpers.py:796 ckanext/canada/templates/package/read.html:15\n #: ckanext/canada/templates/snippets/publish_facet.html:43\n msgid \"Draft\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:803 ckanext/canada/templates/home/quick_links.html:133\n+#: ckanext/canada/helpers.py:805 ckanext/canada/templates/home/quick_links.html:133\n #: ckanext/canada/templates/snippets/cdts/header.html:57\n #: ckanext/canada/templates/snippets/dataset_facets.html:31\n #: ckanext/canada/templates/snippets/package_item.html:15\n #: ckanext/canada/templates/snippets/package_item.html:21\n msgid \"Proactive Publication\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:825\n+#: ckanext/canada/helpers.py:827\n #: ckanext/canada/templates/snippets/publish_facet.html:24\n msgid \"Published\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:827\n+#: ckanext/canada/helpers.py:829\n #: ckanext/canada/templates/snippets/publish_facet.html:33\n msgid \"Scheduled\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:862\n+#: ckanext/canada/helpers.py:864\n msgid \"Registry Home\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:867\n+#: ckanext/canada/helpers.py:869\n msgid \"Open Government\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:870\n+#: ckanext/canada/helpers.py:872\n #: ckanext/canada/templates/admin/publish_search.html:18\n #: ckanext/canada/templates/home/quick_links.html:104\n #: ckanext/canada/templates/organization/snippets/organization_search.html:7\n@@ -208,70 +208,75 @@ msgstr \"\"\n msgid \"Search\"\n msgstr \"\"\n \n-#: ckanext/canada/logic.py:296\n+#: ckanext/canada/logic.py:297\n msgid \"Could not determine a resource format. Please supply a format.\"\n msgstr \"\"\n \n-#: ckanext/canada/logic.py:457\n+#: ckanext/canada/logic.py:458\n msgid \"Unknown Job\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:703\n+#: ckanext/canada/logic.py:547\n+#, python-format\n+msgid \"No Portal Sync information found for package %s\"\n+msgstr \"\"\n+\n+#: ckanext/canada/plugins.py:709\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:25\n msgid \"Portal Type\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:704 ckanext/canada/templates/package/deleted.html:14\n+#: ckanext/canada/plugins.py:710 ckanext/canada/templates/package/deleted.html:14\n #: ckanext/canada/templates/user/new_user_form.html:17\n msgid \"Organization\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:705\n+#: ckanext/canada/plugins.py:711\n msgid \"Collection Type\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:706 ckanext/canada/plugins.py:707\n+#: ckanext/canada/plugins.py:712 ckanext/canada/plugins.py:713\n msgid \"Keywords\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:708\n+#: ckanext/canada/plugins.py:714\n msgid \"Subject\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:709\n+#: ckanext/canada/plugins.py:715\n #: ckanext/canada/templates/tabledesigner/view_snippets/cra_business_number.html:1\n msgid \"Format\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:710\n+#: ckanext/canada/plugins.py:716\n msgid \"Resource Type\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:711\n+#: ckanext/canada/plugins.py:717\n msgid \"Maintenance and Update Frequency\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:712\n+#: ckanext/canada/plugins.py:718\n msgid \"Record Status\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:713\n+#: ckanext/canada/plugins.py:719\n msgid \"IMSO Approval\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:714\n+#: ckanext/canada/plugins.py:720\n msgid \"Jurisdiction\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:715\n+#: ckanext/canada/plugins.py:721\n msgid \"Suggestion Status\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:902\n+#: ckanext/canada/plugins.py:910\n msgid \"Previous\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:902\n+#: ckanext/canada/plugins.py:910\n msgid \"Next\"\n msgstr \"\"\n \n@@ -284,7 +289,9 @@ msgstr \"\"\n msgid \"Not authorized to access {group} members download\"\n msgstr \"\"\n \n-#: ckanext/canada/strings.py:14 ckanext/canada/view.py:1206\n+#: ckanext/canada/strings.py:14\n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:14\n+#: ckanext/canada/view.py:1208\n msgid \"N/A\"\n msgstr \"\"\n \n@@ -294,30 +301,30 @@ msgstr \"\"\n #: ckanext/canada/templates/user/list.html:44\n #: ckanext/canada/templates/user/new_user_form.html:7\n #: ckanext/canada/templates/user/snippets/login_form.html:11\n-#: ckanext/canada/view.py:1198\n+#: ckanext/canada/view.py:1200\n msgid \"Username\"\n msgstr \"\"\n \n #: ckanext/canada/strings.py:16 ckanext/canada/templates/user/edit_user_form.html:9\n #: ckanext/canada/templates/user/new_user_form.html:13\n #: ckanext/canada/templates/user/read_base.html:60\n #: ckanext/canada/templates/user/recover_username.html:15\n-#: ckanext/canada/view.py:1198\n+#: ckanext/canada/view.py:1200\n msgid \"Email\"\n msgstr \"\"\n \n #: ckanext/canada/strings.py:17 ckanext/canada/templates/user/api_tokens.html:5\n-#: ckanext/canada/templates/user/list.html:45 ckanext/canada/view.py:1198\n+#: ckanext/canada/templates/user/list.html:45 ckanext/canada/view.py:1200\n msgid \"Name\"\n msgstr \"\"\n \n #: ckanext/canada/strings.py:18\n #: ckanext/canada/templates/organization/member_new.html:57\n-#: ckanext/canada/templates/user/list.html:46 ckanext/canada/view.py:1198\n+#: ckanext/canada/templates/user/list.html:46 ckanext/canada/view.py:1200\n msgid \"Role\"\n msgstr \"\"\n \n-#: ckanext/canada/strings.py:19 ckanext/canada/view.py:1216\n+#: ckanext/canada/strings.py:19 ckanext/canada/view.py:1218\n msgid \"members\"\n msgstr \"\"\n \n@@ -661,131 +668,141 @@ msgid \"\"\n \" read-only.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:101\n+#: ckanext/canada/templates/package/new_resource.html:17\n+#: ckanext/canada/templates/package/new_resource_not_draft.html:11\n+#: ckanext/canada/templates/package/read.html:44 ckanext/canada/validators.py:564\n+msgid \"\"\n+\"You can only add up to {max_resource_count} resources to a dataset. You can \"\n+\"segment your resources across multiple datasets or merge your data to limit \"\n+\"the number of resources. Please contact open-ouvert@tbs-sct.gc.ca if you need\"\n+\" further assistance.\"\n+msgstr \"\"\n+\n+#: ckanext/canada/view.py:103\n msgid \"<strong>Note</strong><br>{0} is now logged in\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:111\n+#: ckanext/canada/view.py:113\n msgid \"Login failed. Bad username or password.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:159\n+#: ckanext/canada/view.py:161\n msgid \"\"\n \"The status has been added/updated for this suggested dataset. This update \"\n \"will be reflected on open.canada.ca shortly.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:162\n+#: ckanext/canada/view.py:164\n #, python-format\n msgid \"Your dataset %s has been saved.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:172\n+#: ckanext/canada/view.py:174\n msgid \"Dataset added.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:181\n+#: ckanext/canada/view.py:183\n msgid \"Resource updated.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:190\n+#: ckanext/canada/view.py:192\n msgid \"Resource added.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:245\n+#: ckanext/canada/view.py:247\n msgid \"Unauthorized to request username recovery.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:250\n+#: ckanext/canada/view.py:252\n msgid \"Email is required\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:275\n+#: ckanext/canada/view.py:277\n msgid \"Error sending the email. Try again later or contact an administrator for help\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:282\n+#: ckanext/canada/view.py:284\n msgid \"\"\n \"An email has been sent to you containing your username(s). (unless the \"\n \"account specified does not exist)\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:360\n+#: ckanext/canada/view.py:362\n msgid \"Unauthorized to create a resource for this package\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:397 ckanext/canada/view.py:408\n+#: ckanext/canada/view.py:399 ckanext/canada/view.py:410\n msgid \"This record already exists\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:405 ckanext/canada/view.py:413\n+#: ckanext/canada/view.py:407 ckanext/canada/view.py:415\n msgid \"Something went wrong, your record was not created. Please contact support.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:428\n+#: ckanext/canada/view.py:430\n msgid \"Record Created\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:466\n+#: ckanext/canada/view.py:468\n msgid \"Unauthorized to update dataset\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:476 ckanext/canada/view.py:617 ckanext/canada/view.py:652\n+#: ckanext/canada/view.py:478 ckanext/canada/view.py:619 ckanext/canada/view.py:654\n msgid \"Not found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:478\n+#: ckanext/canada/view.py:480\n msgid \"Multiple records found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:515\n+#: ckanext/canada/view.py:517\n msgid \"Something went wrong, your record was not updated. Please contact support.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:531\n+#: ckanext/canada/view.py:533\n #, python-format\n msgid \"Record %s Updated\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:570\n+#: ckanext/canada/view.py:572\n msgid \"No organizations found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:574\n+#: ckanext/canada/view.py:576\n msgid \"Recombinant resource_name not found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:608\n+#: ckanext/canada/view.py:610\n msgid \"User {0} not authorized to update resource {1}\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:663\n+#: ckanext/canada/view.py:665\n msgid \"{num} deleted.\"\n msgstr \"\"\n \n #. SQL Trigger String for PD Type: service\n-#: ckanext/canada/tables/service.yaml:2348 ckanext/canada/view.py:705\n+#: ckanext/canada/tables/service.yaml:2348 ckanext/canada/view.py:707\n msgid \"Number required\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:710\n+#: ckanext/canada/view.py:712\n msgid \"Integer required\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:746 ckanext/canada/view.py:754 ckanext/canada/view.py:788\n+#: ckanext/canada/view.py:748 ckanext/canada/view.py:756 ckanext/canada/view.py:790\n msgid \"Not authorized to see this page\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:774\n+#: ckanext/canada/view.py:776\n msgid \" record(s) published.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:812\n+#: ckanext/canada/view.py:814\n #, python-format\n msgid \"Unauthorized to delete resource %s\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:814\n+#: ckanext/canada/view.py:816\n #, python-format\n msgid \"DataStore table and Data Dictionary deleted for resource %s\"\n msgstr \"\"\n@@ -798,48 +815,48 @@ msgstr \"\"\n #: ckanext/canada/templates/package/resource_edit.html:3\n #: ckanext/canada/templates/package/resource_edit_base.html:7\n #: ckanext/canada/templates/package/wet_datatable.html:15\n-#: ckanext/canada/view.py:908\n+#: ckanext/canada/view.py:910\n msgid \"Edit\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1041\n+#: ckanext/canada/view.py:1043\n msgid \"Access denied\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1092\n+#: ckanext/canada/view.py:1094\n msgid \"Account Created\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1094\n+#: ckanext/canada/view.py:1096\n msgid \"\"\n \"Thank you for creating your account for the Open Government registry. \"\n \"Although your account is active, it has not yet been linked to your \"\n \"department. Until the account is linked to your department you will not be \"\n \"able to create or modify datasets in the registry.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1101\n+#: ckanext/canada/view.py:1103\n msgid \"\"\n \"You should receive an email within the next business day once the account \"\n \"activation process has been completed. If you require faster processing of \"\n \"the account, please send the request directly to: <a href=\\\"mailto:open-\"\n \"ouvert@tbs-sct.gc.ca\\\">open-ouvert@tbs-sct.gc.ca</a>\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1175 ckanext/canada/view.py:1253\n+#: ckanext/canada/view.py:1177 ckanext/canada/view.py:1255\n msgid \"Organization not found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1186\n+#: ckanext/canada/view.py:1188\n msgid \"Not authorized to access {org_name} members download\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1256\n+#: ckanext/canada/view.py:1258\n #, python-format\n msgid \"User %r not authorized to edit members of %s\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1258\n+#: ckanext/canada/view.py:1260\n #, python-format\n msgid \"User %r not authorized to view members of %s\"\n msgstr \"\"\n@@ -1869,6 +1886,11 @@ msgstr \"\"\n msgid \"Job Queue\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/admin/base.html:18\n+#: ckanext/canada/templates/admin/portal_sync.html:4\n+msgid \"Out of Sync Packages\"\n+msgstr \"\"\n+\n #: ckanext/canada/templates/admin/index.html:7\n msgid \"Administer CKAN\"\n msgstr \"\"\n@@ -1903,6 +1925,16 @@ msgstr \"\"\n msgid \"View the current job queue and running jobs.\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/admin/portal_sync.html:30\n+msgid \"View Out of Sync Packages\"\n+msgstr \"\"\n+\n+#: ckanext/canada/templates/admin/portal_sync.html:34\n+msgid \"\"\n+\"View packages that are out of sync on the Portal and why they have not been \"\n+\"synced.\"\n+msgstr \"\"\n+\n #: ckanext/canada/templates/admin/publish_search.html:11\n #: ckanext/canada/templates/package/search.html:13\n #: ckanext/canada/templates/snippets/search_form.html:13\n@@ -1954,6 +1986,14 @@ msgstr \"\"\n msgid \"Publish?\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:10\n+msgid \"Last Successful Sync:\"\n+msgstr \"\"\n+\n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:23\n+msgid \"Failure Reason:\"\n+msgstr \"\"\n+\n #: ckanext/canada/templates/admin/snippets/publish_package_list.html:8\n msgid \"Select All for Publishing\"\n msgstr \"\"\n@@ -2358,8 +2398,14 @@ msgstr \"\"\n msgid \"Disabled\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/package/new_resource.html:16\n+#: ckanext/canada/templates/package/new_resource_not_draft.html:10\n+#: ckanext/canada/templates/package/read.html:43\n+msgid \"Resource Limit Reached\"\n+msgstr \"\"\n+\n #: ckanext/canada/templates/package/read.html:18\n-#: ckanext/canada/templates/package/read.html:101\n+#: ckanext/canada/templates/package/read.html:117\n #: ckanext/canada/templates/package/snippets/resource_item.html:12\n #: ckanext/canada/templates/scheming/display_snippets/fluent_tags.html:8\n #: ckanext/canada/templates/snippets/package_item.html:37\n@@ -2379,43 +2425,43 @@ msgid \"\"\n \"version, click <a href=\\\"%(url)s\\\">here</a>.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:47\n-#: ckanext/canada/templates/package/read.html:55\n+#: ckanext/canada/templates/package/read.html:63\n+#: ckanext/canada/templates/package/read.html:71\n msgid \"Action required:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:48\n+#: ckanext/canada/templates/package/read.html:64\n msgid \"\"\n \"Draft record has been saved and can be edited. Mark as ready to publish to \"\n \"continue.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:56\n+#: ckanext/canada/templates/package/read.html:72\n msgid \"Seek out departmental approval and mark as approved to continue.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:63\n+#: ckanext/canada/templates/package/read.html:79\n msgid \"Data record is in queue for validation.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:64\n+#: ckanext/canada/templates/package/read.html:80\n msgid \"Record will be published by the following business day upon validation.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:82\n-#: ckanext/canada/templates/package/read.html:83\n+#: ckanext/canada/templates/package/read.html:98\n+#: ckanext/canada/templates/package/read.html:99\n msgid \"View on Portal\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:89\n+#: ckanext/canada/templates/package/read.html:105\n msgid \"This dataset has been deleted and is no longer accessible\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:112\n+#: ckanext/canada/templates/package/read.html:128\n msgid \"Made available by the \"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:114\n+#: ckanext/canada/templates/package/read.html:130\n msgid \"\"\n \"<p>These resources are not under the control of the Government of Canada and \"\n \"the link is provided solely for the convenience of our website visitors. We \"\n@@ -2432,8 +2478,8 @@ msgid \"\"\n \"this non-government website before providing personal information.</p>\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:129\n-#: ckanext/canada/templates/package/read.html:152\n+#: ckanext/canada/templates/package/read.html:145\n+#: ckanext/canada/templates/package/read.html:168\n #: ckanext/canada/templates/package/read_base.html:56\n #: ckanext/canada/templates/package/read_base.html:65\n #: ckanext/canada/templates/package/read_base.html:81\n@@ -2445,43 +2491,43 @@ msgstr \"\"\n msgid \":\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:150\n+#: ckanext/canada/templates/package/read.html:166\n msgid \"Issued by\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:177\n+#: ckanext/canada/templates/package/read.html:193\n msgid \"Related Items\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:191\n+#: ckanext/canada/templates/package/read.html:207\n msgid \"Contact Information\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:193\n+#: ckanext/canada/templates/package/read.html:209\n msgid \"Delivery Point:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:196\n+#: ckanext/canada/templates/package/read.html:212\n msgid \"City:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:199\n+#: ckanext/canada/templates/package/read.html:215\n msgid \"Administrative Area:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:202\n+#: ckanext/canada/templates/package/read.html:218\n msgid \"Postal Code:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:205\n+#: ckanext/canada/templates/package/read.html:221\n msgid \"Country:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:208\n+#: ckanext/canada/templates/package/read.html:224\n msgid \"Electronic Mail Address:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:230\n+#: ckanext/canada/templates/package/read.html:246\n msgid \"Similar records\"\n msgstr \"\"\n \n@@ -2819,12 +2865,12 @@ msgstr \"\"\n msgid \"Guide\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/recombinant/resource_edit.html:43\n+#: ckanext/canada/templates/recombinant/resource_edit.html:44\n #, python-format\n msgid \"\"\n \"For information on how to prepare, maintain and upload templates to the \"\n-\"Registry, refer to the appropriate documentation posted on <a \"\n-\"href=\\\"%(gclink)s\\\">GCPEDIA</a>\"\n+\"Registry, refer to the appropriate documentation posted on the <a \"\n+\"href=\\\"%(guide_link)s\\\">Operations Guide.</a>\"\n msgstr \"\"\n \n #: ckanext/canada/templates/recombinant/update_pd_record.html:3\n@@ -2981,7 +3027,9 @@ msgid \"New activity item\"\n msgstr \"\"\n \n #: ckanext/canada/templates/snippets/activity_stream.html:8\n-msgid \"View the past 30 days of activity.\"\n+msgid \"\"\n+\"View the past 60 days of metadata activity and the past 150 days of DataStore\"\n+\" activity.\"\n msgstr \"\"\n \n #: ckanext/canada/templates/snippets/dataset_facets.html:6"
                },
                {
                    "sha": "b24f9b5118c7353981f13c1f231861e1313498d1",
                    "filename": "ckanext/canada/i18n/en/LC_MESSAGES/ckanext-canada.po",
                    "status": "modified",
                    "additions": 175,
                    "deletions": 113,
                    "changes": 288,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fi18n%2Fen%2FLC_MESSAGES%2Fckanext-canada.po",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fi18n%2Fen%2FLC_MESSAGES%2Fckanext-canada.po",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fi18n%2Fen%2FLC_MESSAGES%2Fckanext-canada.po?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -7,7 +7,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version:  CKAN\\n\"\n \"Report-Msgid-Bugs-To: EMAIL@ADDRESS\\n\"\n-\"POT-Creation-Date: 2024-10-10 13:20+0000\\n\"\n+\"POT-Creation-Date: 2024-11-12 15:06+0000\\n\"\n \"PO-Revision-Date: 2014-01-23 13:04+0000\\n\"\n \"Last-Translator: Sean Hammond <sean.hammond@okfn.org>\\n\"\n \"Language: en\\n\"\n@@ -108,44 +108,44 @@ msgstr \"\"\n msgid \"Invalid business number\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:288 ckanext/canada/helpers.py:289\n+#: ckanext/canada/helpers.py:290 ckanext/canada/helpers.py:291\n msgid \"Treasury Board of Canada Secretariat\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:580 ckanext/canada/strings.py:13\n-#: ckanext/canada/view.py:1196\n+#: ckanext/canada/helpers.py:582 ckanext/canada/strings.py:13\n+#: ckanext/canada/view.py:1198\n msgid \"Members not found\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:706\n+#: ckanext/canada/helpers.py:708\n msgid \"Data awaiting load to DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:707\n+#: ckanext/canada/helpers.py:709\n msgid \"Loading data into DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:708\n+#: ckanext/canada/helpers.py:710\n msgid \"Data loaded into DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:709\n+#: ckanext/canada/helpers.py:711\n msgid \"Failed to load data into DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:710\n+#: ckanext/canada/helpers.py:712\n msgid \"Data available in DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:711\n+#: ckanext/canada/helpers.py:713\n msgid \"Resource not active in DataStore\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:712\n+#: ckanext/canada/helpers.py:714\n msgid \"DataStore status unknown\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:779\n+#: ckanext/canada/helpers.py:781\n #: ckanext/canada/templates/home/quick_links.html:65\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:28\n #: ckanext/canada/templates/snippets/cdts/header.html:31\n@@ -155,7 +155,7 @@ msgstr \"\"\n msgid \"Open Data\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:780\n+#: ckanext/canada/helpers.py:782\n #: ckanext/canada/templates/home/quick_links.html:79\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:30\n #: ckanext/canada/templates/snippets/cdts/header.html:54\n@@ -165,22 +165,22 @@ msgstr \"\"\n msgid \"Open Information\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:789\n+#: ckanext/canada/helpers.py:791\n #: ckanext/canada/templates/snippets/dataset_facets.html:26\n msgid \"Request sent to data owner - awaiting response\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:793\n+#: ckanext/canada/helpers.py:795\n #: ckanext/canada/templates/snippets/publish_facet.html:43\n msgid \"Pending\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:794 ckanext/canada/templates/package/read.html:15\n+#: ckanext/canada/helpers.py:796 ckanext/canada/templates/package/read.html:15\n #: ckanext/canada/templates/snippets/publish_facet.html:43\n msgid \"Draft\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:803\n+#: ckanext/canada/helpers.py:805\n #: ckanext/canada/templates/home/quick_links.html:133\n #: ckanext/canada/templates/snippets/cdts/header.html:57\n #: ckanext/canada/templates/snippets/dataset_facets.html:31\n@@ -189,25 +189,25 @@ msgstr \"\"\n msgid \"Proactive Publication\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:825\n+#: ckanext/canada/helpers.py:827\n #: ckanext/canada/templates/snippets/publish_facet.html:24\n msgid \"Published\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:827\n+#: ckanext/canada/helpers.py:829\n #: ckanext/canada/templates/snippets/publish_facet.html:33\n msgid \"Scheduled\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:862\n+#: ckanext/canada/helpers.py:864\n msgid \"Registry Home\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:867\n+#: ckanext/canada/helpers.py:869\n msgid \"Open Government\"\n msgstr \"\"\n \n-#: ckanext/canada/helpers.py:870\n+#: ckanext/canada/helpers.py:872\n #: ckanext/canada/templates/admin/publish_search.html:18\n #: ckanext/canada/templates/home/quick_links.html:104\n #: ckanext/canada/templates/organization/snippets/organization_search.html:7\n@@ -216,71 +216,76 @@ msgstr \"\"\n msgid \"Search\"\n msgstr \"\"\n \n-#: ckanext/canada/logic.py:296\n+#: ckanext/canada/logic.py:297\n msgid \"Could not determine a resource format. Please supply a format.\"\n msgstr \"\"\n \n-#: ckanext/canada/logic.py:457\n+#: ckanext/canada/logic.py:458\n msgid \"Unknown Job\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:703\n+#: ckanext/canada/logic.py:547\n+#, python-format\n+msgid \"No Portal Sync information found for package %s\"\n+msgstr \"No Portal Sync information found for dataset %s\"\n+\n+#: ckanext/canada/plugins.py:709\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:25\n msgid \"Portal Type\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:704\n+#: ckanext/canada/plugins.py:710\n #: ckanext/canada/templates/package/deleted.html:14\n #: ckanext/canada/templates/user/new_user_form.html:17\n msgid \"Organization\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:705\n+#: ckanext/canada/plugins.py:711\n msgid \"Collection Type\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:706 ckanext/canada/plugins.py:707\n+#: ckanext/canada/plugins.py:712 ckanext/canada/plugins.py:713\n msgid \"Keywords\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:708\n+#: ckanext/canada/plugins.py:714\n msgid \"Subject\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:709\n+#: ckanext/canada/plugins.py:715\n #: ckanext/canada/templates/tabledesigner/view_snippets/cra_business_number.html:1\n msgid \"Format\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:710\n+#: ckanext/canada/plugins.py:716\n msgid \"Resource Type\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:711\n+#: ckanext/canada/plugins.py:717\n msgid \"Maintenance and Update Frequency\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:712\n+#: ckanext/canada/plugins.py:718\n msgid \"Record Status\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:713\n+#: ckanext/canada/plugins.py:719\n msgid \"IMSO Approval\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:714\n+#: ckanext/canada/plugins.py:720\n msgid \"Jurisdiction\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:715\n+#: ckanext/canada/plugins.py:721\n msgid \"Suggestion Status\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:902\n+#: ckanext/canada/plugins.py:910\n msgid \"Previous\"\n msgstr \"\"\n \n-#: ckanext/canada/plugins.py:902\n+#: ckanext/canada/plugins.py:910\n msgid \"Next\"\n msgstr \"\"\n \n@@ -293,7 +298,9 @@ msgstr \"\"\n msgid \"Not authorized to access {group} members download\"\n msgstr \"\"\n \n-#: ckanext/canada/strings.py:14 ckanext/canada/view.py:1206\n+#: ckanext/canada/strings.py:14\n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:14\n+#: ckanext/canada/view.py:1208\n msgid \"N/A\"\n msgstr \"\"\n \n@@ -303,7 +310,7 @@ msgstr \"\"\n #: ckanext/canada/templates/user/list.html:44\n #: ckanext/canada/templates/user/new_user_form.html:7\n #: ckanext/canada/templates/user/snippets/login_form.html:11\n-#: ckanext/canada/view.py:1198\n+#: ckanext/canada/view.py:1200\n msgid \"Username\"\n msgstr \"\"\n \n@@ -312,22 +319,22 @@ msgstr \"\"\n #: ckanext/canada/templates/user/new_user_form.html:13\n #: ckanext/canada/templates/user/read_base.html:60\n #: ckanext/canada/templates/user/recover_username.html:15\n-#: ckanext/canada/view.py:1198\n+#: ckanext/canada/view.py:1200\n msgid \"Email\"\n msgstr \"\"\n \n #: ckanext/canada/strings.py:17 ckanext/canada/templates/user/api_tokens.html:5\n-#: ckanext/canada/templates/user/list.html:45 ckanext/canada/view.py:1198\n+#: ckanext/canada/templates/user/list.html:45 ckanext/canada/view.py:1200\n msgid \"Name\"\n msgstr \"\"\n \n #: ckanext/canada/strings.py:18\n #: ckanext/canada/templates/organization/member_new.html:57\n-#: ckanext/canada/templates/user/list.html:46 ckanext/canada/view.py:1198\n+#: ckanext/canada/templates/user/list.html:46 ckanext/canada/view.py:1200\n msgid \"Role\"\n msgstr \"\"\n \n-#: ckanext/canada/strings.py:19 ckanext/canada/view.py:1216\n+#: ckanext/canada/strings.py:19 ckanext/canada/view.py:1218\n msgid \"members\"\n msgstr \"\"\n \n@@ -671,135 +678,146 @@ msgid \"\"\n \"field is read-only.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:101\n+#: ckanext/canada/templates/package/new_resource.html:17\n+#: ckanext/canada/templates/package/new_resource_not_draft.html:11\n+#: ckanext/canada/templates/package/read.html:44\n+#: ckanext/canada/validators.py:564\n+msgid \"\"\n+\"You can only add up to {max_resource_count} resources to a dataset. You \"\n+\"can segment your resources across multiple datasets or merge your data to\"\n+\" limit the number of resources. Please contact open-ouvert@tbs-sct.gc.ca \"\n+\"if you need further assistance.\"\n+msgstr \"\"\n+\n+#: ckanext/canada/view.py:103\n msgid \"<strong>Note</strong><br>{0} is now logged in\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:111\n+#: ckanext/canada/view.py:113\n msgid \"Login failed. Bad username or password.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:159\n+#: ckanext/canada/view.py:161\n msgid \"\"\n \"The status has been added/updated for this suggested dataset. This update\"\n \" will be reflected on open.canada.ca shortly.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:162\n+#: ckanext/canada/view.py:164\n #, python-format\n msgid \"Your dataset %s has been saved.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:172\n+#: ckanext/canada/view.py:174\n msgid \"Dataset added.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:181\n+#: ckanext/canada/view.py:183\n msgid \"Resource updated.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:190\n+#: ckanext/canada/view.py:192\n msgid \"Resource added.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:245\n+#: ckanext/canada/view.py:247\n msgid \"Unauthorized to request username recovery.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:250\n+#: ckanext/canada/view.py:252\n msgid \"Email is required\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:275\n+#: ckanext/canada/view.py:277\n msgid \"\"\n \"Error sending the email. Try again later or contact an administrator for \"\n \"help\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:282\n+#: ckanext/canada/view.py:284\n msgid \"\"\n \"An email has been sent to you containing your username(s). (unless the \"\n \"account specified does not exist)\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:360\n+#: ckanext/canada/view.py:362\n msgid \"Unauthorized to create a resource for this package\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:397 ckanext/canada/view.py:408\n+#: ckanext/canada/view.py:399 ckanext/canada/view.py:410\n msgid \"This record already exists\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:405 ckanext/canada/view.py:413\n+#: ckanext/canada/view.py:407 ckanext/canada/view.py:415\n msgid \"Something went wrong, your record was not created. Please contact support.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:428\n+#: ckanext/canada/view.py:430\n msgid \"Record Created\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:466\n+#: ckanext/canada/view.py:468\n msgid \"Unauthorized to update dataset\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:476 ckanext/canada/view.py:617\n-#: ckanext/canada/view.py:652\n+#: ckanext/canada/view.py:478 ckanext/canada/view.py:619\n+#: ckanext/canada/view.py:654\n msgid \"Not found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:478\n+#: ckanext/canada/view.py:480\n msgid \"Multiple records found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:515\n+#: ckanext/canada/view.py:517\n msgid \"Something went wrong, your record was not updated. Please contact support.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:531\n+#: ckanext/canada/view.py:533\n #, python-format\n msgid \"Record %s Updated\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:570\n+#: ckanext/canada/view.py:572\n msgid \"No organizations found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:574\n+#: ckanext/canada/view.py:576\n msgid \"Recombinant resource_name not found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:608\n+#: ckanext/canada/view.py:610\n msgid \"User {0} not authorized to update resource {1}\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:663\n+#: ckanext/canada/view.py:665\n msgid \"{num} deleted.\"\n msgstr \"\"\n \n #. SQL Trigger String for PD Type: service\n-#: ckanext/canada/tables/service.yaml:2348 ckanext/canada/view.py:705\n+#: ckanext/canada/tables/service.yaml:2348 ckanext/canada/view.py:707\n msgid \"Number required\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:710\n+#: ckanext/canada/view.py:712\n msgid \"Integer required\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:746 ckanext/canada/view.py:754\n-#: ckanext/canada/view.py:788\n+#: ckanext/canada/view.py:748 ckanext/canada/view.py:756\n+#: ckanext/canada/view.py:790\n msgid \"Not authorized to see this page\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:774\n+#: ckanext/canada/view.py:776\n msgid \" record(s) published.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:812\n+#: ckanext/canada/view.py:814\n #, python-format\n msgid \"Unauthorized to delete resource %s\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:814\n+#: ckanext/canada/view.py:816\n #, python-format\n msgid \"DataStore table and Data Dictionary deleted for resource %s\"\n msgstr \"\"\n@@ -812,48 +830,48 @@ msgstr \"\"\n #: ckanext/canada/templates/package/resource_edit.html:3\n #: ckanext/canada/templates/package/resource_edit_base.html:7\n #: ckanext/canada/templates/package/wet_datatable.html:15\n-#: ckanext/canada/view.py:908\n+#: ckanext/canada/view.py:910\n msgid \"Edit\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1041\n+#: ckanext/canada/view.py:1043\n msgid \"Access denied\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1092\n+#: ckanext/canada/view.py:1094\n msgid \"Account Created\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1094\n+#: ckanext/canada/view.py:1096\n msgid \"\"\n \"Thank you for creating your account for the Open Government registry. \"\n \"Although your account is active, it has not yet been linked to your \"\n \"department. Until the account is linked to your department you will not \"\n \"be able to create or modify datasets in the registry.\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1101\n+#: ckanext/canada/view.py:1103\n msgid \"\"\n \"You should receive an email within the next business day once the account\"\n \" activation process has been completed. If you require faster processing \"\n \"of the account, please send the request directly to: <a href=\\\"mailto\"\n \":open-ouvert@tbs-sct.gc.ca\\\">open-ouvert@tbs-sct.gc.ca</a>\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1175 ckanext/canada/view.py:1253\n+#: ckanext/canada/view.py:1177 ckanext/canada/view.py:1255\n msgid \"Organization not found\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1186\n+#: ckanext/canada/view.py:1188\n msgid \"Not authorized to access {org_name} members download\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1256\n+#: ckanext/canada/view.py:1258\n #, python-format\n msgid \"User %r not authorized to edit members of %s\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:1258\n+#: ckanext/canada/view.py:1260\n #, python-format\n msgid \"User %r not authorized to view members of %s\"\n msgstr \"\"\n@@ -1913,6 +1931,11 @@ msgstr \"\"\n msgid \"Job Queue\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/admin/base.html:18\n+#: ckanext/canada/templates/admin/portal_sync.html:4\n+msgid \"Out of Sync Packages\"\n+msgstr \"Out of Sync Datasets\"\n+\n #: ckanext/canada/templates/admin/index.html:7\n msgid \"Administer CKAN\"\n msgstr \"\"\n@@ -1948,6 +1971,18 @@ msgstr \"\"\n msgid \"View the current job queue and running jobs.\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/admin/portal_sync.html:30\n+msgid \"View Out of Sync Packages\"\n+msgstr \"View Out of Sync Datasets\"\n+\n+#: ckanext/canada/templates/admin/portal_sync.html:34\n+msgid \"\"\n+\"View packages that are out of sync on the Portal and why they have not \"\n+\"been synced.\"\n+msgstr \"\"\n+\"View datasets that are out of sync on the Portal and why they have not \"\n+\"been synced.\"\n+\n #: ckanext/canada/templates/admin/publish_search.html:11\n #: ckanext/canada/templates/package/search.html:13\n #: ckanext/canada/templates/snippets/search_form.html:13\n@@ -2001,6 +2036,14 @@ msgstr \" <p>Purge deleted records forever and irreversibly.</p> \"\n msgid \"Publish?\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:10\n+msgid \"Last Successful Sync:\"\n+msgstr \"\"\n+\n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:23\n+msgid \"Failure Reason:\"\n+msgstr \"\"\n+\n #: ckanext/canada/templates/admin/snippets/publish_package_list.html:8\n msgid \"Select All for Publishing\"\n msgstr \"\"\n@@ -2417,8 +2460,14 @@ msgstr \"\"\n msgid \"Disabled\"\n msgstr \"\"\n \n+#: ckanext/canada/templates/package/new_resource.html:16\n+#: ckanext/canada/templates/package/new_resource_not_draft.html:10\n+#: ckanext/canada/templates/package/read.html:43\n+msgid \"Resource Limit Reached\"\n+msgstr \"\"\n+\n #: ckanext/canada/templates/package/read.html:18\n-#: ckanext/canada/templates/package/read.html:101\n+#: ckanext/canada/templates/package/read.html:117\n #: ckanext/canada/templates/package/snippets/resource_item.html:12\n #: ckanext/canada/templates/scheming/display_snippets/fluent_tags.html:8\n #: ckanext/canada/templates/snippets/package_item.html:37\n@@ -2438,43 +2487,43 @@ msgid \"\"\n \"current version, click <a href=\\\"%(url)s\\\">here</a>.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:47\n-#: ckanext/canada/templates/package/read.html:55\n+#: ckanext/canada/templates/package/read.html:63\n+#: ckanext/canada/templates/package/read.html:71\n msgid \"Action required:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:48\n+#: ckanext/canada/templates/package/read.html:64\n msgid \"\"\n \"Draft record has been saved and can be edited. Mark as ready to publish \"\n \"to continue.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:56\n+#: ckanext/canada/templates/package/read.html:72\n msgid \"Seek out departmental approval and mark as approved to continue.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:63\n+#: ckanext/canada/templates/package/read.html:79\n msgid \"Data record is in queue for validation.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:64\n+#: ckanext/canada/templates/package/read.html:80\n msgid \"Record will be published by the following business day upon validation.\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:82\n-#: ckanext/canada/templates/package/read.html:83\n+#: ckanext/canada/templates/package/read.html:98\n+#: ckanext/canada/templates/package/read.html:99\n msgid \"View on Portal\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:89\n+#: ckanext/canada/templates/package/read.html:105\n msgid \"This dataset has been deleted and is no longer accessible\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:112\n+#: ckanext/canada/templates/package/read.html:128\n msgid \"Made available by the \"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:114\n+#: ckanext/canada/templates/package/read.html:130\n msgid \"\"\n \"<p>These resources are not under the control of the Government of Canada \"\n \"and the link is provided solely for the convenience of our website \"\n@@ -2493,8 +2542,8 @@ msgid \"\"\n \"information.</p>\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:129\n-#: ckanext/canada/templates/package/read.html:152\n+#: ckanext/canada/templates/package/read.html:145\n+#: ckanext/canada/templates/package/read.html:168\n #: ckanext/canada/templates/package/read_base.html:56\n #: ckanext/canada/templates/package/read_base.html:65\n #: ckanext/canada/templates/package/read_base.html:81\n@@ -2506,43 +2555,43 @@ msgstr \"\"\n msgid \":\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:150\n+#: ckanext/canada/templates/package/read.html:166\n msgid \"Issued by\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:177\n+#: ckanext/canada/templates/package/read.html:193\n msgid \"Related Items\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:191\n+#: ckanext/canada/templates/package/read.html:207\n msgid \"Contact Information\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:193\n+#: ckanext/canada/templates/package/read.html:209\n msgid \"Delivery Point:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:196\n+#: ckanext/canada/templates/package/read.html:212\n msgid \"City:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:199\n+#: ckanext/canada/templates/package/read.html:215\n msgid \"Administrative Area:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:202\n+#: ckanext/canada/templates/package/read.html:218\n msgid \"Postal Code:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:205\n+#: ckanext/canada/templates/package/read.html:221\n msgid \"Country:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:208\n+#: ckanext/canada/templates/package/read.html:224\n msgid \"Electronic Mail Address:\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/package/read.html:230\n+#: ckanext/canada/templates/package/read.html:246\n msgid \"Similar records\"\n msgstr \"\"\n \n@@ -2885,12 +2934,12 @@ msgstr \"\"\n msgid \"Guide\"\n msgstr \"\"\n \n-#: ckanext/canada/templates/recombinant/resource_edit.html:43\n+#: ckanext/canada/templates/recombinant/resource_edit.html:44\n #, python-format\n msgid \"\"\n \"For information on how to prepare, maintain and upload templates to the \"\n-\"Registry, refer to the appropriate documentation posted on <a \"\n-\"href=\\\"%(gclink)s\\\">GCPEDIA</a>\"\n+\"Registry, refer to the appropriate documentation posted on the <a \"\n+\"href=\\\"%(guide_link)s\\\">Operations Guide.</a>\"\n msgstr \"\"\n \n #: ckanext/canada/templates/recombinant/update_pd_record.html:3\n@@ -3052,7 +3101,9 @@ msgid \"New activity item\"\n msgstr \"\"\n \n #: ckanext/canada/templates/snippets/activity_stream.html:8\n-msgid \"View the past 30 days of activity.\"\n+msgid \"\"\n+\"View the past 60 days of metadata activity and the past 150 days of \"\n+\"DataStore activity.\"\n msgstr \"\"\n \n #: ckanext/canada/templates/snippets/dataset_facets.html:6\n@@ -8577,3 +8628,14 @@ msgstr \"\"\n #~ \"3. All passwords must be at least 12 characters long.\\n\"\n #~ msgstr \"\"\n \n+#~ msgid \"View the past 30 days of activity.\"\n+#~ msgstr \"\"\n+\n+#~ msgid \"\"\n+#~ \"For information on how to prepare, \"\n+#~ \"maintain and upload templates to the \"\n+#~ \"Registry, refer to the appropriate \"\n+#~ \"documentation posted on <a \"\n+#~ \"href=\\\"%(gclink)s\\\">GCPEDIA</a>\"\n+#~ msgstr \"\"\n+"
                },
                {
                    "sha": "ba0a4c3b1002f162009549e219dc048c21b02fc8",
                    "filename": "ckanext/canada/i18n/fr/LC_MESSAGES/ckanext-canada.po",
                    "status": "modified",
                    "additions": 178,
                    "deletions": 121,
                    "changes": 299,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fi18n%2Ffr%2FLC_MESSAGES%2Fckanext-canada.po",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fi18n%2Ffr%2FLC_MESSAGES%2Fckanext-canada.po",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fi18n%2Ffr%2FLC_MESSAGES%2Fckanext-canada.po?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PROJECT VERSION\\n\"\n \"Report-Msgid-Bugs-To: EMAIL@ADDRESS\\n\"\n-\"POT-Creation-Date: 2024-10-10 13:20+0000\\n\"\n+\"POT-Creation-Date: 2024-11-12 15:06+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language: fr\\n\"\n@@ -117,45 +117,45 @@ msgstr \"\"\n msgid \"Invalid business number\"\n msgstr \"Numéro d’entreprise non valide\"\n \n-#: ckanext/canada/helpers.py:288 ckanext/canada/helpers.py:289\n+#: ckanext/canada/helpers.py:290 ckanext/canada/helpers.py:291\n msgid \"Treasury Board of Canada Secretariat\"\n msgstr \"Secrétariat du Conseil du Trésor du Canada\"\n \n-#: ckanext/canada/helpers.py:580 ckanext/canada/strings.py:13\n-#: ckanext/canada/view.py:1196\n+#: ckanext/canada/helpers.py:582 ckanext/canada/strings.py:13\n+#: ckanext/canada/view.py:1198\n msgid \"Members not found\"\n msgstr \"Membres non trouvés\"\n \n-#: ckanext/canada/helpers.py:706\n+#: ckanext/canada/helpers.py:708\n msgid \"Data awaiting load to DataStore\"\n msgstr \"Le versement des données dans DataStore est en attente\"\n \n-#: ckanext/canada/helpers.py:707\n+#: ckanext/canada/helpers.py:709\n msgid \"Loading data into DataStore\"\n msgstr \"Le versement des données dans DataStore est en cours\"\n \n-#: ckanext/canada/helpers.py:708\n+#: ckanext/canada/helpers.py:710\n msgid \"Data loaded into DataStore\"\n msgstr \"Les données ont été versées dans DataStore\"\n \n-#: ckanext/canada/helpers.py:709\n+#: ckanext/canada/helpers.py:711\n msgid \"Failed to load data into DataStore\"\n msgstr \"Les données n'ont pas été versées dans DataStore\"\n \n-#: ckanext/canada/helpers.py:710\n+#: ckanext/canada/helpers.py:712\n msgid \"Data available in DataStore\"\n msgstr \"Les données sont disponibles dans DataStore\"\n \n-#: ckanext/canada/helpers.py:711\n+#: ckanext/canada/helpers.py:713\n msgid \"Resource not active in DataStore\"\n msgstr \"La ressource est inactive dans DataStore\"\n \n-#: ckanext/canada/helpers.py:712\n+#: ckanext/canada/helpers.py:714\n msgid \"DataStore status unknown\"\n msgstr \"L'état de DataStore est inconnu\"\n \n # Search facets\n-#: ckanext/canada/helpers.py:779\n+#: ckanext/canada/helpers.py:781\n #: ckanext/canada/templates/home/quick_links.html:65\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:28\n #: ckanext/canada/templates/snippets/cdts/header.html:31\n@@ -165,7 +165,7 @@ msgstr \"L'état de DataStore est inconnu\"\n msgid \"Open Data\"\n msgstr \"Données ouvertes\"\n \n-#: ckanext/canada/helpers.py:780\n+#: ckanext/canada/helpers.py:782\n #: ckanext/canada/templates/home/quick_links.html:79\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:30\n #: ckanext/canada/templates/snippets/cdts/header.html:54\n@@ -175,22 +175,22 @@ msgstr \"Données ouvertes\"\n msgid \"Open Information\"\n msgstr \"Information ouverte\"\n \n-#: ckanext/canada/helpers.py:789\n+#: ckanext/canada/helpers.py:791\n #: ckanext/canada/templates/snippets/dataset_facets.html:26\n msgid \"Request sent to data owner - awaiting response\"\n msgstr \"Demande envoyée au propriétaire des données, en attente de réponse\"\n \n-#: ckanext/canada/helpers.py:793\n+#: ckanext/canada/helpers.py:795\n #: ckanext/canada/templates/snippets/publish_facet.html:43\n msgid \"Pending\"\n msgstr \"En attente\"\n \n-#: ckanext/canada/helpers.py:794 ckanext/canada/templates/package/read.html:15\n+#: ckanext/canada/helpers.py:796 ckanext/canada/templates/package/read.html:15\n #: ckanext/canada/templates/snippets/publish_facet.html:43\n msgid \"Draft\"\n msgstr \"Ébauche\"\n \n-#: ckanext/canada/helpers.py:803\n+#: ckanext/canada/helpers.py:805\n #: ckanext/canada/templates/home/quick_links.html:133\n #: ckanext/canada/templates/snippets/cdts/header.html:57\n #: ckanext/canada/templates/snippets/dataset_facets.html:31\n@@ -199,25 +199,25 @@ msgstr \"Ébauche\"\n msgid \"Proactive Publication\"\n msgstr \"Publication proactive\"\n \n-#: ckanext/canada/helpers.py:825\n+#: ckanext/canada/helpers.py:827\n #: ckanext/canada/templates/snippets/publish_facet.html:24\n msgid \"Published\"\n msgstr \"Publié\"\n \n-#: ckanext/canada/helpers.py:827\n+#: ckanext/canada/helpers.py:829\n #: ckanext/canada/templates/snippets/publish_facet.html:33\n msgid \"Scheduled\"\n msgstr \"Prévu\"\n \n-#: ckanext/canada/helpers.py:862\n+#: ckanext/canada/helpers.py:864\n msgid \"Registry Home\"\n msgstr \"Accueil du registre\"\n \n-#: ckanext/canada/helpers.py:867\n+#: ckanext/canada/helpers.py:869\n msgid \"Open Government\"\n msgstr \"Gouvernement ouvert\"\n \n-#: ckanext/canada/helpers.py:870\n+#: ckanext/canada/helpers.py:872\n #: ckanext/canada/templates/admin/publish_search.html:18\n #: ckanext/canada/templates/home/quick_links.html:104\n #: ckanext/canada/templates/organization/snippets/organization_search.html:7\n@@ -226,73 +226,79 @@ msgstr \"Gouvernement ouvert\"\n msgid \"Search\"\n msgstr \"Rechercher\"\n \n-#: ckanext/canada/logic.py:296\n+#: ckanext/canada/logic.py:297\n msgid \"Could not determine a resource format. Please supply a format.\"\n msgstr \"\"\n \"Il est impossible de déterminer le format de la ressource. Veuillez \"\n \"indiquer un format.\"\n \n-#: ckanext/canada/logic.py:457\n+#: ckanext/canada/logic.py:458\n msgid \"Unknown Job\"\n msgstr \"Tâche inconnue \"\n \n-#: ckanext/canada/plugins.py:703\n+#: ckanext/canada/logic.py:547\n+#, python-format\n+msgid \"No Portal Sync information found for package %s\"\n+msgstr \"Aucune information de synchronisation du portail n'a été \"\n+\"trouvée pour le jeu de données %s\"\n+\n+#: ckanext/canada/plugins.py:709\n #: ckanext/canada/templates/scheming/package/snippets/package_form.html:25\n msgid \"Portal Type\"\n msgstr \"Type de portail\"\n \n-#: ckanext/canada/plugins.py:704\n+#: ckanext/canada/plugins.py:710\n #: ckanext/canada/templates/package/deleted.html:14\n #: ckanext/canada/templates/user/new_user_form.html:17\n msgid \"Organization\"\n msgstr \"Organisation\"\n \n-#: ckanext/canada/plugins.py:705\n+#: ckanext/canada/plugins.py:711\n msgid \"Collection Type\"\n msgstr \"Type de collection\"\n \n-#: ckanext/canada/plugins.py:706 ckanext/canada/plugins.py:707\n+#: ckanext/canada/plugins.py:712 ckanext/canada/plugins.py:713\n msgid \"Keywords\"\n msgstr \"Mots clés\"\n \n-#: ckanext/canada/plugins.py:708\n+#: ckanext/canada/plugins.py:714\n msgid \"Subject\"\n msgstr \"Sujet\"\n \n-#: ckanext/canada/plugins.py:709\n+#: ckanext/canada/plugins.py:715\n #: ckanext/canada/templates/tabledesigner/view_snippets/cra_business_number.html:1\n msgid \"Format\"\n msgstr \"Format\"\n \n-#: ckanext/canada/plugins.py:710\n+#: ckanext/canada/plugins.py:716\n msgid \"Resource Type\"\n msgstr \"Type de ressource\"\n \n-#: ckanext/canada/plugins.py:711\n+#: ckanext/canada/plugins.py:717\n msgid \"Maintenance and Update Frequency\"\n msgstr \"Fréquence d’entretien et de mise à jour\"\n \n-#: ckanext/canada/plugins.py:712\n+#: ckanext/canada/plugins.py:718\n msgid \"Record Status\"\n msgstr \"État du dossier\"\n \n-#: ckanext/canada/plugins.py:713\n+#: ckanext/canada/plugins.py:719\n msgid \"IMSO Approval\"\n msgstr \"Approbation du CSGI\"\n \n-#: ckanext/canada/plugins.py:714\n+#: ckanext/canada/plugins.py:720\n msgid \"Jurisdiction\"\n msgstr \"Juridiction\"\n \n-#: ckanext/canada/plugins.py:715\n+#: ckanext/canada/plugins.py:721\n msgid \"Suggestion Status\"\n msgstr \"État de la suggestion\"\n \n-#: ckanext/canada/plugins.py:902\n+#: ckanext/canada/plugins.py:910\n msgid \"Previous\"\n msgstr \"Précédent\"\n \n-#: ckanext/canada/plugins.py:902\n+#: ckanext/canada/plugins.py:910\n msgid \"Next\"\n msgstr \"Suivant\"\n \n@@ -305,7 +311,9 @@ msgstr \"Créer un jeu de données\"\n msgid \"Not authorized to access {group} members download\"\n msgstr \"Non autorisé à accéder au téléchargement des membres du {group}\"\n \n-#: ckanext/canada/strings.py:14 ckanext/canada/view.py:1206\n+#: ckanext/canada/strings.py:14\n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:14\n+#: ckanext/canada/view.py:1208\n msgid \"N/A\"\n msgstr \"N/A\"\n \n@@ -315,7 +323,7 @@ msgstr \"N/A\"\n #: ckanext/canada/templates/user/list.html:44\n #: ckanext/canada/templates/user/new_user_form.html:7\n #: ckanext/canada/templates/user/snippets/login_form.html:11\n-#: ckanext/canada/view.py:1198\n+#: ckanext/canada/view.py:1200\n msgid \"Username\"\n msgstr \"Nom d’utilisateur\"\n \n@@ -324,22 +332,22 @@ msgstr \"Nom d’utilisateur\"\n #: ckanext/canada/templates/user/new_user_form.html:13\n #: ckanext/canada/templates/user/read_base.html:60\n #: ckanext/canada/templates/user/recover_username.html:15\n-#: ckanext/canada/view.py:1198\n+#: ckanext/canada/view.py:1200\n msgid \"Email\"\n msgstr \"Courriel\"\n \n #: ckanext/canada/strings.py:17 ckanext/canada/templates/user/api_tokens.html:5\n-#: ckanext/canada/templates/user/list.html:45 ckanext/canada/view.py:1198\n+#: ckanext/canada/templates/user/list.html:45 ckanext/canada/view.py:1200\n msgid \"Name\"\n msgstr \"Nom\"\n \n #: ckanext/canada/strings.py:18\n #: ckanext/canada/templates/organization/member_new.html:57\n-#: ckanext/canada/templates/user/list.html:46 ckanext/canada/view.py:1198\n+#: ckanext/canada/templates/user/list.html:46 ckanext/canada/view.py:1200\n msgid \"Role\"\n msgstr \"Rôle\"\n \n-#: ckanext/canada/strings.py:19 ckanext/canada/view.py:1216\n+#: ckanext/canada/strings.py:19 ckanext/canada/view.py:1218\n msgid \"members\"\n msgstr \"membres\"\n \n@@ -548,9 +556,9 @@ msgid \"\"\n \"data-target=\\\"popover\\\" data-content=\\\"{}\\\" data-html=\\\"true\\\">Markdown \"\n \"formatting</a> here\"\n msgstr \"\"\n-\"Vous pouvez utiliser <a href=\\\"#markdown\\\" title=\\\"Référence rapide Markdown\\\" \"\n-\"data-target=\\\"popover\\\" data-content=\\\"{}\\\" data-html=\\\"true\\\">le formatage du \"\n-\"texte dans Markdown</a> ici\"\n+\"Vous pouvez utiliser <a href=\\\"#markdown\\\" title=\\\"Référence rapide \"\n+\"Markdown\\\" data-target=\\\"popover\\\" data-content=\\\"{}\\\" data-\"\n+\"html=\\\"true\\\">le formatage du texte dans Markdown</a> ici\"\n \n #: ckanext/canada/strings.py:67\n msgid \"\"\n@@ -562,8 +570,8 @@ msgid \"\"\n \" reasons</p>\"\n msgstr \"\"\n \"<pre><p>__texte en gras__</p><p>_texte en italique_</p><p>* liste<br>* \"\n-\"d'éléments</p><p>1. liste<br>2. d'éléments<br>3. numérotés\"\n-\"</p><p>https://lien.automatique/</p><p>[Lien \"\n+\"d'éléments</p><p>1. liste<br>2. d'éléments<br>3. \"\n+\"numérotés</p><p>https://lien.automatique/</p><p>[Lien \"\n \"formaté](https://lien.formaté)</p><p>> bloc de citation</p></pre><p class\"\n \"='text-muted'><b>Remarque :</b> les balises HTML sont supprimées pour des\"\n \" raisons de sécurité</p>\"\n@@ -709,145 +717,156 @@ msgstr \"\"\n \"Impossible de modifier la valeur du champ d’accès au registre de '%s' à \"\n \"'%s'. Ce champ ne sert qu’à des fins de lecture.\"\n \n-#: ckanext/canada/view.py:101\n+#: ckanext/canada/templates/package/new_resource.html:17\n+#: ckanext/canada/templates/package/new_resource_not_draft.html:11\n+#: ckanext/canada/templates/package/read.html:44\n+#: ckanext/canada/validators.py:564\n+msgid \"\"\n+\"You can only add up to {max_resource_count} resources to a dataset. You \"\n+\"can segment your resources across multiple datasets or merge your data to\"\n+\" limit the number of resources. Please contact open-ouvert@tbs-sct.gc.ca \"\n+\"if you need further assistance.\"\n+msgstr \"\"\n+\n+#: ckanext/canada/view.py:103\n msgid \"<strong>Note</strong><br>{0} is now logged in\"\n msgstr \"<strong>Note</strong><br />{0} est maintenant connecté\"\n \n-#: ckanext/canada/view.py:111\n+#: ckanext/canada/view.py:113\n msgid \"Login failed. Bad username or password.\"\n msgstr \"L’authentification a échoué. Mauvais nom d’utilisateur ou mot de passe.\"\n \n-#: ckanext/canada/view.py:159\n+#: ckanext/canada/view.py:161\n msgid \"\"\n \"The status has been added/updated for this suggested dataset. This update\"\n \" will be reflected on open.canada.ca shortly.\"\n msgstr \"\"\n \"L’état a été ajouté/mis à jour pour cet ensemble de données suggéré. \"\n \"Cette mise à jour sera bientôt effectuée dans ouvert.canada.ca.\"\n \n-#: ckanext/canada/view.py:162\n+#: ckanext/canada/view.py:164\n #, python-format\n msgid \"Your dataset %s has been saved.\"\n msgstr \"Votre jeu de données %s a été sauvegardé.\"\n \n-#: ckanext/canada/view.py:172\n+#: ckanext/canada/view.py:174\n msgid \"Dataset added.\"\n msgstr \"Jeu de données ajouté.\"\n \n-#: ckanext/canada/view.py:181\n+#: ckanext/canada/view.py:183\n msgid \"Resource updated.\"\n msgstr \"Ressource mise à jour.\"\n \n-#: ckanext/canada/view.py:190\n+#: ckanext/canada/view.py:192\n msgid \"Resource added.\"\n msgstr \"Une ressource a été ajoutée.\"\n \n-#: ckanext/canada/view.py:245\n+#: ckanext/canada/view.py:247\n msgid \"Unauthorized to request username recovery.\"\n msgstr \"Non autorisé à demander la récupération du nom d'utilisateur.\"\n \n-#: ckanext/canada/view.py:250\n+#: ckanext/canada/view.py:252\n msgid \"Email is required\"\n msgstr \"L'adresse électronique est requise\"\n \n-#: ckanext/canada/view.py:275\n+#: ckanext/canada/view.py:277\n msgid \"\"\n \"Error sending the email. Try again later or contact an administrator for \"\n \"help\"\n msgstr \"\"\n \"Une erreur est survenue lors de l'envoi de l'email. Veuillez réessayer \"\n \"plus tard ou contacter un administrateur.\"\n \n-#: ckanext/canada/view.py:282\n+#: ckanext/canada/view.py:284\n msgid \"\"\n \"An email has been sent to you containing your username(s). (unless the \"\n \"account specified does not exist)\"\n msgstr \"\"\n \"Un courriel vous a été envoyé contenant votre (vos) nom(s) d'utilisateur.\"\n \" (sauf si le compte spécifié n'existe pas)\"\n \n-#: ckanext/canada/view.py:360\n+#: ckanext/canada/view.py:362\n msgid \"Unauthorized to create a resource for this package\"\n msgstr \"Non autorisé à créer une ressource pour cet ensemble\"\n \n-#: ckanext/canada/view.py:397 ckanext/canada/view.py:408\n+#: ckanext/canada/view.py:399 ckanext/canada/view.py:410\n msgid \"This record already exists\"\n msgstr \"Cet enregistrement existe déjà.\"\n \n-#: ckanext/canada/view.py:405 ckanext/canada/view.py:413\n+#: ckanext/canada/view.py:407 ckanext/canada/view.py:415\n msgid \"Something went wrong, your record was not created. Please contact support.\"\n msgstr \"\"\n \"Un problème s’est produit, votre document n’a pas été créé. Veuillez \"\n \"contacter l’assistance technique.\"\n \n-#: ckanext/canada/view.py:428\n+#: ckanext/canada/view.py:430\n msgid \"Record Created\"\n msgstr \"Renregistrement créé\"\n \n-#: ckanext/canada/view.py:466\n+#: ckanext/canada/view.py:468\n msgid \"Unauthorized to update dataset\"\n msgstr \"Vous n'êtes pas autorisé à mettre à jour ce jeu de données\"\n \n-#: ckanext/canada/view.py:476 ckanext/canada/view.py:617\n-#: ckanext/canada/view.py:652\n+#: ckanext/canada/view.py:478 ckanext/canada/view.py:619\n+#: ckanext/canada/view.py:654\n msgid \"Not found\"\n msgstr \"Non trouvé\"\n \n-#: ckanext/canada/view.py:478\n+#: ckanext/canada/view.py:480\n msgid \"Multiple records found\"\n msgstr \"Plusieurs enregistrements ont été trouvés\"\n \n-#: ckanext/canada/view.py:515\n+#: ckanext/canada/view.py:517\n msgid \"Something went wrong, your record was not updated. Please contact support.\"\n msgstr \"\"\n \"Un problème s’est produit, votre document n’a pas été mis à jour. \"\n \"Veuillez contacter l’assistance technique.\"\n \n-#: ckanext/canada/view.py:531\n+#: ckanext/canada/view.py:533\n #, python-format\n msgid \"Record %s Updated\"\n msgstr \"Dossier %s mis à jour\"\n \n-#: ckanext/canada/view.py:570\n+#: ckanext/canada/view.py:572\n msgid \"No organizations found\"\n msgstr \"Aucune organisation n’a été trouvée\"\n \n-#: ckanext/canada/view.py:574\n+#: ckanext/canada/view.py:576\n msgid \"Recombinant resource_name not found\"\n msgstr \"Le recombinant resource_name n’a pas été trouvé\"\n \n-#: ckanext/canada/view.py:608\n+#: ckanext/canada/view.py:610\n msgid \"User {0} not authorized to update resource {1}\"\n msgstr \"\"\n \n-#: ckanext/canada/view.py:663\n+#: ckanext/canada/view.py:665\n msgid \"{num} deleted.\"\n msgstr \"{num} supprimé.\"\n \n #. SQL Trigger String for PD Type: service\n-#: ckanext/canada/tables/service.yaml:2348 ckanext/canada/view.py:705\n+#: ckanext/canada/tables/service.yaml:2348 ckanext/canada/view.py:707\n msgid \"Number required\"\n msgstr \"Nombre requis\"\n \n-#: ckanext/canada/view.py:710\n+#: ckanext/canada/view.py:712\n msgid \"Integer required\"\n msgstr \"Entier requis\"\n \n-#: ckanext/canada/view.py:746 ckanext/canada/view.py:754\n-#: ckanext/canada/view.py:788\n+#: ckanext/canada/view.py:748 ckanext/canada/view.py:756\n+#: ckanext/canada/view.py:790\n msgid \"Not authorized to see this page\"\n msgstr \"Non autorisé à voir cette page\"\n \n-#: ckanext/canada/view.py:774\n+#: ckanext/canada/view.py:776\n msgid \" record(s) published.\"\n msgstr \" d’enregistrements publiés.\"\n \n-#: ckanext/canada/view.py:812\n+#: ckanext/canada/view.py:814\n #, python-format\n msgid \"Unauthorized to delete resource %s\"\n msgstr \"Vous n'êtes pas autorisé à supprimer la ressource %s\"\n \n-#: ckanext/canada/view.py:814\n+#: ckanext/canada/view.py:816\n #, python-format\n msgid \"DataStore table and Data Dictionary deleted for resource %s\"\n msgstr \"\"\n@@ -862,19 +881,19 @@ msgstr \"\"\n #: ckanext/canada/templates/package/resource_edit.html:3\n #: ckanext/canada/templates/package/resource_edit_base.html:7\n #: ckanext/canada/templates/package/wet_datatable.html:15\n-#: ckanext/canada/view.py:908\n+#: ckanext/canada/view.py:910\n msgid \"Edit\"\n msgstr \"Modifier\"\n \n-#: ckanext/canada/view.py:1041\n+#: ckanext/canada/view.py:1043\n msgid \"Access denied\"\n msgstr \"Accès refusé\"\n \n-#: ckanext/canada/view.py:1092\n+#: ckanext/canada/view.py:1094\n msgid \"Account Created\"\n msgstr \"Compte créé\"\n \n-#: ckanext/canada/view.py:1094\n+#: ckanext/canada/view.py:1096\n msgid \"\"\n \"Thank you for creating your account for the Open Government registry. \"\n \"Although your account is active, it has not yet been linked to your \"\n@@ -885,7 +904,7 @@ msgstr \"\"\n \"ministère. Vous ne pourrez créer ou modifier de jeux de données dans le \"\n \"registre tant que votre compte n’aura pas été relié à votre ministère.\"\n \n-#: ckanext/canada/view.py:1101\n+#: ckanext/canada/view.py:1103\n msgid \"\"\n \"You should receive an email within the next business day once the account\"\n \" activation process has been completed. If you require faster processing \"\n@@ -898,20 +917,20 @@ msgstr \"\"\n \"plus rapidement, veuillez envoyer une demande directement à :<a \"\n \"href=\\\"mailto: open-ouvert@tbs-sct.gc.ca\\\">open-ouvert@tbs-sct.gc.ca.</a\"\n \n-#: ckanext/canada/view.py:1175 ckanext/canada/view.py:1253\n+#: ckanext/canada/view.py:1177 ckanext/canada/view.py:1255\n msgid \"Organization not found\"\n msgstr \"Organisation non trouvée\"\n \n-#: ckanext/canada/view.py:1186\n+#: ckanext/canada/view.py:1188\n msgid \"Not authorized to access {org_name} members download\"\n msgstr \"Non autorisé à accéder au téléchargement des membres du {group}\"\n \n-#: ckanext/canada/view.py:1256\n+#: ckanext/canada/view.py:1258\n #, python-format\n msgid \"User %r not authorized to edit members of %s\"\n msgstr \"L’utilisateur %r n’est pas autorisé à modifier les membres de %s\"\n \n-#: ckanext/canada/view.py:1258\n+#: ckanext/canada/view.py:1260\n #, python-format\n msgid \"User %r not authorized to view members of %s\"\n msgstr \"L’utilisateur %r n’est pas autorisé à voir les membres de %s\"\n@@ -2195,6 +2214,11 @@ msgstr \"Publier des dossiers\"\n msgid \"Job Queue\"\n msgstr \"File d'attente des tâches\"\n \n+#: ckanext/canada/templates/admin/base.html:18\n+#: ckanext/canada/templates/admin/portal_sync.html:4\n+msgid \"Out of Sync Packages\"\n+msgstr \"Jeux de données non synchronisés\"\n+\n #: ckanext/canada/templates/admin/index.html:7\n msgid \"Administer CKAN\"\n msgstr \"Administrer CKAN\"\n@@ -2237,6 +2261,18 @@ msgstr \"Aucune tâche n'est dans la file d'attente ou en cours d'exécution.\"\n msgid \"View the current job queue and running jobs.\"\n msgstr \"Affichez les tâches dans la file d'attente et en cours d'exécution.\"\n \n+#: ckanext/canada/templates/admin/portal_sync.html:30\n+msgid \"View Out of Sync Packages\"\n+msgstr \"Voir les jeux de données non synchronisés\"\n+\n+#: ckanext/canada/templates/admin/portal_sync.html:34\n+msgid \"\"\n+\"View packages that are out of sync on the Portal and why they have not \"\n+\"been synced.\"\n+msgstr \"\"\n+\"Visualiser les jeux de données qui ne sont pas synchronisés sur le \"\n+\"portail et la raison pour laquelle ils n'ont pas été synchronisés.\"\n+\n #: ckanext/canada/templates/admin/publish_search.html:11\n #: ckanext/canada/templates/package/search.html:13\n #: ckanext/canada/templates/snippets/search_form.html:13\n@@ -2294,6 +2330,14 @@ msgstr \"\"\n msgid \"Publish?\"\n msgstr \"Publier?\"\n \n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:10\n+msgid \"Last Successful Sync:\"\n+msgstr \"Dernière synchronisation réussie :\"\n+\n+#: ckanext/canada/templates/admin/snippets/portal_sync_package_item.html:23\n+msgid \"Failure Reason:\"\n+msgstr \"Raison de l'échec :\"\n+\n #: ckanext/canada/templates/admin/snippets/publish_package_list.html:8\n msgid \"Select All for Publishing\"\n msgstr \"Sélectionner tout pour publication\"\n@@ -2756,8 +2800,14 @@ msgstr \"Retourner à la page de recherche\"\n msgid \"Disabled\"\n msgstr \"Désactivé\"\n \n+#: ckanext/canada/templates/package/new_resource.html:16\n+#: ckanext/canada/templates/package/new_resource_not_draft.html:10\n+#: ckanext/canada/templates/package/read.html:43\n+msgid \"Resource Limit Reached\"\n+msgstr \"\"\n+\n #: ckanext/canada/templates/package/read.html:18\n-#: ckanext/canada/templates/package/read.html:101\n+#: ckanext/canada/templates/package/read.html:117\n #: ckanext/canada/templates/package/snippets/resource_item.html:12\n #: ckanext/canada/templates/scheming/display_snippets/fluent_tags.html:8\n #: ckanext/canada/templates/snippets/package_item.html:37\n@@ -2784,49 +2834,49 @@ msgstr \"\"\n \"données ne s’affiche pas correctement. Pour voir la version actuelle, \"\n \"cliquez <a href=\\\"%(url)s\\\">ici</a>.\"\n \n-#: ckanext/canada/templates/package/read.html:47\n-#: ckanext/canada/templates/package/read.html:55\n+#: ckanext/canada/templates/package/read.html:63\n+#: ckanext/canada/templates/package/read.html:71\n msgid \"Action required:\"\n msgstr \"Mesure requise :\"\n \n-#: ckanext/canada/templates/package/read.html:48\n+#: ckanext/canada/templates/package/read.html:64\n msgid \"\"\n \"Draft record has been saved and can be edited. Mark as ready to publish \"\n \"to continue.\"\n msgstr \"\"\n \"Une ébauche du document a été sauvegardée et peut-être modifiée. Marquer \"\n \"en tant que prête à publier pour poursuivre.\"\n \n-#: ckanext/canada/templates/package/read.html:56\n+#: ckanext/canada/templates/package/read.html:72\n msgid \"Seek out departmental approval and mark as approved to continue.\"\n msgstr \"\"\n \"Chercher à obtenir l'approbation du ministère et marquer en tant \"\n \"qu'approuvé pour poursuivre.\"\n \n-#: ckanext/canada/templates/package/read.html:63\n+#: ckanext/canada/templates/package/read.html:79\n msgid \"Data record is in queue for validation.\"\n msgstr \"La fiche est dans la file d'attente à des fins de validation.\"\n \n-#: ckanext/canada/templates/package/read.html:64\n+#: ckanext/canada/templates/package/read.html:80\n msgid \"Record will be published by the following business day upon validation.\"\n msgstr \"\"\n \"Le document sera publié d'ici le prochain jour ouvrable une fois qu'il \"\n \"aura été validé.\"\n \n-#: ckanext/canada/templates/package/read.html:82\n-#: ckanext/canada/templates/package/read.html:83\n+#: ckanext/canada/templates/package/read.html:98\n+#: ckanext/canada/templates/package/read.html:99\n msgid \"View on Portal\"\n msgstr \"Consulter le Portail\"\n \n-#: ckanext/canada/templates/package/read.html:89\n+#: ckanext/canada/templates/package/read.html:105\n msgid \"This dataset has been deleted and is no longer accessible\"\n msgstr \"Cet ensemble de données a été supprimé et n’est plus accessible\"\n \n-#: ckanext/canada/templates/package/read.html:112\n+#: ckanext/canada/templates/package/read.html:128\n msgid \"Made available by the \"\n msgstr \"Rendus disponibles par l’entremise du \"\n \n-#: ckanext/canada/templates/package/read.html:114\n+#: ckanext/canada/templates/package/read.html:130\n msgid \"\"\n \"<p>These resources are not under the control of the Government of Canada \"\n \"and the link is provided solely for the convenience of our website \"\n@@ -2864,8 +2914,8 @@ msgstr \"\"\n \" Web non gouvernemental avant de fournir leurs renseignements \"\n \"personnels.</p>\"\n \n-#: ckanext/canada/templates/package/read.html:129\n-#: ckanext/canada/templates/package/read.html:152\n+#: ckanext/canada/templates/package/read.html:145\n+#: ckanext/canada/templates/package/read.html:168\n #: ckanext/canada/templates/package/read_base.html:56\n #: ckanext/canada/templates/package/read_base.html:65\n #: ckanext/canada/templates/package/read_base.html:81\n@@ -2877,43 +2927,43 @@ msgstr \"\"\n msgid \":\"\n msgstr \" :\"\n \n-#: ckanext/canada/templates/package/read.html:150\n+#: ckanext/canada/templates/package/read.html:166\n msgid \"Issued by\"\n msgstr \"Publiée par\"\n \n-#: ckanext/canada/templates/package/read.html:177\n+#: ckanext/canada/templates/package/read.html:193\n msgid \"Related Items\"\n msgstr \"Articles connexes\"\n \n-#: ckanext/canada/templates/package/read.html:191\n+#: ckanext/canada/templates/package/read.html:207\n msgid \"Contact Information\"\n msgstr \"Coordonnées\"\n \n-#: ckanext/canada/templates/package/read.html:193\n+#: ckanext/canada/templates/package/read.html:209\n msgid \"Delivery Point:\"\n msgstr \"Point de livraison :\"\n \n-#: ckanext/canada/templates/package/read.html:196\n+#: ckanext/canada/templates/package/read.html:212\n msgid \"City:\"\n msgstr \"Ville :\"\n \n-#: ckanext/canada/templates/package/read.html:199\n+#: ckanext/canada/templates/package/read.html:215\n msgid \"Administrative Area:\"\n msgstr \"Zone administrative :\"\n \n-#: ckanext/canada/templates/package/read.html:202\n+#: ckanext/canada/templates/package/read.html:218\n msgid \"Postal Code:\"\n msgstr \"Code postal :\"\n \n-#: ckanext/canada/templates/package/read.html:205\n+#: ckanext/canada/templates/package/read.html:221\n msgid \"Country:\"\n msgstr \"Pays :\"\n \n-#: ckanext/canada/templates/package/read.html:208\n+#: ckanext/canada/templates/package/read.html:224\n msgid \"Electronic Mail Address:\"\n msgstr \"Adresse de courrier électronique :\"\n \n-#: ckanext/canada/templates/package/read.html:230\n+#: ckanext/canada/templates/package/read.html:246\n msgid \"Similar records\"\n msgstr \"Dossiers similaires\"\n \n@@ -3274,17 +3324,17 @@ msgstr \"\"\n msgid \"Guide\"\n msgstr \"Guide\"\n \n-#: ckanext/canada/templates/recombinant/resource_edit.html:43\n+#: ckanext/canada/templates/recombinant/resource_edit.html:44\n #, python-format\n msgid \"\"\n \"For information on how to prepare, maintain and upload templates to the \"\n-\"Registry, refer to the appropriate documentation posted on <a \"\n-\"href=\\\"%(gclink)s\\\">GCPEDIA</a>\"\n+\"Registry, refer to the appropriate documentation posted on the <a \"\n+\"href=\\\"%(guide_link)s\\\">Operations Guide.</a>\"\n msgstr \"\"\n \"Pour obtenir des renseignements sur la façon de préparer, de tenir à jour\"\n \" et de verser des modèles de données pour le registre, consultez la \"\n-\"documentation appropriée qui est publiée dans <a \"\n-\"href='%(gclink)s'>Gcpédia</a>\"\n+\"documentation appropriée qui est publiée dans le <a \"\n+\"href='%(guide_link)s'>guide des opérations</a>\"\n \n #: ckanext/canada/templates/recombinant/update_pd_record.html:3\n #: ckanext/canada/templates/recombinant/update_pd_record.html:4\n@@ -3502,8 +3552,12 @@ msgid \"New activity item\"\n msgstr \"Nouveau poste d’activité\"\n \n #: ckanext/canada/templates/snippets/activity_stream.html:8\n-msgid \"View the past 30 days of activity.\"\n-msgstr \"Consulter les activités des 30 derniers jours.\"\n+msgid \"\"\n+\"View the past 60 days of metadata activity and the past 150 days of \"\n+\"DataStore activity.\"\n+msgstr \"\"\n+\"Consulter les 60 derniers jours d'activités des métadonnées et les 150 \"\n+\"derniers jours d'activités du DataStore.\"\n \n #: ckanext/canada/templates/snippets/dataset_facets.html:6\n #: ckanext/canada/templates/snippets/dataset_facets.html:12\n@@ -6719,3 +6773,6 @@ msgstr \"Télécharger vers le DataStore\"\n #~ \"passe doivent comporter au moins 12 \"\n #~ \"caractères.\"\n \n+#~ msgid \"View the past 30 days of activity.\"\n+#~ msgstr \"Consulter les activités des 30 derniers jours.\"\n+"
                },
                {
                    "sha": "19e8b03e2588da1f10132e192596fe5a4f250f44",
                    "filename": "ckanext/canada/logic.py",
                    "status": "modified",
                    "additions": 56,
                    "deletions": 0,
                    "changes": 56,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Flogic.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Flogic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Flogic.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -37,6 +37,7 @@\n from ckanext.scheming.helpers import scheming_get_preset\n \n from ckanext.datastore.backend import DatastoreBackend\n+from ckanext.canada import model as canada_model\n \n MIMETYPES_AS_DOMAINS = [\n     'application/x-msdos-program',  # .com\n@@ -529,3 +530,58 @@ def canada_datastore_run_triggers(up_func, context, data_dict):\n         context['connection'] = backend._get_write_engine().connect()\n     with datastore_create_temp_user_table(context, drop_on_commit=False):\n         return up_func(context, data_dict)\n+\n+\n+@side_effect_free\n+def portal_sync_info(context, data_dict):\n+    \"\"\"\n+    Returns PackageSync object for a given package_id if it exists.\n+    \"\"\"\n+    package_id = get_or_bust(data_dict, 'id')\n+\n+    check_access('portal_sync_info', context, data_dict)\n+\n+    sync_info = canada_model.PackageSync.get(package_id=package_id)\n+\n+    if not sync_info:\n+        raise ObjectNotFound(_('No Portal Sync information found for package %s') % package_id)\n+\n+    # NOTE: never show sync_info.error as it contains stack traces and system information\n+    return {\n+        'package_id': sync_info.package_id,\n+        'last_run': sync_info.last_run,\n+        'last_successful_sync': sync_info.last_successful_sync,\n+        'error_on': sync_info.error_on,\n+    }\n+\n+\n+@side_effect_free\n+def list_out_of_sync_packages(context, data_dict):\n+    \"\"\"\n+    Returns a list of out of sync packages on the Portal.\n+\n+    Based on PackageSync model.\n+    \"\"\"\n+    check_access('list_out_of_sync_packages', context, data_dict)\n+\n+    sync_infos_count = model.Session.query(canada_model.PackageSync.package_id).filter(canada_model.PackageSync.error_on != None).count()\n+\n+    out_of_sync_packages = {'count': sync_infos_count, 'results': []}\n+\n+    if not sync_infos_count:\n+        return out_of_sync_packages\n+\n+    limit = data_dict.get('limit', 25)\n+    offset = data_dict.get('start', 0)\n+    sync_infos = model.Session.query(canada_model.PackageSync).filter(canada_model.PackageSync.error_on != None).limit(limit).offset(offset)\n+\n+    for sync_info in sync_infos:\n+        try:\n+            pkg_dict = get_action('package_show')({'user': context.get('user')}, {'id': sync_info.package_id})\n+        except (ObjectNotFound, NotAuthorized):\n+            continue\n+        # NOTE: never show sync_info.error as it contains stack traces and system information\n+        out_of_sync_packages['results'].append({'pkg_dict': pkg_dict, 'last_successful_sync': sync_info.last_successful_sync,\n+                                                'error_on': sync_info.error_on, 'last_run': sync_info.last_run})\n+\n+    return out_of_sync_packages"
                },
                {
                    "sha": "98e4f9c44effe479ed38c66ba922e7bcc672916f",
                    "filename": "ckanext/canada/migration/canada_public/README",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2FREADME",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2FREADME",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2FREADME?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1 @@\n+Generic single-database configuration.\n\\ No newline at end of file"
                },
                {
                    "sha": "f0d665297db4d9cb412eef015c74d80f92cf8d58",
                    "filename": "ckanext/canada/migration/canada_public/alembic.ini",
                    "status": "added",
                    "additions": 74,
                    "deletions": 0,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Falembic.ini",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Falembic.ini",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Falembic.ini?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,74 @@\n+# A generic, single database configuration.\n+\n+[alembic]\n+# path to migration scripts\n+script_location = %(here)s\n+\n+# template used to generate migration files\n+# file_template = %%(rev)s_%%(slug)s\n+\n+# timezone to use when rendering the date\n+# within the migration file as well as the filename.\n+# string value is passed to dateutil.tz.gettz()\n+# leave blank for localtime\n+# timezone =\n+\n+# max length of characters to apply to the\n+# \"slug\" field\n+#truncate_slug_length = 40\n+\n+# set to 'true' to run the environment during\n+# the 'revision' command, regardless of autogenerate\n+# revision_environment = false\n+\n+# set to 'true' to allow .pyc and .pyo files without\n+# a source .py file to be detected as revisions in the\n+# versions/ directory\n+# sourceless = false\n+\n+# version location specification; this defaults\n+# to /srv/app/ckan/registry/src/ckanext-canada/ckanext/canada/migration/canada_public/versions.  When using multiple version\n+# directories, initial revisions must be specified with --version-path\n+# version_locations = %(here)s/bar %(here)s/bat /srv/app/ckan/registry/src/ckanext-canada/ckanext/canada/migration/canada_public/versions\n+\n+# the output encoding used when revision files\n+# are written from script.py.mako\n+# output_encoding = utf-8\n+\n+sqlalchemy.url = driver://user:pass@localhost/dbname\n+\n+\n+# Logging configuration\n+[loggers]\n+keys = root,sqlalchemy,alembic\n+\n+[handlers]\n+keys = console\n+\n+[formatters]\n+keys = generic\n+\n+[logger_root]\n+level = WARN\n+handlers = console\n+qualname =\n+\n+[logger_sqlalchemy]\n+level = WARN\n+handlers =\n+qualname = sqlalchemy.engine\n+\n+[logger_alembic]\n+level = INFO\n+handlers =\n+qualname = alembic\n+\n+[handler_console]\n+class = StreamHandler\n+args = (sys.stderr,)\n+level = NOTSET\n+formatter = generic\n+\n+[formatter_generic]\n+format = %(levelname)-5.5s [%(name)s] %(message)s\n+datefmt = %H:%M:%S"
                },
                {
                    "sha": "009368218889f99064a5ba03d6c0a93d4571a6ee",
                    "filename": "ckanext/canada/migration/canada_public/env.py",
                    "status": "added",
                    "additions": 81,
                    "deletions": 0,
                    "changes": 81,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fenv.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fenv.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fenv.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,81 @@\n+# -*- coding: utf-8 -*-\n+\n+from __future__ import with_statement\n+from alembic import context\n+from sqlalchemy import engine_from_config, pool\n+from logging.config import fileConfig\n+\n+import os\n+\n+# this is the Alembic Config object, which provides\n+# access to the values within the .ini file in use.\n+config = context.config\n+\n+# Interpret the config file for Python logging.\n+# This line sets up loggers basically.\n+fileConfig(config.config_file_name)\n+\n+# add your model's MetaData object here\n+# for 'autogenerate' support\n+# from myapp import mymodel\n+# target_metadata = mymodel.Base.metadata\n+target_metadata = None\n+\n+# other values from the config, defined by the needs of env.py,\n+# can be acquired:\n+# my_important_option = config.get_main_option(\"my_important_option\")\n+# ... etc.\n+\n+name = os.path.basename(os.path.dirname(__file__))\n+\n+\n+def run_migrations_offline():\n+    \"\"\"Run migrations in 'offline' mode.\n+\n+    This configures the context with just a URL\n+    and not an Engine, though an Engine is acceptable\n+    here as well.  By skipping the Engine creation\n+    we don't even need a DBAPI to be available.\n+\n+    Calls to context.execute() here emit the given string to the\n+    script output.\n+\n+    \"\"\"\n+\n+    url = config.get_main_option(u\"sqlalchemy.url\")\n+    context.configure(\n+        url=url, target_metadata=target_metadata, literal_binds=True,\n+        version_table=u'{}_alembic_version'.format(name)\n+    )\n+\n+    with context.begin_transaction():\n+        context.run_migrations()\n+\n+\n+def run_migrations_online():\n+    \"\"\"Run migrations in 'online' mode.\n+\n+    In this scenario we need to create an Engine\n+    and associate a connection with the context.\n+\n+    \"\"\"\n+    connectable = engine_from_config(\n+        config.get_section(config.config_ini_section),\n+        prefix=u'sqlalchemy.',\n+        poolclass=pool.NullPool)\n+\n+    with connectable.connect() as connection:\n+        context.configure(\n+            connection=connection,\n+            target_metadata=target_metadata,\n+            version_table=u'{}_alembic_version'.format(name)\n+        )\n+\n+        with context.begin_transaction():\n+            context.run_migrations()\n+\n+\n+if context.is_offline_mode():\n+    run_migrations_offline()\n+else:\n+    run_migrations_online()"
                },
                {
                    "sha": "2c0156303a8df3ffdc9de87765bf801bf6bea4a5",
                    "filename": "ckanext/canada/migration/canada_public/script.py.mako",
                    "status": "added",
                    "additions": 24,
                    "deletions": 0,
                    "changes": 24,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fscript.py.mako",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fscript.py.mako",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fscript.py.mako?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,24 @@\n+\"\"\"${message}\n+\n+Revision ID: ${up_revision}\n+Revises: ${down_revision | comma,n}\n+Create Date: ${create_date}\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+${imports if imports else \"\"}\n+\n+# revision identifiers, used by Alembic.\n+revision = ${repr(up_revision)}\n+down_revision = ${repr(down_revision)}\n+branch_labels = ${repr(branch_labels)}\n+depends_on = ${repr(depends_on)}\n+\n+\n+def upgrade():\n+    ${upgrades if upgrades else \"pass\"}\n+\n+\n+def downgrade():\n+    ${downgrades if downgrades else \"pass\"}"
                },
                {
                    "sha": "3281ef1b65b4137ac74e329479dc29e8189c3464",
                    "filename": "ckanext/canada/migration/canada_public/versions/0ef791477ff0_.py",
                    "status": "added",
                    "additions": 51,
                    "deletions": 0,
                    "changes": 51,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fversions%2F0ef791477ff0_.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fversions%2F0ef791477ff0_.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fversions%2F0ef791477ff0_.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,51 @@\n+\"\"\"empty message\n+\n+Revision ID: 0ef791477ff0\n+Revises:\n+Create Date: 2024-10-18 18:20:50.040861\n+\n+\"\"\"\n+from alembic import op\n+import sqlalchemy as sa\n+\n+import datetime\n+\n+\n+# revision identifiers, used by Alembic.\n+revision = '0ef791477ff0'\n+down_revision = None\n+branch_labels = None\n+depends_on = None\n+\n+\n+def _get_tables():\n+    engine = op.get_bind()\n+    inspector = sa.inspect(engine)\n+    return inspector.get_table_names()\n+\n+\n+def upgrade():\n+    tables = _get_tables()\n+    if \"package_sync\" in tables:\n+        print('package_sync database table already exists')\n+        return\n+    op.create_table(\n+        \"package_sync\",\n+        sa.Column(\"package_id\", sa.Unicode, primary_key=True),\n+        sa.Column(\"last_run\", sa.DateTime, nullable=False, default=datetime.datetime.now(datetime.timezone.utc)),\n+        sa.Column(\"last_successful_sync\", sa.DateTime, nullable=True),\n+        sa.Column(\"error_on\", sa.Unicode, nullable=True),\n+        sa.Column(\"error\", sa.Unicode, nullable=True),\n+    )\n+    print('package_sync database table created')\n+    pass\n+\n+\n+def downgrade():\n+    tables = _get_tables()\n+    if \"package_sync\" not in tables:\n+        print('package_sync database table not present')\n+        return\n+    op.drop_table(\"package_sync\")\n+    print('package_sync database table deleted')\n+    pass"
                },
                {
                    "sha": "ec69c368d1716bef1a0f3b6ddc5ec2484eb88f62",
                    "filename": "ckanext/canada/model.py",
                    "status": "added",
                    "additions": 84,
                    "deletions": 0,
                    "changes": 84,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmodel.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fmodel.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmodel.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,84 @@\n+# encoding: utf-8\n+\n+import datetime\n+import logging\n+\n+from sqlalchemy import Column, Unicode, DateTime\n+from sqlalchemy.ext.declarative import declarative_base\n+\n+from ckan.model import meta\n+\n+log = logging.getLogger(__name__)\n+\n+\n+Base = declarative_base(metadata=meta.metadata)\n+\n+\n+class PackageSync(Base):\n+    __tablename__ = 'package_sync'\n+\n+    package_id = Column(Unicode, primary_key=True)\n+    last_run = Column(DateTime, nullable=False, default=datetime.datetime.now(datetime.timezone.utc))\n+    last_successful_sync = Column(DateTime, nullable=True)\n+    error_on = Column(Unicode, nullable=True)\n+    error = Column(Unicode, nullable=True)\n+\n+    Session = meta.Session\n+\n+\n+    @classmethod\n+    def get(cls, package_id, for_update=False):\n+        \"\"\"\n+        Returns a package_sync object referenced by its package_id.\n+        \"\"\"\n+        if not package_id:\n+            return None\n+\n+        q = cls.Session.query(cls).autoflush(True).filter_by(package_id=package_id)\n+        if for_update:\n+            q = q.with_for_update()\n+        return q.first()\n+\n+\n+    @classmethod\n+    def save(cls):\n+        \"\"\"\n+        Adds the current object to the database Session. Requires Session.commit()\n+        \"\"\"\n+        cls.Session.add(cls)\n+\n+\n+    @classmethod\n+    def upsert(cls, package_id, last_successful_sync=None, error_on=None, error=None):\n+        \"\"\"\n+        Sets and returns a package_sync object referenced by its package_id.\n+        \"\"\"\n+        package_sync = cls.get(package_id, for_update=True)\n+\n+        if package_sync:\n+            package_sync.error_on = error_on\n+            package_sync.error = error\n+            package_sync.last_run = datetime.datetime.now(datetime.timezone.utc)\n+            package_sync.last_successful_sync = last_successful_sync if last_successful_sync else package_sync.last_successful_sync\n+        else:\n+            package_sync = cls(package_id=package_id, last_successful_sync=last_successful_sync,\n+                               error_on=error_on, error=error)\n+\n+        cls.Session.add(package_sync)\n+        cls.Session.commit()\n+\n+        return cls.get(package_id)\n+\n+\n+    @classmethod\n+    def delete(cls, package_id):\n+        \"\"\"\n+        Deletes a pacage_sync object referenced by its package_id.\n+        \"\"\"\n+        package_sync = cls.get(package_id, for_update=True)\n+\n+        if not package_sync:\n+            return\n+\n+        cls.Session.query(cls).filter_by(package_id=package_id).delete()\n+        cls.Session.commit()"
                },
                {
                    "sha": "741b4b8539c70def07d29e46828f86471c496c36",
                    "filename": "ckanext/canada/plugins.py",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 0,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fplugins.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fplugins.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugins.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -139,6 +139,8 @@ def get_helpers(self):\n             'search_filter_pill_link_label',\n             'release_date_facet_start_year',\n             'ckan_to_cdts_breadcrumbs',\n+            'operations_guide_link',\n+            'max_resources_per_dataset',\n         ])\n \n \n@@ -501,6 +503,8 @@ def get_actions(self):\n             resource_view_update=resource_view_update_bilingual,\n             resource_view_create=resource_view_create_bilingual,\n             datastore_run_triggers=logic.canada_datastore_run_triggers,\n+            portal_sync_info=logic.portal_sync_info,\n+            list_out_of_sync_packages=logic.list_out_of_sync_packages,\n         )\n \n     # IAuthFunctions\n@@ -511,6 +515,8 @@ def get_auth_functions(self):\n             'group_show': auth.group_show,\n             'organization_list': auth.organization_list,\n             'organization_show': auth.organization_show,\n+            'portal_sync_info': auth.portal_sync_info,\n+            'list_out_of_sync_packages': auth.list_out_of_sync_packages,\n         }\n \n     # IXloader\n@@ -865,6 +871,8 @@ def get_validators(self):\n                 validators.canada_output_none,\n             'protect_registry_access':\n                 validators.protect_registry_access,\n+            'limit_resources_per_dataset':\n+                validators.limit_resources_per_dataset,\n             }\n \n "
                },
                {
                    "sha": "1f278bb8abfdd64f69e9523c98af74e5978dc069",
                    "filename": "ckanext/canada/schemas/dataset.yaml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fschemas%2Fdataset.yaml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fschemas%2Fdataset.yaml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fschemas%2Fdataset.yaml?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -2,6 +2,8 @@\n scheming_version: 1\n dataset_type: dataset\n \n+before_validators: limit_resources_per_dataset\n+\n about: 'open.canada.ca: raw open data metadata definition'\n about_url: http://github.com/open-data/ckanext-canada\n catalog_type_label:"
                },
                {
                    "sha": "597d2a2de4fcd039c143b441f24e39f33f35495c",
                    "filename": "ckanext/canada/schemas/doc.yaml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fschemas%2Fdoc.yaml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fschemas%2Fdoc.yaml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fschemas%2Fdoc.yaml?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -2,6 +2,8 @@\n scheming_version: 1\n dataset_type: doc\n \n+before_validators: limit_resources_per_dataset\n+\n about: 'open.canada.ca: Open By Default metadata schema'\n about_url: http://github.com/open-data/ckanext-canada\n catalog_type_label:"
                },
                {
                    "sha": "e5fcce004437a7b339eeb348632acc3110f90498",
                    "filename": "ckanext/canada/schemas/info.yaml",
                    "status": "modified",
                    "additions": 29,
                    "deletions": 27,
                    "changes": 56,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fschemas%2Finfo.yaml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fschemas%2Finfo.yaml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fschemas%2Finfo.yaml?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -2,6 +2,8 @@\n scheming_version: 1\n dataset_type: info\n \n+before_validators: limit_resources_per_dataset\n+\n about: 'open.canada.ca: open information metadata definition'\n about_url: http://github.com/open-data/ckanext-canada\n catalog_type_label:\n@@ -70,13 +72,13 @@ dataset_fields:\n # Field = Title French.\n # {The French name by which the asset is known}\n - preset: canada_title\n- \n+\n # Field = Publisher - Current Organization Name.\n # List box Source: Publisher - Current Organization Name code table (refer to Data Migration).\n # Populate the list box with the Titles of all the organizations the currently logged-in user is linked to.\n # {The Title of the current Organization (GC Department or Agency) primarily responsible for publishing the asset}\n - preset: canada_owner_org\n-  \n+\n # Field = Publisher - Organization Name at Publication (English).\n # {The organization Title at publication Time}\n # Field = Publisher - Organization Name at Publication (French).\n@@ -88,17 +90,17 @@ dataset_fields:\n # Field = Publisher - Organization Section Name French.\n # {The French names of the work groups, units of work, business units, etc. of the organization that publishes the asset (separate multiple names by commas).}\n - preset: canada_org_section_name\n-  \n+\n # Field = Creator.\n # { Individual entities (persons) primarily responsible for making the asset (separate multiple entities by commas).}\n - preset: canada_creator\n- \n+\n # Field = Contributor English.\n # {The English names of entities (persons, groups, GC Departments or Agencies) that contributed to the asset (separate multiple entities by commas).}\n # Field = Contributor French.\n # {The French names of entities (persons, groups, GC Departments or Agencies) that contributed to the asset (separate multiple entities by commas).}\n - preset: canada_contributor\n-  \n+\n # Field = Contact Email.\n # {The contact person's email for the information asset}\n - preset: canada_maintainer_email\n@@ -116,7 +118,7 @@ dataset_fields:\n # Markdown formatting Property = http://daringfireball.net/projects/markdown/syntax\n # {An account of the information asset, in French. A description may include abstract, table of contents or a free-text.}\n - preset: canada_notes\n-  \n+\n # Field = Note English.\n # { General information relating to an asset, in English }\n # Field = Note English.\n@@ -150,17 +152,17 @@ dataset_fields:\n # Field = Keywords French.\n # {Commonly used words or phrases which describe the asset, in French}\n - preset: canada_keywords\n-  \n+\n # Field = Subject.\n # List box Source: Subject code table (refer to Data Migration).\n # {The topic of the content of the information asset. You may select or deselect multiple subjects (Ctrl+Click).}\n - preset: canada_subject\n- \n+\n # Field = Audience.\n # List box Source: Audience code table (refer to Data Migration).\n # {A description of the audience or group of people for whom the described asset is intended or useful. You may select or deselect multiple options (Ctrl+Click).}\n - preset: canada_audience\n- \n+\n # Field = Place pf Publication.\n # List box Source: Geographic Region Name code table (refer to Data Migration).\n # {The region where the asset was originally published}\n@@ -182,17 +184,17 @@ dataset_fields:\n # Format: {Province – Region}, e.g. Ontario – Sudbury.\n # {The geographic region of an asset. You may or deselect multiple regions (Ctrl+Click).}\n - preset: canada_geographic_region\n-  \n+\n # Field = Time Period Coverage Start Date.\n # Add a Calendar control to select a Date.\n # {The start date of the period covered by the asset (YYYY-MM-DD)}\n - preset: canada_time_period_coverage_start\n-  \n+\n # Field = Time Period Coverage End Date.\n # Add a Calendar control to select a Date.\n # {The end date of the period covered by the asset (YYYY-MM-DD)}\n - preset: canada_time_period_coverage_end\n-  \n+\n # Field = Issuance.\n # List box Source: Issuance code table (refer to Data Migration).\n # { A term that designates how the resource is issued }\n@@ -324,12 +326,12 @@ dataset_fields:\n # Add a Calendar control to select a Date.\n # {The date of issuance (e.g., publication) of the information asset (YYYY-MM-DD)}\n - preset: canada_date_published\n- \n+\n # Field = Date Modified.\n # Add a Calendar control to select a Date.\n # {The date on which the information asset was updated (YYYY-MM-DD)}\n - preset: canada_date_modified\n- \n+\n # Field = Date Created.\n # Add a Calendar control to select a Date.\n # {The date of creation of the asset (YYYY-MM-DD)}\n@@ -391,19 +393,19 @@ dataset_fields:\n # Field = Homepage French.\n # {A program or homepage that can benavigated to gain additional or contextual information about the asset.}\n - preset: canada_program_page_url\n-  \n+\n # Field = Series Title English.\n # {The English name of the series, or aggregate asset, of which the asset is a part}\n # Field = Series Title French.\n # {The French name of the series, or aggregate asset, of which the asset is a part}\n - preset: canada_data_series_name\n-  \n+\n # Field = Series Issue ID English.\n # {English identification of the series’ issue information}\n # Field = Series Issue ID French.\n # {French identification of the series’ issue information}\n - preset: canada_data_series_issue_identification\n-  \n+\n # Field = ISBN.\n # {The identification of the asset’s - International Standard Book Number, a unique identifier assigned to many types of publications except serials by a registration agency.}\n - field_name: isbn\n@@ -454,38 +456,38 @@ dataset_fields:\n # Field = Digital Object Identifier DOI.\n # {The Digital Object Identifier assigned to the asset. For more information visit: http://cisti-icist.nrc-cnrc.gc.ca/eng/services/cisti/datacite-canada/index.html}\n - preset: canada_digital_object_identifier\n-  \n+\n # Field = Jurisdiction.\n # {The extent or range of judicial, law enforcement or other authority. Example: Level of government that contributed the asset.}\n - preset: canada_jurisdiction\n-  \n+\n # Field = Licence.\n # Populate the list box with the licence options from the Registry.\n # {The licence applied to the information asset}\n - preset: canada_license_id\n-  \n+\n # Field = Access Restrictions.\n # Default Value = Unrestricted.\n # {These are the access restrictions of the asset}\n - preset: canada_restrictions\n-  \n+\n # Field = IMSO Approval.\n # List box options are Yes and No.\n # {Has IMSO approval been obtained for this asset? By selecting yes, you agree to release this asset under the Open Government Licence - Canada}\n # http://open.canada.ca/en/open-government-licence-canada\n - preset: canada_imso_approval\n-  \n+\n # Field = Ready to Publish.\n # List box options are Yes and No.\n # {Selecting ‘Yes’ will set this asset as ready to publish on the Open Government Portal. Selecting ‘No’ will saved it as a ‘draft’}\n - preset: canada_ready_to_publish\n-  \n+\n # Field = Date Released.\n # Available only for an Admin user.\n # Add a Calendar control to select a Date.\n # {The date the asset may be published on the Portal (YYYY-MM-DD)}\n - preset: canada_portal_release_date\n-  \n+\n \n #\n #   RESOURCE FIELDS\n@@ -528,16 +530,16 @@ resource_fields:\n - preset: canada_resource_size\n \n # Field = Character Set.\n-# {This is the character set of the dataset} \n+# {This is the character set of the dataset}\n - preset: canada_resource_character_set\n \n # Field = Language.\n # List box Source: Language code table (refer to Data Migration).\n-# Order: Blank, English and French first, followed by all other language options in alphabetic order. \n+# Order: Blank, English and French first, followed by all other language options in alphabetic order.\n # {The language of the resource}\n - preset: canada_resource_language\n \n-# This control opens a file selection dialogue in order to find and select a file to upload as a resource.  \n+# This control opens a file selection dialogue in order to find and select a file to upload as a resource.\n # Label = Upload URL.\n # {The location for online access to the distribution of the resource}\n # Field = Location."
                },
                {
                    "sha": "9b396e3556d919de19cec401bae9562a1b72fea4",
                    "filename": "ckanext/canada/tables/consultations.yaml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftables%2Fconsultations.yaml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftables%2Fconsultations.yaml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftables%2Fconsultations.yaml?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -15,7 +15,7 @@ sidebar_extra_content:\n   en: 'Description and guidance are being developed. If you have questions, please email [consultation@pco-bcp.gc.ca](mailto:consultation@pco-bcp.gc.ca).'\n   fr: 'La description et les directives sont en développement. Si vous avez des questions, veuillez écrire à [consultation@pco-bcp.gc.ca](mailto:consultation@pco-bcp.gc.ca).'\n \n-gcpedia_link: http://www.gcpedia.gc.ca/wiki/Consultations_Registry_on_Open.Canada.ca\n+guide_link: http://www.gcpedia.gc.ca/wiki/Consultations_Registry_on_Open.Canada.ca\n \n resources:\n - title: Open Dialogue - Consultations"
                },
                {
                    "sha": "1dc62fdbcc4e906e5934e669482947550ac72d59",
                    "filename": "ckanext/canada/tables/inventory.yaml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftables%2Finventory.yaml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftables%2Finventory.yaml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftables%2Finventory.yaml?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -9,7 +9,7 @@ notes: This dataset houses your departmental open data inventory. This is where\n portal_type: dataset\n collection: inventory\n \n-gcpedia_link: http://www.gcpedia.gc.ca/wiki/Open_Data_Inventory_/_l%E2%80%99inventaire_de_donn%C3%A9es_ouvertes\n+guide_link: http://www.gcpedia.gc.ca/wiki/Open_Data_Inventory_/_l%E2%80%99inventaire_de_donn%C3%A9es_ouvertes\n upload_warn: 'IMPORTANT: New or updated inventories / rows will be published on open.canada.ca daily. IMSO approval must be obtained and sent to <a href=\"mailto:open-ouvert@tbs-sct.gc.ca\">open-ouvert@tbs-sct.gc.ca</a> before uploading your inventory data. By clicking the Submit button, you are confirming IMSO approval.'\n \n resources:"
                },
                {
                    "sha": "f3a811f88d5baa4b42422a9d6b04232cd097f7a6",
                    "filename": "ckanext/canada/tables/service.yaml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftables%2Fservice.yaml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftables%2Fservice.yaml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftables%2Fservice.yaml?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -11,7 +11,7 @@ template_version: 3\n portal_type: dataset\n collection: service\n \n-gcpedia_link: http://www.gcpedia.gc.ca/wiki/GC_Service_Policy_Agenda\n+guide_link: http://www.gcpedia.gc.ca/wiki/GC_Service_Policy_Agenda\n \n resources:\n - title: Service Identification Information & Metrics"
                },
                {
                    "sha": "58dea495216b458778f4f89cbb87e20130e7d48c",
                    "filename": "ckanext/canada/templates/admin/base.html",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fbase.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fbase.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fbase.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -15,6 +15,7 @@\n     {{ h.build_nav_icon('admin.trash', _('Trash'), icon='trash-o') }}\n     {{ h.build_nav_icon('canada.ckanadmin_publish', _('Publish Records'), icon='cloud-upload') }}\n     {{ h.build_nav_icon('canada.ckanadmin_job_queue', _('Job Queue'), icon='tasks') }}\n+    {{ h.build_nav_icon('canada.ckan_admin_portal_sync', _('Out of Sync Packages'), icon='exclamation-triangle') }}\n     {{ h.build_extra_admin_nav() }}\n   {% else %}\n     {{ super() }}"
                },
                {
                    "sha": "a8b805b39e3273b8b7c259721ad47349ff833936",
                    "filename": "ckanext/canada/templates/admin/portal_sync.html",
                    "status": "added",
                    "additions": 37,
                    "deletions": 0,
                    "changes": 37,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fportal_sync.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fportal_sync.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fportal_sync.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,37 @@\n+{% extends 'admin/base.html' %}\n+\n+{% block primary_content_inner %}\n+  <h2>{{ _('Out of Sync Packages') }}</h2>\n+  <div class=\"row mrgn-tp-md mrgn-bttm-md\">\n+    {% if g.page.item_count == 0 %}\n+      <div class=\"col-md-12 text-center text-warning\">\n+        <strong>{% snippet 'snippets/search_result_text.html', count=g.page.item_count, type='dataset' %}</strong>\n+      </div>\n+    {% else %}\n+      <div class=\"col-md-6 mrgn-tp-sm text-left text-success\">\n+        <strong>{% snippet 'snippets/search_result_text.html', count=g.page.item_count, type='dataset' %}</strong>\n+      </div>\n+    {% endif %}\n+  </div>\n+  <ul class=\"list-unstyled\">\n+    {% for sync_info in g.page.items %}\n+      {% snippet 'admin/snippets/portal_sync_package_item.html', package=sync_info['pkg_dict'], sync_info=sync_info %}\n+    {% endfor %}\n+  </ul>\n+  {%- block pager -%}\n+    {{ g.page.pager() }}\n+  {%- endblock -%}\n+{% endblock %}\n+\n+{% block secondary_content %}\n+  <section class=\"panel panel-info\">\n+    <header class=\"panel-heading\">\n+      <h3 class=\"panel-title\">\n+        <i class=\"fa fa-info-circle\"></i>&nbsp;{{ _('View Out of Sync Packages') }}\n+      </h3>\n+    </header>\n+    <div class=\"panel-body\">\n+      <p>{{ _('View packages that are out of sync on the Portal and why they have not been synced.') }}</p>\n+    </div>\n+  </section>\n+{% endblock %}"
                },
                {
                    "sha": "73445be48db035252104c98e871b19bb4ff62fe4",
                    "filename": "ckanext/canada/templates/admin/snippets/portal_sync_package_item.html",
                    "status": "added",
                    "additions": 28,
                    "deletions": 0,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fsnippets%2Fportal_sync_package_item.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fsnippets%2Fportal_sync_package_item.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fadmin%2Fsnippets%2Fportal_sync_package_item.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -0,0 +1,28 @@\n+{% extends 'snippets/package_item.html' %}\n+\n+{% block resources_outer %}\n+  {{ super() }}\n+  <hr>\n+  <div class=\"row\">\n+    <div class=\"col-md-12\">\n+      <span>\n+        <i class=\"fa fa-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>&nbsp;\n+        <em>{{ _('Last Successful Sync:') }}</em>&nbsp;\n+        {% if sync_info['last_successful_sync'] %}\n+          {{ h.render_datetime(sync_info['last_successful_sync'], '%Y-%m-%d %H:%M:%S %Z') }}\n+        {% else %}\n+          {{ _('N/A') }}\n+        {% endif %}\n+      </span>\n+    </div>\n+  </div>\n+  <div class=\"row\">\n+    <div class=\"col-md-12\">\n+      <span>\n+        <i class=\"fa fa-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>&nbsp;\n+        <em>{{ _('Failure Reason:') }}</em>&nbsp;\n+        {{ sync_info['error_on'] }}\n+      </span>\n+    </div>\n+  </div>\n+{% endblock %}"
                },
                {
                    "sha": "4d8d84e879683cdadc3750c88f71249fb934255e",
                    "filename": "ckanext/canada/templates/package/new_resource.html",
                    "status": "modified",
                    "additions": 21,
                    "deletions": 0,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fnew_resource.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fnew_resource.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fnew_resource.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -6,6 +6,27 @@\n   </div>\n {% endblock %}\n \n+{% block form %}\n+  {% set max_resource_count = h.max_resources_per_dataset() %}\n+  {% if g.is_registry and max_resource_count and pkg_dict.resources|length >= max_resource_count %}\n+    <div class=\"row\">\n+      <div class=\"col-md-12 canada-flash-messages\">\n+        <div>\n+          <section class=\"alert fade in alert-danger\">\n+            <strong>{{ _(\"Resource Limit Reached\") }}</strong>\n+            <p>{{ _(\"You can only add up to {max_resource_count} resources to a dataset. \"\n+                    \"You can segment your resources across multiple datasets or merge your \"\n+                    \"data to limit the number of resources. Please contact \"\n+                    \"open-ouvert@tbs-sct.gc.ca if you need further assistance.\").format(max_resource_count=max_resource_count) }}</p>\n+          </section>\n+        </div>\n+      </div>\n+    </div>\n+  {% else %}\n+    {{ super() }}\n+  {% endif %}\n+{% endblock %}\n+\n {% block scripts %}\n   {% if g.is_registry %}\n     <script type=\"text/javascript\" src=\"{{ h.url_for_static('/registry_resource_edit.js') }}\" ></script>"
                },
                {
                    "sha": "eae6c755219b3a5d9e244b959b5988645bfa3d2b",
                    "filename": "ckanext/canada/templates/package/new_resource_not_draft.html",
                    "status": "modified",
                    "additions": 21,
                    "deletions": 0,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fnew_resource_not_draft.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fnew_resource_not_draft.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fnew_resource_not_draft.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -1,5 +1,26 @@\n {% ckan_extends %}\n \n+{% block form %}\n+  {% set max_resource_count = h.max_resources_per_dataset() %}\n+  {% if g.is_registry and max_resource_count and pkg_dict.resources|length >= max_resource_count %}\n+    <div class=\"row\">\n+      <div class=\"col-md-12 canada-flash-messages\">\n+        <div>\n+          <section class=\"alert fade in alert-danger\">\n+            <strong>{{ _(\"Resource Limit Reached\") }}</strong>\n+            <p>{{ _(\"You can only add up to {max_resource_count} resources to a dataset. \"\n+                    \"You can segment your resources across multiple datasets or merge your \"\n+                    \"data to limit the number of resources. Please contact \"\n+                    \"open-ouvert@tbs-sct.gc.ca if you need further assistance.\").format(max_resource_count=max_resource_count) }}</p>\n+          </section>\n+        </div>\n+      </div>\n+    </div>\n+  {% else %}\n+    {{ super() }}\n+  {% endif %}\n+{% endblock %}\n+\n {% block secondary_content %}\n  {% snippet 'package/snippets/resources.html', pkg=pkg %}\n {% endblock %}"
                },
                {
                    "sha": "33a04c582e5cb362aa785d535a62287d977eefec",
                    "filename": "ckanext/canada/templates/package/read.html",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 0,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fread.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fread.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fpackage%2Fread.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -34,6 +34,22 @@ <h1>{{ title or pkg.name }}\n   <div class=\"module\">\n     {% block internal_actions %}\n       {% if g.is_registry %}\n+        {% set max_resource_count = h.max_resources_per_dataset() %}\n+        {% if max_resource_count and pkg.resources|length >= max_resource_count %}\n+          <div class=\"row\">\n+            <div class=\"col-md-12 canada-flash-messages\">\n+              <div>\n+                <section class=\"alert fade in alert-danger\">\n+                  <strong>{{ _(\"Resource Limit Reached\") }}</strong>\n+                  <p>{{ _(\"You can only add up to {max_resource_count} resources to a dataset. \"\n+                          \"You can segment your resources across multiple datasets or merge your \"\n+                          \"data to limit the number of resources. Please contact \"\n+                          \"open-ouvert@tbs-sct.gc.ca if you need further assistance.\").format(max_resource_count=max_resource_count) }}</p>\n+                </section>\n+              </div>\n+            </div>\n+          </div>\n+        {% endif %}\n         <section class=\"resources module-content indent-large\">\n           {% set portal_link = h.portal_url() ~ \"/data/\" ~ client_lang ~ \"/\" ~ pkg.get('type', 'dataset') ~ \"/\" ~ pkg.name %}\n           {% set portal_status_alerts = [] %}"
                },
                {
                    "sha": "bdd823187a65e54022e1616009a81b8f6e345ac8",
                    "filename": "ckanext/canada/templates/recombinant/resource_edit.html",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 3,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Frecombinant%2Fresource_edit.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Frecombinant%2Fresource_edit.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Frecombinant%2Fresource_edit.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -38,10 +38,11 @@\n       <div class=\"panel panel-primary\">\n         <div class=\"panel-heading\">{{ _(\"Guide\") }}</div>\n         <div class=\"panel-body\">\n-          {% set gcpedialink = h.recombinant_language_text(h.recombinant_get_geno(dataset_type).get('gcpedia_link', 'http://www.gcpedia.gc.ca/wiki/Proactive_Disclosure_on_Open.Canada.ca') ) %}\n+          {% set default_guidelink = h.operations_guide_link(stub='publication-proactive' if h.lang() == 'fr' else 'proactive-publication' ) %}\n+          {% set guide_link = h.recombinant_language_text(h.recombinant_get_geno(dataset_type).get('guide_link', default_guidelink) ) %}\n           <p>\n-            {% trans gclink=gcpedialink %}\n-              For information on how to prepare, maintain and upload templates to the Registry, refer to the appropriate documentation posted on <a href=\"{{ gclink }}\">GCPEDIA</a>\n+            {% trans guide_link=guide_link %}\n+              For information on how to prepare, maintain and upload templates to the Registry, refer to the appropriate documentation posted on the <a href=\"{{ guide_link }}\">Operations Guide.</a>\n             {% endtrans %}\n           </p>\n           {{ h.render_markdown(h.recombinant_language_text(h.recombinant_get_geno(dataset_type).get('sidebar_extra_content', ''))) }}"
                },
                {
                    "sha": "be36b38b216761e6657fb70f072b47222423b10b",
                    "filename": "ckanext/canada/templates/scheming/package/resource_read.html",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 5,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fscheming%2Fpackage%2Fresource_read.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fscheming%2Fpackage%2Fresource_read.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fscheming%2Fpackage%2Fresource_read.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -12,10 +12,23 @@ <h2 id=\"additional-info\">{{ _('Additional Information') }}</h2>\n \n {% block additional_info_table_head %}{% endblock %}\n \n-{%- block resource_last_updated -%}{%- endblock -%}\n-\n-{% block resource_metadata_last_updated %}{% endblock %}\n-\n {% block resource_more_items %}{% endblock %}\n \n-{% block resource_fields %}{% endblock %}\n+{%- block resource_fields -%}\n+  {%- for field in schema.resource_fields -%}\n+    {%- if field.field_name not in exclude_fields\n+        and field.display_snippet is not none\n+        and res[field.field_name] -%}\n+      <tr>\n+        <th scope=\"row\">\n+          {{- h.scheming_language_text(field.label) -}}\n+        </th>\n+        <td>\n+          {%- snippet 'scheming/snippets/display_field.html',\n+              field=field, data=res, entity_type='dataset',\n+              object_type=dataset_type -%}\n+        </td>\n+      </tr>\n+    {%- endif -%}\n+  {%- endfor -%}\n+{%- endblock -%}"
                },
                {
                    "sha": "10b09ddf6e94601ae7703c5c1cefb7c82adf794f",
                    "filename": "ckanext/canada/templates/snippets/activity_stream.html",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fsnippets%2Factivity_stream.html",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftemplates%2Fsnippets%2Factivity_stream.html",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftemplates%2Fsnippets%2Factivity_stream.html?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -5,7 +5,7 @@\n     <div class=\"col-md-12 canada-flash-messages\">\n       <div>\n         <section class=\"alert fade in alert-info\">\n-          <p>{{ _(\"View the past 30 days of activity.\") }}</p>\n+          <p>{{ _(\"View the past 60 days of metadata activity and the past 150 days of DataStore activity.\") }}</p>\n         </section>\n       </div>\n     </div>"
                },
                {
                    "sha": "ae738e6f68ab52f05ca96e6f5adea38ee806a254",
                    "filename": "ckanext/canada/tests/__init__.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftests%2F__init__.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftests%2F__init__.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2F__init__.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -5,15 +5,20 @@\n     tables_exist as validation_tables_exist\n )\n from ckanext.security.model import db_setup as security_db_setup\n+from ckan.cli.db import _run_migrations\n \n class CanadaTestBase(object):\n     @classmethod\n     def setup_method(self, method):\n         \"\"\"Method is called at class level before EACH test methods of the class are called.\n         Setup any state specific to the execution of the given class methods.\n         \"\"\"\n+        #FIXME: DB head for migartions in our test environment setup.\n+        #       HEAD of CKAN db Docker image is always ahead??\n+        _run_migrations('canada_public')\n         reset_db()\n         clear_all()\n         if not validation_tables_exist():\n             validation_create_tables()\n         security_db_setup()\n+        _run_migrations('canada_public')"
                },
                {
                    "sha": "319caa6a934ea73751f9ce843226043b1f592f93",
                    "filename": "ckanext/canada/tests/test_make.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftests%2Ftest_make.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Ftests%2Ftest_make.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_make.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -399,10 +399,10 @@ def test_make_hospitalityq(self):\n \n         stdout = stdout.decode(\"utf-8\")\n \n-        # Drupal/Solr, test for record indexing\n+        # Django, just test for command output from echo\n         assert \"Usage:\" not in stdout\n         assert \"rebuild-hospitalityq] Error\" not in stdout\n-        assert '%s 1' % self.org['name'] in stdout\n+        assert 'import_data_csv' in stdout\n \n \n     def test_make_travelq(self):\n@@ -474,10 +474,10 @@ def test_make_reclassification(self):\n \n         stdout = stdout.decode(\"utf-8\")\n \n-        # Drupal/Solr, test for record indexing\n+        # Django, just test for command output from echo\n         assert \"Usage:\" not in stdout\n         assert \"rebuild-reclassification] Error\" not in stdout\n-        assert '%s 1' % self.org['name'] in stdout\n+        assert 'import_data_csv' in stdout\n \n \n     def test_make_service(self):"
                },
                {
                    "sha": "b85be9ae056e85492a40a36fb2ed42e8df27502e",
                    "filename": "ckanext/canada/validators.py",
                    "status": "modified",
                    "additions": 37,
                    "deletions": 1,
                    "changes": 38,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fvalidators.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fvalidators.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fvalidators.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -5,7 +5,7 @@\n \n from six import text_type\n \n-from ckan.plugins.toolkit import _, get_action, ValidationError, ObjectNotFound\n+from ckan.plugins.toolkit import _, get_action, ValidationError, ObjectNotFound, config\n from ckan.lib.navl.validators import StopOnError\n from ckan.authz import is_sysadmin\n from ckan import model\n@@ -531,3 +531,39 @@ def protect_registry_access(key, data, errors, context):\n                            \" from '%s' to '%s'. This field is read-only.\" %\n                            (original, value)))\n         raise StopOnError\n+\n+\n+def limit_resources_per_dataset(key, data, errors, context):\n+    \"\"\"\n+    Limits the number of resources per dataset.\n+    \"\"\"\n+    package_id = data.get(key[:-1] + ('id',))\n+\n+    max_resource_count = config.get('ckanext.canada.max_resources_per_dataset', None)\n+    if not max_resource_count:\n+        return\n+\n+    new_resource_count = len(set(k[1] for k in data.keys() if k[0] == 'resources'))\n+    if not new_resource_count:\n+        return\n+\n+    if new_resource_count > int(max_resource_count):\n+\n+        # check if a new resource is being added or not, as we need to allow\n+        # for metadata updates still.\n+        current_resource_count = model.Session.query(model.Resource.id)\\\n+            .filter(model.Resource.package_id == package_id)\\\n+            .filter(model.Resource.state == 'active').count()\n+        if not current_resource_count:\n+            return\n+\n+        if new_resource_count == current_resource_count:\n+            # no resources are being added, allow for metadata updates\n+            return\n+\n+        errors[('resource_count',)] = [_('You can only add up to {max_resource_count} resources to a dataset. '\n+                                         'You can segment your resources across multiple datasets or merge your '\n+                                         'data to limit the number of resources. Please contact '\n+                                         'open-ouvert@tbs-sct.gc.ca if you need further assistance.')\n+                                        .format(max_resource_count=max_resource_count)]\n+        raise StopOnError"
                },
                {
                    "sha": "5a080d1eae0ab5a551cd1a69dd106dd7f642753b",
                    "filename": "ckanext/canada/view.py",
                    "status": "modified",
                    "additions": 40,
                    "deletions": 1,
                    "changes": 41,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fview.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/6e940c9c3ee4db4156537679c0236fe37632735b/ckanext%2Fcanada%2Fview.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fview.py?ref=6e940c9c3ee4db4156537679c0236fe37632735b",
                    "patch": "@@ -7,6 +7,7 @@\n from six import string_types\n from datetime import datetime, timedelta\n import traceback\n+from functools import partial\n \n from ckan.plugins.toolkit import (\n     abort,\n@@ -24,7 +25,8 @@\n from ckan.lib.base import model\n from ckan.lib.helpers import (\n     date_str_to_datetime,\n-    lang\n+    lang,\n+    Page,\n )\n \n from ckan.views.dataset import (\n@@ -1296,3 +1298,40 @@ def ckan_admin_config():\n     404 this page always.\n     \"\"\"\n     return abort(404)\n+\n+\n+@canada_views.route('/ckan-admin/portal-sync', methods=['GET'])\n+def ckan_admin_portal_sync():\n+    \"\"\"\n+    Lists any packages that are out of date with the Portal.\n+    \"\"\"\n+    try:\n+        check_access('list_out_of_sync_packages', {'user': g.user})\n+    except NotAuthorized:\n+        return abort(403)\n+\n+    page_number = h.get_page_number(request.args) or 1\n+    limit = 25\n+    start = limit * (page_number - 1)\n+    extra_vars = {}\n+\n+    out_of_sync_packages = get_action('list_out_of_sync_packages')({'user': g.user}, {'limit': limit, 'start': start})\n+    extra_vars['out_of_sync_packages'] = out_of_sync_packages\n+\n+    def _basic_pager_uri(page, text):\n+        return  h.url_for('canada.ckan_admin_portal_sync', page=page)\n+    pager_url = partial(_basic_pager_uri, page=page_number, text='')\n+\n+    extra_vars['page'] = Page(\n+        collection=out_of_sync_packages['results'],\n+        page=page_number,\n+        url=pager_url,\n+        item_count=out_of_sync_packages.get('count', 0),\n+        items_per_page=limit\n+    )\n+    extra_vars['page'].items = out_of_sync_packages['results']\n+\n+    # TODO: remove in CKAN 2.11??\n+    setattr(g, 'page', extra_vars['page'])\n+\n+    return render('admin/portal_sync.html', extra_vars=extra_vars)"
                }
            ]
        },
        "ckanext-cloudstorage": {
            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/compare/a264d6b7525ca3e36cd0c69427087b7bf4c1923e...1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
            "html_url": "https://github.com/open-data/ckanext-cloudstorage/compare/a264d6b7525ca3e36cd0c69427087b7bf4c1923e...1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
            "permalink_url": "https://github.com/open-data/ckanext-cloudstorage/compare/open-data:a264d6b...open-data:1cf3674",
            "diff_url": "https://github.com/open-data/ckanext-cloudstorage/compare/a264d6b7525ca3e36cd0c69427087b7bf4c1923e...1cf3674a6a0675cda5e6c448e9c8990d640ea3c2.diff",
            "patch_url": "https://github.com/open-data/ckanext-cloudstorage/compare/a264d6b7525ca3e36cd0c69427087b7bf4c1923e...1cf3674a6a0675cda5e6c448e9c8990d640ea3c2.patch",
            "base_commit": {
                "sha": "a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                "node_id": "C_kwDOB5AGptoAKGEyNjRkNmI3NTI1Y2EzZTM2Y2QwYzY5NDI3MDg3YjdiZjRjMTkyM2U",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "97247789+JVickery-TBS@users.noreply.github.com",
                        "date": "2023-11-24T16:19:14Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2023-11-24T16:19:14Z"
                    },
                    "message": "Merge pull request #9 from open-data/feature/get-path-context\n\nAllow Context for Get Path",
                    "tree": {
                        "sha": "79addc37b47e3f6310713f020deeeec412e22c57",
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/trees/79addc37b47e3f6310713f020deeeec412e22c57"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlYM0CCRBK7hj4Ov3rIwAAMm4IAE/5xebG+/3A8mhTDFx2Hn6A\nvSCkTxyWlgaf+WYIgw7g3Js1HFkfbVIokQIZwyC5MB3GCsf+xv1AnNuoMYfoVrsr\nVB6Z/M37ua2WxrzGW/v/5/G68Fmewpo68a6QbZnqRB+/1GZRdYfd4vkyF+vx02Md\n3QhvgwOeCcD/6M5N3OYJZkLwR9dToXRY2O/rpOfTpkq+4USUvQPXpOSnNJ4K1F1Y\ncL1Dzbd0qrETTqFnm3UaAuTiPFbFWczP3XRx+CYF6zcyJl7buz/r7rHb3/r9quL9\nSd4zC9NGrbdgQQSaYxmKE/lCnV8ObOYZHwBUiD3gPqXdBeNXy77KWCDVS0kUY14=\n=Yu/z\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 79addc37b47e3f6310713f020deeeec412e22c57\nparent 64fba7841dae3932615765b5b706a85c2c78cd5d\nparent 9caf57d64af9bc2222f901a239fbb9b2dc9b9950\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1700842754 -0500\ncommitter GitHub <noreply@github.com> 1700842754 -0500\n\nMerge pull request #9 from open-data/feature/get-path-context\n\nAllow Context for Get Path",
                        "verified_at": "2024-01-16T19:59:59Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "64fba7841dae3932615765b5b706a85c2c78cd5d",
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/64fba7841dae3932615765b5b706a85c2c78cd5d",
                        "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/64fba7841dae3932615765b5b706a85c2c78cd5d"
                    },
                    {
                        "sha": "9caf57d64af9bc2222f901a239fbb9b2dc9b9950",
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/9caf57d64af9bc2222f901a239fbb9b2dc9b9950",
                        "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/9caf57d64af9bc2222f901a239fbb9b2dc9b9950"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                "node_id": "C_kwDOB5AGptoAKGEyNjRkNmI3NTI1Y2EzZTM2Y2QwYzY5NDI3MDg3YjdiZjRjMTkyM2U",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "97247789+JVickery-TBS@users.noreply.github.com",
                        "date": "2023-11-24T16:19:14Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2023-11-24T16:19:14Z"
                    },
                    "message": "Merge pull request #9 from open-data/feature/get-path-context\n\nAllow Context for Get Path",
                    "tree": {
                        "sha": "79addc37b47e3f6310713f020deeeec412e22c57",
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/trees/79addc37b47e3f6310713f020deeeec412e22c57"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJlYM0CCRBK7hj4Ov3rIwAAMm4IAE/5xebG+/3A8mhTDFx2Hn6A\nvSCkTxyWlgaf+WYIgw7g3Js1HFkfbVIokQIZwyC5MB3GCsf+xv1AnNuoMYfoVrsr\nVB6Z/M37ua2WxrzGW/v/5/G68Fmewpo68a6QbZnqRB+/1GZRdYfd4vkyF+vx02Md\n3QhvgwOeCcD/6M5N3OYJZkLwR9dToXRY2O/rpOfTpkq+4USUvQPXpOSnNJ4K1F1Y\ncL1Dzbd0qrETTqFnm3UaAuTiPFbFWczP3XRx+CYF6zcyJl7buz/r7rHb3/r9quL9\nSd4zC9NGrbdgQQSaYxmKE/lCnV8ObOYZHwBUiD3gPqXdBeNXy77KWCDVS0kUY14=\n=Yu/z\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 79addc37b47e3f6310713f020deeeec412e22c57\nparent 64fba7841dae3932615765b5b706a85c2c78cd5d\nparent 9caf57d64af9bc2222f901a239fbb9b2dc9b9950\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1700842754 -0500\ncommitter GitHub <noreply@github.com> 1700842754 -0500\n\nMerge pull request #9 from open-data/feature/get-path-context\n\nAllow Context for Get Path",
                        "verified_at": "2024-01-16T19:59:59Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "64fba7841dae3932615765b5b706a85c2c78cd5d",
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/64fba7841dae3932615765b5b706a85c2c78cd5d",
                        "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/64fba7841dae3932615765b5b706a85c2c78cd5d"
                    },
                    {
                        "sha": "9caf57d64af9bc2222f901a239fbb9b2dc9b9950",
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/9caf57d64af9bc2222f901a239fbb9b2dc9b9950",
                        "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/9caf57d64af9bc2222f901a239fbb9b2dc9b9950"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 4,
            "behind_by": 0,
            "total_commits": 4,
            "commits": [
                {
                    "sha": "cbfcfaa186007dbe02cbdf327b68601a24c3900e",
                    "node_id": "C_kwDOB5AGptoAKGNiZmNmYWExODYwMDdkYmUwMmNiZGYzMjdiNjg2MDFhMjRjMzkwMGU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T17:57:56Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T17:57:56Z"
                        },
                        "message": "feat(dev): filesize;\n\n- Set filesize attribute when uploading a new file.\n- CLI command to recalculate file sizes of uploaded and active resources.",
                        "tree": {
                            "sha": "c8fc0881e77b1e3063782426aae631e54dfb5564",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/trees/c8fc0881e77b1e3063782426aae631e54dfb5564"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/commits/cbfcfaa186007dbe02cbdf327b68601a24c3900e",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/cbfcfaa186007dbe02cbdf327b68601a24c3900e",
                    "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/cbfcfaa186007dbe02cbdf327b68601a24c3900e",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/cbfcfaa186007dbe02cbdf327b68601a24c3900e/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                            "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/a264d6b7525ca3e36cd0c69427087b7bf4c1923e"
                        }
                    ]
                },
                {
                    "sha": "1ef39ca373250ef9519bb9f9dc54d813aeaff451",
                    "node_id": "C_kwDOB5AGptoAKDFlZjM5Y2EzNzMyNTBlZjk1MTliYjlmOWRjNTRkODEzYWVhZmY0NTE",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T18:07:52Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-10-29T18:07:52Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "2fbb1a737d3b7ebe877df86da5056450d910027f",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/trees/2fbb1a737d3b7ebe877df86da5056450d910027f"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/commits/1ef39ca373250ef9519bb9f9dc54d813aeaff451",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/1ef39ca373250ef9519bb9f9dc54d813aeaff451",
                    "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/1ef39ca373250ef9519bb9f9dc54d813aeaff451",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/1ef39ca373250ef9519bb9f9dc54d813aeaff451/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "cbfcfaa186007dbe02cbdf327b68601a24c3900e",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/cbfcfaa186007dbe02cbdf327b68601a24c3900e",
                            "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/cbfcfaa186007dbe02cbdf327b68601a24c3900e"
                        }
                    ]
                },
                {
                    "sha": "6430c58418c11ec8621de36972e051b557182284",
                    "node_id": "C_kwDOB5AGptoAKDY0MzBjNTg0MThjMTFlYzg2MjFkZTM2OTcyZTA1MWI1NTcxODIyODQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T15:41:27Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T15:41:27Z"
                        },
                        "message": "fix(cli): logic;\n\n- Head request for content length.",
                        "tree": {
                            "sha": "00c2f3f045222a90a48e38e45c1c46be4d40baec",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/trees/00c2f3f045222a90a48e38e45c1c46be4d40baec"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/commits/6430c58418c11ec8621de36972e051b557182284",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/6430c58418c11ec8621de36972e051b557182284",
                    "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/6430c58418c11ec8621de36972e051b557182284",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/6430c58418c11ec8621de36972e051b557182284/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1ef39ca373250ef9519bb9f9dc54d813aeaff451",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/1ef39ca373250ef9519bb9f9dc54d813aeaff451",
                            "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/1ef39ca373250ef9519bb9f9dc54d813aeaff451"
                        }
                    ]
                },
                {
                    "sha": "1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "node_id": "C_kwDOB5AGptoAKDFjZjM2NzRhNmEwNjc1Y2RhNWU2YzQ0OGU5Yzg5OTBkNjQwZWEzYzI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2024-11-12T14:22:24Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T14:22:24Z"
                        },
                        "message": "Merge pull request #10 from open-data/feature/resource-filesizes\n\nResource File Sizes",
                        "tree": {
                            "sha": "00c2f3f045222a90a48e38e45c1c46be4d40baec",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/trees/00c2f3f045222a90a48e38e45c1c46be4d40baec"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/git/commits/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM2SgCRC1aQ7uu5UhlAAAv3cQAEYG04m22YEqLAP+xr9qsKbr\nhAbc2tXRtTJ2pLsLmQU4IkN87uy3fAbKxdQ/AD0+ikuCU53aAfT/qG5qkzZHIi1I\nX0CrcROWaxCn634lVZ91Dp0QQ+ntYCAfWF9Yi9cAgDcYVx15IUsIwabWd3l5DCjP\n7EqCDbrefRJB6rAKh9QyKzKAUe4cfcPAowQ7coy5els1mun4Ebug/5iL09PcCYwp\n9JlEcDjqbBz9nV2zLHO5GApNLsTMpKjW7p+IjQVCqkgW2kwAug4IgFPNEFaJzKiL\nUfCWokVUdhxMWxWZ1JCnBiMFQ8i7PFTB2eAOfEQyVAON82q5hb/dlTKeacx3I0mj\nJXwlWhg/w797E43DZj6BITHKiZN+Gf/ek1+wgidQk7kxC5+FlQb1kZd39WoQY72M\naj2/k774SY7VsH0Pxy7Q/PN5VMrEF+K3jCtHXPt/TjMjcM0LGZXGlQoLe2HgDD6W\nei2r6ocm6J9MHlOXC4BUrCjUI/tN4CHn1eVZw/k92nofJTWkN/XoJqAusRh8nThX\nHoUuCqTV1K5t9EEJKItkXN3om9HUW0KVEHWvCu2gRKdqm3HoYWNevjYYDUcL/m0+\nMT5/Cmjewrkya8v1tGPq/2RzmwwjofrNjsOTz5l616ZMHK18dXb4MmaOuw0rqYE6\nYta6M0eC+OmgyfekNLnM\n=WS2Y\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 00c2f3f045222a90a48e38e45c1c46be4d40baec\nparent a264d6b7525ca3e36cd0c69427087b7bf4c1923e\nparent 6430c58418c11ec8621de36972e051b557182284\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1731421344 -0500\ncommitter GitHub <noreply@github.com> 1731421344 -0500\n\nMerge pull request #10 from open-data/feature/resource-filesizes\n\nResource File Sizes",
                            "verified_at": "2024-11-12T14:27:28Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/a264d6b7525ca3e36cd0c69427087b7bf4c1923e",
                            "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/a264d6b7525ca3e36cd0c69427087b7bf4c1923e"
                        },
                        {
                            "sha": "6430c58418c11ec8621de36972e051b557182284",
                            "url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/commits/6430c58418c11ec8621de36972e051b557182284",
                            "html_url": "https://github.com/open-data/ckanext-cloudstorage/commit/6430c58418c11ec8621de36972e051b557182284"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "1700c9f2c88191c67b6e6b81f3a68bf7a3925035",
                    "filename": ".github/workflows/change_log.yml",
                    "status": "added",
                    "additions": 43,
                    "deletions": 0,
                    "changes": 43,
                    "blob_url": "https://github.com/open-data/ckanext-cloudstorage/blob/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/.github%2Fworkflows%2Fchange_log.yml",
                    "raw_url": "https://github.com/open-data/ckanext-cloudstorage/raw/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/.github%2Fworkflows%2Fchange_log.yml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/contents/.github%2Fworkflows%2Fchange_log.yml?ref=1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "patch": "@@ -0,0 +1,43 @@\n+name: Changelog Entry\n+on: [pull_request]\n+\n+permissions:\n+  contents: read\n+\n+jobs:\n+  check_file:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v3\n+\n+      - name: Check Chanelog Exists\n+        run: |\n+          if [[ $(ls ./changes/${{ github.event.number }}.*) ]]; then\n+            echo -e \"\\n\"\n+            echo -e \"\\033[0;36mINFO: changelog for PR ${{ github.event.number }} exists.\\033[0;0m\"\n+            echo -e \"\\n\"\n+            exit 0\n+          else\n+            echo -e \"\\n\"\n+            echo -e \"\\033[0;31mERROR: changelog for PR ${{ github.event.number }} does not exist.\\033[0;0m\"\n+            echo -e \"\\n\"\n+            exit 1\n+          fi\n+\n+      - name: Check Changelog Extension\n+        run: |\n+          fullfile=$(ls ./changes/${{ github.event.number }}.*)\n+          filename=$(basename -- \"$fullfile\")\n+          extension=\"${filename##*.}\"\n+          allowed_types='[ \"fix\", \"bugfix\", \"hotfix\", \"feature\", \"misc\", \"changes\", \"migration\", \"removal\" ]'\n+          if [[ $allowed_types =~ \"\\\"$extension\\\"\" ]]; then\n+            echo -e \"\\n\"\n+            echo -e \"\\033[0;36mINFO: extension ${extension} accepted.\\033[0;0m\"\n+            echo -e \"\\n\"\n+            exit 0\n+          else\n+            echo -e \"\\n\"\n+            echo -e \"\\033[0;31mERROR: changelog file ending in ${extension} not supported.\\033[0;0m\"\n+            echo -e \"\\n\"\n+            exit 1\n+          fi"
                },
                {
                    "sha": "e64c002a2eeb02e51e9e5794639a53cb5d01c000",
                    "filename": "changes/10.canada.bugfix",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-cloudstorage/blob/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/changes%2F10.canada.bugfix",
                    "raw_url": "https://github.com/open-data/ckanext-cloudstorage/raw/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/changes%2F10.canada.bugfix",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/contents/changes%2F10.canada.bugfix?ref=1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "patch": "@@ -0,0 +1 @@\n+Set the `filesize` attribute in the uploader class so CKAN can set the Resource file size metadata field in `package_update`."
                },
                {
                    "sha": "bcc4f3df5348490349b24e1deabcd657b0d918eb",
                    "filename": "ckanext/cloudstorage/cli.py",
                    "status": "modified",
                    "additions": 14,
                    "deletions": 0,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/ckanext-cloudstorage/blob/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/ckanext%2Fcloudstorage%2Fcli.py",
                    "raw_url": "https://github.com/open-data/ckanext-cloudstorage/raw/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/ckanext%2Fcloudstorage%2Fcli.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/contents/ckanext%2Fcloudstorage%2Fcli.py?ref=1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "patch": "@@ -96,3 +96,17 @@ def list_linked_uploads(output):\n def reguess_mimetypes(resource_id=None, verbose=False):\n     \"\"\"Reguess mimtypes for all uploads.\"\"\"\n     utils.reguess_mimetypes(resource_id, verbose)\n+\n+\n+# (canada fork only): filesize attribute\n+@cloudstorage.command()\n+@click.option(\n+    \"-r\",\n+    \"--resource_id\",\n+    default=None,\n+    help=\"A single resource ID to set the size metadata field for.\",\n+)\n+@click.option('-v', '--verbose', is_flag=True, default=False, help='Higher verbosity level.')\n+def calculate_filesizes(resource_id=None, verbose=False):\n+    \"\"\"Sets the `size` metadata field for all uploads.\"\"\"\n+    utils.set_filesizes(resource_id, verbose)"
                },
                {
                    "sha": "4f32aa53048f0ea24f16859372a6a978de822e08",
                    "filename": "ckanext/cloudstorage/storage.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-cloudstorage/blob/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/ckanext%2Fcloudstorage%2Fstorage.py",
                    "raw_url": "https://github.com/open-data/ckanext-cloudstorage/raw/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/ckanext%2Fcloudstorage%2Fstorage.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/contents/ckanext%2Fcloudstorage%2Fstorage.py?ref=1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "patch": "@@ -266,6 +266,11 @@ def __init__(self, resource):\n                 resource['url'] = self.filename\n                 resource['url_type'] = 'upload'\n                 resource['last_modified'] = datetime.utcnow()\n+                # (canada fork only): filesize attribute\n+                self.file_upload.seek(0, os.SEEK_END)\n+                self.filesize = self.file_upload.tell()\n+                # go back to the beginning of the file buffer\n+                self.file_upload.seek(0, os.SEEK_SET)\n         elif multipart_name and self.can_use_advanced_aws:\n             # This means that file was successfully uploaded and stored\n             # at cloud."
                },
                {
                    "sha": "2c06e6fff67d63f1c5033695d9e80188efab8096",
                    "filename": "ckanext/cloudstorage/utils.py",
                    "status": "modified",
                    "additions": 67,
                    "deletions": 1,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/ckanext-cloudstorage/blob/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/ckanext%2Fcloudstorage%2Futils.py",
                    "raw_url": "https://github.com/open-data/ckanext-cloudstorage/raw/1cf3674a6a0675cda5e6c448e9c8990d640ea3c2/ckanext%2Fcloudstorage%2Futils.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-cloudstorage/contents/ckanext%2Fcloudstorage%2Futils.py?ref=1cf3674a6a0675cda5e6c448e9c8990d640ea3c2",
                    "patch": "@@ -11,6 +11,7 @@\n \n from ckan.lib.munge import munge_filename\n from ckan import model\n+from ckan.lib.uploader import get_resource_uploader\n \n from ckanapi import LocalCKAN\n \n@@ -23,9 +24,12 @@\n     drop_tables\n )\n \n-from ckan.plugins.toolkit import h\n+from ckan.plugins.toolkit import h, get_action  # (canada fork only): filesize attribute\n from ckan.logic import NotFound\n \n+# (canada fork only): filesize attribute\n+import requests\n+\n \n class FakeFileStorage(cgi.FieldStorage):\n     def __init__(self, fp, filename):\n@@ -454,3 +458,65 @@ def reguess_mimetypes(resource_id=None, verbose=False):\n \n     click.echo(u'Successfully reguessed {}/{} resource formats.'.format(success, count))\n     click.echo(u'Failed to reguess {}/{} resource formats.'.format(failed, count))\n+\n+\n+# (canada fork only): filesize attribute\n+def set_filesizes(resource_id=None, verbose=False):\n+    # type: (str|None, bool) -> None\n+    query = model.Session.query(model.Resource.id)\\\n+        .filter(model.Resource.url_type == 'upload')\\\n+        .filter(model.Resource.state == 'active')\n+\n+    if resource_id:\n+        query = query.filter(model.Resource.id == resource_id)\n+\n+    resource_ids = query.all()\n+\n+    if not resource_ids:\n+        click.echo('No uploaded resources found.')\n+        return\n+\n+    site_username = get_action('get_site_user')({'ignore_auth': True}, {})['name']\n+    _max = len(resource_ids)\n+\n+    for _i, resource_id in enumerate(resource_ids, 1):\n+        _resource_id = resource_id[0]\n+        try:\n+            resource = get_action('resource_show')({'user': site_username, 'ignore_auth': True}, {'id': _resource_id})\n+        except Exception as e:\n+            if verbose:\n+                click.echo('[%s/%s] Could not find resource %s after all. Skipping...' % (_i, _max, _resource_id))\n+            continue\n+        upload = get_resource_uploader(resource)\n+        if not isinstance(upload, CloudStorage):\n+            if verbose:\n+                click.echo('[%s/%s] Resource %s not using uploader CloudStorage. Skipping...' % (_i, _max, resource.get('id')))\n+            continue\n+        filename = os.path.basename(resource.get('url'))\n+        upload_url = upload.get_url_from_filename(resource.get('id'), filename)\n+        if verbose:\n+            click.echo('[%s/%s] Resource %s file fetching from %s...' % (_i, _max, resource.get('id'), upload_url))\n+        head_response = requests.head(upload_url)\n+        if not hasattr(head_response, 'headers'):\n+            if verbose:\n+                click.echo('[%s/%s] Failed to get info for Resource %s. Skipping...' % (_i, _max, resource.get('id')))\n+            continue\n+        filesize = head_response.headers.get('Content-Length')\n+        if not filesize:\n+            if verbose:\n+                click.echo('[%s/%s] Failed to get Content-Length for Resource %s. Reason: %s. Skipping...' %\n+                           (_i, _max, resource.get('id'), head_response.headers.get('x-ms-error-code', 'Unknown')))\n+            continue\n+        if verbose:\n+            click.echo('[%s/%s] File size for resource %s is %s bytes.' % (_i, _max, resource.get('id'), filesize))\n+        if int(filesize) == int(resource.get('size')):\n+            if verbose:\n+                click.echo('[%s/%s] File size for resource %s is not different. Skipping...' % (_i, _max, resource.get('id')))\n+            continue\n+        try:\n+            get_action('resource_patch')({'user': site_username, 'ignore_auth': True}, {'id': resource.get('id'), 'size': filesize})\n+            if verbose:\n+                click.echo('[%s/%s] Successfully set file size for resource %s' % (_i, _max, resource.get('id')))\n+        except Exception as e:\n+            if verbose:\n+                click.echo('[%s/%s] Failed to set file size for resource %s: %s' % (_i, _max, resource.get('id'), str(e)))"
                }
            ]
        },
        "ckanext-scheming": {
            "url": "https://api.github.com/repos/ckan/ckanext-scheming/compare/27035f4d5b3722c2bc64d39b6c2b1d76c9883636...5ce30cf2856aee97fa7b49de46847f8119dad355",
            "html_url": "https://github.com/ckan/ckanext-scheming/compare/27035f4d5b3722c2bc64d39b6c2b1d76c9883636...5ce30cf2856aee97fa7b49de46847f8119dad355",
            "permalink_url": "https://github.com/ckan/ckanext-scheming/compare/ckan:27035f4...ckan:5ce30cf",
            "diff_url": "https://github.com/ckan/ckanext-scheming/compare/27035f4d5b3722c2bc64d39b6c2b1d76c9883636...5ce30cf2856aee97fa7b49de46847f8119dad355.diff",
            "patch_url": "https://github.com/ckan/ckanext-scheming/compare/27035f4d5b3722c2bc64d39b6c2b1d76c9883636...5ce30cf2856aee97fa7b49de46847f8119dad355.patch",
            "base_commit": {
                "sha": "27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                "node_id": "C_kwDOAMK9BNoAKDI3MDM1ZjRkNWIzNzIyYzJiYzY0ZDM5YjZjMmIxZDc2Yzk4ODM2MzY",
                "commit": {
                    "author": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-06-27T14:20:36Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-06-27T14:20:36Z"
                    },
                    "message": "Merge pull request #413 from ckan/support-2.11\n\nSupport for CKAN 2.11",
                    "tree": {
                        "sha": "0598a789e31455a1a0628d09f120aecef4985f9a",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/0598a789e31455a1a0628d09f120aecef4985f9a"
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmfXU0CRC1aQ7uu5UhlAAA7T4QAKQmQmYdErrMa0S7hTA+hk7c\nwoDt561y700DBFR3/xnisc+c8QrV2zLMEmKqhJgBBLDTZuQWpEhg5cx9X+mhO8Wn\nezI4ebKZjEOqXe2vObhWXZZHi+3FfciNlNriLz7vjUauzTHX6HyDW95ESNEsQaQv\nhC0JuSuxBztgyo+sg15SGTsynolW1v1V9no0Vg+XnXjEhM61DW8/Agu85m6cnZHz\nphCyfyE4XNf0so9G0NU/S55t/ie14hhldbRuCk4qfchbM1pkpGqLvpDBYd5S8y8i\nIII9DjUBU15BLymqoPQz1fEXzmogrN+uV/orxc2F+iDGCtxta7lvFahKqCTtmYVd\nbWuHHES/caiWE0copX7gZjZPkWq2BqESSuDKyVuM+mOo3PqCfwm5Ut83UYQbzpWR\nGv2VSAZkDX1ixEG+HTi1IjwOxV5TwE70SwB9QxbJNpOSKa36sB703rW9ojNUZ5vp\nctk0y7EFUG9WC7bGQaznVvQfaWWt1qFqi2GWC30ODPzCFHTDBwfoXfi0S2ZR3plo\n+eF4QiW1tYFQqS33SsShj3Km52X6RT5BHSD0rjwXMs9b97MqjnpcCqxNqynWIXjh\nagCpQS1gPEV2KMSIzH5MGV3odfJ8UwaCtWhiHOac41SJ11IRovM6X1A384wsMHO3\n4Dy/8Q3xOiokG9CyPTkV\n=qobQ\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 0598a789e31455a1a0628d09f120aecef4985f9a\nparent 83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de\nparent a64ec05411e0ed275cd4336786380021c763f33d\nauthor Ian Ward <ian@excess.org> 1719498036 -0400\ncommitter GitHub <noreply@github.com> 1719498036 -0400\n\nMerge pull request #413 from ckan/support-2.11\n\nSupport for CKAN 2.11",
                        "verified_at": "2024-11-07T07:41:29Z"
                    }
                },
                "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                "html_url": "https://github.com/ckan/ckanext-scheming/commit/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636/comments",
                "author": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de",
                        "html_url": "https://github.com/ckan/ckanext-scheming/commit/83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de"
                    },
                    {
                        "sha": "a64ec05411e0ed275cd4336786380021c763f33d",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/a64ec05411e0ed275cd4336786380021c763f33d",
                        "html_url": "https://github.com/ckan/ckanext-scheming/commit/a64ec05411e0ed275cd4336786380021c763f33d"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                "node_id": "C_kwDOAMK9BNoAKDI3MDM1ZjRkNWIzNzIyYzJiYzY0ZDM5YjZjMmIxZDc2Yzk4ODM2MzY",
                "commit": {
                    "author": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-06-27T14:20:36Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-06-27T14:20:36Z"
                    },
                    "message": "Merge pull request #413 from ckan/support-2.11\n\nSupport for CKAN 2.11",
                    "tree": {
                        "sha": "0598a789e31455a1a0628d09f120aecef4985f9a",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/0598a789e31455a1a0628d09f120aecef4985f9a"
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmfXU0CRC1aQ7uu5UhlAAA7T4QAKQmQmYdErrMa0S7hTA+hk7c\nwoDt561y700DBFR3/xnisc+c8QrV2zLMEmKqhJgBBLDTZuQWpEhg5cx9X+mhO8Wn\nezI4ebKZjEOqXe2vObhWXZZHi+3FfciNlNriLz7vjUauzTHX6HyDW95ESNEsQaQv\nhC0JuSuxBztgyo+sg15SGTsynolW1v1V9no0Vg+XnXjEhM61DW8/Agu85m6cnZHz\nphCyfyE4XNf0so9G0NU/S55t/ie14hhldbRuCk4qfchbM1pkpGqLvpDBYd5S8y8i\nIII9DjUBU15BLymqoPQz1fEXzmogrN+uV/orxc2F+iDGCtxta7lvFahKqCTtmYVd\nbWuHHES/caiWE0copX7gZjZPkWq2BqESSuDKyVuM+mOo3PqCfwm5Ut83UYQbzpWR\nGv2VSAZkDX1ixEG+HTi1IjwOxV5TwE70SwB9QxbJNpOSKa36sB703rW9ojNUZ5vp\nctk0y7EFUG9WC7bGQaznVvQfaWWt1qFqi2GWC30ODPzCFHTDBwfoXfi0S2ZR3plo\n+eF4QiW1tYFQqS33SsShj3Km52X6RT5BHSD0rjwXMs9b97MqjnpcCqxNqynWIXjh\nagCpQS1gPEV2KMSIzH5MGV3odfJ8UwaCtWhiHOac41SJ11IRovM6X1A384wsMHO3\n4Dy/8Q3xOiokG9CyPTkV\n=qobQ\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 0598a789e31455a1a0628d09f120aecef4985f9a\nparent 83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de\nparent a64ec05411e0ed275cd4336786380021c763f33d\nauthor Ian Ward <ian@excess.org> 1719498036 -0400\ncommitter GitHub <noreply@github.com> 1719498036 -0400\n\nMerge pull request #413 from ckan/support-2.11\n\nSupport for CKAN 2.11",
                        "verified_at": "2024-11-07T07:41:29Z"
                    }
                },
                "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                "html_url": "https://github.com/ckan/ckanext-scheming/commit/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636/comments",
                "author": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de",
                        "html_url": "https://github.com/ckan/ckanext-scheming/commit/83a66ca19d962c0ddd3c12fb4a5abffb0ea9c4de"
                    },
                    {
                        "sha": "a64ec05411e0ed275cd4336786380021c763f33d",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/a64ec05411e0ed275cd4336786380021c763f33d",
                        "html_url": "https://github.com/ckan/ckanext-scheming/commit/a64ec05411e0ed275cd4336786380021c763f33d"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 4,
            "behind_by": 0,
            "total_commits": 4,
            "commits": [
                {
                    "sha": "0438f00fd436a112434104315eaab7b2f8f50100",
                    "node_id": "C_kwDOAMK9BNoAKDA0MzhmMDBmZDQzNmExMTI0MzQxMDQzMTVlYWFiN2IyZjhmNTAxMDA",
                    "commit": {
                        "author": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2024-11-08T16:20:51Z"
                        },
                        "committer": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2024-11-08T16:20:51Z"
                        },
                        "message": "document default, default_jinja2",
                        "tree": {
                            "sha": "a5e7eb9561cc74fe7a5ea48aa6e7723ac47a4129",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/a5e7eb9561cc74fe7a5ea48aa6e7723ac47a4129"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/0438f00fd436a112434104315eaab7b2f8f50100",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/0438f00fd436a112434104315eaab7b2f8f50100",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/0438f00fd436a112434104315eaab7b2f8f50100",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/0438f00fd436a112434104315eaab7b2f8f50100/comments",
                    "author": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/27035f4d5b3722c2bc64d39b6c2b1d76c9883636"
                        }
                    ]
                },
                {
                    "sha": "86e325f7aafa6b196bce114e57c1a966133bb045",
                    "node_id": "C_kwDOAMK9BNoAKDg2ZTMyNWY3YWFmYTZiMTk2YmNlMTE0ZTU3YzFhOTY2MTMzYmIwNDU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T16:42:57Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-11-08T16:42:57Z"
                        },
                        "message": "feat(dev): group before and after validators;\n\n- Added before and after validators to README.\n- Added before and after validators to org and group schemas.\n- Added error block to group and org form templates.",
                        "tree": {
                            "sha": "464082a855c641f99f2dd97a3fec56afc7a1e21e",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/464082a855c641f99f2dd97a3fec56afc7a1e21e"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/86e325f7aafa6b196bce114e57c1a966133bb045",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/86e325f7aafa6b196bce114e57c1a966133bb045",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/86e325f7aafa6b196bce114e57c1a966133bb045",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/86e325f7aafa6b196bce114e57c1a966133bb045/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/27035f4d5b3722c2bc64d39b6c2b1d76c9883636",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/27035f4d5b3722c2bc64d39b6c2b1d76c9883636"
                        }
                    ]
                },
                {
                    "sha": "172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                    "node_id": "C_kwDOAMK9BNoAKDE3MmMyYzQwYzk1N2ZhNjkxYmJjYWQxZjdlMDUzZjExYjc3YzlkYzE",
                    "commit": {
                        "author": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2024-11-08T16:56:14Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-08T16:56:14Z"
                        },
                        "message": "Merge pull request #428 from JVickery-TBS/feature/before-after-validators\n\nBefore and After Validators for Groups",
                        "tree": {
                            "sha": "54602be87014a13f4f86e61e42ad430c4762a3c8",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/54602be87014a13f4f86e61e42ad430c4762a3c8"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnLkKuCRC1aQ7uu5UhlAAAeBAQAI8WRtUY92VtSeVkK7lh5FhB\n3dGJ+wbkcUTqkQ2ExbWgdFlm6GbnESWoT2zy1+lnl+66FDs4GkMYY+iiEw5FRqv+\nMfMJeE0vqGMfw8jpcYI9vqVVjXZCs2hiY1gl2rlsSm1hLN0/ZSVw5bHYEsnX48Wb\niBKZ7o3N/O+xfseD0Wbpbx3qbzoreZqDg2GXrGYmDDjszqVxNCCXzPI9cRWHvP9P\nOQWCK6evJ3dYll2UIdt+2fppyFxOpxd1kRw+U5pH/aSRCryhYOD0DnWTKsWMMXqG\nAd8eIFx77VoBhNe08EZYtBQI8pJ99H8Z2Oc5YFdwAHZLNRpphEbvxLtIP//6lCBa\nfsaNrfyJf0n7lzqqyZrtGK8k0bZP3jSll72TopQY4XDIGhGqOealltxrATeYsDk1\n6YW1DLKxSmAOBJIrvKIeAX7a/w8Lli6ugQqhT9K7vkJe7iBTo+cB/YEib8cTwmEf\nKSdPoK6MgrQiz0ODWcC34o01sZG2Kjg/E6scq6Y3/rSV6kuMCu7BC7NgE9SHvTX3\nrZSscu453Uyf+FLi054bs0x7lWXsUKqgjQtpOD4r906gJbMXIhiRRrN1fFO+sGdP\nDrLohCM2vhRFAVob7GzOVfzOpJ4VePf3mn+Z4JUE02kmCQ6h8L53aZVHY4MoUgb8\nKWRggwOVIjVwj4491evF\n=F8cx\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 54602be87014a13f4f86e61e42ad430c4762a3c8\nparent 0438f00fd436a112434104315eaab7b2f8f50100\nparent 86e325f7aafa6b196bce114e57c1a966133bb045\nauthor Ian Ward <ian@excess.org> 1731084974 -0500\ncommitter GitHub <noreply@github.com> 1731084974 -0500\n\nMerge pull request #428 from JVickery-TBS/feature/before-after-validators\n\nBefore and After Validators for Groups",
                            "verified_at": "2024-11-08T16:56:43Z"
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/172c2c40c957fa691bbcad1f7e053f11b77c9dc1/comments",
                    "author": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "0438f00fd436a112434104315eaab7b2f8f50100",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/0438f00fd436a112434104315eaab7b2f8f50100",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/0438f00fd436a112434104315eaab7b2f8f50100"
                        },
                        {
                            "sha": "86e325f7aafa6b196bce114e57c1a966133bb045",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/86e325f7aafa6b196bce114e57c1a966133bb045",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/86e325f7aafa6b196bce114e57c1a966133bb045"
                        }
                    ]
                },
                {
                    "sha": "5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "node_id": "C_kwDOAMK9BNoAKDVjZTMwY2YyODU2YWVlOTdmYTdiNDlkZTQ2ODQ3ZjgxMTlkYWQzNTU",
                    "commit": {
                        "author": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2024-11-08T16:59:52Z"
                        },
                        "committer": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2024-11-08T16:59:52Z"
                        },
                        "message": "2.9 unsupported, update readme for validators",
                        "tree": {
                            "sha": "1cd7ce8cdb5037ad1296dccd15991b899f77a5ec",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/1cd7ce8cdb5037ad1296dccd15991b899f77a5ec"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355/comments",
                    "author": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/172c2c40c957fa691bbcad1f7e053f11b77c9dc1"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "8fd6b3ffb38e54f5328fe0549cd8393967a362d1",
                    "filename": ".github/workflows/test.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/5ce30cf2856aee97fa7b49de46847f8119dad355/.github%2Fworkflows%2Ftest.yml",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/5ce30cf2856aee97fa7b49de46847f8119dad355/.github%2Fworkflows%2Ftest.yml",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/.github%2Fworkflows%2Ftest.yml?ref=5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "patch": "@@ -17,7 +17,7 @@ jobs:\n     needs: lint\n     strategy:\n       matrix:\n-        ckan-version: [\"2.11\", \"2.10\", \"2.9\"]\n+        ckan-version: [\"2.11\", \"2.10\"]\n       fail-fast: false\n \n     name: CKAN ${{ matrix.ckan-version }}"
                },
                {
                    "sha": "54f13da94eeac5310b4eaa5e69a254997ce2f853",
                    "filename": "README.md",
                    "status": "modified",
                    "additions": 33,
                    "deletions": 0,
                    "changes": 33,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/5ce30cf2856aee97fa7b49de46847f8119dad355/README.md",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/5ce30cf2856aee97fa7b49de46847f8119dad355/README.md",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/README.md?ref=5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "patch": "@@ -21,10 +21,12 @@ Table of contents:\n    - [Dataset Schema Keys](#dataset-schema-keys)\n      - [`dataset_type`](#dataset_type)\n      - [`dataset_fields`, `resource_fields`](#dataset_fields-resource_fields)\n+     - [`before_validators`, `after_validators`](#before_validators-after_validators)\n    - [Group / Organization Schema Keys](#group--organization-schema-keys)\n      - [`group_type`](#group_type)\n      - [`organization_type`](#organization_type)\n      - [`fields`](#fields)\n+     - [`before_validators`, `after_validators`](#before_validators-after_validators-1)\n    - [Field Keys](#field-keys)\n      - [`field_name`](#field_name)\n      - [`label`](#label)\n@@ -33,6 +35,8 @@ Table of contents:\n      - [`required`](#required)\n      - [`choices`](#choices)\n      - [`choices_helper`](#choices_helper)\n+     - [`default`](#default)\n+     - [`default_jinja2`](#default_jinja2)\n      - [`preset`](#preset)\n      - [`form_snippet`](#form_snippet)\n      - [`display_snippet`](#display_snippet)\n@@ -184,6 +188,15 @@ Fields you exclude will not be shown to the end user, and will not\n be accepted when editing or updating this type of dataset.\n \n \n+### `before_validators`, `after_validators`\n+\n+```yaml\n+before_validators: validator_name\n+\n+after_validators: validator_name\n+```\n+\n+Runs validator functions before and after the `dataset_type` package is created/updated.\n \n \n ## Group / Organization Schema Keys\n@@ -231,6 +244,17 @@ fields:\n A single `fields` list replaces the `dataset_fields` and `resource_fields` schema properties doin dataset schemas.\n \n \n+### `before_validators`, `after_validators`\n+\n+```yaml\n+before_validators: validator_name\n+\n+after_validators: validator_name\n+```\n+\n+Runs validator functions before and after the `organization_type`/`group_type` group is created/updated.\n+\n+\n ----------------\n \n ## Field Keys\n@@ -415,6 +439,15 @@ You may [register your own helper function](https://docs.ckan.org/en/2.9/theming\n     label: N/A\n ```\n \n+### `default`\n+\n+Pre-fill new forms with this `default` value for this field.\n+\n+### `default_jinja2`\n+\n+Pre-fill new forms with a jinja2 snippet defined by `default_jinja2`, useful\n+if you need to call a template helper function or use jinja2 logic to determine\n+the default value for this field.\n \n ### `preset`\n "
                },
                {
                    "sha": "e947d602fe2ecedcf097d1ee27ada9b187eb0047",
                    "filename": "ckanext/scheming/plugins.py",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 0,
                    "changes": 10,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/5ce30cf2856aee97fa7b49de46847f8119dad355/ckanext%2Fscheming%2Fplugins.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/5ce30cf2856aee97fa7b49de46847f8119dad355/ckanext%2Fscheming%2Fplugins.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Fplugins.py?ref=5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "patch": "@@ -177,6 +177,16 @@ def validate(self, context, data_dict, schema, action):\n         scheming_schema = self._expanded_schemas[t]\n         scheming_fields = scheming_schema['fields']\n \n+        before = scheming_schema.get('before_validators')\n+        after = scheming_schema.get('after_validators')\n+\n+        if before:\n+            schema['__before'] = validation.validators_from_string(\n+                before, None, scheming_schema)\n+        if after:\n+            schema['__after'] = validation.validators_from_string(\n+                after, None, scheming_schema)\n+\n         get_validators = (\n             _field_output_validators_group\n             if action_type == 'show' else _field_validators"
                },
                {
                    "sha": "60f5ec075510949223f691263501911cdaaad6d2",
                    "filename": "ckanext/scheming/templates/scheming/group/group_form.html",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 0,
                    "changes": 8,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/5ce30cf2856aee97fa7b49de46847f8119dad355/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Fgroup%2Fgroup_form.html",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/5ce30cf2856aee97fa7b49de46847f8119dad355/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Fgroup%2Fgroup_form.html",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Fgroup%2Fgroup_form.html?ref=5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "patch": "@@ -10,6 +10,14 @@\n {%- endif -%}\n \n <form class=\"dataset-form form-horizontal\" method=\"post\" data-module=\"basic-form\" enctype=\"multipart/form-data\">\n+    {% block errors %}\n+      {%- if errors -%}\n+        {%- set schema = h.scheming_get_group_schema(group_type) -%}\n+        {%- snippet 'scheming/snippets/errors.html',\n+          errors=errors, fields=schema.fields,\n+          entity_type='group', object_type=group_type -%}\n+      {%- endif -%}\n+    {% endblock %}\n     {{ h.csrf_input() if 'csrf_input' in h }}\n     {%- set schema = h.scheming_get_group_schema(group_type) -%}\n     {%- for field in schema['fields'] -%}"
                },
                {
                    "sha": "10a828301257c52120f52e92cb59638624c01b05",
                    "filename": "ckanext/scheming/templates/scheming/organization/group_form.html",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 0,
                    "changes": 8,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/5ce30cf2856aee97fa7b49de46847f8119dad355/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Forganization%2Fgroup_form.html",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/5ce30cf2856aee97fa7b49de46847f8119dad355/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Forganization%2Fgroup_form.html",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Forganization%2Fgroup_form.html?ref=5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "patch": "@@ -12,6 +12,14 @@\n {%- endif -%}\n \n <form class=\"dataset-form form-horizontal\" method=\"post\" data-module=\"basic-form\" enctype=\"multipart/form-data\">\n+    {% block errors %}\n+      {%- if errors -%}\n+        {%- set schema = h.scheming_get_organization_schema(group_type) -%}\n+        {%- snippet 'scheming/snippets/errors.html',\n+          errors=errors, fields=schema.fields,\n+          entity_type='organization', object_type=group_type -%}\n+      {%- endif -%}\n+    {% endblock %}\n     {{ h.csrf_input() if 'csrf_input' in h }}\n     {%- set schema = h.scheming_get_organization_schema(group_type) -%}\n     {%- for field in schema['fields'] -%}"
                }
            ]
        }
    },
    "django": {
        "oc_search": {
            "url": "https://api.github.com/repos/open-data/oc_search/compare/0cb1b617869e2916cd3fe649e851d0810120d2bf...525370deb791fa0e1580da0253dab2aeff18279a",
            "html_url": "https://github.com/open-data/oc_search/compare/0cb1b617869e2916cd3fe649e851d0810120d2bf...525370deb791fa0e1580da0253dab2aeff18279a",
            "permalink_url": "https://github.com/open-data/oc_search/compare/open-data:0cb1b61...open-data:525370d",
            "diff_url": "https://github.com/open-data/oc_search/compare/0cb1b617869e2916cd3fe649e851d0810120d2bf...525370deb791fa0e1580da0253dab2aeff18279a.diff",
            "patch_url": "https://github.com/open-data/oc_search/compare/0cb1b617869e2916cd3fe649e851d0810120d2bf...525370deb791fa0e1580da0253dab2aeff18279a.patch",
            "base_commit": {
                "sha": "0cb1b617869e2916cd3fe649e851d0810120d2bf",
                "node_id": "C_kwDOD-wqodoAKDBjYjFiNjE3ODY5ZTI5MTZjZDNmZTY0OWU4NTFkMDgxMDEyMGQyYmY",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-10-11T15:51:05Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-10-11T15:51:05Z"
                    },
                    "message": "Merge pull request #38 from open-data/pd-breadcrumbs\n\nadd Proactive disclosure to breadcrumb trail",
                    "tree": {
                        "sha": "f49a21b07219f531aeba9324f449d997851b74a5",
                        "url": "https://api.github.com/repos/open-data/oc_search/git/trees/f49a21b07219f531aeba9324f449d997851b74a5"
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/git/commits/0cb1b617869e2916cd3fe649e851d0810120d2bf",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnCUlpCRC1aQ7uu5UhlAAANdkQAFSU09b3FQ5wGxtcT1zgDOzq\n8Xd+8HUKIvxxomWOM7FZZkNynS60ZSdLTkvWB+ME/eaPpdpk4Ss/O7AIcZ6uPP75\nb0b72BlocxKal88Om86FSrfCL7/Beb7Srv0Js/D5VBac6bNjSAskXzkUYrX6aeRA\nvKq5yyo9cmMd8V0w6BpStKLdf12AptiPLO2fHGlbjJu9NrPzF/igXb9q6b6ahYAP\nQs/24kBF/Qara9v3D0BSNmUPa7CsYO0HS2Y515jgC4Lmt8piojgUcWn37zklUgEA\n593su+BGA1tzd8EwW2g9vA6GBC0HAHRCXwc8I0VQdEbGVHjqSvriecoYkzTFbjWT\nde2zYapMb2kqrBp4tio1HjPcgRXR//rN19I12rUJ3OoKsohBh+UkeX2Cm6uWza5r\nIv4/6jOfagQ7mLHwUt3E1UZZyMs6w/HNhihYtrR2BHwdBYkgYhKTc3uiUbBU1Ri8\nQ54xTQw65aC3Avw1g0p5Teas22ujPUanpItuHduiTVO+TwSPL59qNPNxdmQXtoZH\npelsM5ii+SwmgCaaPnGnZiHfQSI9gHfcn2Mmv4w4lNG/F3os7zvceVJG6j1qDWUy\nW3V/Z6kvpyU2lXMVDCmW7v2i3iujwfxxzsom/Uc9ndSA3V1Wkzo8Q3PSqI4b2bCx\n+K/uO1wEzp/r7LSIwiWr\n=jlJ3\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree f49a21b07219f531aeba9324f449d997851b74a5\nparent becc1b90149744669ba377cc9c9ac905baa5b0df\nparent c510e671269776671af60222bc4db81f47298bd3\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1728661865 -0400\ncommitter GitHub <noreply@github.com> 1728661865 -0400\n\nMerge pull request #38 from open-data/pd-breadcrumbs\n\nadd Proactive disclosure to breadcrumb trail",
                        "verified_at": "2024-11-08T05:43:01Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/oc_search/commits/0cb1b617869e2916cd3fe649e851d0810120d2bf",
                "html_url": "https://github.com/open-data/oc_search/commit/0cb1b617869e2916cd3fe649e851d0810120d2bf",
                "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/0cb1b617869e2916cd3fe649e851d0810120d2bf/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "becc1b90149744669ba377cc9c9ac905baa5b0df",
                        "url": "https://api.github.com/repos/open-data/oc_search/commits/becc1b90149744669ba377cc9c9ac905baa5b0df",
                        "html_url": "https://github.com/open-data/oc_search/commit/becc1b90149744669ba377cc9c9ac905baa5b0df"
                    },
                    {
                        "sha": "c510e671269776671af60222bc4db81f47298bd3",
                        "url": "https://api.github.com/repos/open-data/oc_search/commits/c510e671269776671af60222bc4db81f47298bd3",
                        "html_url": "https://github.com/open-data/oc_search/commit/c510e671269776671af60222bc4db81f47298bd3"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "0cb1b617869e2916cd3fe649e851d0810120d2bf",
                "node_id": "C_kwDOD-wqodoAKDBjYjFiNjE3ODY5ZTI5MTZjZDNmZTY0OWU4NTFkMDgxMDEyMGQyYmY",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-10-11T15:51:05Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-10-11T15:51:05Z"
                    },
                    "message": "Merge pull request #38 from open-data/pd-breadcrumbs\n\nadd Proactive disclosure to breadcrumb trail",
                    "tree": {
                        "sha": "f49a21b07219f531aeba9324f449d997851b74a5",
                        "url": "https://api.github.com/repos/open-data/oc_search/git/trees/f49a21b07219f531aeba9324f449d997851b74a5"
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/git/commits/0cb1b617869e2916cd3fe649e851d0810120d2bf",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnCUlpCRC1aQ7uu5UhlAAANdkQAFSU09b3FQ5wGxtcT1zgDOzq\n8Xd+8HUKIvxxomWOM7FZZkNynS60ZSdLTkvWB+ME/eaPpdpk4Ss/O7AIcZ6uPP75\nb0b72BlocxKal88Om86FSrfCL7/Beb7Srv0Js/D5VBac6bNjSAskXzkUYrX6aeRA\nvKq5yyo9cmMd8V0w6BpStKLdf12AptiPLO2fHGlbjJu9NrPzF/igXb9q6b6ahYAP\nQs/24kBF/Qara9v3D0BSNmUPa7CsYO0HS2Y515jgC4Lmt8piojgUcWn37zklUgEA\n593su+BGA1tzd8EwW2g9vA6GBC0HAHRCXwc8I0VQdEbGVHjqSvriecoYkzTFbjWT\nde2zYapMb2kqrBp4tio1HjPcgRXR//rN19I12rUJ3OoKsohBh+UkeX2Cm6uWza5r\nIv4/6jOfagQ7mLHwUt3E1UZZyMs6w/HNhihYtrR2BHwdBYkgYhKTc3uiUbBU1Ri8\nQ54xTQw65aC3Avw1g0p5Teas22ujPUanpItuHduiTVO+TwSPL59qNPNxdmQXtoZH\npelsM5ii+SwmgCaaPnGnZiHfQSI9gHfcn2Mmv4w4lNG/F3os7zvceVJG6j1qDWUy\nW3V/Z6kvpyU2lXMVDCmW7v2i3iujwfxxzsom/Uc9ndSA3V1Wkzo8Q3PSqI4b2bCx\n+K/uO1wEzp/r7LSIwiWr\n=jlJ3\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree f49a21b07219f531aeba9324f449d997851b74a5\nparent becc1b90149744669ba377cc9c9ac905baa5b0df\nparent c510e671269776671af60222bc4db81f47298bd3\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1728661865 -0400\ncommitter GitHub <noreply@github.com> 1728661865 -0400\n\nMerge pull request #38 from open-data/pd-breadcrumbs\n\nadd Proactive disclosure to breadcrumb trail",
                        "verified_at": "2024-11-08T05:43:01Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/oc_search/commits/0cb1b617869e2916cd3fe649e851d0810120d2bf",
                "html_url": "https://github.com/open-data/oc_search/commit/0cb1b617869e2916cd3fe649e851d0810120d2bf",
                "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/0cb1b617869e2916cd3fe649e851d0810120d2bf/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "becc1b90149744669ba377cc9c9ac905baa5b0df",
                        "url": "https://api.github.com/repos/open-data/oc_search/commits/becc1b90149744669ba377cc9c9ac905baa5b0df",
                        "html_url": "https://github.com/open-data/oc_search/commit/becc1b90149744669ba377cc9c9ac905baa5b0df"
                    },
                    {
                        "sha": "c510e671269776671af60222bc4db81f47298bd3",
                        "url": "https://api.github.com/repos/open-data/oc_search/commits/c510e671269776671af60222bc4db81f47298bd3",
                        "html_url": "https://github.com/open-data/oc_search/commit/c510e671269776671af60222bc4db81f47298bd3"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 6,
            "behind_by": 0,
            "total_commits": 6,
            "commits": [
                {
                    "sha": "755a91879155ffd67267b00d7aaef9671e8fd5dc",
                    "node_id": "C_kwDOD-wqodoAKDc1NWE5MTg3OTE1NWZmZDY3MjY3YjAwZDdhYWVmOTY3MWU4ZmQ1ZGM",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-10-15T14:26:15Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-10-15T14:26:15Z"
                        },
                        "message": "re-order search page title to be in the end of breadcrumb trail on record page",
                        "tree": {
                            "sha": "d88e22a585803b9067c84f299cc8f8922f1a65e6",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/d88e22a585803b9067c84f299cc8f8922f1a65e6"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/755a91879155ffd67267b00d7aaef9671e8fd5dc",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/755a91879155ffd67267b00d7aaef9671e8fd5dc",
                    "html_url": "https://github.com/open-data/oc_search/commit/755a91879155ffd67267b00d7aaef9671e8fd5dc",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/755a91879155ffd67267b00d7aaef9671e8fd5dc/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "c510e671269776671af60222bc4db81f47298bd3",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/c510e671269776671af60222bc4db81f47298bd3",
                            "html_url": "https://github.com/open-data/oc_search/commit/c510e671269776671af60222bc4db81f47298bd3"
                        }
                    ]
                },
                {
                    "sha": "74ba21e1d4170c7a3994c74880700f45318bcf51",
                    "node_id": "C_kwDOD-wqodoAKDc0YmEyMWUxZDQxNzBjN2EzOTk0Yzc0ODgwNzAwZjQ1MzE4YmNmNTE",
                    "commit": {
                        "author": {
                            "name": "Rabia Sajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-10-15T15:16:09Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-10-15T15:16:09Z"
                        },
                        "message": "Merge pull request #39 from open-data/pd-breadcrumbs\n\nre-order search page title to be in the end of breadcrumb trail on re…",
                        "tree": {
                            "sha": "d88e22a585803b9067c84f299cc8f8922f1a65e6",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/d88e22a585803b9067c84f299cc8f8922f1a65e6"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/74ba21e1d4170c7a3994c74880700f45318bcf51",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnDoc5CRC1aQ7uu5UhlAAAO4UQAE0FAmsOle6mOmFcrYPIHV8y\nCzlsH9rgzKIKh4Jk48LwMDjPmwuRfMm83WvyahU73W0KFwLiots3VwHvznbYAEqb\nrYpCtvUFRVw0LHwy+mnmReyuJX0GUBXsRTw7sdxmdFfMluabbjZoOpksNKjDCIy4\nFMGhcxTMJ81pgbyl5iMlkIUZoZ8LUwl64KavXOfxLGv7qQj3K+Wq6QSU8l3SH4D2\naamT8+qp3Icw4nWNVn4Xpm69/asDujOkipIGP8DblU62jN0tFoEVmcdQnR7Ae2iP\nFtAth1cRAVTvLW8OoqIfzEk3Jmd0uIQHjpWnVGPo/DLhIYJPrQiK1fs6BRXWG9PN\nQ7SymgVGw707+by5Mp6wlgtJ+1vBQrMSbuhLneO4h08U/33ZytgSVWicjCGTe2uv\nIqneXhMUYS3OJcektvGkx7KQuydYag+MLFVkDL8Q8l4hJYBpUmJ/Bq1eoN1+lk9h\nw8cjAeeX7eZ0+XxFQFYq3ftLIlbxjiOwVBx3vgwBuuks0bdPOrD5IRIS5ei6H6Vj\n9+VrQz9YyK9uk9m8XHOoJALhYfzspt95XluNwZiF5zzqdnCDbvd8pdgF7xCy7uU2\nlCZel1wIsQuJ1f5cKsW3WHG8BaHBeUfRlX30ws6Hky1wMfxenK3duBvu2vjCba49\n1S1nFnJ/f2wxZ0e81c+m\n=0k/D\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree d88e22a585803b9067c84f299cc8f8922f1a65e6\nparent 0cb1b617869e2916cd3fe649e851d0810120d2bf\nparent 755a91879155ffd67267b00d7aaef9671e8fd5dc\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1729005369 -0400\ncommitter GitHub <noreply@github.com> 1729005369 -0400\n\nMerge pull request #39 from open-data/pd-breadcrumbs\n\nre-order search page title to be in the end of breadcrumb trail on re…",
                            "verified_at": "2024-11-08T05:43:01Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/74ba21e1d4170c7a3994c74880700f45318bcf51",
                    "html_url": "https://github.com/open-data/oc_search/commit/74ba21e1d4170c7a3994c74880700f45318bcf51",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/74ba21e1d4170c7a3994c74880700f45318bcf51/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "0cb1b617869e2916cd3fe649e851d0810120d2bf",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/0cb1b617869e2916cd3fe649e851d0810120d2bf",
                            "html_url": "https://github.com/open-data/oc_search/commit/0cb1b617869e2916cd3fe649e851d0810120d2bf"
                        },
                        {
                            "sha": "755a91879155ffd67267b00d7aaef9671e8fd5dc",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/755a91879155ffd67267b00d7aaef9671e8fd5dc",
                            "html_url": "https://github.com/open-data/oc_search/commit/755a91879155ffd67267b00d7aaef9671e8fd5dc"
                        }
                    ]
                },
                {
                    "sha": "e0bd5f391f8aafea9670d599c06d182c53ed0bf3",
                    "node_id": "C_kwDOD-wqodoAKGUwYmQ1ZjM5MWY4YWFmZWE5NjcwZDU5OWMwNmQxODJjNTNlZDBiZjM",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-10-28T15:46:37Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-10-28T15:46:37Z"
                        },
                        "message": "New Django template filter \"intformat\" that allows developer to apply custom python integer formatting.",
                        "tree": {
                            "sha": "e1f45e8c1c8727997ac229ef9b5653b79844d9cd",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/e1f45e8c1c8727997ac229ef9b5653b79844d9cd"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/e0bd5f391f8aafea9670d599c06d182c53ed0bf3",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/e0bd5f391f8aafea9670d599c06d182c53ed0bf3",
                    "html_url": "https://github.com/open-data/oc_search/commit/e0bd5f391f8aafea9670d599c06d182c53ed0bf3",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/e0bd5f391f8aafea9670d599c06d182c53ed0bf3/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "74ba21e1d4170c7a3994c74880700f45318bcf51",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/74ba21e1d4170c7a3994c74880700f45318bcf51",
                            "html_url": "https://github.com/open-data/oc_search/commit/74ba21e1d4170c7a3994c74880700f45318bcf51"
                        }
                    ]
                },
                {
                    "sha": "47826058c4d0212faa152b075c4c81a28783fde3",
                    "node_id": "C_kwDOD-wqodoAKDQ3ODI2MDU4YzRkMDIxMmZhYTE1MmIwNzVjNGM4MWEyODc4M2ZkZTM",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-10-28T17:35:33Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-10-28T17:35:33Z"
                        },
                        "message": "New Django template filter \"intformat\" that allows developer to apply custom python integer formatting.",
                        "tree": {
                            "sha": "c9130ec302f69c166823a158834047c9daae0623",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/c9130ec302f69c166823a158834047c9daae0623"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/47826058c4d0212faa152b075c4c81a28783fde3",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/47826058c4d0212faa152b075c4c81a28783fde3",
                    "html_url": "https://github.com/open-data/oc_search/commit/47826058c4d0212faa152b075c4c81a28783fde3",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/47826058c4d0212faa152b075c4c81a28783fde3/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "e0bd5f391f8aafea9670d599c06d182c53ed0bf3",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/e0bd5f391f8aafea9670d599c06d182c53ed0bf3",
                            "html_url": "https://github.com/open-data/oc_search/commit/e0bd5f391f8aafea9670d599c06d182c53ed0bf3"
                        }
                    ]
                },
                {
                    "sha": "390e524400192747ba54f1560c3289c691e0a43f",
                    "node_id": "C_kwDOD-wqodoAKDM5MGU1MjQ0MDAxOTI3NDdiYTU0ZjE1NjBjMzI4OWM2OTFlMGE0M2Y",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-10-28T19:58:05Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-10-28T19:58:05Z"
                        },
                        "message": "OPEN-3636: Improved error handling of the data_import_ckan_json command",
                        "tree": {
                            "sha": "42d58cc9ceb6712ecaadbbc41847484ead8337ff",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/42d58cc9ceb6712ecaadbbc41847484ead8337ff"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/390e524400192747ba54f1560c3289c691e0a43f",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/390e524400192747ba54f1560c3289c691e0a43f",
                    "html_url": "https://github.com/open-data/oc_search/commit/390e524400192747ba54f1560c3289c691e0a43f",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/390e524400192747ba54f1560c3289c691e0a43f/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "47826058c4d0212faa152b075c4c81a28783fde3",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/47826058c4d0212faa152b075c4c81a28783fde3",
                            "html_url": "https://github.com/open-data/oc_search/commit/47826058c4d0212faa152b075c4c81a28783fde3"
                        }
                    ]
                },
                {
                    "sha": "525370deb791fa0e1580da0253dab2aeff18279a",
                    "node_id": "C_kwDOD-wqodoAKDUyNTM3MGRlYjc5MWZhMGUxNTgwZGEwMjUzZGFiMmFlZmYxODI3OWE",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-11-05T20:35:15Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2024-11-05T20:35:15Z"
                        },
                        "message": "Add custom code and fields to the Open Data search to allow searching by Department name or acronym",
                        "tree": {
                            "sha": "a6d81e30294d80073a41832c6c297d599e154816",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/a6d81e30294d80073a41832c6c297d599e154816"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/525370deb791fa0e1580da0253dab2aeff18279a",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/525370deb791fa0e1580da0253dab2aeff18279a",
                    "html_url": "https://github.com/open-data/oc_search/commit/525370deb791fa0e1580da0253dab2aeff18279a",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/525370deb791fa0e1580da0253dab2aeff18279a/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "390e524400192747ba54f1560c3289c691e0a43f",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/390e524400192747ba54f1560c3289c691e0a43f",
                            "html_url": "https://github.com/open-data/oc_search/commit/390e524400192747ba54f1560c3289c691e0a43f"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "6c55f36bc33381ba855c47a809e474a5b8717644",
                    "filename": "changes/open-3619.feature",
                    "status": "added",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/oc_search/blob/525370deb791fa0e1580da0253dab2aeff18279a/changes%2Fopen-3619.feature",
                    "raw_url": "https://github.com/open-data/oc_search/raw/525370deb791fa0e1580da0253dab2aeff18279a/changes%2Fopen-3619.feature",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/changes%2Fopen-3619.feature?ref=525370deb791fa0e1580da0253dab2aeff18279a",
                    "patch": "@@ -0,0 +1,2 @@\n+Add custom code and fields to the Open Data search to allow searching by Department name or acronym.\n+For example, \"Treasury Board Secretariat\" or \"TBS\". Quotes are not required."
                },
                {
                    "sha": "84b865acb3caf88c2efcc0332715596c853d18e2",
                    "filename": "changes/open-3629.feature",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/oc_search/blob/525370deb791fa0e1580da0253dab2aeff18279a/changes%2Fopen-3629.feature",
                    "raw_url": "https://github.com/open-data/oc_search/raw/525370deb791fa0e1580da0253dab2aeff18279a/changes%2Fopen-3629.feature",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/changes%2Fopen-3629.feature?ref=525370deb791fa0e1580da0253dab2aeff18279a",
                    "patch": "@@ -0,0 +1 @@\n+Added a new Django template filter <code>\"intformat\"</code> that allows developer to apply custom python integer formatting."
                },
                {
                    "sha": "249838aeb24aad9ab9cb2b60a970d96cf3825601",
                    "filename": "changes/open-3646.fix",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/oc_search/blob/525370deb791fa0e1580da0253dab2aeff18279a/changes%2Fopen-3646.fix",
                    "raw_url": "https://github.com/open-data/oc_search/raw/525370deb791fa0e1580da0253dab2aeff18279a/changes%2Fopen-3646.fix",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/changes%2Fopen-3646.fix?ref=525370deb791fa0e1580da0253dab2aeff18279a",
                    "patch": "@@ -0,0 +1 @@\n+Improved error handling of the data_import_ckan_json command to avoid throwing a second exception when try to log very large error messages."
                },
                {
                    "sha": "f7cd63b42ea1019f057b88f11c1f036697ebde82",
                    "filename": "search/management/commands/create_solr_core.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 5,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/oc_search/blob/525370deb791fa0e1580da0253dab2aeff18279a/search%2Fmanagement%2Fcommands%2Fcreate_solr_core.py",
                    "raw_url": "https://github.com/open-data/oc_search/raw/525370deb791fa0e1580da0253dab2aeff18279a/search%2Fmanagement%2Fcommands%2Fcreate_solr_core.py",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/search%2Fmanagement%2Fcommands%2Fcreate_solr_core.py?ref=525370deb791fa0e1580da0253dab2aeff18279a",
                    "patch": "@@ -15,7 +15,6 @@\n         \"filters\": [\n             {\"class\": \"solr.WordDelimiterGraphFilterFactory\", \"preserveOriginal\": \"1\", \"splitOnCaseChange\": \"0\", \"catenateAll\": \"1\"},\n             {\"class\": \"solr.FlattenGraphFilterFactory\"},\n-            {\"class\": \"solr.StopFilterFactory\", \"words\": \"lang/stopwords_en.txt\", \"ignoreCase\": \"true\"},\n             {\"class\": \"solr.LowerCaseFilterFactory\"},\n             {\"class\": \"solr.EnglishPossessiveFilterFactory\"},\n             {\"class\": \"solr.KeywordMarkerFilterFactory\", \"protected\": \"protwords.txt\"},\n@@ -28,7 +27,6 @@\n         \"filters\": [\n             {\"class\": \"solr.WordDelimiterGraphFilterFactory\", \"preserveOriginal\": \"1\", \"splitOnCaseChange\": \"0\", \"catenateAll\": \"1\"},\n             {\"class\": \"solr.FlattenGraphFilterFactory\"},\n-            {\"class\": \"solr.StopFilterFactory\", \"words\": \"lang/stopwords_en.txt\", \"ignoreCase\": \"true\"},\n             {\"class\": \"solr.SynonymGraphFilterFactory\", \"expand\": \"true\", \"ignoreCase\": \"true\", \"synonyms\": \"lang/synonyms_en.txt\"},\n             {\"class\": \"solr.FlattenGraphFilterFactory\"},\n             {\"class\": \"solr.LowerCaseFilterFactory\"},\n@@ -50,7 +48,6 @@\n         \"filters\": [\n             {\"class\": \"solr.ElisionFilterFactory\", \"articles\": \"lang/contractions_fr.txt\", \"ignoreCase\": \"true\"},\n             {\"class\": \"solr.LowerCaseFilterFactory\"},\n-            {\"class\": \"solr.StopFilterFactory\", \"format\": \"snowball\", \"words\": \"lang/stopwords_fr.txt\", \"ignoreCase\": \"true\"},\n             {\"class\": \"solr.FrenchLightStemFilterFactory\"}\n         ]\n     },\n@@ -63,8 +60,6 @@\n             {\"class\": \"solr.FlattenGraphFilterFactory\"},\n             {\"class\": \"solr.ElisionFilterFactory\", \"articles\": \"lang/contractions_fr.txt\", \"ignoreCase\": \"true\"},\n             {\"class\": \"solr.LowerCaseFilterFactory\"},\n-            {\"class\": \"solr.StopFilterFactory\", \"format\": \"snowball\", \"words\": \"lang/stopwords_fr.txt\",\n-             \"ignoreCase\": \"true\"},\n             {\"class\": \"solr.FrenchLightStemFilterFactory\"}\n         ]\n     },"
                },
                {
                    "sha": "fa089715c900ffc1f307c79b1a53c3c816a166a1",
                    "filename": "search/management/commands/import_data_csv.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/oc_search/blob/525370deb791fa0e1580da0253dab2aeff18279a/search%2Fmanagement%2Fcommands%2Fimport_data_csv.py",
                    "raw_url": "https://github.com/open-data/oc_search/raw/525370deb791fa0e1580da0253dab2aeff18279a/search%2Fmanagement%2Fcommands%2Fimport_data_csv.py",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/search%2Fmanagement%2Fcommands%2Fimport_data_csv.py?ref=525370deb791fa0e1580da0253dab2aeff18279a",
                    "patch": "@@ -37,7 +37,7 @@ class Command(BaseCommand):\n     field_codes = {}\n \n     # Number of rows to commit to Solr at a time\n-    cycle_on = 1000\n+    cycle_on = settings.IMPORT_DATA_CSV_SOLR_INDEX_GROUP_SIZE\n \n     discovered_plugins = {\n         name: importlib.import_module(name)"
                },
                {
                    "sha": "e62134cd76724ff422b7261eb5a130b253df3207",
                    "filename": "search/templates/snippets/default_record_breadcrumb.html",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 3,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/oc_search/blob/525370deb791fa0e1580da0253dab2aeff18279a/search%2Ftemplates%2Fsnippets%2Fdefault_record_breadcrumb.html",
                    "raw_url": "https://github.com/open-data/oc_search/raw/525370deb791fa0e1580da0253dab2aeff18279a/search%2Ftemplates%2Fsnippets%2Fdefault_record_breadcrumb.html",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/search%2Ftemplates%2Fsnippets%2Fdefault_record_breadcrumb.html?ref=525370deb791fa0e1580da0253dab2aeff18279a",
                    "patch": "@@ -19,16 +19,17 @@\n             },{\n                 \"title\": \"{% translate 'Open Government' %}\",\n                 \"href\": \"{% translate 'https://open.canada.ca' %}/{{ LANGUAGE_CODE }}\",\n-            },{\n-                \"title\": \"{{ search_title }}\",\n-                \"href\": \"{{ parent_path }}\",\n             },{\n                 \"title\": \"{% translate 'Proactive disclosure' %}\",\n                 {% if not url_uses_path %}\n                 \"href\": \"{% if LANGUAGE_CODE == 'fr' %}{{ site_host_fr }}/fr/divulgation-proactive{% else %}{{ site_host_en }}/en/proactive-disclosure{% endif %}\",\n                 {% else %}\n                 \"href\": \"{% translate 'https://open.canada.ca/en/proactive-disclosure' %}\",\n                 {% endif %}\n+            },{\n+                \"title\": \"{{ search_title }}\",\n+                \"href\": \"{{ parent_path }}\",\n+\n             }]\n         });\n     </script>"
                },
                {
                    "sha": "3bcb72c05d0c75a799b164307c7edcd9eabf5d22",
                    "filename": "search/templatetags/search_extras.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 0,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/oc_search/blob/525370deb791fa0e1580da0253dab2aeff18279a/search%2Ftemplatetags%2Fsearch_extras.py",
                    "raw_url": "https://github.com/open-data/oc_search/raw/525370deb791fa0e1580da0253dab2aeff18279a/search%2Ftemplatetags%2Fsearch_extras.py",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/search%2Ftemplatetags%2Fsearch_extras.py?ref=525370deb791fa0e1580da0253dab2aeff18279a",
                    "patch": "@@ -260,3 +260,7 @@ def ds_status_label(value: str):\n         return 'label label-default'\n \n \n+@register.filter('intformat')\n+def int_format(value: int, formatstr: str):\n+    return formatstr.format(value)\n+"
                }
            ]
        }
    },
    "drupal": {
        "opengov": {
            "url": "https://api.github.com/repos/open-data/opengov/compare/96456839d06678aaec74ce56e4942744baf30ce3...9e44e51b62992c6ff984418c5a13de70b61ef8b5",
            "html_url": "https://github.com/open-data/opengov/compare/96456839d06678aaec74ce56e4942744baf30ce3...9e44e51b62992c6ff984418c5a13de70b61ef8b5",
            "permalink_url": "https://github.com/open-data/opengov/compare/open-data:9645683...open-data:9e44e51",
            "diff_url": "https://github.com/open-data/opengov/compare/96456839d06678aaec74ce56e4942744baf30ce3...9e44e51b62992c6ff984418c5a13de70b61ef8b5.diff",
            "patch_url": "https://github.com/open-data/opengov/compare/96456839d06678aaec74ce56e4942744baf30ce3...9e44e51b62992c6ff984418c5a13de70b61ef8b5.patch",
            "base_commit": {
                "sha": "96456839d06678aaec74ce56e4942744baf30ce3",
                "node_id": "C_kwDOCjBKEtoAKDk2NDU2ODM5ZDA2Njc4YWFlYzc0Y2U1NmU0OTQyNzQ0YmFmMzBjZTM",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-06-10T14:07:47Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-06-10T14:07:47Z"
                    },
                    "message": "Merge pull request #42 from open-data/cdts-5.0.1\n\nupgrade wet libraries",
                    "tree": {
                        "sha": "a79b0aa4352d40c529c5ad94d683ee63540e7221",
                        "url": "https://api.github.com/repos/open-data/opengov/git/trees/a79b0aa4352d40c529c5ad94d683ee63540e7221"
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/git/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmZwizCRC1aQ7uu5UhlAAAYggQAB7kmSp8wajrTj7gp7dFKXvT\nkWVaS0l94gOU7jO9S8iI1vd9MPUlGNMkT7l3HxRnT0iWXGdLhltPH+WzZMVGPuvl\nMOVYJ2bIDmVeX5IxXhb+VSYl18Qbw18KZEDWzyupXqClB9np5fBZ+9f7CwfxwMcv\n04RDSV+4SzVZ6aR5pyLldeVp/oGnbvS3Iww3Lc0rNHuH6Mh0PfNd1RSEvv7RxajU\ngigJIvyJxql7gAbOAhsomfM1naKiqxdmtAmi6hkQ8GeFX23EoKG4aZpMmTXVQ+3W\ni8YxLn6lNb9Lx6Zm1y/FdGbxxie7aEsFE9d+ltrM4+31q+8e64gsHQT7lVaZLvlA\ndPn83iywKltGL+aJiY02FCjJLekgEy0XtEuoBOyh5leknowmUnrAuU/Al5hdteec\nYNEs/DXIswD16jhFZ84NM4bQeea5eU2iAXOBwxvv3mOXmy+yyVd2hAJdFrnSYyKh\n6G+VUxplBLnc2zKewklLWocqYTXMMYpquWTt0aqWrxwke93U8BDaAvZ17tLQYLak\nILdTeSC9iQjzLYerx7Ln11vVft49Jg/4IirQnD5VRET+e03ek/Cr6xz+t4TAZsDt\nDF9mr60dMNIIQ2pt3/eC49psy2Ik93f2aQuffnX+ji+QwpqgU4iZ7nJzVLFOH54f\npxdWf3N3JYcC9r6gdobp\n=JSP6\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree a79b0aa4352d40c529c5ad94d683ee63540e7221\nparent 114c678a04491e9a234cb6243e854778e010d990\nparent a6220d552e0abee131643bd9a31561095afb5b71\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1718028467 -0400\ncommitter GitHub <noreply@github.com> 1718028467 -0400\n\nMerge pull request #42 from open-data/cdts-5.0.1\n\nupgrade wet libraries",
                        "verified_at": "2024-11-09T02:43:12Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                "html_url": "https://github.com/open-data/opengov/commit/96456839d06678aaec74ce56e4942744baf30ce3",
                "comments_url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "114c678a04491e9a234cb6243e854778e010d990",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/114c678a04491e9a234cb6243e854778e010d990",
                        "html_url": "https://github.com/open-data/opengov/commit/114c678a04491e9a234cb6243e854778e010d990"
                    },
                    {
                        "sha": "a6220d552e0abee131643bd9a31561095afb5b71",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/a6220d552e0abee131643bd9a31561095afb5b71",
                        "html_url": "https://github.com/open-data/opengov/commit/a6220d552e0abee131643bd9a31561095afb5b71"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "96456839d06678aaec74ce56e4942744baf30ce3",
                "node_id": "C_kwDOCjBKEtoAKDk2NDU2ODM5ZDA2Njc4YWFlYzc0Y2U1NmU0OTQyNzQ0YmFmMzBjZTM",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-06-10T14:07:47Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-06-10T14:07:47Z"
                    },
                    "message": "Merge pull request #42 from open-data/cdts-5.0.1\n\nupgrade wet libraries",
                    "tree": {
                        "sha": "a79b0aa4352d40c529c5ad94d683ee63540e7221",
                        "url": "https://api.github.com/repos/open-data/opengov/git/trees/a79b0aa4352d40c529c5ad94d683ee63540e7221"
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/git/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmZwizCRC1aQ7uu5UhlAAAYggQAB7kmSp8wajrTj7gp7dFKXvT\nkWVaS0l94gOU7jO9S8iI1vd9MPUlGNMkT7l3HxRnT0iWXGdLhltPH+WzZMVGPuvl\nMOVYJ2bIDmVeX5IxXhb+VSYl18Qbw18KZEDWzyupXqClB9np5fBZ+9f7CwfxwMcv\n04RDSV+4SzVZ6aR5pyLldeVp/oGnbvS3Iww3Lc0rNHuH6Mh0PfNd1RSEvv7RxajU\ngigJIvyJxql7gAbOAhsomfM1naKiqxdmtAmi6hkQ8GeFX23EoKG4aZpMmTXVQ+3W\ni8YxLn6lNb9Lx6Zm1y/FdGbxxie7aEsFE9d+ltrM4+31q+8e64gsHQT7lVaZLvlA\ndPn83iywKltGL+aJiY02FCjJLekgEy0XtEuoBOyh5leknowmUnrAuU/Al5hdteec\nYNEs/DXIswD16jhFZ84NM4bQeea5eU2iAXOBwxvv3mOXmy+yyVd2hAJdFrnSYyKh\n6G+VUxplBLnc2zKewklLWocqYTXMMYpquWTt0aqWrxwke93U8BDaAvZ17tLQYLak\nILdTeSC9iQjzLYerx7Ln11vVft49Jg/4IirQnD5VRET+e03ek/Cr6xz+t4TAZsDt\nDF9mr60dMNIIQ2pt3/eC49psy2Ik93f2aQuffnX+ji+QwpqgU4iZ7nJzVLFOH54f\npxdWf3N3JYcC9r6gdobp\n=JSP6\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree a79b0aa4352d40c529c5ad94d683ee63540e7221\nparent 114c678a04491e9a234cb6243e854778e010d990\nparent a6220d552e0abee131643bd9a31561095afb5b71\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1718028467 -0400\ncommitter GitHub <noreply@github.com> 1718028467 -0400\n\nMerge pull request #42 from open-data/cdts-5.0.1\n\nupgrade wet libraries",
                        "verified_at": "2024-11-09T02:43:12Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                "html_url": "https://github.com/open-data/opengov/commit/96456839d06678aaec74ce56e4942744baf30ce3",
                "comments_url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "114c678a04491e9a234cb6243e854778e010d990",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/114c678a04491e9a234cb6243e854778e010d990",
                        "html_url": "https://github.com/open-data/opengov/commit/114c678a04491e9a234cb6243e854778e010d990"
                    },
                    {
                        "sha": "a6220d552e0abee131643bd9a31561095afb5b71",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/a6220d552e0abee131643bd9a31561095afb5b71",
                        "html_url": "https://github.com/open-data/opengov/commit/a6220d552e0abee131643bd9a31561095afb5b71"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 3,
            "behind_by": 0,
            "total_commits": 3,
            "commits": [
                {
                    "sha": "9aeece423684d209b035a34946e8e1903c27b9b5",
                    "node_id": "C_kwDOCjBKEtoAKDlhZWVjZTQyMzY4NGQyMDliMDM1YTM0OTQ2ZThlMTkwM2MyN2I5YjU",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T16:10:07Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T16:10:07Z"
                        },
                        "message": "security update for drupal/core and contrib modules",
                        "tree": {
                            "sha": "b74abd4dc37222bb6ecc6cbc2d6baa7405d18393",
                            "url": "https://api.github.com/repos/open-data/opengov/git/trees/b74abd4dc37222bb6ecc6cbc2d6baa7405d18393"
                        },
                        "url": "https://api.github.com/repos/open-data/opengov/git/commits/9aeece423684d209b035a34946e8e1903c27b9b5",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/commits/9aeece423684d209b035a34946e8e1903c27b9b5",
                    "html_url": "https://github.com/open-data/opengov/commit/9aeece423684d209b035a34946e8e1903c27b9b5",
                    "comments_url": "https://api.github.com/repos/open-data/opengov/commits/9aeece423684d209b035a34946e8e1903c27b9b5/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "96456839d06678aaec74ce56e4942744baf30ce3",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                            "html_url": "https://github.com/open-data/opengov/commit/96456839d06678aaec74ce56e4942744baf30ce3"
                        }
                    ]
                },
                {
                    "sha": "ebadab617ddd422fe2445cfc86c5a87cc589a390",
                    "node_id": "C_kwDOCjBKEtoAKGViYWRhYjYxN2RkZDQyMmZlMjQ0NWNmYzg2YzVhODdjYzU4OWEzOTA",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T19:03:11Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T19:03:11Z"
                        },
                        "message": "add changelog for PR# 45",
                        "tree": {
                            "sha": "f9e0befa66549345c5a340c6706ce0aaf3846e37",
                            "url": "https://api.github.com/repos/open-data/opengov/git/trees/f9e0befa66549345c5a340c6706ce0aaf3846e37"
                        },
                        "url": "https://api.github.com/repos/open-data/opengov/git/commits/ebadab617ddd422fe2445cfc86c5a87cc589a390",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/commits/ebadab617ddd422fe2445cfc86c5a87cc589a390",
                    "html_url": "https://github.com/open-data/opengov/commit/ebadab617ddd422fe2445cfc86c5a87cc589a390",
                    "comments_url": "https://api.github.com/repos/open-data/opengov/commits/ebadab617ddd422fe2445cfc86c5a87cc589a390/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9aeece423684d209b035a34946e8e1903c27b9b5",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/9aeece423684d209b035a34946e8e1903c27b9b5",
                            "html_url": "https://github.com/open-data/opengov/commit/9aeece423684d209b035a34946e8e1903c27b9b5"
                        }
                    ]
                },
                {
                    "sha": "9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "node_id": "C_kwDOCjBKEtoAKDllNDRlNTFiNjI5OTJjNmZmOTg0NDE4YzVhMTNkZTcwYjYxZWY4YjU",
                    "commit": {
                        "author": {
                            "name": "Rabia Sajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T19:03:32Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T19:03:32Z"
                        },
                        "message": "Merge pull request #45 from open-data/drupal/core/10.2.10\n\nsecurity update for drupal/core and contrib modules",
                        "tree": {
                            "sha": "f9e0befa66549345c5a340c6706ce0aaf3846e37",
                            "url": "https://api.github.com/repos/open-data/opengov/git/trees/f9e0befa66549345c5a340c6706ce0aaf3846e37"
                        },
                        "url": "https://api.github.com/repos/open-data/opengov/git/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM6aECRC1aQ7uu5UhlAAA8VQQAGIuW4QDf/SCJ6HM7+jwrbow\nNJlRdpaWN9PVphjj+RaU9K32vHGg16pDf3/BKw3v2Fk/ccqKg5lpEPJRRQsvHOHE\nQRPFv7urb6Hdu5228lGmJ+KIjrYJDzkL3/7WyhPvT+mObeqB0EDJEDGe81kG6Wd8\nsTeBZHJQl7NJHqpq4FdHF+jGkonLd9oREv3ud2MkZ0vNKgahCs32GVN6AwTTEvub\n9eZzvKwjWi3tpu7OxtKWijrG1no05f1OgxF7Wu3VXvyZvmAcqtYLLlshln+Hemch\n8iCZYsjX6mKnkttU0yFHI6oJ4x2xujzM92n6NNFQW9tDCaEbHQIrOtEfDaMHY6GY\nQWPhwRtC20stMYXHV5ex1U+o1pSETlmUDd+gVAokjyc4cz1Y5Fw3Bd8zAZJXF3E6\ngNURBUinRnCxrraLpKEeUbOrtYX0pLrL2eMPTsPTgZYDxVMTgNpWbeNKtysQ7MDe\n/1TKcc3RLyh/ErQ8qOHQJVYrm4BSgjwcS32Pv6XkSVGFUEucMEH+hccqsjsVPYkn\niouFw6fB9iYJEiUetbfxinnzOu2GBxTVx4DUXgq7Iu98iPERUibgaJbGeigG+agZ\nKPQB3qWpt1s77uQa6v8RFTY82fbrY8IGz2kRcoH8IesIlvL/Mi8mbjKMJYLJmBkm\n1ACKc4nSvt+yQUXrLIQF\n=pgg2\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree f9e0befa66549345c5a340c6706ce0aaf3846e37\nparent 96456839d06678aaec74ce56e4942744baf30ce3\nparent ebadab617ddd422fe2445cfc86c5a87cc589a390\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1731438212 -0500\ncommitter GitHub <noreply@github.com> 1731438212 -0500\n\nMerge pull request #45 from open-data/drupal/core/10.2.10\n\nsecurity update for drupal/core and contrib modules",
                            "verified_at": "2024-11-12T19:05:25Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "html_url": "https://github.com/open-data/opengov/commit/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "comments_url": "https://api.github.com/repos/open-data/opengov/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "96456839d06678aaec74ce56e4942744baf30ce3",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                            "html_url": "https://github.com/open-data/opengov/commit/96456839d06678aaec74ce56e4942744baf30ce3"
                        },
                        {
                            "sha": "ebadab617ddd422fe2445cfc86c5a87cc589a390",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/ebadab617ddd422fe2445cfc86c5a87cc589a390",
                            "html_url": "https://github.com/open-data/opengov/commit/ebadab617ddd422fe2445cfc86c5a87cc589a390"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "e7b792f8407c7c95dd9a5f34646643adb4fa7a37",
                    "filename": ".gitattributes",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/.gitattributes",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/.gitattributes",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/.gitattributes?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -42,6 +42,9 @@\n *.xml     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2\n *.yml     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2\n \n+# PHPStan's baseline uses tabs instead of spaces.\n+core/.phpstan-baseline.php text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tabwidth=2 diff=php linguist-language=php\n+\n # Define binary file attributes.\n # - Do not treat them as text.\n # - Include binary diff in patches instead of \"binary files differ.\""
                },
                {
                    "sha": "7fe58c3f8dbbaf5983a81df4fa01a509217885bb",
                    "filename": "changes/45.feature",
                    "status": "added",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/changes%2F45.feature",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/changes%2F45.feature",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/changes%2F45.feature?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,3 @@\n+Apply security update for:\n+- SA-CORE-2024-002\n+- SA-CONTRIB-2024-047\n\\ No newline at end of file"
                },
                {
                    "sha": "08abfd3d87dab5ffa035a12730d91ff93c6b28a9",
                    "filename": "composer.json",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 5,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/composer.json",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/composer.json",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/composer.json?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -68,14 +68,15 @@\n         \"allow-plugins\": {\n             \"composer/installers\": true,\n             \"cweagans/composer-patches\": true,\n+            \"dealerdirect/phpcodesniffer-composer-installer\": true,\n             \"drupal/console-extend-plugin\": true,\n-            \"oomphinc/composer-installers-extender\": true,\n-            \"zaporylie/composer-drupal-optimizations\": true,\n-            \"wikimedia/composer-merge-plugin\": true,\n             \"drupal/core-composer-scaffold\": true,\n-            \"dealerdirect/phpcodesniffer-composer-installer\": true,\n+            \"oomphinc/composer-installers-extender\": true,\n             \"php-http/discovery\": true,\n-            \"phpstan/extension-installer\": true\n+            \"phpstan/extension-installer\": true,\n+            \"tbachert/spi\": true,\n+            \"wikimedia/composer-merge-plugin\": true,\n+            \"zaporylie/composer-drupal-optimizations\": true\n         }\n     },\n     \"extra\": {"
                },
                {
                    "sha": "9d6a0d669a2d9ee59a4f765b0ff4c14b24541acd",
                    "filename": "composer.lock",
                    "status": "modified",
                    "additions": 1178,
                    "deletions": 805,
                    "changes": 1983,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/composer.lock",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/composer.lock",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/composer.lock?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5"
                },
                {
                    "sha": "78c3c99b605d5364a711ad75f13659e5a8a7e018",
                    "filename": "html/core/.cspell.json",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2F.cspell.json",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2F.cspell.json",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2F.cspell.json?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -68,7 +68,8 @@\n       \"grey\",\n       \"hte\",\n       \"ist\",\n-      \"please\"\n+      \"please\",\n+      \"queuing\"\n     ],\n     \"overrides\": [\n       {"
                },
                {
                    "sha": "f55498abc019f4907cd5a92564c7a6f4813cdc37",
                    "filename": "html/core/.deprecation-ignore.txt",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 0,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2F.deprecation-ignore.txt",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2F.deprecation-ignore.txt",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2F.deprecation-ignore.txt?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -55,3 +55,19 @@\n %The \".*\" class uses \"Symfony\\\\Component\\\\DependencyInjection\\\\ContainerAwareTrait\" that is deprecated since Symfony 6.4, use dependency injection instead.%\n %The \".*\" class implements \"Symfony\\\\Component\\\\DependencyInjection\\\\ContainerAwareInterface\" that is deprecated since Symfony 6.4, use dependency injection instead.%\n %The \".*\" interface extends \"Symfony\\\\Component\\\\DependencyInjection\\\\ContainerAwareInterface\" that is deprecated since Symfony 6.4, use dependency injection instead.%\n+\n+# Twig 3.\n+%The \".*\" class extends \"Twig\\\\NodeVisitor\\\\AbstractNodeVisitor\" that is deprecated since 3.9%\n+%Since twig/twig 3.9: Twig node \"Drupal\\\\Core\\\\Template\\\\TwigNodeTrans\" is not marked as ready for using \"yield\" instead of \"echo\"; please make it ready and then flag it with the #\\[YieldReady\\] attribute.%\n+%Since twig/twig 3.9: Twig node \"Drupal\\\\sdc_other_node_visitor\\\\.*\" is not marked as ready for using \"yield\" instead of \"echo\"; please make it ready and then flag it with the #\\[YieldReady\\] attribute.%\n+%Since twig/twig 3.9: Using \"echo\" is deprecated, use \"yield\" instead in \"Drupal\\\\Core\\\\Template\\\\TwigNodeTrans\", then flag the class with #\\[YieldReady\\].%\n+%Since twig/twig 3.11: Changing the value of a \"filter\" node in a NodeVisitor class is not supported anymore.%\n+%Since twig/twig 3.12: Not passing an instance of \"TwigFunction\" when creating a \"attach_library\" function of type \"Twig\\\\Node\\\\Expression\\\\FunctionExpression\" is deprecated.%\n+%Since twig/twig 3.12: Not passing an instance of \"TwigFunction\" when creating a \"sdc_additional_context\" function of type \"Twig\\\\Node\\\\Expression\\\\FunctionExpression\" is deprecated.%\n+%Since twig/twig 3.12: Not passing an instance of \"TwigFunction\" when creating a \"render_var\" function of type \"Twig\\\\Node\\\\Expression\\\\FunctionExpression\" is deprecated.%\n+%Since twig/twig 3.12: Not passing an instance of \"TwigFunction\" when creating a \"sdc_validate_props\" function of type \"Twig\\\\Node\\\\Expression\\\\FunctionExpression\" is deprecated.%\n+%Since twig/twig 3.12: Getting node \"filter\" on a \"Twig\\\\Node\\\\Expression\\\\FilterExpression\" class is deprecated.%\n+%Since twig/twig 3.12: Getting node \"filter\" on a \"Twig\\\\Node\\\\Expression\\\\Filter\\\\DefaultFilter\" class is deprecated.%\n+%Since twig/twig 3.12: Getting node \"filter\" on a \"Twig\\\\Node\\\\Expression\\\\Filter\\\\RawFilter\" class is deprecated.%\n+%Since twig/twig 3.12: The \"tag\" constructor argument of the \"Drupal\\\\Core\\\\Template\\\\TwigNodeTrans\" class is deprecated and ignored%\n+%Since twig/twig 3.12: Twig Filter \"spaceless\" is deprecated%"
                },
                {
                    "sha": "1029ebfef9f277bc65382c6490b357e7a757c89d",
                    "filename": "html/core/.phpstan-baseline.php",
                    "status": "added",
                    "additions": 3459,
                    "deletions": 0,
                    "changes": 3459,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2F.phpstan-baseline.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2F.phpstan-baseline.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2F.phpstan-baseline.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5"
                },
                {
                    "sha": "d4d09ff8b3cc3157ac32d2ef951059b5d5f66ce9",
                    "filename": "html/core/COPYRIGHT.txt",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2FCOPYRIGHT.txt",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2FCOPYRIGHT.txt",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2FCOPYRIGHT.txt?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -26,7 +26,7 @@ JavaScript\n \n   CKEditor5 - Copyright (c) 2003 CKSource Holding sp. z o.o.\n \n-  JavaScript Cookie - Copyright (c) 2006 Klaus Hartl & Fagner Brack\n+  JavaScript Cookie - Copyright (c) 2018 Copyright 2018 Klaus Hartl, Fagner Brack, GitHub Contributors\n \n   jQuery - Copyright (c) OpenJS Foundation and other contributors\n "
                },
                {
                    "sha": "2da41452d5a131600d99e5a6d84d666d26a41fa4",
                    "filename": "html/core/MAINTAINERS.txt",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2FMAINTAINERS.txt",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2FMAINTAINERS.txt",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2FMAINTAINERS.txt?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -263,6 +263,7 @@ Layout Builder\n - Ted Bowman 'tedbow' https://www.drupal.org/u/tedbow\n - Emilie Nouveau 'DyanneNova' https://www.drupal.org/u/dyannenova\n - Tim Plunkett 'tim.plunkett' https://www.drupal.org/u/tim.plunkett\n+- Daniel Veza 'DanielVeza' https://www.drupal.org/u/DanielVeza\n \n Link Field\n - Weber Macedo 'Mac_Weber' https://www.drupal.org/u/mac_weber\n@@ -421,6 +422,7 @@ Umami demo\n - Gareth Goodwin 'smaz' https://www.drupal.org/u/smaz\n - Keith Jay 'kjay' https://www.drupal.org/u/kjay\n - Ofer Shaal 'shaal' https://www.drupal.org/u/shaal\n+- Ivan Berdinsky 'finnsky' https://www.drupal.org/u/finnsky\n \n Update Manager\n - Ted Bowman 'tedbow' https://www.drupal.org/u/tedbow"
                },
                {
                    "sha": "f9bfea503b9d7369510d0acc02b81537ab674a39",
                    "filename": "html/core/USAGE.txt",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2FUSAGE.txt",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2FUSAGE.txt",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2FUSAGE.txt?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -15,8 +15,6 @@ More about configuration:\n    See INSTALL.txt and UPDATE.txt in the \"core\" directory.\n  * Learn about how to use Drupal to create your site:\n    https://www.drupal.org/documentation\n- * Follow best practices:\n-   https://www.drupal.org/best-practices\n  * Download contributed modules to /modules to extend Drupal's functionality:\n    https://www.drupal.org/project/project_module\n  * See also: \"Developing for Drupal\" for writing your own modules, below."
                },
                {
                    "sha": "8819d64317289890b300b0691bb9a0f7bd72d0bd",
                    "filename": "html/core/assets/scaffold/files/default.settings.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fdefault.settings.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fdefault.settings.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fdefault.settings.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -181,8 +181,8 @@\n  *\n  * WARNING: The above defaults are designed for database portability. Changing\n  * them may cause unexpected behavior, including potential data loss. See\n- * https://www.drupal.org/developing/api/database/configuration for more\n- * information on these defaults and the potential issues.\n+ * https://www.drupal.org/docs/8/api/database-api/database-configuration for\n+ * more information on these defaults and the potential issues.\n  *\n  * More details can be found in the constructor methods for each driver:\n  * - \\Drupal\\mysql\\Driver\\Database\\mysql\\Connection::__construct()"
                },
                {
                    "sha": "f84da04588491fbb945a29ac8e3364fcfc07db41",
                    "filename": "html/core/assets/scaffold/files/example.sites.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fexample.sites.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fexample.sites.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fexample.sites.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -53,5 +53,5 @@\n  *\n  * @see default.settings.php\n  * @see \\Drupal\\Core\\DrupalKernel::getSitePath()\n- * @see https://www.drupal.org/documentation/install/multi-site\n+ * @see https://www.drupal.org/docs/getting-started/multisite-drupal\n  */"
                },
                {
                    "sha": "e7b792f8407c7c95dd9a5f34646643adb4fa7a37",
                    "filename": "html/core/assets/scaffold/files/gitattributes",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fgitattributes",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fgitattributes",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fassets%2Fscaffold%2Ffiles%2Fgitattributes?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -42,6 +42,9 @@\n *.xml     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2\n *.yml     text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tab-in-indent,tabwidth=2\n \n+# PHPStan's baseline uses tabs instead of spaces.\n+core/.phpstan-baseline.php text eol=lf whitespace=blank-at-eol,-blank-at-eof,-space-before-tab,tabwidth=2 diff=php linguist-language=php\n+\n # Define binary file attributes.\n # - Do not treat them as text.\n # - Include binary diff in patches instead of \"binary files differ.\""
                },
                {
                    "sha": "8ed8b7da00df00f37c29359e361b186f2e733ca6",
                    "filename": "html/core/composer.json",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fcomposer.json",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fcomposer.json",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fcomposer.json?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -33,7 +33,7 @@\n         \"symfony/process\": \"^6.4\",\n         \"symfony/polyfill-iconv\": \"^1.26\",\n         \"symfony/yaml\": \"^6.4\",\n-        \"twig/twig\": \"^3.5.0\",\n+        \"twig/twig\": \"^3.14.0\",\n         \"doctrine/annotations\": \"^1.14\",\n         \"guzzlehttp/guzzle\": \"^7.5\",\n         \"guzzlehttp/psr7\": \"^2.4.5\","
                },
                {
                    "sha": "f187114139a9b787db07464071e73de0b71dce58",
                    "filename": "html/core/core.api.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 3,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fcore.api.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fcore.api.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fcore.api.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1555,9 +1555,7 @@\n  * Ideally, all code that is included in Drupal Core and contributed modules,\n  * themes, and distributions will be secure, internationalized, maintainable,\n  * and efficient. In order to facilitate this, the Drupal community has\n- * developed a set of guidelines and standards for developers to follow. Most of\n- * these standards can be found under\n- * @link https://www.drupal.org/developing/best-practices Best practices on Drupal.org @endlink\n+ * developed a set of guidelines and standards for developers to follow.\n  *\n  * Standards and best practices that developers should be aware of include:\n  * - Security: https://www.drupal.org/writing-secure-code and the"
                },
                {
                    "sha": "4c07635d0a6a56bb968d6135b140da85f5f15d79",
                    "filename": "html/core/includes/errors.inc",
                    "status": "modified",
                    "additions": 26,
                    "deletions": 18,
                    "changes": 44,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fincludes%2Ferrors.inc",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fincludes%2Ferrors.inc",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fincludes%2Ferrors.inc?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -84,7 +84,7 @@ function _drupal_error_handler_real($error_level, $message, $filename, $line) {\n   }\n   // If the site is a test site then fail for user deprecations so they can be\n   // caught by the deprecation error handler.\n-  elseif (DRUPAL_TEST_IN_CHILD_SITE && $error_level === E_USER_DEPRECATED) {\n+  elseif (defined('DRUPAL_TEST_IN_CHILD_SITE') && DRUPAL_TEST_IN_CHILD_SITE && $error_level === E_USER_DEPRECATED) {\n     static $seen = [];\n     if (array_search($message, $seen, TRUE) === FALSE) {\n       // Only report each deprecation once. Too many headers can break some\n@@ -147,7 +147,7 @@ function error_displayable($error = NULL) {\n  *   Non-recoverable fatal errors cannot be logged by Drupal.\n  */\n function _drupal_log_error($error, $fatal = FALSE) {\n-  $is_installer = InstallerKernel::installationAttempted();\n+  $is_installer = InstallerKernel::installationAttempted() && \\Drupal::hasContainer();\n \n   // Backtrace, exception and 'severity_level' are not valid replacement values\n   // for t().\n@@ -158,7 +158,7 @@ function _drupal_log_error($error, $fatal = FALSE) {\n \n   // When running inside the testing framework, we relay the errors\n   // to the tested site by the way of HTTP headers.\n-  if (DRUPAL_TEST_IN_CHILD_SITE && !headers_sent() && (!defined('SIMPLETEST_COLLECT_ERRORS') || SIMPLETEST_COLLECT_ERRORS)) {\n+  if (defined('DRUPAL_TEST_IN_CHILD_SITE') && DRUPAL_TEST_IN_CHILD_SITE && !headers_sent() && (!defined('SIMPLETEST_COLLECT_ERRORS') || SIMPLETEST_COLLECT_ERRORS)) {\n     _drupal_error_header($error['@message'], $error['%type'], $error['%function'], $error['%file'], $error['%line']);\n   }\n \n@@ -174,7 +174,7 @@ function _drupal_log_error($error, $fatal = FALSE) {\n       // implementations to use it.\n       \\Drupal::logger('php')->log($severity, '%type: @message in %function (line %line of %file) @backtrace_string.', $error + ['backtrace' => $backtrace, 'exception' => $exception, 'severity_level' => $severity]);\n     }\n-    catch (\\Exception $e) {\n+    catch (\\Throwable) {\n       // We can't log, for example because the database connection is not\n       // available. At least try to log to PHP error log.\n       error_log(strtr('Failed to log error: ' . Error::DEFAULT_ERROR_MESSAGE . ' @backtrace_string', $error));\n@@ -223,12 +223,16 @@ function _drupal_log_error($error, $fatal = FALSE) {\n       }\n \n       // Attempt to reduce verbosity by removing DRUPAL_ROOT from the file path\n-      // in the message. This does not happen for (false) security.\n-      if (\\Drupal::hasService('kernel')) {\n-        $root_length = strlen(\\Drupal::root());\n-        if (substr($error['%file'], 0, $root_length) == \\Drupal::root()) {\n-          $error['%file'] = substr($error['%file'], $root_length + 1);\n-        }\n+      // in the message. This also prevents full path disclosure, see\n+      // https://owasp.org/www-community/attacks/Full_Path_Disclosure.\n+      try {\n+        $root = \\Drupal::root();\n+      }\n+      catch (\\Throwable) {\n+        $root = realpath(dirname(__DIR__, 2));\n+      }\n+      if (str_starts_with($error['%file'], $root)) {\n+        $error['%file'] = substr($error['%file'], strlen($root) + 1);\n       }\n \n       // Check if verbose error reporting is on.\n@@ -244,14 +248,13 @@ function _drupal_log_error($error, $fatal = FALSE) {\n       }\n       else {\n         // With verbose logging, we will also include a backtrace.\n-\n         // First trace is the error itself, already contained in the message.\n-        // While the second trace is the error source and also contained in the\n-        // message, the message doesn't contain argument values, so we output it\n-        // once more in the backtrace.\n         array_shift($backtrace);\n-        // Generate a backtrace containing only scalar argument values.\n-        $error['@backtrace'] = Error::formatBacktrace($backtrace);\n+        // Strip arguments from the backtrace.\n+        $error['@backtrace'] = Error::formatBacktrace(array_map(function ($trace) {\n+          unset($trace['args']);\n+          return $trace;\n+        }, $backtrace));\n         $message = new FormattableMarkup('<details class=\"error-with-backtrace\"><summary>' . Error::DEFAULT_ERROR_MESSAGE . '</summary><pre class=\"backtrace\">@backtrace</pre></details>', $error);\n       }\n     }\n@@ -268,8 +271,13 @@ function _drupal_log_error($error, $fatal = FALSE) {\n           '#title' => 'Error',\n           '#markup' => $message,\n         ];\n-        install_display_output($output, $GLOBALS['install_state']);\n-        exit;\n+        try {\n+          install_display_output($output, $GLOBALS['install_state']);\n+          exit;\n+        }\n+        catch (\\Throwable) {\n+          // The maintenance page failed, so fall back to a plain error message.\n+        }\n       }\n \n       $response->setContent($message);"
                },
                {
                    "sha": "1cb064e2757e7a8af3096cfd0aeb8cbb0f4c45ea",
                    "filename": "html/core/includes/form.inc",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fincludes%2Fform.inc",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fincludes%2Fform.inc",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fincludes%2Fform.inc?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -255,7 +255,6 @@ function template_preprocess_details(&$variables) {\n       $variables['summary_attributes']['aria-controls'] = $element['#attributes']['id'];\n     }\n     $variables['summary_attributes']['aria-expanded'] = !empty($element['#attributes']['open']) ? 'true' : 'false';\n-    $variables['summary_attributes']['aria-pressed'] = $variables['summary_attributes']['aria-expanded'];\n   }\n   $variables['title'] = (!empty($element['#title'])) ? $element['#title'] : '';\n   // If the element title is a string, wrap it a render array so that markup"
                },
                {
                    "sha": "6d2c29126048d71cf58363f2b873b4b9db51b158",
                    "filename": "html/core/includes/install.inc",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fincludes%2Finstall.inc",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fincludes%2Finstall.inc",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fincludes%2Finstall.inc?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -511,7 +511,7 @@ function drupal_install_system($install_state) {\n   $kernel = \\Drupal::service('kernel');\n   $kernel->shutdown();\n   // Have installer rebuild from the disk, rather then building from scratch.\n-  $kernel->rebuildContainer(FALSE);\n+  $kernel->rebuildContainer();\n   // Reboot the kernel with new container.\n   $kernel->boot();\n   $kernel->preHandle($request);"
                },
                {
                    "sha": "e123db239734c726458a24a0f879b32fa8a5126f",
                    "filename": "html/core/install.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Finstall.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Finstall.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Finstall.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -43,6 +43,11 @@\n   exit();\n }\n \n+// Set the Drupal custom error handler.\n+require_once $root_path . '/core/includes/errors.inc';\n+set_error_handler('_drupal_error_handler');\n+set_exception_handler('_drupal_exception_handler');\n+\n // Start the installer.\n require_once $root_path . '/core/includes/install.core.inc';\n install_drupal($class_loader);"
                },
                {
                    "sha": "6f1cd04de2a54be082469b45a3c7850d19dd9cab",
                    "filename": "html/core/lib/Drupal.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -75,7 +75,7 @@ class Drupal {\n   /**\n    * The current system version.\n    */\n-  const VERSION = '10.2.3';\n+  const VERSION = '10.2.10';\n \n   /**\n    * Core API compatibility."
                },
                {
                    "sha": "fb0ce98134f3f5e05b8637f7b02ef0bbf0dcd4cd",
                    "filename": "html/core/lib/Drupal/Component/Annotation/Doctrine/DocParser.php",
                    "status": "modified",
                    "additions": 28,
                    "deletions": 4,
                    "changes": 32,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FAnnotation%2FDoctrine%2FDocParser.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FAnnotation%2FDoctrine%2FDocParser.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FComponent%2FAnnotation%2FDoctrine%2FDocParser.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -937,10 +937,16 @@ private function Constant()\n             }\n         }\n \n-        // checks if identifier ends with ::class, \\strlen('::class') === 7\n-        $classPos = stripos($identifier, '::class');\n-        if ($classPos === strlen($identifier) - 7) {\n-            return substr($identifier, 0, $classPos);\n+        /**\n+         * Checks if identifier ends with ::class and remove the leading backslash if it exists.\n+         */\n+        if ($this->identifierEndsWithClassConstant($identifier) && ! $this->identifierStartsWithBackslash($identifier))\n+        {\n+            return substr($identifier, 0, $this->getClassConstantPositionInIdentifier($identifier));\n+        }\n+        if ($this->identifierEndsWithClassConstant($identifier) && $this->identifierStartsWithBackslash($identifier))\n+        {\n+            return substr($identifier, 1, $this->getClassConstantPositionInIdentifier($identifier) - 1);\n         }\n \n         if (!defined($identifier)) {\n@@ -950,6 +956,24 @@ private function Constant()\n         return constant($identifier);\n     }\n \n+    private function identifierStartsWithBackslash(string $identifier) : bool\n+    {\n+        return '\\\\' === $identifier[0];\n+    }\n+\n+    private function identifierEndsWithClassConstant(string $identifier) : bool\n+    {\n+        return $this->getClassConstantPositionInIdentifier($identifier) === strlen($identifier) - strlen('::class');\n+    }\n+\n+    /**\n+     * @return int|false\n+     */\n+    private function getClassConstantPositionInIdentifier(string $identifier)\n+    {\n+        return stripos($identifier, '::class');\n+    }\n+\n     /**\n      * Identifier ::= string\n      *"
                },
                {
                    "sha": "ce1aa0c083e115c65e21ba8335423640fc110291",
                    "filename": "html/core/lib/Drupal/Component/Annotation/Doctrine/StaticReflectionParser.php",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 2,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FAnnotation%2FDoctrine%2FStaticReflectionParser.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FAnnotation%2FDoctrine%2FStaticReflectionParser.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FComponent%2FAnnotation%2FDoctrine%2FStaticReflectionParser.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -205,7 +205,7 @@ protected function parse()\n                     break;\n                 case T_CLASS:\n                     // Convert the attributes to fully qualified names.\n-                    $this->classAttributes = array_map(fn($name) => strtolower($this->fullySpecifyName($name)), $attributeNames);\n+                    $this->classAttributes = array_map(fn($name) => $this->fullySpecifyName($name), $attributeNames);\n                     if ($last_token !== T_PAAMAYIM_NEKUDOTAYIM && $last_token !== T_NEW) {\n                         $this->docComment['class'] = $docComment;\n                         $docComment                = '';\n@@ -346,7 +346,13 @@ public function getStaticReflectionParserForDeclaringClass($type, $name)\n     public function hasClassAttribute(string $attribute): bool\n     {\n         $this->parse();\n-        return in_array('\\\\' . ltrim(strtolower($attribute), '\\\\'), $this->classAttributes, TRUE);\n+        foreach ($this->classAttributes as $classAttribute) {\n+            if (is_a($classAttribute, $attribute, TRUE)) {\n+                return TRUE;\n+            }\n+        }\n+\n+        return FALSE;\n     }\n \n     /**"
                },
                {
                    "sha": "6a8955b0a1f5106dd2c5a4840c3ede69019a3ca9",
                    "filename": "html/core/lib/Drupal/Component/Plugin/PluginBase.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FPlugin%2FPluginBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FPlugin%2FPluginBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FComponent%2FPlugin%2FPluginBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -22,7 +22,7 @@ abstract class PluginBase implements PluginInspectionInterface, DerivativeInspec\n   /**\n    * The plugin implementation definition.\n    *\n-   * @var array\n+   * @var \\Drupal\\Component\\Plugin\\Definition\\PluginDefinitionInterface|array\n    */\n   protected $pluginDefinition;\n "
                },
                {
                    "sha": "9924c2b09782535a9de300944ced126faeb2301a",
                    "filename": "html/core/lib/Drupal/Component/Plugin/PluginInspectionInterface.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FPlugin%2FPluginInspectionInterface.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FPlugin%2FPluginInspectionInterface.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FComponent%2FPlugin%2FPluginInspectionInterface.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -23,7 +23,7 @@ public function getPluginId();\n   /**\n    * Gets the definition of the plugin implementation.\n    *\n-   * @return array\n+   * @return \\Drupal\\Component\\Plugin\\Definition\\PluginDefinitionInterface|array\n    *   The plugin definition, as returned by the discovery object used by the\n    *   plugin manager.\n    */"
                },
                {
                    "sha": "14ae12a8e8bf35dc19f2fde467c91914fc24c213",
                    "filename": "html/core/lib/Drupal/Component/Utility/UrlHelper.php",
                    "status": "modified",
                    "additions": 17,
                    "deletions": 4,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FUtility%2FUrlHelper.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FComponent%2FUtility%2FUrlHelper.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FComponent%2FUtility%2FUrlHelper.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -80,6 +80,9 @@ public static function buildQuery(array $query, $parent = '') {\n    *   The data compressed into a URL-safe string.\n    */\n   public static function compressQueryParameter(string $data): string {\n+    if (!\\extension_loaded('zlib')) {\n+      return $data;\n+    }\n     // Use 'base64url' encoding. Note that the '=' sign is only used for padding\n     // on the right of the string, and is otherwise not part of the data.\n     // @see https://datatracker.ietf.org/doc/html/rfc4648#section-5\n@@ -96,13 +99,23 @@ public static function compressQueryParameter(string $data): string {\n    *   A string as compressed by\n    *   \\Drupal\\Component\\Utility\\UrlHelper::compressQueryParameter().\n    *\n-   * @return string|bool\n-   *   The uncompressed data or FALSE on failure.\n+   * @return string\n+   *   The uncompressed data, or the original string if it cannot be\n+   *   uncompressed.\n    */\n-  public static function uncompressQueryParameter(string $compressed): string|bool {\n+  public static function uncompressQueryParameter(string $compressed): string {\n+    if (!\\extension_loaded('zlib')) {\n+      return $compressed;\n+    }\n     // Because this comes from user data, suppress the PHP warning that\n     // gzcompress() throws if the base64-encoded string is invalid.\n-    return @gzuncompress(base64_decode(str_replace(['-', '_'], ['+', '/'], $compressed)));\n+    $return = @gzuncompress(base64_decode(str_replace(['-', '_'], ['+', '/'], $compressed)));\n+\n+    // If we failed to uncompress the query parameter, it may be a stale link\n+    // from before compression was implemented with the URL parameter\n+    // uncompressed already, or it may be an incorrectly formatted URL.\n+    // In either case, pass back the original string to the caller.\n+    return $return === FALSE ? $compressed : $return;\n   }\n \n   /**"
                },
                {
                    "sha": "275e399395a86c43cec111512972d7204f4b5e3a",
                    "filename": "html/core/lib/Drupal/Core/Block/Attribute/Block.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FBlock%2FAttribute%2FBlock.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FBlock%2FAttribute%2FBlock.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FBlock%2FAttribute%2FBlock.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -20,7 +20,7 @@ class Block extends Plugin {\n    *   The administrative label of the block.\n    * @param \\Drupal\\Core\\StringTranslation\\TranslatableMarkup|null $category\n    *   (optional) The category in the admin UI where the block will be listed.\n-   * @param \\Drupal\\Core\\Annotation\\ContextDefinition[] $context_definitions\n+   * @param \\Drupal\\Core\\Plugin\\Context\\ContextDefinitionInterface[] $context_definitions\n    *   (optional) An array of context definitions describing the context used by\n    *   the plugin. The array is keyed by context names.\n    * @param string|null $deriver"
                },
                {
                    "sha": "83067c2c1b59339e33e325eac18cc68a7ad30d44",
                    "filename": "html/core/lib/Drupal/Core/Config/Plugin/Validation/Constraint/ConfigExistsConstraintValidator.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FConfig%2FPlugin%2FValidation%2FConstraint%2FConfigExistsConstraintValidator.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FConfig%2FPlugin%2FValidation%2FConstraint%2FConfigExistsConstraintValidator.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FConfig%2FPlugin%2FValidation%2FConstraint%2FConfigExistsConstraintValidator.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -43,6 +43,11 @@ public static function create(ContainerInterface $container) {\n    * {@inheritdoc}\n    */\n   public function validate(mixed $name, Constraint $constraint) {\n+    // This constraint may be used to validate nullable (optional) values.\n+    if ($name === NULL) {\n+      return;\n+    }\n+\n     if (!in_array($name, $this->configFactory->listAll(), TRUE)) {\n       $this->context->addViolation($constraint->message, ['@name' => $name]);\n     }"
                },
                {
                    "sha": "5a097673ec3d7882dad2aac3344c36d22b714024",
                    "filename": "html/core/lib/Drupal/Core/Database/Connection.php",
                    "status": "modified",
                    "additions": 25,
                    "deletions": 0,
                    "changes": 25,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FConnection.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FConnection.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FConnection.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -292,6 +292,31 @@ public function __destruct() {\n     $this->connection = NULL;\n   }\n \n+  /**\n+   * Commits all the open transactions.\n+   *\n+   * @internal\n+   *   This method exists only to work around a bug caused by Drupal incorrectly\n+   *   relying on object destruction order to commit transactions. Xdebug 3.3.0\n+   *   changes the order of object destruction when the develop mode is enabled.\n+   */\n+  public function commitAll() {\n+    $manager = $this->transactionManager();\n+    if ($manager && $manager->inTransaction() && method_exists($manager, 'commitAll')) {\n+      $this->transactionManager()->commitAll();\n+    }\n+\n+    // BC layer.\n+    // @phpstan-ignore-next-line\n+    if (!empty($this->transactionLayers)) {\n+      // Make all transactions committable.\n+      // @phpstan-ignore-next-line\n+      $this->transactionLayers = array_fill_keys(array_keys($this->transactionLayers), FALSE);\n+      // @phpstan-ignore-next-line\n+      $this->popCommittableTransactions();\n+    }\n+  }\n+\n   /**\n    * Returns the client-level database connection object.\n    *"
                },
                {
                    "sha": "d2d1f1262fb60bd520e512ae1b6baf54a742e769",
                    "filename": "html/core/lib/Drupal/Core/Database/Database.php",
                    "status": "modified",
                    "additions": 52,
                    "deletions": 2,
                    "changes": 54,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FDatabase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FDatabase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FDatabase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -493,10 +493,18 @@ public static function closeConnection($target = NULL, $key = NULL) {\n     if (!isset($key)) {\n       $key = self::$activeKey;\n     }\n-    if (isset($target)) {\n+    if (isset($target) && isset(self::$connections[$key][$target])) {\n+      if (self::$connections[$key][$target] instanceof Connection) {\n+        self::$connections[$key][$target]->commitAll();\n+      }\n       unset(self::$connections[$key][$target]);\n     }\n-    else {\n+    elseif (isset(self::$connections[$key])) {\n+      foreach (self::$connections[$key] as $connection) {\n+        if ($connection instanceof Connection) {\n+          $connection->commitAll();\n+        }\n+      }\n       unset(self::$connections[$key]);\n     }\n     // Force garbage collection to run. This ensures that client connection\n@@ -577,6 +585,7 @@ public static function convertDbUrlToConnectionInfo($url, $root, ?bool $include_\n     // called during regular runtime.\n     $additional_class_loader = new ClassLoader();\n     $additional_class_loader->addPsr4($driverNamespace . '\\\\', $driver->getPath());\n+    $additional_class_loader->register();\n     $connection_class = $driverNamespace . '\\\\Connection';\n     if (!class_exists($connection_class)) {\n       throw new \\InvalidArgumentException(\"Can not convert '$url' to a database connection, class '$connection_class' does not exist\");\n@@ -747,4 +756,45 @@ private static function isWithinModuleNamespace(string $namespace) {\n     return ($first === 'Drupal' && strtolower($second) === $second);\n   }\n \n+  /**\n+   * Calls commitAll() on all the open connections.\n+   *\n+   * If drupal_register_shutdown_function() exists the commit will occur during\n+   * shutdown so that it occurs at the latest possible moment.\n+   *\n+   * @param bool $shutdown\n+   *   Internal param to denote that the method is being called by\n+   *   _drupal_shutdown_function().\n+   *\n+   * @return void\n+   *\n+   * @internal\n+   *   This method exists only to work around a bug caused by Drupal incorrectly\n+   *   relying on object destruction order to commit transactions. Xdebug 3.3.0\n+   *   changes the order of object destruction when the develop mode is enabled.\n+   */\n+  public static function commitAllOnShutdown(bool $shutdown = FALSE): void {\n+    static $registered = FALSE;\n+\n+    if ($shutdown) {\n+      foreach (self::$connections as $targets) {\n+        foreach ($targets as $connection) {\n+          if ($connection instanceof Connection) {\n+            $connection->commitAll();\n+          }\n+        }\n+      }\n+      return;\n+    }\n+\n+    if (!function_exists('drupal_register_shutdown_function')) {\n+      return;\n+    }\n+\n+    if (!$registered) {\n+      $registered = TRUE;\n+      drupal_register_shutdown_function('\\Drupal\\Core\\Database\\Database::commitAllOnShutdown', TRUE);\n+    }\n+  }\n+\n }"
                },
                {
                    "sha": "2293c45ffe0512d3d5c6525d78f32c55ebd9e8a5",
                    "filename": "html/core/lib/Drupal/Core/Database/Query/SelectInterface.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FQuery%2FSelectInterface.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FQuery%2FSelectInterface.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FQuery%2FSelectInterface.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -328,7 +328,7 @@ public function leftJoin($table, $alias = NULL, $condition = NULL, $arguments =\n   /**\n    * Join against another table in the database.\n    *\n-   * This method does the \"hard\" work of queuing up a table to be joined against.\n+   * This method does the \"hard\" work of queueing up a table to be joined against.\n    * In some cases, that may include dipping into the Schema API to find the necessary\n    * fields on which to join.\n    *"
                },
                {
                    "sha": "2c1ea5e0458b97bac34e74a16f7a823128f67f02",
                    "filename": "html/core/lib/Drupal/Core/Database/Transaction.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FTransaction.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FTransaction.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FTransaction.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -57,6 +57,11 @@ public function __construct(\n     $name = NULL,\n     protected readonly string $id = '',\n   ) {\n+    // Transactions rely on objects being destroyed in order to be committed.\n+    // PHP makes no guarantee about the order in which objects are destroyed so\n+    // ensure all transactions are committed on shutdown.\n+    Database::commitAllOnShutdown();\n+\n     if ($connection->transactionManager()) {\n       $this->connection = $connection;\n       $this->name = $name;"
                },
                {
                    "sha": "5f31bd605a646b9a3e9764b93eaadb486d3c0084",
                    "filename": "html/core/lib/Drupal/Core/Database/Transaction/TransactionManagerBase.php",
                    "status": "modified",
                    "additions": 14,
                    "deletions": 1,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FTransaction%2FTransactionManagerBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FTransaction%2FTransactionManagerBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2FTransaction%2FTransactionManagerBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -127,6 +127,20 @@ protected function stack(): array {\n     return $this->stack;\n   }\n \n+  /**\n+   * Commits the entire transaction stack.\n+   *\n+   * @internal\n+   *   This method exists only to work around a bug caused by Drupal incorrectly\n+   *   relying on object destruction order to commit transactions. Xdebug 3.3.0\n+   *   changes the order of object destruction when the develop mode is enabled.\n+   */\n+  public function commitAll(): void {\n+    foreach (array_reverse($this->stack()) as $id => $item) {\n+      $this->unpile($item->name, $id);\n+    }\n+  }\n+\n   /**\n    * Adds an item to the transaction stack.\n    *\n@@ -253,7 +267,6 @@ public function unpile(string $name, string $id): void {\n     // DDL statement breaking an active transaction). That should be listed in\n     // $voidedItems, so we can remove it from there.\n     if (!isset($this->stack()[$id]) || $this->stack()[$id]->name !== $name) {\n-      assert(isset($this->voidedItems[$id]), \"Transaction {$id}/{$name} is out of sequence. Active stack: \" . $this->dumpStackItemsAsString());\n       unset($this->voidedItems[$id]);\n       return;\n     }"
                },
                {
                    "sha": "c713d1a62374d39562849bca04a95646575d8fb6",
                    "filename": "html/core/lib/Drupal/Core/Database/database.api.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2Fdatabase.api.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2Fdatabase.api.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatabase%2Fdatabase.api.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -29,7 +29,7 @@\n  * mysqli or oci8.\n  *\n  * For more detailed information on the database abstraction layer, see\n- * https://www.drupal.org/docs/8/api/database-api/database-api-overview.\n+ * https://www.drupal.org/docs/drupal-apis/database-api/database-api-overview.\n  *\n  * @section sec_entity Querying entities\n  * Any query on Drupal entities or fields should use the Entity Query API. See\n@@ -119,7 +119,7 @@\n  *\n  * There are also methods to join to other tables, add fields with aliases,\n  * isNull() to query for NULL values, etc. See\n- * https://www.drupal.org/developing/api/database for many more details.\n+ * https://www.drupal.org/docs/drupal-apis/database-api for many more details.\n  *\n  * One note on chaining: It is common in the dynamic database API to chain\n  * method calls (as illustrated here), because most of the query methods modify\n@@ -240,7 +240,7 @@\n  * if you had a connection object variable $connection available to use. See\n  * also the @link container Services and Dependency Injection topic. @endlink\n  *\n- * @see https://www.drupal.org/developing/api/database\n+ * @see https://www.drupal.org/docs/drupal-apis/database-api\n  * @see entity_api\n  * @see schemaapi\n  *"
                },
                {
                    "sha": "172331cf5f841aa40fb6f27a7cc03a5e56de0545",
                    "filename": "html/core/lib/Drupal/Core/Datetime/DrupalDateTime.php",
                    "status": "modified",
                    "additions": 12,
                    "deletions": 1,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatetime%2FDrupalDateTime.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatetime%2FDrupalDateTime.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatetime%2FDrupalDateTime.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -3,6 +3,7 @@\n namespace Drupal\\Core\\Datetime;\n \n use Drupal\\Component\\Datetime\\DateTimePlus;\n+use Drupal\\Core\\DependencyInjection\\DependencySerializationTrait;\n use Drupal\\Core\\StringTranslation\\StringTranslationTrait;\n \n /**\n@@ -21,6 +22,9 @@\n class DrupalDateTime extends DateTimePlus {\n \n   use StringTranslationTrait;\n+  use DependencySerializationTrait {\n+    __sleep as defaultSleep;\n+  }\n \n   /**\n    * Formatted strings translation cache.\n@@ -52,7 +56,7 @@ class DrupalDateTime extends DateTimePlus {\n    *\n    * @var array\n    */\n-  protected $formatTranslationCache;\n+  protected $formatTranslationCache = [];\n \n   /**\n    * Constructs a date object.\n@@ -166,4 +170,11 @@ public function format($format, $settings = []) {\n     return $value;\n   }\n \n+  /**\n+   * {@inheritdoc}\n+   */\n+  public function __sleep(): array {\n+    return array_diff($this->defaultSleep(), ['formatTranslationCache']);\n+  }\n+\n }"
                },
                {
                    "sha": "88efd5efe46ff501459ab871d58f90d13f1515c9",
                    "filename": "html/core/lib/Drupal/Core/Datetime/Plugin/Field/FieldWidget/TimestampDatetimeWidget.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 2,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatetime%2FPlugin%2FField%2FFieldWidget%2FTimestampDatetimeWidget.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatetime%2FPlugin%2FField%2FFieldWidget%2FTimestampDatetimeWidget.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDatetime%2FPlugin%2FField%2FFieldWidget%2FTimestampDatetimeWidget.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -25,8 +25,7 @@ class TimestampDatetimeWidget extends WidgetBase {\n    * {@inheritdoc}\n    */\n   public function formElement(FieldItemListInterface $items, $delta, array $element, array &$form, FormStateInterface $form_state) {\n-    $parent_entity = $items->getParent()->getValue();\n-    $default_value = (!$parent_entity->isNew() && isset($items[$delta]->value)) ? DrupalDateTime::createFromTimestamp($items[$delta]->value) : '';\n+    $default_value = isset($items[$delta]->value) ? DrupalDateTime::createFromTimestamp($items[$delta]->value) : '';\n     $element['value'] = $element + [\n       '#type' => 'datetime',\n       '#default_value' => $default_value,"
                },
                {
                    "sha": "3fa6c3848397c0e76d9c79e0f3a0c2eb06808802",
                    "filename": "html/core/lib/Drupal/Core/DependencyInjection/Compiler/RegisterStreamWrappersPass.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 4,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDependencyInjection%2FCompiler%2FRegisterStreamWrappersPass.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FDependencyInjection%2FCompiler%2FRegisterStreamWrappersPass.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FDependencyInjection%2FCompiler%2FRegisterStreamWrappersPass.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -20,11 +20,18 @@ public function process(ContainerBuilder $container) {\n \n     $stream_wrapper_manager = $container->getDefinition('stream_wrapper_manager');\n \n-    foreach ($container->findTaggedServiceIds('stream_wrapper') as $id => $attributes) {\n+    foreach ($container->findTaggedServiceIds('stream_wrapper') as $id => $tags) {\n       $class = $container->getDefinition($id)->getClass();\n-      $scheme = $attributes[0]['scheme'];\n-\n-      $stream_wrapper_manager->addMethodCall('addStreamWrapper', [$id, $class, $scheme]);\n+      // Loop through all the tags for this stream wrapper as we may have\n+      // multiple schemes.\n+      foreach ($tags as $attributes) {\n+        $scheme = $attributes['scheme'];\n+        $stream_wrapper_manager->addMethodCall('addStreamWrapper', [\n+          $id,\n+          $class,\n+          $scheme,\n+        ]);\n+      }\n     }\n   }\n "
                },
                {
                    "sha": "781417760ce6ec6b12f7a58b13bb15887d66481d",
                    "filename": "html/core/lib/Drupal/Core/Entity/EntityBase.php",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 14,
                    "changes": 30,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FEntityBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FEntityBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FEntityBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -164,25 +164,27 @@ public function toUrl($rel = NULL, array $options = []) {\n     // The links array might contain URI templates set in annotations.\n     $link_templates = $this->linkTemplates();\n \n-    // Use the canonical link template by default, or edit-form if there is not\n-    // a canonical one.\n-    if ($rel === NULL) {\n-      $rel_candidates = array_intersect(\n-        ['canonical', 'edit-form'],\n-        array_flip($link_templates),\n-      );\n-      $rel = array_shift($rel_candidates);\n-      if ($rel === NULL) {\n-        throw new UndefinedLinkTemplateException(\"Cannot generate default URL because no link template 'canonical' or 'edit-form' was found for the '{$this->getEntityTypeId()}' entity type\");\n-      }\n-    }\n-\n     // Links pointing to the current revision point to the actual entity. So\n     // instead of using the 'revision' link, use the 'canonical' link.\n     if ($rel === 'revision' && $this instanceof RevisionableInterface && $this->isDefaultRevision()) {\n       $rel = 'canonical';\n     }\n \n+    $exception_message = \"No link template '$rel' found for the '{$this->getEntityTypeId()}' entity type\";\n+    // Use the canonical link template by default, or edit-form if there is not\n+    // a canonical one.\n+    if ($rel === NULL) {\n+      if (isset($link_templates['canonical'])) {\n+        $rel = 'canonical';\n+      }\n+      elseif (isset($link_templates['edit-form'])) {\n+        $rel = 'edit-form';\n+      }\n+      else {\n+        $exception_message = \"Cannot generate default URL because no link template 'canonical' or 'edit-form' was found for the '{$this->getEntityTypeId()}' entity type\";\n+      }\n+    }\n+\n     if (isset($link_templates[$rel])) {\n       $route_parameters = $this->urlRouteParameters($rel);\n       $route_name = \"entity.{$this->entityTypeId}.\" . str_replace(['-', 'drupal:'], ['_', ''], $rel);\n@@ -206,7 +208,7 @@ public function toUrl($rel = NULL, array $options = []) {\n         $uri = call_user_func($uri_callback, $this);\n       }\n       else {\n-        throw new UndefinedLinkTemplateException(\"No link template '$rel' found for the '{$this->getEntityTypeId()}' entity type\");\n+        throw new UndefinedLinkTemplateException($exception_message);\n       }\n     }\n "
                },
                {
                    "sha": "f135c5550dfa19a48e05bb786d3e155b56d7a601",
                    "filename": "html/core/lib/Drupal/Core/Entity/EntityTypeManager.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 1,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FEntityTypeManager.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FEntityTypeManager.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FEntityTypeManager.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -204,7 +204,11 @@ public function getListBuilder($entity_type_id) {\n    */\n   public function getFormObject($entity_type_id, $operation) {\n     if (!$class = $this->getDefinition($entity_type_id, TRUE)->getFormClass($operation)) {\n-      throw new InvalidPluginDefinitionException($entity_type_id, sprintf('The \"%s\" entity type did not specify a \"%s\" form class.', $entity_type_id, $operation));\n+      $handlers = $this->getDefinition($entity_type_id, TRUE)->getHandlerClasses();\n+      if (!isset($handlers['form'][$operation])) {\n+        throw new InvalidPluginDefinitionException($entity_type_id, sprintf('The \"%s\" entity type did not specify a \"%s\" form class.', $entity_type_id, $operation));\n+      }\n+      throw new InvalidPluginDefinitionException($entity_type_id, sprintf('The \"%s\" form handler of the \"%s\" entity type specifies a non-existent class \"%s\".', $operation, $entity_type_id, $handlers['form'][$operation]));\n     }\n \n     $form_object = $this->classResolver->getInstanceFromDefinition($class);"
                },
                {
                    "sha": "415fe880c7fcebb093c1421e75c07759abed880c",
                    "filename": "html/core/lib/Drupal/Core/Entity/Plugin/EntityReferenceSelection/DefaultSelection.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FPlugin%2FEntityReferenceSelection%2FDefaultSelection.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FPlugin%2FEntityReferenceSelection%2FDefaultSelection.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FPlugin%2FEntityReferenceSelection%2FDefaultSelection.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -183,6 +183,9 @@ public function buildConfigurationForm(array $form, FormStateInterface $form_sta\n         '#size' => 6,\n         '#multiple' => TRUE,\n         '#element_validate' => [[static::class, 'elementValidateFilter']],\n+        // Use a form process callback to build #ajax property properly and also\n+        // to avoid code duplication.\n+        // @see \\Drupal\\Core\\Field\\Plugin\\Field\\FieldType\\EntityReferenceItem::fieldSettingsAjaxProcess()\n         '#ajax' => TRUE,\n         '#limit_validation_errors' => [],\n       ];\n@@ -232,6 +235,9 @@ public function buildConfigurationForm(array $form, FormStateInterface $form_sta\n         '#type' => 'select',\n         '#title' => $this->t('Sort by'),\n         '#options' => $fields,\n+        // Use a form process callback to build #ajax property properly and also\n+        // to avoid code duplication.\n+        // @see \\Drupal\\Core\\Field\\Plugin\\Field\\FieldType\\EntityReferenceItem::fieldSettingsAjaxProcess()\n         '#ajax' => TRUE,\n         '#empty_value' => '_none',\n         '#sort_options' => TRUE,"
                },
                {
                    "sha": "585a8fdf9946f461cb9eeee0ab0351090d86d569",
                    "filename": "html/core/lib/Drupal/Core/Entity/Query/QueryBase.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FQuery%2FQueryBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FQuery%2FQueryBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FEntity%2FQuery%2FQueryBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -193,8 +193,8 @@ public function notExists($property, $langcode = NULL) {\n    * {@inheritdoc}\n    */\n   public function range($start = NULL, $length = NULL) {\n-    $this->range = [\n-      'start' => $start,\n+    $this->range = is_null($start) && is_null($length) ? [] : [\n+      'start' => $start ?? 0,\n       'length' => $length,\n     ];\n     return $this;"
                },
                {
                    "sha": "4bd400a3662f7a9826d396890be5a020eb9d321f",
                    "filename": "html/core/lib/Drupal/Core/EventSubscriber/OptionsRequestSubscriber.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEventSubscriber%2FOptionsRequestSubscriber.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEventSubscriber%2FOptionsRequestSubscriber.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FEventSubscriber%2FOptionsRequestSubscriber.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -12,8 +12,9 @@\n /**\n  * Handles options requests.\n  *\n- * Therefore it sends an options response using all methods on all possible\n- * routes.\n+ * Listens to KernelEvents::REQUEST and responds to OPTIONS requests by\n+ * providing an Allow header listing all the HTTP methods allowed for the\n+ * requested routes.\n  */\n class OptionsRequestSubscriber implements EventSubscriberInterface {\n "
                },
                {
                    "sha": "fa6c09c7a7d226fb73b43f943dfbea9bfce25f1e",
                    "filename": "html/core/lib/Drupal/Core/EventSubscriber/RssResponseRelativeUrlFilter.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 4,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEventSubscriber%2FRssResponseRelativeUrlFilter.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FEventSubscriber%2FRssResponseRelativeUrlFilter.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FEventSubscriber%2FRssResponseRelativeUrlFilter.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -57,10 +57,12 @@ protected function transformRootRelativeUrlsToAbsolute($rss_markup, Request $req\n \n     // Invoke Html::transformRootRelativeUrlsToAbsolute() on all HTML content\n     // embedded in this RSS feed.\n-    foreach ($rss_dom->getElementsByTagName('description') as $node) {\n-      $html_markup = $node->nodeValue;\n-      if (!empty($html_markup)) {\n-        $node->replaceChild($rss_dom->createTextNode(Html::transformRootRelativeUrlsToAbsolute($html_markup, $request->getSchemeAndHttpHost())), $node->firstChild);\n+    foreach ($rss_dom->getElementsByTagName('item') as $item) {\n+      foreach ($item->getElementsByTagName('description') as $node) {\n+        $html_markup = $node->nodeValue;\n+        if (!empty($html_markup)) {\n+          $node->replaceChild($rss_dom->createTextNode(Html::transformRootRelativeUrlsToAbsolute($html_markup, $request->getSchemeAndHttpHost())), $node->firstChild);\n+        }\n       }\n     }\n "
                },
                {
                    "sha": "cb4e7a4a880cdbce6ce03e1ad5b42065146b3f22",
                    "filename": "html/core/lib/Drupal/Core/Extension/DatabaseDriver.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 1,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FExtension%2FDatabaseDriver.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FExtension%2FDatabaseDriver.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FExtension%2FDatabaseDriver.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -90,7 +90,12 @@ public function getPath() {\n    */\n   public function load() {\n     if (!isset($this->classLoader)) {\n-      $this->classLoader = \\Drupal::service('class_loader');\n+      if (\\Drupal::hasContainer() && \\Drupal::hasService('class_loader')) {\n+        $this->classLoader = \\Drupal::service('class_loader');\n+      }\n+      else {\n+        $this->classLoader = require DRUPAL_ROOT . '/autoload.php';\n+      }\n       $this->classLoader->addPsr4($this->getNamespace() . '\\\\', $this->getPath());\n       foreach (($this->getAutoloadInfo()['dependencies'] ?? []) as $dependency) {\n         $this->classLoader->addPsr4($dependency['namespace'] . '\\\\', $dependency['autoload']);"
                },
                {
                    "sha": "6f4599618901c53a511c06c3a5368daa2fb6d975",
                    "filename": "html/core/lib/Drupal/Core/Extension/Plugin/Validation/Constraint/ExtensionExistsConstraintValidator.php",
                    "status": "modified",
                    "additions": 14,
                    "deletions": 0,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FExtension%2FPlugin%2FValidation%2FConstraint%2FExtensionExistsConstraintValidator.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FExtension%2FPlugin%2FValidation%2FConstraint%2FExtensionExistsConstraintValidator.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FExtension%2FPlugin%2FValidation%2FConstraint%2FExtensionExistsConstraintValidator.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -61,12 +61,26 @@ public function validate(mixed $extension_name, Constraint $constraint) {\n \n     switch ($constraint->type) {\n       case 'module':\n+        // This constraint may be used to validate nullable (optional) values.\n+        if ($extension_name === NULL) {\n+          return;\n+        }\n+        // Some plugins are shipped in `core/lib`, which corresponds to the\n+        // special `core` extension name.\n+        // For example: \\Drupal\\Core\\Menu\\Plugin\\Block\\LocalActionsBlock.\n+        if ($extension_name === 'core') {\n+          return;\n+        }\n         if (!$this->moduleHandler->moduleExists($extension_name)) {\n           $this->context->addViolation($constraint->moduleMessage, $variables);\n         }\n         break;\n \n       case 'theme':\n+        // This constraint may be used to validate nullable (optional) values.\n+        if ($extension_name === NULL) {\n+          return;\n+        }\n         if (!$this->themeHandler->themeExists($extension_name)) {\n           $this->context->addViolation($constraint->themeMessage, $variables);\n         }"
                },
                {
                    "sha": "aa415d39cad14517f6c99103fc5c00de83f7e849",
                    "filename": "html/core/lib/Drupal/Core/Field/FormatterBase.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 1,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FField%2FFormatterBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FField%2FFormatterBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FField%2FFormatterBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,6 +2,8 @@\n \n namespace Drupal\\Core\\Field;\n \n+use Drupal\\Core\\Cache\\CacheableDependencyInterface;\n+use Drupal\\Core\\Cache\\CacheableMetadata;\n use Drupal\\Core\\Form\\FormStateInterface;\n use Drupal\\Core\\Language\\LanguageInterface;\n use Drupal\\Core\\Plugin\\ContainerFactoryPluginInterface;\n@@ -88,8 +90,16 @@ public function view(FieldItemListInterface $items, $langcode = NULL) {\n     }\n     $elements = $this->viewElements($items, $langcode);\n \n+    // Field item lists, in particular for computed fields, may carry cacheable\n+    // metadata which must be bubbled.\n+    if ($items instanceof CacheableDependencyInterface) {\n+      (new CacheableMetadata())\n+        ->addCacheableDependency($items)\n+        ->applyTo($elements);\n+    }\n+\n     // If there are actual renderable children, use #theme => field, otherwise,\n-    // let access cacheability metadata pass through for correct bubbling.\n+    // let cacheability metadata pass through for correct bubbling.\n     if (Element::children($elements)) {\n       $entity = $items->getEntity();\n       $entity_type = $entity->getEntityTypeId();"
                },
                {
                    "sha": "782ecba82e9e2ac97434eb3d09108f0be9f07aab",
                    "filename": "html/core/lib/Drupal/Core/Field/Plugin/Field/FieldType/EntityReferenceItem.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 1,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FField%2FPlugin%2FField%2FFieldType%2FEntityReferenceItem.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FField%2FPlugin%2FField%2FFieldType%2FEntityReferenceItem.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FField%2FPlugin%2FField%2FFieldType%2FEntityReferenceItem.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,11 +2,11 @@\n \n namespace Drupal\\Core\\Field\\Plugin\\Field\\FieldType;\n \n+use Drupal\\Component\\Plugin\\Exception\\PluginNotFoundException;\n use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Component\\Utility\\Html;\n use Drupal\\Core\\Entity\\ContentEntityStorageInterface;\n use Drupal\\Core\\Entity\\EntityInterface;\n-use Drupal\\Component\\Plugin\\Exception\\PluginNotFoundException;\n use Drupal\\Core\\Entity\\EntityTypeInterface;\n use Drupal\\Core\\Entity\\FieldableEntityInterface;\n use Drupal\\Core\\Entity\\TypedData\\EntityDataDefinition;\n@@ -477,6 +477,9 @@ public function fieldSettingsForm(array $form, FormStateInterface $form_state) {\n       '#options' => $handlers_options,\n       '#default_value' => $field->getSetting('handler'),\n       '#required' => TRUE,\n+      // Use a form process callback to build #ajax property properly and also\n+      // to avoid code duplication.\n+      // @see \\Drupal\\Core\\Field\\Plugin\\Field\\FieldType\\EntityReferenceItem::fieldSettingsAjaxProcess()\n       '#ajax' => TRUE,\n       '#limit_validation_errors' => [],\n     ];\n@@ -703,6 +706,7 @@ public static function fieldSettingsAjaxProcess($form, FormStateInterface $form_\n    * @see static::fieldSettingsAjaxProcess()\n    */\n   public static function fieldSettingsAjaxProcessElement(&$element, $main_form) {\n+    // Elements are marked as TRUE ('#ajax' => TRUE,), so not empty.\n     if (!empty($element['#ajax'])) {\n       $element['#ajax'] = [\n         'trigger_as' => ['name' => 'handler_settings_submit'],"
                },
                {
                    "sha": "bc2c493d0567e2e1be770d54b7f36f2eae87b7e0",
                    "filename": "html/core/lib/Drupal/Core/FileTransfer/FileTransfer.php",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 24,
                    "changes": 42,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FFileTransfer%2FFileTransfer.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FFileTransfer%2FFileTransfer.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FFileTransfer%2FFileTransfer.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -10,7 +10,15 @@\n  * to the server using some backend (for example FTP or SSH). To keep security,\n  * the password should always be asked from the user and never stored. For\n  * safety, all methods operate only inside a \"jail\", by default the Drupal root.\n+ *\n+ * The following properties are managed by magic methods:\n+ *\n+ * @property string|false|null $chroot\n+ *   Path to connection chroot.\n+ * @property object|false|null $connection\n+ *   The instantiated connection object.\n  */\n+#[\\AllowDynamicProperties]\n abstract class FileTransfer {\n \n   /**\n@@ -48,20 +56,6 @@ abstract class FileTransfer {\n    */\n   protected $jail;\n \n-  /**\n-   * Path to connection chroot.\n-   *\n-   * @var string|false|null\n-   */\n-  private $chrootPath;\n-\n-  /**\n-   * The instantiated connection object.\n-   *\n-   * @var object|false|null\n-   */\n-  private $connectionHandle;\n-\n   /**\n    * Constructs a Drupal\\Core\\FileTransfer\\FileTransfer object.\n    *\n@@ -114,12 +108,12 @@ public static function factory($jail, $settings) {\n   public function __get($name) {\n     if ($name == 'connection') {\n       $this->connect();\n-      return $this->connectionHandle;\n+      return $this->connection;\n     }\n \n     if ($name == 'chroot') {\n       $this->setChroot();\n-      return $this->chrootPath;\n+      return $this->chroot;\n     }\n   }\n \n@@ -128,10 +122,10 @@ public function __get($name) {\n    */\n   public function __set(string $name, $value): void {\n     if ($name == 'connection') {\n-      $this->connectionHandle = $value;\n+      $this->connection = $value;\n     }\n     elseif ($name == 'chroot') {\n-      $this->chrootPath = $value;\n+      $this->chroot = $value;\n     }\n   }\n \n@@ -140,10 +134,10 @@ public function __set(string $name, $value): void {\n    */\n   public function __isset(string $name): bool {\n     if ($name == 'connection') {\n-      return isset($this->connectionHandle);\n+      return isset($this->connection);\n     }\n     if ($name == 'chroot') {\n-      return isset($this->chrootPath);\n+      return isset($this->chroot);\n     }\n     return FALSE;\n   }\n@@ -153,10 +147,10 @@ public function __isset(string $name): bool {\n    */\n   public function __unset(string $name): void {\n     if ($name == 'connection') {\n-      unset($this->connectionHandle);\n+      unset($this->connection);\n     }\n     elseif ($name == 'chroot') {\n-      unset($this->chrootPath);\n+      unset($this->chroot);\n     }\n   }\n \n@@ -293,8 +287,8 @@ final protected function fixRemotePath($path, $strip_chroot = TRUE) {\n     // Strip out windows drive letter if its there.\n     $path = preg_replace('|^([a-z]{1}):|i', '', $path);\n     if ($strip_chroot) {\n-      if ($this->chrootPath && str_starts_with($path, $this->chrootPath)) {\n-        $path = ($path == $this->chrootPath) ? '' : substr($path, strlen($this->chrootPath));\n+      if ($this->chroot && str_starts_with($path, $this->chroot)) {\n+        $path = ($path == $this->chroot) ? '' : substr($path, strlen($this->chroot));\n       }\n     }\n     return $path;"
                },
                {
                    "sha": "40829d936b8bf0a8a8a5ee822675962deb2ddb4f",
                    "filename": "html/core/lib/Drupal/Core/Form/FormBuilder.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FForm%2FFormBuilder.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FForm%2FFormBuilder.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FForm%2FFormBuilder.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -19,7 +19,7 @@\n use Drupal\\Core\\Theme\\ThemeManagerInterface;\n use Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface;\n use Symfony\\Component\\HttpFoundation\\FileBag;\n-use Symfony\\Component\\HttpFoundation\\ParameterBag;\n+use Symfony\\Component\\HttpFoundation\\InputBag;\n use Symfony\\Component\\HttpFoundation\\RequestStack;\n use Symfony\\Component\\HttpFoundation\\Response;\n \n@@ -327,7 +327,7 @@ public function buildForm($form_arg, FormStateInterface &$form_state) {\n     // In case the post request exceeds the configured allowed size\n     // (post_max_size), the post request is potentially broken. Add some\n     // protection against that and at the same time have a nice error message.\n-    if ($ajax_form_request && !$request->request->has('form_id')) {\n+    if ($ajax_form_request && !$request->get('form_id')) {\n       throw new BrokenPostRequestException($this->getFileUploadMaxSize());\n     }\n \n@@ -340,7 +340,7 @@ public function buildForm($form_arg, FormStateInterface &$form_state) {\n     // build a proper AJAX response.\n     // Only do this when the form ID matches, since there is no guarantee from\n     // $ajax_form_request that it's an AJAX request for this particular form.\n-    if ($ajax_form_request && $form_state->isProcessingInput() && $request->request->get('form_id') == $form_id) {\n+    if ($ajax_form_request && $form_state->isProcessingInput() && $request->get('form_id') == $form_id) {\n       throw new FormAjaxException($form, $form_state);\n     }\n \n@@ -967,7 +967,7 @@ public function doBuildForm($form_id, &$element, FormStateInterface &$form_state\n \n             $request = $this->requestStack->getCurrentRequest();\n             // Do not trust any POST data.\n-            $request->request = new ParameterBag();\n+            $request->request = new InputBag();\n             // Make sure file uploads do not get processed.\n             $request->files = new FileBag();\n             // Ensure PHP globals reflect these changes."
                },
                {
                    "sha": "45d32f09efb83219d86f130b639ca3615e0e50a5",
                    "filename": "html/core/lib/Drupal/Core/Queue/QueueDatabaseFactory.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 10,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FQueue%2FQueueDatabaseFactory.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FQueue%2FQueueDatabaseFactory.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FQueue%2FQueueDatabaseFactory.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -5,9 +5,9 @@\n use Drupal\\Core\\Database\\Connection;\n \n /**\n- * Defines the key/value store factory for the database backend.\n+ * Defines the queue factory for the database backend.\n  */\n-class QueueDatabaseFactory {\n+class QueueDatabaseFactory implements QueueFactoryInterface {\n \n   /**\n    * The database connection.\n@@ -20,20 +20,14 @@ class QueueDatabaseFactory {\n    * Constructs this factory object.\n    *\n    * @param \\Drupal\\Core\\Database\\Connection $connection\n-   *   The Connection object containing the key-value tables.\n+   *   The Connection object containing the queue table.\n    */\n   public function __construct(Connection $connection) {\n     $this->connection = $connection;\n   }\n \n   /**\n-   * Constructs a new queue object for a given name.\n-   *\n-   * @param string $name\n-   *   The name of the collection holding key and value pairs.\n-   *\n-   * @return \\Drupal\\Core\\Queue\\DatabaseQueue\n-   *   A key/value store implementation for the given $collection.\n+   * {@inheritdoc}\n    */\n   public function get($name) {\n     return new DatabaseQueue($name, $this->connection);"
                },
                {
                    "sha": "580d958ee879db4c83c8a4a9b412933e391c9c7b",
                    "filename": "html/core/lib/Drupal/Core/Queue/QueueFactoryInterface.php",
                    "status": "added",
                    "additions": 21,
                    "deletions": 0,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FQueue%2FQueueFactoryInterface.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FQueue%2FQueueFactoryInterface.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FQueue%2FQueueFactoryInterface.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,21 @@\n+<?php\n+\n+namespace Drupal\\Core\\Queue;\n+\n+/**\n+ * An interface defining queue factory classes.\n+ */\n+interface QueueFactoryInterface {\n+\n+  /**\n+   * Constructs a new queue object for a given name.\n+   *\n+   * @param string $name\n+   *   The name of the queue.\n+   *\n+   * @return \\Drupal\\Core\\Queue\\QueueInterface\n+   *   The queue object.\n+   */\n+  public function get($name);\n+\n+}"
                },
                {
                    "sha": "9ad0d34d7894d5b76fe7f71016d1e21845dfb7a5",
                    "filename": "html/core/lib/Drupal/Core/Render/Renderer.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 4,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FRender%2FRenderer.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FRender%2FRenderer.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FRender%2FRenderer.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -810,10 +810,11 @@ protected function xssFilterAdminIfUnsafe($string) {\n    * @param array $elements\n    *   A render array with #markup set.\n    *\n-   * @return \\Drupal\\Component\\Render\\MarkupInterface|string\n-   *   The escaped markup wrapped in a Markup object. If $elements['#markup']\n-   *   is an instance of \\Drupal\\Component\\Render\\MarkupInterface, it won't be\n-   *   escaped or filtered again.\n+   * @return array\n+   *   The given array with the escaped markup wrapped in a Markup object.\n+   *   If $elements['#markup'] is an instance of\n+   *   \\Drupal\\Component\\Render\\MarkupInterface, it won't be escaped or filtered\n+   *   again.\n    *\n    * @see \\Drupal\\Component\\Utility\\Html::escape()\n    * @see \\Drupal\\Component\\Utility\\Xss::filter()"
                },
                {
                    "sha": "d6410b2e5910f9f6f4a428382dd6f75accf52583",
                    "filename": "html/core/lib/Drupal/Core/StringTranslation/PluralTranslatableMarkup.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 16,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FStringTranslation%2FPluralTranslatableMarkup.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FStringTranslation%2FPluralTranslatableMarkup.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FStringTranslation%2FPluralTranslatableMarkup.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -107,28 +107,15 @@ public function render() {\n     $arguments['@count'] = $this->count;\n     $translated_array = explode(PoItem::DELIMITER, $this->translatedString);\n \n-    if ($this->count == 1) {\n-      return $this->placeholderFormat($translated_array[0], $arguments);\n-    }\n-\n     $index = $this->getPluralIndex();\n-    if ($index == 0) {\n+    if ($this->count == 1 || $index == 0 || count($translated_array) == 1) {\n       // Singular form.\n       $return = $translated_array[0];\n     }\n     else {\n-      if (isset($translated_array[$index])) {\n-        // N-th plural form.\n-        $return = $translated_array[$index];\n-      }\n-      else {\n-        // If the index cannot be computed or there's no translation, use the\n-        // second plural form as a fallback (which allows for most flexibility\n-        // with the replaceable @count value).\n-        $return = $translated_array[1];\n-      }\n+      // Nth plural form, fallback to second plural form.\n+      $return = $translated_array[$index] ?? $translated_array[1];\n     }\n-\n     return $this->placeholderFormat($return, $arguments);\n   }\n "
                },
                {
                    "sha": "bdc11f51cbceb531ed8ef4d1b073407e1ec15726",
                    "filename": "html/core/lib/Drupal/Core/Test/FunctionalTestSetupTrait.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 2,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FTest%2FFunctionalTestSetupTrait.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FTest%2FFunctionalTestSetupTrait.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FTest%2FFunctionalTestSetupTrait.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -3,7 +3,6 @@\n namespace Drupal\\Core\\Test;\n \n use Drupal\\Component\\FileCache\\FileCacheFactory;\n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Component\\Utility\\Environment;\n use Drupal\\Core\\Config\\Development\\ConfigSchemaChecker;\n use Drupal\\Core\\Config\\FileStorage;\n@@ -474,7 +473,7 @@ protected function installModulesFromClassProperty(ContainerInterface $container\n       $modules = array_unique($modules);\n       try {\n         $success = $container->get('module_installer')->install($modules, TRUE);\n-        $this->assertTrue($success, new FormattableMarkup('Enabled modules: %modules', ['%modules' => implode(', ', $modules)]));\n+        $this->assertTrue($success, 'Enabled modules: ' . implode(', ', $modules));\n       }\n       catch (MissingDependencyException $e) {\n         // The exception message has all the details."
                },
                {
                    "sha": "90f8dbe0235f8aa842489429816e630eaeeff45c",
                    "filename": "html/core/lib/Drupal/Core/Test/TestDiscovery.php",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 4,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FTest%2FTestDiscovery.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FTest%2FTestDiscovery.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FTest%2FTestDiscovery.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -81,12 +81,15 @@ public function registerTestNamespaces() {\n \n     $existing = $this->classLoader->getPrefixesPsr4();\n \n-    // Add PHPUnit test namespaces of Drupal core.\n-    $this->testNamespaces['Drupal\\\\Tests\\\\'] = [$this->root . '/core/tests/Drupal/Tests'];\n+    // Add PHPUnit test namespaces of Drupal core. Order the namespaces by the\n+    // test types that tend to be slowest first, to optimize overall test times\n+    // when multiple different test types are run concurrently by the same test\n+    // runner.\n+    $this->testNamespaces['Drupal\\\\FunctionalJavascriptTests\\\\'] = [$this->root . '/core/tests/Drupal/FunctionalJavascriptTests'];\n+    $this->testNamespaces['Drupal\\\\FunctionalTests\\\\'] = [$this->root . '/core/tests/Drupal/FunctionalTests'];\n     $this->testNamespaces['Drupal\\\\BuildTests\\\\'] = [$this->root . '/core/tests/Drupal/BuildTests'];\n+    $this->testNamespaces['Drupal\\\\Tests\\\\'] = [$this->root . '/core/tests/Drupal/Tests'];\n     $this->testNamespaces['Drupal\\\\KernelTests\\\\'] = [$this->root . '/core/tests/Drupal/KernelTests'];\n-    $this->testNamespaces['Drupal\\\\FunctionalTests\\\\'] = [$this->root . '/core/tests/Drupal/FunctionalTests'];\n-    $this->testNamespaces['Drupal\\\\FunctionalJavascriptTests\\\\'] = [$this->root . '/core/tests/Drupal/FunctionalJavascriptTests'];\n     $this->testNamespaces['Drupal\\\\TestTools\\\\'] = [$this->root . '/core/tests/Drupal/TestTools'];\n \n     $this->availableExtensions = [];"
                },
                {
                    "sha": "0d099a79f157ceb6bf8cb1a6082a6cf57936c56f",
                    "filename": "html/core/lib/Drupal/Core/Utility/PhpRequirements.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FUtility%2FPhpRequirements.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FUtility%2FPhpRequirements.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FUtility%2FPhpRequirements.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -31,9 +31,9 @@ final class PhpRequirements {\n    *   by the PHP version.\n    */\n   private static $phpEolDates = [\n-    '8.1' => '2024-11-25',\n-    '8.2' => '2025-12-08',\n-    '8.3' => '2026-11-23',\n+    '8.1' => '2025-12-31',\n+    '8.2' => '2026-12-31',\n+    '8.3' => '2027-12-31',\n   ];\n \n   /**"
                },
                {
                    "sha": "111bda03f228b166e99c81ef6ee945d4bb3aca0c",
                    "filename": "html/core/lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
                    "status": "modified",
                    "additions": 21,
                    "deletions": 1,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FValidation%2FPlugin%2FValidation%2FConstraint%2FUniqueFieldValueValidator.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Flib%2FDrupal%2FCore%2FValidation%2FPlugin%2FValidation%2FConstraint%2FUniqueFieldValueValidator.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Flib%2FDrupal%2FCore%2FValidation%2FPlugin%2FValidation%2FConstraint%2FUniqueFieldValueValidator.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -82,7 +82,7 @@ public function validate($items, Constraint $constraint) {\n       // If our entity duplicates field values in any other entity, the query\n       // will return all field values that belong to those entities. Narrow\n       // down to only the specific duplicate values.\n-      $duplicate_values = array_intersect($item_values, $other_entity_values);\n+      $duplicate_values = $this->caseInsensitiveArrayIntersect($item_values, $other_entity_values);\n \n       foreach ($duplicate_values as $delta => $dupe) {\n         $violation = $this->context\n@@ -112,6 +112,26 @@ public function validate($items, Constraint $constraint) {\n     }\n   }\n \n+  /**\n+   * Perform a case-insensitive array intersection, but keep original capitalization.\n+   *\n+   * @param array $orig_values\n+   *   The original values to be returned.\n+   * @param array $comp_values\n+   *   The values to intersect $orig_values with.\n+   *\n+   * @return array\n+   *   Elements of $orig_values contained in $comp_values when ignoring capitalization.\n+   */\n+  private function caseInsensitiveArrayIntersect(array $orig_values, array $comp_values): array {\n+    $lowercase_comp_values = array_map('strtolower', $comp_values);\n+    $intersect_map = array_map(fn (string $x) => in_array(strtolower($x), $lowercase_comp_values, TRUE) ? $x : NULL, $orig_values);\n+\n+    return array_filter($intersect_map, function ($x) {\n+      return $x !== NULL;\n+    });\n+  }\n+\n   /**\n    * Get an array of duplicate field values.\n    *"
                },
                {
                    "sha": "9a90c3566b7d6d7f556992ecd781ff43ecad60e6",
                    "filename": "html/core/misc/cspell/dictionary.txt",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 5,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fcspell%2Fdictionary.txt",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fcspell%2Fdictionary.txt",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fcspell%2Fdictionary.txt?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -203,9 +203,6 @@ delsp\n denormalizable\n denormalizer\n denormalizers\n-dependee\n-dependee's\n-dependees\n derivedfrom\n desaturate\n desaturated\n@@ -464,7 +461,6 @@ metatags\n mglaman\n micheh\n mikey\n-milli\n mimetypes\n minifyzombies\n minusthick\n@@ -932,7 +928,6 @@ versionable\n versionless\n verygreatdrupalmodule\n vfsstream\n-viewmode\n viewports\n vocabs\n wcag"
                },
                {
                    "sha": "06b07c5abe2776b9393bc458ae24b413576a8428",
                    "filename": "html/core/misc/cspell/drupal-dictionary.txt",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fcspell%2Fdrupal-dictionary.txt",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fcspell%2Fdrupal-dictionary.txt",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fcspell%2Fdrupal-dictionary.txt?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,5 +1,8 @@\n bartik\n dblog\n+dependee\n+dependee's\n+dependees\n drupalci\n druplicon\n drush"
                },
                {
                    "sha": "c629719a3fc64404d7caedf9ace776fa024aed22",
                    "filename": "html/core/misc/details-aria.js",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fdetails-aria.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fdetails-aria.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fdetails-aria.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -23,7 +23,6 @@\n \n           $summary.attr({\n             'aria-expanded': open,\n-            'aria-pressed': open,\n           });\n         },\n       );"
                },
                {
                    "sha": "908f5dfb4a97eb45369f3547b3d43820b066e1e6",
                    "filename": "html/core/misc/details.js",
                    "status": "modified",
                    "additions": 13,
                    "deletions": 0,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fdetails.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fdetails.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fdetails.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -28,4 +28,17 @@\n     'formFragmentLinkClickOrHashChange.details',\n     handleFragmentLinkClickOrHashChange,\n   );\n+\n+  /**\n+   * Binds a listener to handle required fields in details elements.\n+   */\n+  window.addEventListener(\n+    'invalid',\n+    (event) => {\n+      if (event.target.matches('details input[required]')) {\n+        handleFragmentLinkClickOrHashChange(event, $(event.target));\n+      }\n+    },\n+    { capture: true },\n+  );\n })(jQuery);"
                },
                {
                    "sha": "4a8ab09de5987d76b2bab06f3230d48dd615eab7",
                    "filename": "html/core/misc/drupal.js",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fdrupal.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fdrupal.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fdrupal.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -71,7 +71,7 @@ window.Drupal = { behaviors: {}, locale: {} };\n    *\n    * @callback Drupal~behaviorAttach\n    *\n-   * @param {HTMLDocument|HTMLElement} context\n+   * @param {Document|HTMLElement} context\n    *   An element to detach behaviors from.\n    * @param {?object} settings\n    *   An object containing settings for the current context. It is rarely used.\n@@ -84,7 +84,7 @@ window.Drupal = { behaviors: {}, locale: {} };\n    *\n    * @callback Drupal~behaviorDetach\n    *\n-   * @param {HTMLDocument|HTMLElement} context\n+   * @param {Document|HTMLElement} context\n    *   An element to attach behaviors to.\n    * @param {object} settings\n    *   An object containing settings for the current context.\n@@ -143,7 +143,7 @@ window.Drupal = { behaviors: {}, locale: {} };\n    *   }\n    * };\n    *\n-   * @param {HTMLDocument|HTMLElement} [context=document]\n+   * @param {Document|HTMLElement} [context=document]\n    *   An element to attach behaviors to.\n    * @param {object} [settings=drupalSettings]\n    *   An object containing settings for the current context. If none is given,\n@@ -183,7 +183,7 @@ window.Drupal = { behaviors: {}, locale: {} };\n    * implementation, i.e. `once.remove('behaviorName', selector, context)`,\n    * to ensure the behavior is detached only from previously processed elements.\n    *\n-   * @param {HTMLDocument|HTMLElement} [context=document]\n+   * @param {Document|HTMLElement} [context=document]\n    *   An element to detach behaviors from.\n    * @param {object} [settings=drupalSettings]\n    *   An object containing settings for the current context. If none given,"
                },
                {
                    "sha": "e293b9d87e2b7199e56ec126021885b601950291",
                    "filename": "html/core/misc/form.js",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 5,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fform.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fform.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fform.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -111,10 +111,10 @@\n    *   (due to limitations of jQuery.serialize()). That is deemed to be\n    *   acceptable, because if the user forgot to attach a file, then the size of\n    *   HTTP payload will most likely be small enough to be fully passed to the\n-   *   server endpoint within (milli)seconds. If a user mistakenly attached a\n-   *   wrong file and is technically versed enough to cancel the form submission\n-   *   (and HTTP payload) in order to attach a different file, then that\n-   *   edge-case is not supported here.\n+   *   server endpoint within seconds, or even milliseconds. If a user\n+   *   mistakenly attached a wrong file and is technically versed enough to\n+   *   cancel the form submission (and HTTP payload) in order to attach a\n+   *   different file, then that edge-case is not supported here.\n    *\n    * Lastly, all forms submitted via HTTP GET are idempotent by definition of\n    * HTTP standards, so excluded in this implementation.\n@@ -293,7 +293,7 @@\n     } else {\n       url = window.location;\n     }\n-    const hash = url.hash.substr(1);\n+    const hash = url.hash.substring(1);\n     if (hash) {\n       const $target = $(`#${hash}`);\n       $('body').trigger('formFragmentLinkClickOrHashChange', [$target]);"
                },
                {
                    "sha": "a38285e27abf861ec75d56d5706d789a356d2ff1",
                    "filename": "html/core/misc/progress.js",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fprogress.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fprogress.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fprogress.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -14,8 +14,9 @@\n    *   The HTML for the progress bar.\n    */\n   Drupal.theme.progressBar = function (id) {\n+    const escapedId = Drupal.checkPlain(id);\n     return (\n-      `<div id=\"${id}\" class=\"progress\" aria-live=\"polite\">` +\n+      `<div id=\"${escapedId}\" class=\"progress\" aria-live=\"polite\">` +\n       '<div class=\"progress__label\">&nbsp;</div>' +\n       '<div class=\"progress__track\"><div class=\"progress__bar\"></div></div>' +\n       '<div class=\"progress__percentage\"></div>' +"
                },
                {
                    "sha": "f33dd0b9617ec9a809530ddb76b69fc98da2cb69",
                    "filename": "html/core/misc/states.js",
                    "status": "modified",
                    "additions": 14,
                    "deletions": 1,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fstates.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Fstates.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Fstates.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -149,6 +149,7 @@\n    *\n    * @prop {function} RegExp\n    * @prop {function} Function\n+   * @prop {function} Array\n    * @prop {function} Number\n    */\n   states.Dependent.comparisons = {\n@@ -159,6 +160,15 @@\n       // The \"reference\" variable is a comparison function.\n       return reference(value);\n     },\n+    Array(reference, value) {\n+      // Make sure value is an array.\n+      if (!Array.isArray(value)) {\n+        return false;\n+      }\n+\n+      // The arrays values should match.\n+      return JSON.stringify(reference.sort()) === JSON.stringify(value.sort());\n+    },\n     Number(reference, value) {\n       // If \"reference\" is a number and \"value\" is a string, then cast\n       // reference as a string before applying the strict comparison in\n@@ -681,11 +691,14 @@\n   $document.on('state:disabled', (e) => {\n     // Only act when this change was triggered by a dependency and not by the\n     // element monitoring itself.\n+    const tagsSupportDisable =\n+      'button, fieldset, optgroup, option, select, textarea, input';\n     if (e.trigger) {\n       $(e.target)\n         .closest('.js-form-item, .js-form-submit, .js-form-wrapper')\n         .toggleClass('form-disabled', e.value)\n-        .find('select, input, textarea')\n+        .find(tagsSupportDisable)\n+        .addBack(tagsSupportDisable)\n         .prop('disabled', e.value);\n     }\n   });"
                },
                {
                    "sha": "f649a767a3983576dec20b86f0dd90e4afc8c7dc",
                    "filename": "html/core/misc/tableheader.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Ftableheader.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmisc%2Ftableheader.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmisc%2Ftableheader.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -325,7 +325,7 @@\n             $stickyCell[0].style.display = 'none';\n           }\n         }\n-        this.$stickyTable[0].style.width = this.$originalTable.outerWidth();\n+        this.$stickyTable[0].style.width = `${this.$originalTable.outerWidth()}px`;\n       },\n     },\n   );"
                },
                {
                    "sha": "3c3e106e70373886175161fca11d3dbbbf739e12",
                    "filename": "html/core/modules/big_pipe/js/big_pipe.js",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 1,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbig_pipe%2Fjs%2Fbig_pipe.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbig_pipe%2Fjs%2Fbig_pipe.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fbig_pipe%2Fjs%2Fbig_pipe.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -113,7 +113,12 @@\n     // occur if the script node was first observed with empty content and then\n     // the child text node was added in full later.\n     // @see `@ingroup large_chunk` for more information.\n-    else if (checkMutation(node.parentNode)) {\n+    // If an element is added and then immediately (faster than the next\n+    // setImmediate is triggered) removed to a watched element of a\n+    // MutationObserver, the observer will notice and add a mutation for both\n+    // the addedNode and the removedNode - but the referenced element will not\n+    // have a parent node.\n+    else if (node.parentNode !== null && checkMutation(node.parentNode)) {\n       processReplacement(node.parentNode);\n     }\n   }"
                },
                {
                    "sha": "86a4ec44753e0bd365f96d99f33a36f24fe332bf",
                    "filename": "html/core/modules/big_pipe/tests/src/Functional/BigPipeTest.php",
                    "status": "modified",
                    "additions": 20,
                    "deletions": 20,
                    "changes": 40,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbig_pipe%2Ftests%2Fsrc%2FFunctional%2FBigPipeTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbig_pipe%2Ftests%2Fsrc%2FFunctional%2FBigPipeTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fbig_pipe%2Ftests%2Fsrc%2FFunctional%2FBigPipeTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -81,19 +81,19 @@ public function testNoJsDetection() {\n \n     // 1. No session (anonymous).\n     $this->drupalGet(Url::fromRoute('<front>'));\n-    $this->assertSessionCookieExists(FALSE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('0');\n+    $this->assertBigPipeNoJsCookieExists('0');\n     $this->assertSession()->responseNotContains('<noscript><meta http-equiv=\"Refresh\" content=\"0; URL=');\n     $this->assertSession()->responseNotContains($no_js_to_js_markup);\n \n     // 2. Session (authenticated).\n     $this->drupalLogin($this->rootUser);\n-    $this->assertSessionCookieExists(TRUE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('1');\n+    $this->assertBigPipeNoJsCookieExists('0');\n     $this->assertSession()->responseContains('<noscript><meta http-equiv=\"Refresh\" content=\"0; URL=' . base_path() . 'big_pipe/no-js?destination=' . UrlHelper::encodePath(base_path() . 'user/1?check_logged_in=1') . '\" />' . \"\\n\" . '</noscript>');\n     $this->assertSession()->responseNotContains($no_js_to_js_markup);\n     $this->assertBigPipeNoJsMetaRefreshRedirect();\n-    $this->assertBigPipeNoJsCookieExists(TRUE);\n+    $this->assertBigPipeNoJsCookieExists('1');\n     $this->assertSession()->responseNotContains('<noscript><meta http-equiv=\"Refresh\" content=\"0; URL=');\n     $this->assertSession()->responseContains($no_js_to_js_markup);\n     $this->drupalLogout();\n@@ -104,12 +104,12 @@ public function testNoJsDetection() {\n     // 3. Session (anonymous).\n     $this->drupalGet(Url::fromRoute('user.login', [], ['query' => ['trigger_session' => 1]]));\n     $this->drupalGet(Url::fromRoute('user.login'));\n-    $this->assertSessionCookieExists(TRUE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('1');\n+    $this->assertBigPipeNoJsCookieExists('0');\n     $this->assertSession()->responseContains('<noscript><meta http-equiv=\"Refresh\" content=\"0; URL=' . base_path() . 'big_pipe/no-js?destination=' . base_path() . 'user/login\" />' . \"\\n\" . '</noscript>');\n     $this->assertSession()->responseNotContains($no_js_to_js_markup);\n     $this->assertBigPipeNoJsMetaRefreshRedirect();\n-    $this->assertBigPipeNoJsCookieExists(TRUE);\n+    $this->assertBigPipeNoJsCookieExists('1');\n     $this->assertSession()->responseNotContains('<noscript><meta http-equiv=\"Refresh\" content=\"0; URL=');\n     $this->assertSession()->responseContains($no_js_to_js_markup);\n \n@@ -118,14 +118,14 @@ public function testNoJsDetection() {\n \n     // Edge case: route with '_no_big_pipe' option.\n     $this->drupalGet(Url::fromRoute('no_big_pipe'));\n-    $this->assertSessionCookieExists(FALSE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('0');\n+    $this->assertBigPipeNoJsCookieExists('0');\n     $this->assertSession()->responseNotContains('<noscript><meta http-equiv=\"Refresh\" content=\"0; URL=');\n     $this->assertSession()->responseNotContains($no_js_to_js_markup);\n     $this->drupalLogin($this->rootUser);\n     $this->drupalGet(Url::fromRoute('no_big_pipe'));\n-    $this->assertSessionCookieExists(TRUE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('1');\n+    $this->assertBigPipeNoJsCookieExists('0');\n     $this->assertSession()->responseNotContains('<noscript><meta http-equiv=\"Refresh\" content=\"0; URL=');\n     $this->assertSession()->responseNotContains($no_js_to_js_markup);\n   }\n@@ -145,8 +145,8 @@ public function testBigPipe() {\n     $this->config('system.logging')->set('error_level', ERROR_REPORTING_HIDE)->save();\n \n     $this->drupalLogin($this->rootUser);\n-    $this->assertSessionCookieExists(TRUE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('1');\n+    $this->assertBigPipeNoJsCookieExists('0');\n \n     $connection = Database::getConnection();\n     $log_count = $connection->select('watchdog')->countQuery()->execute()->fetchField();\n@@ -236,16 +236,16 @@ public function testBigPipeNoJs() {\n     $this->config('system.logging')->set('error_level', ERROR_REPORTING_HIDE)->save();\n \n     $this->drupalLogin($this->rootUser);\n-    $this->assertSessionCookieExists(TRUE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('1');\n+    $this->assertBigPipeNoJsCookieExists('0');\n \n     // By calling performMetaRefresh() here, we simulate JavaScript being\n     // disabled, because as far as the BigPipe module is concerned, it is\n     // enabled in the browser when the BigPipe no-JS cookie is set.\n     // @see setUp()\n     // @see performMetaRefresh()\n     $this->performMetaRefresh();\n-    $this->assertBigPipeNoJsCookieExists(TRUE);\n+    $this->assertBigPipeNoJsCookieExists('1');\n \n     $this->drupalGet(Url::fromRoute('big_pipe_test'));\n     $this->assertBigPipeResponseHeadersPresent();\n@@ -296,8 +296,8 @@ public function testBigPipeNoJs() {\n    */\n   public function testBigPipeMultiOccurrencePlaceholders() {\n     $this->drupalLogin($this->rootUser);\n-    $this->assertSessionCookieExists(TRUE);\n-    $this->assertBigPipeNoJsCookieExists(FALSE);\n+    $this->assertSessionCookieExists('1');\n+    $this->assertBigPipeNoJsCookieExists('0');\n \n     // By not calling performMetaRefresh() here, we simulate JavaScript being\n     // enabled, because as far as the BigPipe module is concerned, JavaScript is\n@@ -321,7 +321,7 @@ public function testBigPipeMultiOccurrencePlaceholders() {\n     // @see setUp()\n     // @see performMetaRefresh()\n     $this->performMetaRefresh();\n-    $this->assertBigPipeNoJsCookieExists(TRUE);\n+    $this->assertBigPipeNoJsCookieExists('1');\n     $this->drupalGet(Url::fromRoute('big_pipe_test_multi_occurrence'));\n     $this->assertSession()->pageTextContains('The count is 1.');\n     $this->assertSession()->responseNotContains('The count is 2.');"
                },
                {
                    "sha": "7de67a81430c84165756a55441afe76905d6e021",
                    "filename": "html/core/modules/block/js/block.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock%2Fjs%2Fblock.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock%2Fjs%2Fblock.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fblock%2Fjs%2Fblock.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -24,7 +24,7 @@\n       /**\n        * Create a summary for checkboxes in the provided context.\n        *\n-       * @param {HTMLDocument|HTMLElement} context\n+       * @param {Document|HTMLElement} context\n        *   A context where one would find checkboxes to summarize.\n        *\n        * @return {string}"
                },
                {
                    "sha": "2d56c3d24b1351bc43a9691046a5ea83e55711c7",
                    "filename": "html/core/modules/block/tests/src/Unit/Plugin/DisplayVariant/BlockPageVariantTest.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 6,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock%2Ftests%2Fsrc%2FUnit%2FPlugin%2FDisplayVariant%2FBlockPageVariantTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock%2Ftests%2Fsrc%2FUnit%2FPlugin%2FDisplayVariant%2FBlockPageVariantTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fblock%2Ftests%2Fsrc%2FUnit%2FPlugin%2FDisplayVariant%2FBlockPageVariantTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -4,6 +4,7 @@\n \n namespace Drupal\\Tests\\block\\Unit\\Plugin\\DisplayVariant;\n \n+use Drupal\\block\\Plugin\\DisplayVariant\\BlockPageVariant;\n use Drupal\\Core\\Cache\\CacheableMetadata;\n use Drupal\\Core\\DependencyInjection\\Container;\n use Drupal\\Tests\\UnitTestCase;\n@@ -43,8 +44,8 @@ class BlockPageVariantTest extends UnitTestCase {\n    * @param array $definition\n    *   The plugin definition array.\n    *\n-   * @return \\Drupal\\block\\Plugin\\DisplayVariant\\BlockPageVariant|\\PHPUnit\\Framework\\MockObject\\MockObject\n-   *   A mocked display variant plugin.\n+   * @return \\Drupal\\block\\Plugin\\DisplayVariant\\BlockPageVariant\n+   *   A test display variant plugin.\n    */\n   public function setUpDisplayVariant($configuration = [], $definition = []) {\n \n@@ -62,10 +63,7 @@ public function setUpDisplayVariant($configuration = [], $definition = []) {\n     $this->blockRepository = $this->createMock('Drupal\\block\\BlockRepositoryInterface');\n     $this->blockViewBuilder = $this->createMock('Drupal\\Core\\Entity\\EntityViewBuilderInterface');\n \n-    return $this->getMockBuilder('Drupal\\block\\Plugin\\DisplayVariant\\BlockPageVariant')\n-      ->setConstructorArgs([$configuration, 'test', $definition, $this->blockRepository, $this->blockViewBuilder, ['config:block_list']])\n-      ->addMethods(['getRegionNames'])\n-      ->getMock();\n+    return new BlockPageVariant($configuration, 'test', $definition, $this->blockRepository, $this->blockViewBuilder, ['config:block_list']);\n   }\n \n   public function providerBuild() {"
                },
                {
                    "sha": "7c97c6a6d1d287b5cf3b15e5b4748f89e4198335",
                    "filename": "html/core/modules/block_content/src/BlockContentForm.php",
                    "status": "modified",
                    "additions": 13,
                    "deletions": 15,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Fsrc%2FBlockContentForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Fsrc%2FBlockContentForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fblock_content%2Fsrc%2FBlockContentForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -41,7 +41,7 @@ public function form(array $form, FormStateInterface $form_state) {\n   /**\n    * {@inheritdoc}\n    */\n-  public function actions(array $form, FormStateInterface $form_state): array {\n+  protected function actions(array $form, FormStateInterface $form_state): array {\n     $element = parent::actions($form, $form_state);\n \n     if ($this->getRequest()->query->has('theme')) {\n@@ -108,20 +108,18 @@ public function save(array $form, FormStateInterface $form_state) {\n     if ($block->id()) {\n       $form_state->setValue('id', $block->id());\n       $form_state->set('id', $block->id());\n-      if ($insert) {\n-        $theme = $block->getTheme();\n-        if ($theme) {\n-          $form_state->setRedirect(\n-            'block.admin_add',\n-            [\n-              'plugin_id' => 'block_content:' . $block->uuid(),\n-              'theme' => $theme,\n-            ]\n-          );\n-        }\n-        else {\n-          $form_state->setRedirectUrl($block->toUrl('collection'));\n-        }\n+      $theme = $block->getTheme();\n+      if ($insert && $theme) {\n+        $form_state->setRedirect(\n+          'block.admin_add',\n+          [\n+            'plugin_id' => 'block_content:' . $block->uuid(),\n+            'theme' => $theme,\n+          ]\n+        );\n+      }\n+      else {\n+        $form_state->setRedirectUrl($block->toUrl('collection'));\n       }\n     }\n     else {"
                },
                {
                    "sha": "472f04183cb338ca7722b5f27f2201f49ced5b5b",
                    "filename": "html/core/modules/block_content/src/Plugin/Derivative/BlockContent.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Fsrc%2FPlugin%2FDerivative%2FBlockContent.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Fsrc%2FPlugin%2FDerivative%2FBlockContent.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fblock_content%2Fsrc%2FPlugin%2FDerivative%2FBlockContent.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -49,7 +49,7 @@ public function getDerivativeDefinitions($base_plugin_definition) {\n     /** @var \\Drupal\\block_content\\Entity\\BlockContent $block_content */\n     foreach ($block_contents as $block_content) {\n       $this->derivatives[$block_content->uuid()] = $base_plugin_definition;\n-      $this->derivatives[$block_content->uuid()]['admin_label'] = $block_content->label();\n+      $this->derivatives[$block_content->uuid()]['admin_label'] = $block_content->label() ?? ($block_content->type->entity->label() . ': ' . $block_content->id());\n       $this->derivatives[$block_content->uuid()]['config_dependencies']['content'] = [\n         $block_content->getConfigDependencyName(),\n       ];"
                },
                {
                    "sha": "b251951b3013ae93d5df4466abeab91d41f0a099",
                    "filename": "html/core/modules/block_content/tests/src/Functional/BlockContentCreationTest.php",
                    "status": "modified",
                    "additions": 25,
                    "deletions": 12,
                    "changes": 37,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Ftests%2Fsrc%2FFunctional%2FBlockContentCreationTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Ftests%2Fsrc%2FFunctional%2FBlockContentCreationTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fblock_content%2Ftests%2Fsrc%2FFunctional%2FBlockContentCreationTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,6 +2,7 @@\n \n namespace Drupal\\Tests\\block_content\\Functional;\n \n+use Drupal\\block_content\\BlockContentInterface;\n use Drupal\\block_content\\Entity\\BlockContent;\n use Drupal\\Core\\Database\\Database;\n \n@@ -67,10 +68,7 @@ public function testBlockContentCreation() {\n     $this->assertSession()->fieldNotExists('settings[view_mode]');\n \n     // Check that the block exists in the database.\n-    $blocks = \\Drupal::entityTypeManager()\n-      ->getStorage('block_content')\n-      ->loadByProperties(['info' => $edit['info[0][value]']]);\n-    $block = reset($blocks);\n+    $block = $this->getBlockByLabel($edit['info[0][value]']);\n     $this->assertNotEmpty($block, 'Content Block found in database.');\n   }\n \n@@ -133,10 +131,7 @@ public function testBlockContentCreationMultipleViewModes() {\n     $this->assertSession()->fieldValueEquals('settings[view_mode]', 'test_view_mode');\n \n     // Check that the block exists in the database.\n-    $blocks = \\Drupal::entityTypeManager()\n-      ->getStorage('block_content')\n-      ->loadByProperties(['info' => $edit['info[0][value]']]);\n-    $block = reset($blocks);\n+    $block = $this->getBlockByLabel($edit['info[0][value]']);\n     $this->assertNotEmpty($block, 'Content Block found in database.');\n   }\n \n@@ -175,6 +170,14 @@ public function testBlockContentFormSubmitHandlers() {\n     $this->assertSession()->pageTextContains('basic ' . $edit['info[0][value]'] . ' has been created.');\n     $this->assertSession()->addressEquals('/admin/content/block');\n \n+    // Check that the user is redirected to the block library on edit.\n+    $block = $this->getBlockByLabel($edit['info[0][value]']);\n+    $this->drupalGet($block->toUrl('edit-form'));\n+    $this->submitForm([\n+      'info[0][value]' => 'Test Block Updated',\n+    ], 'Save');\n+    $this->assertSession()->addressEquals('admin/content/block');\n+\n     // Test with user who doesn't have permission to place a block.\n     $this->drupalLogin($this->drupalCreateUser(['administer block content']));\n     $this->drupalGet('block/add/basic');\n@@ -200,10 +203,7 @@ public function testDefaultBlockContentCreation() {\n     $this->assertSession()->pageTextContains('basic ' . $edit['info[0][value]'] . ' has been created.');\n \n     // Check that the block exists in the database.\n-    $blocks = \\Drupal::entityTypeManager()\n-      ->getStorage('block_content')\n-      ->loadByProperties(['info' => $edit['info[0][value]']]);\n-    $block = reset($blocks);\n+    $block = $this->getBlockByLabel($edit['info[0][value]']);\n     $this->assertNotEmpty($block, 'Default Content Block found in database.');\n   }\n \n@@ -316,4 +316,17 @@ public function testConfigDependencies() {\n     $this->assertEquals($block_placement_id, $block_placement->id(), \"The block placement config entity has a dependency on the block content entity.\");\n   }\n \n+  /**\n+   * Load a block based on the label.\n+   */\n+  private function getBlockByLabel(string $label): ?BlockContentInterface {\n+    $blocks = \\Drupal::entityTypeManager()\n+      ->getStorage('block_content')\n+      ->loadByProperties(['info' => $label]);\n+    if (empty($blocks)) {\n+      return NULL;\n+    }\n+    return reset($blocks);\n+  }\n+\n }"
                },
                {
                    "sha": "86aae63f7a2bfad2a391a73e2898d4836fd1e101",
                    "filename": "html/core/modules/block_content/tests/src/Kernel/BlockContentDeriverTest.php",
                    "status": "modified",
                    "additions": 57,
                    "deletions": 0,
                    "changes": 57,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Ftests%2Fsrc%2FKernel%2FBlockContentDeriverTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fblock_content%2Ftests%2Fsrc%2FKernel%2FBlockContentDeriverTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fblock_content%2Ftests%2Fsrc%2FKernel%2FBlockContentDeriverTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -4,6 +4,7 @@\n \n use Drupal\\block_content\\Entity\\BlockContent;\n use Drupal\\block_content\\Entity\\BlockContentType;\n+use Drupal\\block_content\\Plugin\\Derivative\\BlockContent as DerivativeBlockContent;\n use Drupal\\Component\\Plugin\\PluginBase;\n use Drupal\\KernelTests\\KernelTestBase;\n \n@@ -19,13 +20,42 @@ class BlockContentDeriverTest extends KernelTestBase {\n    */\n   protected static $modules = ['block', 'block_content', 'system', 'user'];\n \n+  /**\n+   * The definition array of the base plugin.\n+   *\n+   * @var array\n+   */\n+  protected $baseDefinition = [\n+    'id' => 'block_content',\n+    'provider' => 'block_content',\n+    'class' => '\\Drupal\\block_content\\Plugin\\Block\\BlockContentBlock',\n+    'deriver' => '\\Drupal\\block_content\\Plugin\\Derivative\\BlockContent',\n+  ];\n+\n+  /**\n+   * The block content storage.\n+   *\n+   * @var \\Drupal\\Core\\Entity\\EntityStorageInterface\n+   */\n+  protected $blockContentStorage;\n+\n+  /**\n+   * The tested block content derivative class.\n+   *\n+   * @var \\Drupal\\block_content\\Plugin\\Derivative\\BlockContent\n+   */\n+  protected $blockContentDerivative;\n+\n   /**\n    * {@inheritdoc}\n    */\n   protected function setUp(): void {\n     parent::setUp();\n     $this->installEntitySchema('user');\n     $this->installEntitySchema('block_content');\n+\n+    $this->blockContentStorage = \\Drupal::entityTypeManager()->getStorage('block_content');\n+    $this->blockContentDerivative = new DerivativeBlockContent($this->blockContentStorage);\n   }\n \n   /**\n@@ -62,4 +92,31 @@ public function testReusableBlocksOnlyAreDerived() {\n     $this->assertFalse($block_manager->hasDefinition($plugin_id));\n   }\n \n+  /**\n+   * Tests the admin labels of derivative definitions.\n+   */\n+  public function testGetDerivativeDefinitionsAdminLabels(): void {\n+    $blockContentType = BlockContentType::create([\n+      'id' => 'basic',\n+      'label' => 'Basic Block',\n+    ]);\n+    $blockContentType->save();\n+    $blockContentWithLabel = BlockContent::create([\n+      'info' => 'Basic prototype',\n+      'type' => 'basic',\n+    ]);\n+    $blockContentWithLabel->save();\n+    $blockContentNoLabel = BlockContent::create([\n+      'type' => 'basic',\n+    ]);\n+    $blockContentNoLabel->save();\n+\n+    $blockPluginManager = \\Drupal::service('plugin.manager.block');\n+    $plugin = $blockPluginManager->createInstance('block_content:' . $blockContentWithLabel->uuid());\n+    $this->assertEquals('Basic prototype', $plugin->getPluginDefinition()['admin_label']);\n+\n+    $plugin = $blockPluginManager->createInstance('block_content:' . $blockContentNoLabel->uuid());\n+    $this->assertEquals('Basic Block: ' . $blockContentNoLabel->id(), $plugin->getPluginDefinition()['admin_label']);\n+  }\n+\n }"
                },
                {
                    "sha": "a00acfa773bec7209cefe12013ffc3b434b9616c",
                    "filename": "html/core/modules/book/tests/src/Functional/BookBreadcrumbTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbook%2Ftests%2Fsrc%2FFunctional%2FBookBreadcrumbTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbook%2Ftests%2Fsrc%2FFunctional%2FBookBreadcrumbTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fbook%2Ftests%2Fsrc%2FFunctional%2FBookBreadcrumbTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -117,7 +117,7 @@ protected function createBookNode($book_nid, $parent = NULL) {\n     static $number = 0;\n \n     $edit = [];\n-    $edit['title[0][value]'] = str_pad($number, 2, '0', STR_PAD_LEFT) . ' - test node ' . $this->randomMachineName(10);\n+    $edit['title[0][value]'] = str_pad((string) $number, 2, '0', STR_PAD_LEFT) . ' - test node ' . $this->randomMachineName(10);\n     $edit['body[0][value]'] = 'test body ' . $this->randomMachineName(32) . ' ' . $this->randomMachineName(32);\n     $edit['book[bid]'] = $book_nid;\n "
                },
                {
                    "sha": "4488476f8bde4ea81ee9d21feb64054dd8f23755",
                    "filename": "html/core/modules/book/tests/src/Functional/BookTestTrait.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbook%2Ftests%2Fsrc%2FFunctional%2FBookTestTrait.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fbook%2Ftests%2Fsrc%2FFunctional%2FBookTestTrait.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fbook%2Ftests%2Fsrc%2FFunctional%2FBookTestTrait.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -192,7 +192,7 @@ public function createBookNode($book_nid, $parent = NULL, $edit = []) {\n     // Used to ensure that when sorted nodes stay in same order.\n     static $number = 0;\n \n-    $edit['title[0][value]'] = str_pad($number, 2, '0', STR_PAD_LEFT) . ' - test node ' . $this->randomMachineName(10);\n+    $edit['title[0][value]'] = str_pad((string) $number, 2, '0', STR_PAD_LEFT) . ' - test node ' . $this->randomMachineName(10);\n     $edit['body[0][value]'] = 'test body ' . $this->randomMachineName(32) . ' ' . $this->randomMachineName(32);\n     $edit['book[bid]'] = $book_nid;\n "
                },
                {
                    "sha": "bbc9a31b504f658e67f36fb773d79010ad4d283a",
                    "filename": "html/core/modules/ckeditor5/css/editor.css",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Feditor.css",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Feditor.css",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Feditor.css?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -24,3 +24,8 @@\n .ck-editor__main > .ck-source-editing-area textarea {\n   overflow: auto;\n }\n+\n+/* Enhance visibility of selected/active buttons on the toolbar. */\n+.ck-toolbar__items .ck.ck-button.ck-on {\n+  border: 1px solid var(--ck-color-button-on-color);\n+}"
                },
                {
                    "sha": "429166121edd5200982b0d748933715ec78d0a80",
                    "filename": "html/core/modules/ckeditor5/css/essentials.admin.css",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 0,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Fessentials.admin.css",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Fessentials.admin.css",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Fessentials.admin.css?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,6 +1,7 @@\n .ckeditor5-toolbar-button-divider {\n   background-image: url(../icons/divider.svg);\n }\n+\n .ckeditor5-toolbar-button-wrapping {\n   background-image: url(../icons/separator.svg);\n }\n@@ -20,15 +21,20 @@\n   width: 100px;\n   color: #000;\n }\n+\n .ckeditor5-toolbar-button-heading::before {\n   margin-left: 10px;\n+  /* For browsers which don't support alt content, eg FireFox */\n   content: \"Heading\";\n+  content: \"Heading\" / \"\";\n   font-size: 14px;\n }\n+\n [dir=\"rtl\"] .ckeditor5-toolbar-button-heading::before {\n   margin-right: 10px;\n   margin-left: 0;\n }\n+\n .ckeditor5-toolbar-button-heading::after {\n   display: inline-block;\n   width: 7px;\n@@ -39,6 +45,7 @@\n   border-width: 2px 2px 0 0;\n   border-style: solid;\n }\n+\n [dir=\"rtl\"] .ckeditor5-toolbar-button-heading::after {\n   margin-right: 0;\n   margin-left: 10px;"
                },
                {
                    "sha": "cb9997852bfd6d2dff7352c628d79f1677ea6063",
                    "filename": "html/core/modules/ckeditor5/css/language.admin.css",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Flanguage.admin.css",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Flanguage.admin.css",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Flanguage.admin.css?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -5,15 +5,20 @@\n   width: 110px;\n   color: #000;\n }\n+\n .ckeditor5-toolbar-button-textPartLanguage::before {\n   margin-left: 10px;\n+  /* For browsers which don't support alt content, eg FireFox */\n   content: \"Language\";\n+  content: \"Language\" / \"\";\n   font-size: 14px;\n }\n+\n [dir=\"rtl\"] .ckeditor5-toolbar-button-textPartLanguage::before {\n   margin-right: 10px;\n   margin-left: 0;\n }\n+\n .ckeditor5-toolbar-button-textPartLanguage::after {\n   display: inline-block;\n   width: 7px;\n@@ -24,6 +29,7 @@\n   border-width: 2px 2px 0 0;\n   border-style: solid;\n }\n+\n [dir=\"rtl\"] .ckeditor5-toolbar-button-textPartLanguage::after {\n   margin-right: 0;\n   margin-left: 10px;"
                },
                {
                    "sha": "add5dbabd38042dc5e9fa9eaf0361fb24bb17de6",
                    "filename": "html/core/modules/ckeditor5/css/style.admin.css",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Fstyle.admin.css",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Fstyle.admin.css",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fcss%2Fstyle.admin.css?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -5,15 +5,20 @@\n   width: 110px;\n   color: #000;\n }\n+\n .ckeditor5-toolbar-button-style::before {\n   margin-left: 10px;\n+  /* For browsers which don't support alt content, eg FireFox */\n   content: \"Style\";\n+  content: \"Style\" / \"\";\n   font-size: 14px;\n }\n+\n [dir=\"rtl\"] .ckeditor5-toolbar-button-style::before {\n   margin-right: 10px;\n   margin-left: 0;\n }\n+\n .ckeditor5-toolbar-button-style::after {\n   display: inline-block;\n   width: 7px;\n@@ -24,6 +29,7 @@\n   border-width: 2px 2px 0 0;\n   border-style: solid;\n }\n+\n [dir=\"rtl\"] .ckeditor5-toolbar-button-style::after {\n   margin-right: 0;\n   margin-left: 10px;"
                },
                {
                    "sha": "81cab05e554c5e95a4b2c581b1703e32e9a918fb",
                    "filename": "html/core/modules/ckeditor5/js/build/drupalImage.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fbuild%2FdrupalImage.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fbuild%2FdrupalImage.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fbuild%2FdrupalImage.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +1 @@\n-!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.drupalImage=t())}(globalThis,(()=>(()=>{var e={\"ckeditor5/src/core.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/core.js\")},\"ckeditor5/src/engine.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/engine.js\")},\"ckeditor5/src/ui.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/ui.js\")},\"ckeditor5/src/upload.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/upload.js\")},\"ckeditor5/src/utils.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/utils.js\")},\"dll-reference CKEditor5.dll\":e=>{\"use strict\";e.exports=CKEditor5.dll}},t={};function i(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,i),n.exports}i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r={};return(()=>{\"use strict\";i.d(r,{default:()=>B});var e=i(\"ckeditor5/src/core.js\");function t(e,t,i){if(t.attributes)for(const[r,s]of Object.entries(t.attributes))e.setAttribute(r,s,i);t.styles&&e.setStyle(t.styles,i),t.classes&&e.addClass(t.classes,i)}var s=i(\"ckeditor5/src/engine.js\");class n extends s.Observer{observe(e){this.listenTo(e,\"load\",((e,t)=>{const i=t.target;this.checkShouldIgnoreEventFromTarget(i)||\"IMG\"==i.tagName&&this._fireEvents(t)}),{useCapture:!0})}stopObserving(e){this.stopListening(e)}_fireEvents(e){this.isEnabled&&(this.document.fire(\"layoutChanged\"),this.document.fire(\"imageLoaded\",e))}}function o(e){return e.createEmptyElement(\"img\")}function a(e){const t=parseFloat(e);return!Number.isNaN(t)&&e===String(t)}function l(e){return\"string\"==typeof e&&e.endsWith(\"%\")?e:`${parseInt(e,10)}`}const u=[{modelValue:\"alignCenter\",dataValue:\"center\"},{modelValue:\"alignRight\",dataValue:\"right\"},{modelValue:\"alignLeft\",dataValue:\"left\"}];class d extends e.Plugin{static get requires(){return[\"ImageUtils\"]}static get pluginName(){return\"DrupalImageEditing\"}init(){const{editor:e}=this,{conversion:i}=e,{schema:r}=e.model;if(r.isRegistered(\"imageInline\")&&r.extend(\"imageInline\",{allowAttributes:[\"dataEntityUuid\",\"dataEntityType\",\"isDecorative\"]}),r.isRegistered(\"imageBlock\")&&r.extend(\"imageBlock\",{allowAttributes:[\"dataEntityUuid\",\"dataEntityType\",\"isDecorative\"]}),i.for(\"upcast\").add(function(e){function t(t,i,r){const{viewItem:s}=i,{writer:n,consumable:o,safeInsert:a,updateConversionResult:l,schema:d}=r,c=[];let m;if(!o.test(s,{name:!0,attributes:\"src\"}))return;const g=o.test(s,{name:!0,attributes:\"data-caption\"});if(m=d.checkChild(i.modelCursor,\"imageInline\")&&!g?n.createElement(\"imageInline\",{src:s.getAttribute(\"src\")}):n.createElement(\"imageBlock\",{src:s.getAttribute(\"src\")}),e.plugins.has(\"ImageStyleEditing\")&&o.test(s,{name:!0,attributes:\"data-align\"})){const e=s.getAttribute(\"data-align\"),t=u.find((t=>t.dataValue===e));t&&(n.setAttribute(\"imageStyle\",t.modelValue,m),c.push(\"data-align\"))}if(g){const t=n.createElement(\"caption\"),i=e.data.processor.toView(s.getAttribute(\"data-caption\"));r.consumable.constructor.createFrom(i,r.consumable),r.convertChildren(i,t),n.append(t,m),c.push(\"data-caption\")}o.test(s,{name:!0,attributes:\"data-entity-uuid\"})&&(n.setAttribute(\"dataEntityUuid\",s.getAttribute(\"data-entity-uuid\"),m),c.push(\"data-entity-uuid\")),o.test(s,{name:!0,attributes:\"data-entity-type\"})&&(n.setAttribute(\"dataEntityType\",s.getAttribute(\"data-entity-type\"),m),c.push(\"data-entity-type\")),a(m,i.modelCursor)&&(o.consume(s,{name:!0,attributes:c}),l(m,i))}return e=>{e.on(\"element:img\",t,{priority:\"high\"})}}(e)).attributeToAttribute({view:{name:\"img\",key:\"width\"},model:{key:\"resizedWidth\",value:e=>a(e.getAttribute(\"width\"))?`${parseInt(e.getAttribute(\"width\"),10)}px`:e.getAttribute(\"width\").trim()}}).attributeToAttribute({view:{name:\"img\",key:\"height\"},model:{key:\"resizedHeight\",value:e=>a(e.getAttribute(\"height\"))?`${parseInt(e.getAttribute(\"height\"),10)}px`:e.getAttribute(\"height\").trim()}}),e.plugins.has(\"DataFilter\")){const t=e.plugins.get(\"DataFilter\");i.for(\"upcast\").add(function(e){function t(t,i,r){if(!i.modelRange)return;const s=i.viewItem.parent;if(!s.is(\"element\",\"a\"))return;if(!i.modelRange.getContainedElement().is(\"element\",\"imageBlock\"))return;const n=e.processViewAttributes(s,r);n&&r.writer.setAttribute(\"htmlLinkAttributes\",n,i.modelRange)}return e=>{e.on(\"element:img\",t,{priority:\"high\"})}}(t))}i.for(\"downcast\").add(function(){function e(e,t,i){const{item:r}=t,{consumable:s,writer:n}=i;if(!s.consume(r,e.name))return;const o=i.mapper.toViewElement(r),a=Array.from(o.getChildren()).find((e=>\"img\"===e.name));n.setAttribute(\"data-entity-uuid\",t.attributeNewValue,a||o)}return t=>{t.on(\"attribute:dataEntityUuid\",e)}}()).add(function(){function e(e,t,i){const{item:r}=t,{consumable:s,writer:n}=i;if(!s.consume(r,e.name))return;const o=i.mapper.toViewElement(r),a=Array.from(o.getChildren()).find((e=>\"img\"===e.name));n.setAttribute(\"data-entity-type\",t.attributeNewValue,a||o)}return t=>{t.on(\"attribute:dataEntityType\",e)}}()),i.for(\"dataDowncast\").add(function(e){return t=>{t.on(\"insert:caption\",((t,i,r)=>{const{consumable:s,writer:n,mapper:o}=r;if(!e.plugins.get(\"ImageUtils\").isImage(i.item.parent)||!s.consume(i.item,\"insert\"))return;const a=e.model.createRangeIn(i.item),l=n.createDocumentFragment();o.bindElements(i.item,l);for(const{item:t}of Array.from(a)){const i={item:t,range:e.model.createRangeOn(t)},s=`insert:${t.name||\"$text\"}`;e.data.downcastDispatcher.fire(s,i,r);for(const s of t.getAttributeKeys())Object.assign(i,{attributeKey:s,attributeOldValue:null,attributeNewValue:i.item.getAttribute(s)}),e.data.downcastDispatcher.fire(`attribute:${s}`,i,r)}for(const e of n.createRangeIn(l).getItems())o.unbindViewElement(e);o.unbindViewElement(l);const u=e.data.processor.toData(l);if(u){const e=o.toViewElement(i.item.parent);n.setAttribute(\"data-caption\",u,e)}}),{priority:\"high\"})}}(e)).elementToElement({model:\"imageBlock\",view:(e,{writer:t})=>o(t),converterPriority:\"high\"}).elementToElement({model:\"imageInline\",view:(e,{writer:t})=>o(t),converterPriority:\"high\"}).add(function(){function e(e,t,i){const{item:r}=t,{consumable:s,writer:n}=i,o=u.find((e=>e.modelValue===t.attributeNewValue));if(!o||!s.consume(r,e.name))return;const a=i.mapper.toViewElement(r),l=Array.from(a.getChildren()).find((e=>\"img\"===e.name));n.setAttribute(\"data-align\",o.dataValue,l||a)}return t=>{t.on(\"attribute:imageStyle\",e,{priority:\"high\"})}}()).add(function(){function e(e,i,r){if(!r.consumable.consume(i.item,e.name))return;const s=r.mapper.toViewElement(i.item),n=r.writer,o=n.createContainerElement(\"a\",{href:i.attributeNewValue});n.insert(n.createPositionBefore(s),o),n.move(n.createRangeOn(s),n.createPositionAt(o,0)),r.consumable.consume(i.item,\"attribute:htmlLinkAttributes:imageBlock\")&&t(r.writer,i.item.getAttribute(\"htmlLinkAttributes\"),o)}return t=>{t.on(\"attribute:linkHref:imageBlock\",e,{priority:\"high\"})}}()).attributeToAttribute({model:{name:\"imageBlock\",key:\"resizedWidth\"},view:e=>({key:\"width\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"resizedWidth\"},view:e=>({key:\"width\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageBlock\",key:\"resizedHeight\"},view:e=>({key:\"height\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"resizedHeight\"},view:e=>({key:\"height\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageBlock\",key:\"width\"},view:(e,{consumable:t},i)=>i.item.hasAttribute(\"resizedWidth\")?(t.consume(i.item,\"attribute:width\"),null):{key:\"width\",value:e},converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"width\"},view:(e,{consumable:t},i)=>i.item.hasAttribute(\"resizedWidth\")?(t.consume(i.item,\"attribute:width\"),null):{key:\"width\",value:e},converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageBlock\",key:\"height\"},view:(e,t,i)=>{if(i.item.hasAttribute(\"resizedWidth\")){if(i.item.getAttribute(\"resizedWidth\").endsWith(\"%\"))return{key:\"height\",value:i.item.getAttribute(\"resizedWidth\")};const t=parseInt(i.item.getAttribute(\"resizedWidth\"),10),r=parseInt(i.item.getAttribute(\"width\"),10)/parseInt(e,10);return{key:\"height\",value:`${Math.round(t/r)}`}}return{key:\"height\",value:e}},converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"height\"},view:(e,t,i)=>{if(i.item.hasAttribute(\"resizedWidth\")){if(i.item.getAttribute(\"resizedWidth\").endsWith(\"%\"))return{key:\"height\",value:i.item.getAttribute(\"resizedWidth\")};const t=parseInt(i.item.getAttribute(\"resizedWidth\"),10),r=parseInt(i.item.getAttribute(\"width\"),10)/parseInt(e,10);return{key:\"height\",value:`${Math.round(t/r)}`}}return{key:\"height\",value:e}},converterPriority:\"high\"}),e.editing.view.addObserver(n);const s=e.plugins.get(\"ImageUtils\");e.editing.view.document.on(\"imageLoaded\",((t,i)=>{const r=e.editing.view.domConverter.mapDomToView(i.target);if(!r)return;const n=s.getImageWidgetFromImageView(r);if(!n)return;const o=e.editing.mapper.toModelElement(n);o&&e.model.enqueueChange({isUndoable:!1},(()=>{s.setImageNaturalSizeAttributes(o)}))}))}}class c extends e.Command{refresh(){const e=this.editor.plugins.get(\"ImageUtils\").getClosestSelectedImageElement(this.editor.model.document.selection);this.isEnabled=!!e,this.isEnabled&&e.hasAttribute(\"alt\")?this.value=e.getAttribute(\"alt\"):this.value=!1}execute(e){const t=this.editor,i=t.plugins.get(\"ImageUtils\"),r=t.model,s=i.getClosestSelectedImageElement(r.document.selection);r.change((t=>{t.setAttribute(\"alt\",e.newValue,s)}))}}class m extends e.Plugin{static get requires(){return[\"ImageUtils\"]}static get pluginName(){return\"DrupalImageAlternativeTextEditing\"}constructor(e){super(e),this._missingAltTextViewReferences=new Set}init(){const e=this.editor;e.conversion.for(\"editingDowncast\").add(this._imageEditingDowncastConverter(\"attribute:alt\",e)).add(this._imageEditingDowncastConverter(\"attribute:src\",e)),e.commands.add(\"imageTextAlternative\",new c(this.editor)),e.editing.view.on(\"render\",(()=>{for(const e of this._missingAltTextViewReferences)e.button.element.isConnected||(e.destroy(),this._missingAltTextViewReferences.delete(e))}))}_imageEditingDowncastConverter(e){const t=(e,t,i)=>{const r=this.editor;if(!r.plugins.get(\"ImageUtils\").isImage(t.item))return;const s=i.mapper.toViewElement(t.item),n=Array.from(s.getChildren()).find((e=>e.getCustomProperty(\"drupalImageMissingAltWarning\")));if(t.item.hasAttribute(\"alt\"))return void(n&&i.writer.remove(n));if(n)return;const o=r.ui.componentFactory.create(\"drupalImageAlternativeTextMissing\");o.listenTo(r.ui,\"update\",(()=>{const e=r.model.document.selection.getFirstRange(),i=r.model.createRangeOn(t.item);o.set({isSelected:e.containsRange(i)||e.isIntersecting(i)})})),o.render(),this._missingAltTextViewReferences.add(o);const a=i.writer.createUIElement(\"span\",{class:\"image-alternative-text-missing-wrapper\"},(function(e){const t=this.toDomElement(e);return t.appendChild(o.element),t}));i.writer.setCustomProperty(\"drupalImageMissingAltWarning\",!0,a),i.writer.insert(i.writer.createPositionAt(s,\"end\"),a)};return i=>{i.on(e,t,{priority:\"low\"})}}}var g=i(\"ckeditor5/src/ui.js\");function h(e){const t=e.plugins.get(\"ContextualBalloon\");if(e.plugins.get(\"ImageUtils\").getClosestSelectedImageWidget(e.editing.view.document.selection)){const i=p(e);t.updatePosition(i)}}function p(e){const t=e.editing.view,i=g.BalloonPanelView.defaultPositions,r=e.plugins.get(\"ImageUtils\");return{target:t.domConverter.mapViewToDom(r.getClosestSelectedImageWidget(t.document.selection)),positions:[i.northArrowSouth,i.northArrowSouthWest,i.northArrowSouthEast,i.southArrowNorth,i.southArrowNorthWest,i.southArrowNorthEast,i.viewportStickyNorth]}}var b=i(\"ckeditor5/src/utils.js\");class f extends g.View{constructor(t){super(t),this.focusTracker=new b.FocusTracker,this.keystrokes=new b.KeystrokeHandler,this.decorativeToggle=this._decorativeToggleView(),this.labeledInput=this._createLabeledInputView(),this.saveButtonView=this._createButton(Drupal.t(\"Save\"),e.icons.check,\"ck-button-save\"),this.saveButtonView.type=\"submit\",this.saveButtonView.bind(\"isEnabled\").to(this.decorativeToggle,\"isOn\",this.labeledInput,\"isEmpty\",((e,t)=>e||!t)),this.cancelButtonView=this._createButton(Drupal.t(\"Cancel\"),e.icons.cancel,\"ck-button-cancel\",\"cancel\"),this._focusables=new g.ViewCollection,this._focusCycler=new g.FocusCycler({focusables:this._focusables,focusTracker:this.focusTracker,keystrokeHandler:this.keystrokes,actions:{focusPrevious:\"shift + tab\",focusNext:\"tab\"}}),this.setTemplate({tag:\"form\",attributes:{class:[\"ck\",\"ck-text-alternative-form\",\"ck-text-alternative-form--with-decorative-toggle\",\"ck-responsive-form\"],tabindex:\"-1\"},children:[{tag:\"div\",attributes:{class:[\"ck\",\"ck-text-alternative-form__decorative-toggle\"]},children:[this.decorativeToggle]},this.labeledInput,this.saveButtonView,this.cancelButtonView]}),(0,g.injectCssTransitionDisabler)(this)}render(){super.render(),this.keystrokes.listenTo(this.element),(0,g.submitHandler)({view:this}),[this.decorativeToggle,this.labeledInput,this.saveButtonView,this.cancelButtonView].forEach((e=>{this._focusables.add(e),this.focusTracker.add(e.element)}))}destroy(){super.destroy(),this.focusTracker.destroy(),this.keystrokes.destroy()}_createButton(e,t,i,r){const s=new g.ButtonView(this.locale);return s.set({label:e,icon:t,tooltip:!0}),s.extendTemplate({attributes:{class:i}}),r&&s.delegate(\"execute\").to(this,r),s}_createLabeledInputView(){const e=new g.LabeledFieldView(this.locale,g.createLabeledInputText);return e.bind(\"class\").to(this.decorativeToggle,\"isOn\",(e=>e?\"ck-hidden\":\"\")),e.label=Drupal.t(\"Text alternative\"),e}_decorativeToggleView(){const e=new g.SwitchButtonView(this.locale);return e.set({withText:!0,label:Drupal.t(\"Decorative image\")}),e.on(\"execute\",(()=>{e.set(\"isOn\",!e.isOn)})),e}}class w extends g.View{constructor(e){super(e);const t=this.bindTemplate;this.set(\"isVisible\"),this.set(\"isSelected\");const i=Drupal.t(\"Add missing alternative text\");this.button=new g.ButtonView(e),this.button.set({label:i,tooltip:!1,withText:!0}),this.setTemplate({tag:\"span\",attributes:{class:[\"image-alternative-text-missing\",t.to(\"isVisible\",(e=>e?\"\":\"ck-hidden\"))],title:i},children:[this.button]})}}class v extends e.Plugin{static get requires(){return[g.ContextualBalloon]}static get pluginName(){return\"DrupalImageTextAlternativeUI\"}init(){this._createButton(),this._createForm(),this._createMissingAltTextComponent();const e=()=>{this.editor.plugins.get(\"ImageUtils\").getClosestSelectedImageWidget(this.editor.editing.view.document.selection)&&this._showForm()};if(this.editor.commands.get(\"insertImage\")){this.editor.commands.get(\"insertImage\").on(\"execute\",e)}if(this.editor.plugins.has(\"ImageUploadEditing\")){this.editor.plugins.get(\"ImageUploadEditing\").on(\"uploadComplete\",e)}}_createMissingAltTextComponent(){this.editor.ui.componentFactory.add(\"drupalImageAlternativeTextMissing\",(e=>{const t=new w(e);return t.listenTo(t.button,\"execute\",(()=>{this._isInBalloon&&this._balloon.remove(this._form),this._showForm()})),t.listenTo(this.editor.ui,\"update\",(()=>{t.set({isVisible:!this._isVisible||!t.isSelected})})),t}))}destroy(){super.destroy(),this._form.destroy()}_createButton(){const t=this.editor;t.ui.componentFactory.add(\"drupalImageAlternativeText\",(i=>{const r=t.commands.get(\"imageTextAlternative\"),s=new g.ButtonView(i);return s.set({label:Drupal.t(\"Change image alternative text\"),icon:e.icons.lowVision,tooltip:!0}),s.bind(\"isEnabled\").to(r,\"isEnabled\"),this.listenTo(s,\"execute\",(()=>{this._showForm()})),s}))}_createForm(){const e=this.editor,t=e.editing.view.document,i=e.plugins.get(\"ImageUtils\");this._balloon=this.editor.plugins.get(\"ContextualBalloon\"),this._form=new f(e.locale),this._form.render(),this.listenTo(this._form,\"submit\",(()=>{e.execute(\"imageTextAlternative\",{newValue:this._form.decorativeToggle.isOn?\"\":this._form.labeledInput.fieldView.element.value}),this._hideForm(!0)})),this.listenTo(this._form,\"cancel\",(()=>{this._hideForm(!0)})),this.listenTo(this._form.decorativeToggle,\"execute\",(()=>{h(e)})),this._form.keystrokes.set(\"Esc\",((e,t)=>{this._hideForm(!0),t()})),this.listenTo(e.ui,\"update\",(()=>{i.getClosestSelectedImageWidget(t.selection)?this._isVisible&&h(e):this._hideForm(!0)})),(0,g.clickOutsideHandler)({emitter:this._form,activator:()=>this._isVisible,contextElements:[this._balloon.view.element],callback:()=>this._hideForm()})}_showForm(){if(this._isVisible)return;const e=this.editor,t=e.commands.get(\"imageTextAlternative\"),i=this._form.decorativeToggle,r=this._form.labeledInput;this._form.disableCssTransitions(),this._isInBalloon||this._balloon.add({view:this._form,position:p(e)}),i.isOn=\"\"===t.value,r.fieldView.element.value=t.value||\"\",r.fieldView.value=r.fieldView.element.value,i.isOn?i.focus():r.fieldView.select(),this._form.enableCssTransitions()}_hideForm(e){this._isInBalloon&&(this._form.focusTracker.isFocused&&this._form.saveButtonView.focus(),this._balloon.remove(this._form),e&&this.editor.editing.view.focus())}get _isVisible(){return this._balloon.visibleView===this._form}get _isInBalloon(){return this._balloon.hasView(this._form)}}class y extends e.Plugin{static get requires(){return[m,v]}static get pluginName(){return\"DrupalImageAlternativeText\"}}class I extends e.Plugin{static get requires(){return[d,y]}static get pluginName(){return\"DrupalImage\"}}const A=I;class k extends e.Plugin{init(){const{editor:e}=this;e.plugins.get(\"ImageUploadEditing\").on(\"uploadComplete\",((t,{data:i,imageElement:r})=>{e.model.change((e=>{e.setAttribute(\"dataEntityUuid\",i.response.uuid,r),e.setAttribute(\"dataEntityType\",i.response.entity_type,r)}))}))}static get pluginName(){return\"DrupalImageUploadEditing\"}}var x=i(\"ckeditor5/src/upload.js\");class _{constructor(e,t){this.loader=e,this.options=t}upload(){return this.loader.file.then((e=>new Promise(((t,i)=>{this._initRequest(),this._initListeners(t,i,e),this._sendRequest(e)}))))}abort(){this.xhr&&this.xhr.abort()}_initRequest(){this.xhr=new XMLHttpRequest,this.xhr.open(\"POST\",this.options.uploadUrl,!0),this.xhr.responseType=\"json\"}_initListeners(e,t,i){const r=this.xhr,s=this.loader,n=`Couldn't upload file: ${i.name}.`;r.addEventListener(\"error\",(()=>t(n))),r.addEventListener(\"abort\",(()=>t())),r.addEventListener(\"load\",(()=>{const i=r.response;if(!i||i.error)return t(i&&i.error&&i.error.message?i.error.message:n);e({response:i,urls:{default:i.url}})})),r.upload&&r.upload.addEventListener(\"progress\",(e=>{e.lengthComputable&&(s.uploadTotal=e.total,s.uploaded=e.loaded)}))}_sendRequest(e){const t=this.options.headers||{},i=this.options.withCredentials||!1;Object.keys(t).forEach((e=>{this.xhr.setRequestHeader(e,t[e])})),this.xhr.withCredentials=i;const r=new FormData;r.append(\"upload\",e),this.xhr.send(r)}}class T extends e.Plugin{static get requires(){return[x.FileRepository]}static get pluginName(){return\"DrupalFileRepository\"}init(){const e=this.editor.config.get(\"drupalImageUpload\");e&&(e.uploadUrl?this.editor.plugins.get(x.FileRepository).createUploadAdapter=t=>new _(t,e):(0,b.logWarning)(\"simple-upload-adapter-missing-uploadurl\"))}}class E extends e.Plugin{static get requires(){return[T,k]}static get pluginName(){return\"DrupalImageUpload\"}}const V=E;class C extends e.Plugin{init(){const{editor:e}=this;e.ui.componentFactory.add(\"drupalInsertImage\",(()=>e.ui.componentFactory.create(\"insertImage\")))}static get pluginName(){return\"DrupalInsertImage\"}}const B={DrupalImage:A,DrupalImageUpload:V,DrupalInsertImage:C}})(),r=r.default})()));\n\\ No newline at end of file\n+!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.drupalImage=t())}(globalThis,(()=>(()=>{var e={\"ckeditor5/src/core.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/core.js\")},\"ckeditor5/src/engine.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/engine.js\")},\"ckeditor5/src/ui.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/ui.js\")},\"ckeditor5/src/upload.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/upload.js\")},\"ckeditor5/src/utils.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/utils.js\")},\"dll-reference CKEditor5.dll\":e=>{\"use strict\";e.exports=CKEditor5.dll}},t={};function i(r){var s=t[r];if(void 0!==s)return s.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,i),n.exports}i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var r={};return(()=>{\"use strict\";i.d(r,{default:()=>B});var e=i(\"ckeditor5/src/core.js\");function t(e,t,i){if(t.attributes)for(const[r,s]of Object.entries(t.attributes))e.setAttribute(r,s,i);t.styles&&e.setStyle(t.styles,i),t.classes&&e.addClass(t.classes,i)}var s=i(\"ckeditor5/src/engine.js\");class n extends s.Observer{observe(e){this.listenTo(e,\"load\",((e,t)=>{const i=t.target;this.checkShouldIgnoreEventFromTarget(i)||\"IMG\"==i.tagName&&this._fireEvents(t)}),{useCapture:!0})}stopObserving(e){this.stopListening(e)}_fireEvents(e){this.isEnabled&&(this.document.fire(\"layoutChanged\"),this.document.fire(\"imageLoaded\",e))}}function o(e){return e.createEmptyElement(\"img\")}function a(e){const t=parseFloat(e);return!Number.isNaN(t)&&e===String(t)}function l(e){return\"string\"==typeof e&&e.endsWith(\"%\")?e:`${parseInt(e,10)}`}const u=[{modelValue:\"alignCenter\",dataValue:\"center\"},{modelValue:\"alignRight\",dataValue:\"right\"},{modelValue:\"alignLeft\",dataValue:\"left\"}];class d extends e.Plugin{static get requires(){return[\"ImageUtils\"]}static get pluginName(){return\"DrupalImageEditing\"}init(){const{editor:e}=this,{conversion:i}=e,{schema:r}=e.model;if(r.isRegistered(\"imageInline\")&&r.extend(\"imageInline\",{allowAttributes:[\"dataEntityUuid\",\"dataEntityType\",\"isDecorative\"]}),r.isRegistered(\"imageBlock\")&&r.extend(\"imageBlock\",{allowAttributes:[\"dataEntityUuid\",\"dataEntityType\",\"isDecorative\"]}),i.for(\"upcast\").add(function(e){function t(t,i,r){const{viewItem:s}=i,{writer:n,consumable:o,safeInsert:a,updateConversionResult:l,schema:d}=r,c=[];let m;if(!o.test(s,{name:!0,attributes:\"src\"}))return;const g=o.test(s,{name:!0,attributes:\"data-caption\"});if(m=d.checkChild(i.modelCursor,\"imageInline\")&&!g?n.createElement(\"imageInline\",{src:s.getAttribute(\"src\")}):n.createElement(\"imageBlock\",{src:s.getAttribute(\"src\")}),e.plugins.has(\"ImageStyleEditing\")&&o.test(s,{name:!0,attributes:\"data-align\"})){const e=s.getAttribute(\"data-align\"),t=u.find((t=>t.dataValue===e));t&&(n.setAttribute(\"imageStyle\",t.modelValue,m),c.push(\"data-align\"))}if(g){const t=n.createElement(\"caption\"),i=e.data.processor.toView(s.getAttribute(\"data-caption\"));r.consumable.constructor.createFrom(i,r.consumable),r.convertChildren(i,t),n.append(t,m),c.push(\"data-caption\")}o.test(s,{name:!0,attributes:\"data-entity-uuid\"})&&(n.setAttribute(\"dataEntityUuid\",s.getAttribute(\"data-entity-uuid\"),m),c.push(\"data-entity-uuid\")),o.test(s,{name:!0,attributes:\"data-entity-type\"})&&(n.setAttribute(\"dataEntityType\",s.getAttribute(\"data-entity-type\"),m),c.push(\"data-entity-type\")),a(m,i.modelCursor)&&(o.consume(s,{name:!0,attributes:c}),l(m,i))}return e=>{e.on(\"element:img\",t,{priority:\"high\"})}}(e)).attributeToAttribute({view:{name:\"img\",key:\"width\"},model:{key:\"resizedWidth\",value:e=>a(e.getAttribute(\"width\"))?`${parseInt(e.getAttribute(\"width\"),10)}px`:e.getAttribute(\"width\").trim()}}).attributeToAttribute({view:{name:\"img\",key:\"height\"},model:{key:\"resizedHeight\",value:e=>a(e.getAttribute(\"height\"))?`${parseInt(e.getAttribute(\"height\"),10)}px`:e.getAttribute(\"height\").trim()}}),e.plugins.has(\"DataFilter\")){const t=e.plugins.get(\"DataFilter\");i.for(\"upcast\").add(function(e){function t(t,i,r){if(!i.modelRange)return;const s=i.viewItem.parent;if(!s.is(\"element\",\"a\"))return;if(!i.modelRange.getContainedElement().is(\"element\",\"imageBlock\"))return;const n=e.processViewAttributes(s,r);n&&r.writer.setAttribute(\"htmlLinkAttributes\",n,i.modelRange)}return e=>{e.on(\"element:img\",t,{priority:\"high\"})}}(t))}i.for(\"downcast\").add(function(){function e(e,t,i){const{item:r}=t,{consumable:s,writer:n}=i;if(!s.consume(r,e.name))return;const o=i.mapper.toViewElement(r),a=Array.from(o.getChildren()).find((e=>\"img\"===e.name));n.setAttribute(\"data-entity-uuid\",t.attributeNewValue,a||o)}return t=>{t.on(\"attribute:dataEntityUuid\",e)}}()).add(function(){function e(e,t,i){const{item:r}=t,{consumable:s,writer:n}=i;if(!s.consume(r,e.name))return;const o=i.mapper.toViewElement(r),a=Array.from(o.getChildren()).find((e=>\"img\"===e.name));n.setAttribute(\"data-entity-type\",t.attributeNewValue,a||o)}return t=>{t.on(\"attribute:dataEntityType\",e)}}()),i.for(\"dataDowncast\").add(function(e){return t=>{t.on(\"insert:caption\",((t,i,r)=>{const{consumable:s,writer:n,mapper:o}=r;if(!e.plugins.get(\"ImageUtils\").isImage(i.item.parent)||!s.consume(i.item,\"insert\"))return;const a=e.model.createRangeIn(i.item),l=n.createDocumentFragment();o.bindElements(i.item,l);for(const{item:t}of Array.from(a)){const i={item:t,range:e.model.createRangeOn(t)},s=`insert:${t.name||\"$text\"}`;e.data.downcastDispatcher.fire(s,i,r);for(const s of t.getAttributeKeys())Object.assign(i,{attributeKey:s,attributeOldValue:null,attributeNewValue:i.item.getAttribute(s)}),e.data.downcastDispatcher.fire(`attribute:${s}`,i,r)}for(const e of n.createRangeIn(l).getItems())o.unbindViewElement(e);o.unbindViewElement(l);const u=e.data.processor.toData(l);if(u){const e=o.toViewElement(i.item.parent);n.setAttribute(\"data-caption\",u,e)}}),{priority:\"high\"})}}(e)).elementToElement({model:\"imageBlock\",view:(e,{writer:t})=>o(t),converterPriority:\"high\"}).elementToElement({model:\"imageInline\",view:(e,{writer:t})=>o(t),converterPriority:\"high\"}).add(function(){function e(e,t,i){const{item:r}=t,{consumable:s,writer:n}=i,o=u.find((e=>e.modelValue===t.attributeNewValue));if(!o||!s.consume(r,e.name))return;const a=i.mapper.toViewElement(r),l=Array.from(a.getChildren()).find((e=>\"img\"===e.name));n.setAttribute(\"data-align\",o.dataValue,l||a)}return t=>{t.on(\"attribute:imageStyle\",e,{priority:\"high\"})}}()).add(function(){function e(e,i,r){if(!r.consumable.consume(i.item,e.name))return;const s=r.mapper.toViewElement(i.item),n=r.writer,o=n.createContainerElement(\"a\",{href:i.attributeNewValue});n.insert(n.createPositionBefore(s),o),n.move(n.createRangeOn(s),n.createPositionAt(o,0)),r.consumable.consume(i.item,\"attribute:htmlLinkAttributes:imageBlock\")&&t(r.writer,i.item.getAttribute(\"htmlLinkAttributes\"),o)}return t=>{t.on(\"attribute:linkHref:imageBlock\",e,{priority:\"high\"})}}()).attributeToAttribute({model:{name:\"imageBlock\",key:\"resizedWidth\"},view:e=>({key:\"width\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"resizedWidth\"},view:e=>({key:\"width\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageBlock\",key:\"resizedHeight\"},view:e=>({key:\"height\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"resizedHeight\"},view:e=>({key:\"height\",value:l(e)}),converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageBlock\",key:\"width\"},view:(e,{consumable:t},i)=>i.item.hasAttribute(\"resizedWidth\")?(t.consume(i.item,\"attribute:width\"),null):{key:\"width\",value:e},converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"width\"},view:(e,{consumable:t},i)=>i.item.hasAttribute(\"resizedWidth\")?(t.consume(i.item,\"attribute:width\"),null):{key:\"width\",value:e},converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageBlock\",key:\"height\"},view:(e,t,i)=>{if(i.item.hasAttribute(\"resizedWidth\")){if(i.item.getAttribute(\"resizedWidth\").endsWith(\"%\"))return{key:\"height\",value:i.item.getAttribute(\"resizedWidth\")};const t=parseInt(i.item.getAttribute(\"resizedWidth\"),10),r=parseInt(i.item.getAttribute(\"width\"),10)/parseInt(e,10);return{key:\"height\",value:`${Math.round(t/r)}`}}return{key:\"height\",value:e}},converterPriority:\"high\"}).attributeToAttribute({model:{name:\"imageInline\",key:\"height\"},view:(e,t,i)=>{if(i.item.hasAttribute(\"resizedWidth\")){if(i.item.getAttribute(\"resizedWidth\").endsWith(\"%\"))return{key:\"height\",value:i.item.getAttribute(\"resizedWidth\")};const t=parseInt(i.item.getAttribute(\"resizedWidth\"),10),r=parseInt(i.item.getAttribute(\"width\"),10)/parseInt(e,10);return{key:\"height\",value:`${Math.round(t/r)}`}}return{key:\"height\",value:e}},converterPriority:\"high\"}),e.editing.view.addObserver(n);const s=e.plugins.get(\"ImageUtils\");e.editing.view.document.on(\"imageLoaded\",((t,i)=>{const r=e.editing.view.domConverter.mapDomToView(i.target);if(!r)return;const n=s.getImageWidgetFromImageView(r);if(!n)return;const o=e.editing.mapper.toModelElement(n);o&&e.model.enqueueChange({isUndoable:!1},(()=>{s.setImageNaturalSizeAttributes(o)}))}))}}class c extends e.Command{refresh(){const e=this.editor.plugins.get(\"ImageUtils\").getClosestSelectedImageElement(this.editor.model.document.selection);this.isEnabled=!!e,this.isEnabled&&e.hasAttribute(\"alt\")?this.value=e.getAttribute(\"alt\"):this.value=!1}execute(e){const t=this.editor,i=t.plugins.get(\"ImageUtils\"),r=t.model,s=i.getClosestSelectedImageElement(r.document.selection);r.change((t=>{t.setAttribute(\"alt\",e.newValue,s)}))}}class m extends e.Plugin{static get requires(){return[\"ImageUtils\"]}static get pluginName(){return\"DrupalImageAlternativeTextEditing\"}constructor(e){super(e),this._missingAltTextViewReferences=new Set}init(){const e=this.editor;e.conversion.for(\"editingDowncast\").add(this._imageEditingDowncastConverter(\"attribute:alt\",e)).add(this._imageEditingDowncastConverter(\"attribute:src\",e)),e.commands.add(\"imageTextAlternative\",new c(this.editor)),e.editing.view.on(\"render\",(()=>{for(const e of this._missingAltTextViewReferences)e.button.element.isConnected||(e.destroy(),this._missingAltTextViewReferences.delete(e))}))}_imageEditingDowncastConverter(e){const t=(e,t,i)=>{const r=this.editor;if(!r.plugins.get(\"ImageUtils\").isImage(t.item))return;const s=i.mapper.toViewElement(t.item),n=Array.from(s.getChildren()).find((e=>e.getCustomProperty(\"drupalImageMissingAltWarning\")));if(t.item.hasAttribute(\"alt\"))return void(n&&i.writer.remove(n));if(n)return;const o=r.ui.componentFactory.create(\"drupalImageAlternativeTextMissing\");o.listenTo(r.ui,\"update\",(()=>{const e=r.model.document.selection.getFirstRange(),i=r.model.createRangeOn(t.item);o.set({isSelected:e.containsRange(i)||e.isIntersecting(i)})})),o.render(),this._missingAltTextViewReferences.add(o);const a=i.writer.createUIElement(\"span\",{class:\"image-alternative-text-missing-wrapper\"},(function(e){const t=this.toDomElement(e);return t.appendChild(o.element),t}));i.writer.setCustomProperty(\"drupalImageMissingAltWarning\",!0,a),i.writer.insert(i.writer.createPositionAt(s,\"end\"),a)};return i=>{i.on(e,t,{priority:\"low\"})}}}var g=i(\"ckeditor5/src/ui.js\");function h(e){const t=e.plugins.get(\"ContextualBalloon\");if(e.plugins.get(\"ImageUtils\").getClosestSelectedImageWidget(e.editing.view.document.selection)){const i=p(e);t.updatePosition(i)}}function p(e){const t=e.editing.view,i=g.BalloonPanelView.defaultPositions,r=e.plugins.get(\"ImageUtils\");return{target:t.domConverter.mapViewToDom(r.getClosestSelectedImageWidget(t.document.selection)),positions:[i.northArrowSouth,i.northArrowSouthWest,i.northArrowSouthEast,i.southArrowNorth,i.southArrowNorthWest,i.southArrowNorthEast,i.viewportStickyNorth]}}var b=i(\"ckeditor5/src/utils.js\");class f extends g.View{constructor(t){super(t),this.focusTracker=new b.FocusTracker,this.keystrokes=new b.KeystrokeHandler,this.decorativeToggle=this._decorativeToggleView(),this.labeledInput=this._createLabeledInputView(),this.saveButtonView=this._createButton(Drupal.t(\"Save\"),e.icons.check,\"ck-button-save\"),this.saveButtonView.type=\"submit\",this.saveButtonView.bind(\"isEnabled\").to(this.decorativeToggle,\"isOn\",this.labeledInput,\"isEmpty\",((e,t)=>e||!t)),this.cancelButtonView=this._createButton(Drupal.t(\"Cancel\"),e.icons.cancel,\"ck-button-cancel\",\"cancel\"),this._focusables=new g.ViewCollection,this._focusCycler=new g.FocusCycler({focusables:this._focusables,focusTracker:this.focusTracker,keystrokeHandler:this.keystrokes,actions:{focusPrevious:\"shift + tab\",focusNext:\"tab\"}}),this.setTemplate({tag:\"form\",attributes:{class:[\"ck\",\"ck-text-alternative-form\",\"ck-text-alternative-form--with-decorative-toggle\",\"ck-responsive-form\"],tabindex:\"-1\"},children:[{tag:\"div\",attributes:{class:[\"ck\",\"ck-text-alternative-form__decorative-toggle\"]},children:[this.decorativeToggle]},this.labeledInput,this.saveButtonView,this.cancelButtonView]}),(0,g.injectCssTransitionDisabler)(this)}render(){super.render(),this.keystrokes.listenTo(this.element),(0,g.submitHandler)({view:this}),[this.decorativeToggle,this.labeledInput,this.saveButtonView,this.cancelButtonView].forEach((e=>{this._focusables.add(e),this.focusTracker.add(e.element)}))}destroy(){super.destroy(),this.focusTracker.destroy(),this.keystrokes.destroy()}_createButton(e,t,i,r){const s=new g.ButtonView(this.locale);return s.set({label:e,icon:t,tooltip:!0}),s.extendTemplate({attributes:{class:i}}),r&&s.delegate(\"execute\").to(this,r),s}_createLabeledInputView(){const e=new g.LabeledFieldView(this.locale,g.createLabeledInputText);return e.bind(\"class\").to(this.decorativeToggle,\"isOn\",(e=>e?\"ck-hidden\":\"\")),e.label=Drupal.t(\"Alternative text\"),e}_decorativeToggleView(){const e=new g.SwitchButtonView(this.locale);return e.set({withText:!0,label:Drupal.t(\"Decorative image\")}),e.on(\"execute\",(()=>{e.set(\"isOn\",!e.isOn)})),e}}class w extends g.View{constructor(e){super(e);const t=this.bindTemplate;this.set(\"isVisible\"),this.set(\"isSelected\");const i=Drupal.t(\"Add missing alternative text\");this.button=new g.ButtonView(e),this.button.set({label:i,tooltip:!1,withText:!0}),this.setTemplate({tag:\"span\",attributes:{class:[\"image-alternative-text-missing\",t.to(\"isVisible\",(e=>e?\"\":\"ck-hidden\"))],title:i},children:[this.button]})}}class v extends e.Plugin{static get requires(){return[g.ContextualBalloon]}static get pluginName(){return\"DrupalImageTextAlternativeUI\"}init(){this._createButton(),this._createForm(),this._createMissingAltTextComponent();const e=()=>{this.editor.plugins.get(\"ImageUtils\").getClosestSelectedImageWidget(this.editor.editing.view.document.selection)&&this._showForm()};if(this.editor.commands.get(\"insertImage\")){this.editor.commands.get(\"insertImage\").on(\"execute\",e)}if(this.editor.plugins.has(\"ImageUploadEditing\")){this.editor.plugins.get(\"ImageUploadEditing\").on(\"uploadComplete\",e)}}_createMissingAltTextComponent(){this.editor.ui.componentFactory.add(\"drupalImageAlternativeTextMissing\",(e=>{const t=new w(e);return t.listenTo(t.button,\"execute\",(()=>{this._isInBalloon&&this._balloon.remove(this._form),this._showForm()})),t.listenTo(this.editor.ui,\"update\",(()=>{t.set({isVisible:!this._isVisible||!t.isSelected})})),t}))}destroy(){super.destroy(),this._form.destroy()}_createButton(){const t=this.editor;t.ui.componentFactory.add(\"drupalImageAlternativeText\",(i=>{const r=t.commands.get(\"imageTextAlternative\"),s=new g.ButtonView(i);return s.set({label:Drupal.t(\"Change image alternative text\"),icon:e.icons.lowVision,tooltip:!0}),s.bind(\"isEnabled\").to(r,\"isEnabled\"),this.listenTo(s,\"execute\",(()=>{this._showForm()})),s}))}_createForm(){const e=this.editor,t=e.editing.view.document,i=e.plugins.get(\"ImageUtils\");this._balloon=this.editor.plugins.get(\"ContextualBalloon\"),this._form=new f(e.locale),this._form.render(),this.listenTo(this._form,\"submit\",(()=>{e.execute(\"imageTextAlternative\",{newValue:this._form.decorativeToggle.isOn?\"\":this._form.labeledInput.fieldView.element.value}),this._hideForm(!0)})),this.listenTo(this._form,\"cancel\",(()=>{this._hideForm(!0)})),this.listenTo(this._form.decorativeToggle,\"execute\",(()=>{h(e)})),this._form.keystrokes.set(\"Esc\",((e,t)=>{this._hideForm(!0),t()})),this.listenTo(e.ui,\"update\",(()=>{i.getClosestSelectedImageWidget(t.selection)?this._isVisible&&h(e):this._hideForm(!0)})),(0,g.clickOutsideHandler)({emitter:this._form,activator:()=>this._isVisible,contextElements:[this._balloon.view.element],callback:()=>this._hideForm()})}_showForm(){if(this._isVisible)return;const e=this.editor,t=e.commands.get(\"imageTextAlternative\"),i=this._form.decorativeToggle,r=this._form.labeledInput;this._form.disableCssTransitions(),this._isInBalloon||this._balloon.add({view:this._form,position:p(e)}),i.isOn=\"\"===t.value,r.fieldView.element.value=t.value||\"\",r.fieldView.value=r.fieldView.element.value,i.isOn?i.focus():r.fieldView.select(),this._form.enableCssTransitions()}_hideForm(e){this._isInBalloon&&(this._form.focusTracker.isFocused&&this._form.saveButtonView.focus(),this._balloon.remove(this._form),e&&this.editor.editing.view.focus())}get _isVisible(){return this._balloon.visibleView===this._form}get _isInBalloon(){return this._balloon.hasView(this._form)}}class y extends e.Plugin{static get requires(){return[m,v]}static get pluginName(){return\"DrupalImageAlternativeText\"}}class A extends e.Plugin{static get requires(){return[d,y]}static get pluginName(){return\"DrupalImage\"}}const I=A;class k extends e.Plugin{init(){const{editor:e}=this;e.plugins.get(\"ImageUploadEditing\").on(\"uploadComplete\",((t,{data:i,imageElement:r})=>{e.model.change((e=>{e.setAttribute(\"dataEntityUuid\",i.response.uuid,r),e.setAttribute(\"dataEntityType\",i.response.entity_type,r)}))}))}static get pluginName(){return\"DrupalImageUploadEditing\"}}var x=i(\"ckeditor5/src/upload.js\");class _{constructor(e,t){this.loader=e,this.options=t}upload(){return this.loader.file.then((e=>new Promise(((t,i)=>{this._initRequest(),this._initListeners(t,i,e),this._sendRequest(e)}))))}abort(){this.xhr&&this.xhr.abort()}_initRequest(){this.xhr=new XMLHttpRequest,this.xhr.open(\"POST\",this.options.uploadUrl,!0),this.xhr.responseType=\"json\"}_initListeners(e,t,i){const r=this.xhr,s=this.loader,n=`Couldn't upload file: ${i.name}.`;r.addEventListener(\"error\",(()=>t(n))),r.addEventListener(\"abort\",(()=>t())),r.addEventListener(\"load\",(()=>{const i=r.response;if(!i||i.error)return t(i&&i.error&&i.error.message?i.error.message:n);e({response:i,urls:{default:i.url}})})),r.upload&&r.upload.addEventListener(\"progress\",(e=>{e.lengthComputable&&(s.uploadTotal=e.total,s.uploaded=e.loaded)}))}_sendRequest(e){const t=this.options.headers||{},i=this.options.withCredentials||!1;Object.keys(t).forEach((e=>{this.xhr.setRequestHeader(e,t[e])})),this.xhr.withCredentials=i;const r=new FormData;r.append(\"upload\",e),this.xhr.send(r)}}class T extends e.Plugin{static get requires(){return[x.FileRepository]}static get pluginName(){return\"DrupalFileRepository\"}init(){const e=this.editor.config.get(\"drupalImageUpload\");e&&(e.uploadUrl?this.editor.plugins.get(x.FileRepository).createUploadAdapter=t=>new _(t,e):(0,b.logWarning)(\"simple-upload-adapter-missing-uploadurl\"))}}class E extends e.Plugin{static get requires(){return[T,k]}static get pluginName(){return\"DrupalImageUpload\"}}const V=E;class C extends e.Plugin{init(){const{editor:e}=this;e.ui.componentFactory.add(\"drupalInsertImage\",(()=>e.ui.componentFactory.create(\"insertImage\")))}static get pluginName(){return\"DrupalInsertImage\"}}const B={DrupalImage:I,DrupalImageUpload:V,DrupalInsertImage:C}})(),r=r.default})()));\n\\ No newline at end of file"
                },
                {
                    "sha": "65477c8dc3dc4666808c7900b4ad2a9a52a62f88",
                    "filename": "html/core/modules/ckeditor5/js/build/drupalMedia.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fbuild%2FdrupalMedia.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fbuild%2FdrupalMedia.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fbuild%2FdrupalMedia.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +1 @@\n-!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.drupalMedia=t())}(globalThis,(()=>(()=>{var e={\"ckeditor5/src/core.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/core.js\")},\"ckeditor5/src/engine.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/engine.js\")},\"ckeditor5/src/ui.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/ui.js\")},\"ckeditor5/src/utils.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/utils.js\")},\"ckeditor5/src/widget.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/widget.js\")},\"dll-reference CKEditor5.dll\":e=>{\"use strict\";e.exports=CKEditor5.dll}},t={};function i(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,i),r.exports}i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var n={};return(()=>{\"use strict\";i.d(n,{default:()=>ue});var e=i(\"ckeditor5/src/core.js\"),t=i(\"ckeditor5/src/widget.js\");function a(e){return!!e&&e.is(\"element\",\"drupalMedia\")}function r(e){return(0,t.isWidget)(e)&&!!e.getCustomProperty(\"drupalMedia\")}function o(e){const t=e.getSelectedElement();return a(t)?t:e.getFirstPosition().findAncestor(\"drupalMedia\")}function s(e){const t=e.getSelectedElement();if(t&&r(t))return t;if(null===e.getFirstPosition())return null;let i=e.getFirstPosition().parent;for(;i;){if(i.is(\"element\")&&r(i))return i;i=i.parent}return null}function l(e){const t=typeof e;return null!=e&&(\"object\"===t||\"function\"===t)}function d(e){for(const t of e){if(t.hasAttribute(\"data-drupal-media-preview\"))return t;if(t.childCount){const e=d(t.getChildren());if(e)return e}}return null}function u(e){return`drupalElementStyle${e[0].toUpperCase()+e.substring(1)}`}class c extends e.Command{execute(e){const t=this.editor.plugins.get(\"DrupalMediaEditing\"),i=Object.entries(t.attrs).reduce(((e,[t,i])=>(e[i]=t,e)),{}),n=Object.keys(e).reduce(((t,n)=>(i[n]&&(t[i[n]]=e[n]),t)),{});if(this.editor.plugins.has(\"DrupalElementStyleEditing\")){const t=this.editor.plugins.get(\"DrupalElementStyleEditing\"),{normalizedStyles:i}=t;for(const a of Object.keys(i))for(const i of t.normalizedStyles[a])if(e[i.attributeName]&&i.attributeValue===e[i.attributeName]){const e=u(a);n[e]=i.name}}this.editor.model.change((e=>{this.editor.model.insertObject(function(e,t){return e.createElement(\"drupalMedia\",t)}(e,n))}))}refresh(){const e=this.editor.model,t=e.document.selection,i=e.schema.findAllowedParent(t.getFirstPosition(),\"drupalMedia\");this.isEnabled=null!==i}}const m=\"METADATA_ERROR\";class p extends e.Plugin{static get requires(){return[t.Widget]}constructor(e){super(e),this.attrs={drupalMediaAlt:\"alt\",drupalMediaEntityType:\"data-entity-type\",drupalMediaEntityUuid:\"data-entity-uuid\"},this.converterAttributes=[\"drupalMediaEntityUuid\",\"drupalElementStyleViewMode\",\"drupalMediaEntityType\",\"drupalMediaAlt\"]}init(){const e=this.editor.config.get(\"drupalMedia\");if(!e)return;const{previewURL:t,themeError:i}=e;this.previewUrl=t,this.labelError=Drupal.t(\"Preview failed\"),this.themeError=i||`\\n      <p>${Drupal.t(\"An error occurred while trying to preview the media. Save your work and reload this page.\")}<p>\\n    `,this._defineSchema(),this._defineConverters(),this._defineListeners(),this.editor.commands.add(\"insertDrupalMedia\",new c(this.editor))}upcastDrupalMediaIsImage(e){const{model:t,plugins:i}=this.editor;i.get(\"DrupalMediaMetadataRepository\").getMetadata(e).then((i=>{e&&t.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaIsImage\",!!i.imageSourceMetadata,e)}))})).catch((i=>{e&&(console.warn(i.toString()),t.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaIsImage\",m,e)})))}))}upcastDrupalMediaType(e){this.editor.plugins.get(\"DrupalMediaMetadataRepository\").getMetadata(e).then((t=>{e&&this.editor.model.enqueueChange({isUndoable:!1},(i=>{i.setAttribute(\"drupalMediaType\",t.type,e)}))})).catch((t=>{e&&(console.warn(t.toString()),this.editor.model.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaType\",m,e)})))}))}async _fetchPreview(e){const t={text:this._renderElement(e),uuid:e.getAttribute(\"drupalMediaEntityUuid\")},i=await fetch(`${this.previewUrl}?${new URLSearchParams(t)}`,{headers:{\"X-Drupal-MediaPreview-CSRF-Token\":this.editor.config.get(\"drupalMedia\").previewCsrfToken}});if(i.ok){return{label:i.headers.get(\"drupal-media-label\"),preview:await i.text()}}return{label:this.labelError,preview:this.themeError}}_defineSchema(){this.editor.model.schema.register(\"drupalMedia\",{inheritAllFrom:\"$blockObject\",allowAttributes:Object.keys(this.attrs)}),this.editor.editing.view.domConverter.blockElements.push(\"drupal-media\")}_defineConverters(){const e=this.editor.conversion,i=this.editor.plugins.get(\"DrupalMediaMetadataRepository\");e.for(\"upcast\").elementToElement({view:{name:\"drupal-media\"},model:\"drupalMedia\"}).add((e=>{e.on(\"element:drupal-media\",((e,t)=>{const[n]=t.modelRange.getItems();i.getMetadata(n).then((e=>{n&&(this.upcastDrupalMediaIsImage(n),this.editor.model.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaType\",e.type,n)})))})).catch((e=>{console.warn(e.toString())}))}),{priority:\"lowest\"})})),e.for(\"dataDowncast\").elementToElement({model:\"drupalMedia\",view:{name:\"drupal-media\"}}),e.for(\"editingDowncast\").elementToElement({model:\"drupalMedia\",view:(e,{writer:i})=>{const n=i.createContainerElement(\"figure\",{class:\"drupal-media\"});if(!this.previewUrl){const e=i.createRawElement(\"div\",{\"data-drupal-media-preview\":\"unavailable\"});i.insert(i.createPositionAt(n,0),e)}return i.setCustomProperty(\"drupalMedia\",!0,n),(0,t.toWidget)(n,i,{label:Drupal.t(\"Media widget\")})}}).add((e=>{const t=(e,t,i)=>{const n=i.writer,a=t.item,r=i.mapper.toViewElement(t.item);let o=d(r.getChildren());if(o){if(\"ready\"!==o.getAttribute(\"data-drupal-media-preview\"))return;n.setAttribute(\"data-drupal-media-preview\",\"loading\",o)}else o=n.createRawElement(\"div\",{\"data-drupal-media-preview\":\"loading\"}),n.insert(n.createPositionAt(r,0),o);this._fetchPreview(a).then((({label:e,preview:t})=>{o&&this.editor.editing.view.change((i=>{const n=i.createRawElement(\"div\",{\"data-drupal-media-preview\":\"ready\",\"aria-label\":e},(e=>{e.innerHTML=t}));i.insert(i.createPositionBefore(o),n),i.remove(o)}))}))};return this.converterAttributes.forEach((i=>{e.on(`attribute:${i}:drupalMedia`,t)})),e})),e.for(\"editingDowncast\").add((e=>{e.on(\"attribute:drupalElementStyleAlign:drupalMedia\",((e,t,i)=>{const n={left:\"drupal-media-style-align-left\",right:\"drupal-media-style-align-right\",center:\"drupal-media-style-align-center\"},a=i.mapper.toViewElement(t.item),r=i.writer;n[t.attributeOldValue]&&r.removeClass(n[t.attributeOldValue],a),n[t.attributeNewValue]&&i.consumable.consume(t.item,e.name)&&r.addClass(n[t.attributeNewValue],a)}))})),Object.keys(this.attrs).forEach((t=>{const i={model:{key:t,name:\"drupalMedia\"},view:{name:\"drupal-media\",key:this.attrs[t]}};e.for(\"dataDowncast\").attributeToAttribute(i),e.for(\"upcast\").attributeToAttribute(i)}))}_defineListeners(){this.editor.model.on(\"insertContent\",((e,[t])=>{a(t)&&(this.upcastDrupalMediaIsImage(t),this.upcastDrupalMediaType(t))}))}_renderElement(e){const t=this.editor.model.change((t=>{const i=t.createDocumentFragment(),n=t.cloneElement(e,!1);return[\"linkHref\"].forEach((e=>{t.removeAttribute(e,n)})),t.append(n,i),i}));return this.editor.data.stringify(t)}static get pluginName(){return\"DrupalMediaEditing\"}}var g=i(\"ckeditor5/src/ui.js\");class h extends e.Plugin{init(){const e=this.editor,t=this.editor.config.get(\"drupalMedia\");if(!t)return;const{libraryURL:i,openDialog:n,dialogSettings:a={}}=t;i&&\"function\"==typeof n&&e.ui.componentFactory.add(\"drupalMedia\",(t=>{const r=e.commands.get(\"insertDrupalMedia\"),o=new g.ButtonView(t);return o.set({label:Drupal.t(\"Insert Media\"),icon:'<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.1873 4.86414L10.2509 6.86414V7.02335H10.2499V15.5091C9.70972 15.1961 9.01793 15.1048 8.34069 15.3136C7.12086 15.6896 6.41013 16.8967 6.75322 18.0096C7.09631 19.1226 8.3633 19.72 9.58313 19.344C10.6666 19.01 11.3484 18.0203 11.2469 17.0234H11.2499V9.80173L18.1803 8.25067V14.3868C17.6401 14.0739 16.9483 13.9825 16.2711 14.1913C15.0513 14.5674 14.3406 15.7744 14.6836 16.8875C15.0267 18.0004 16.2937 18.5978 17.5136 18.2218C18.597 17.8877 19.2788 16.8982 19.1773 15.9011H19.1803V8.02687L19.1873 8.0253V4.86414Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.5039 0.743652H0.386932V12.1603H13.5039V0.743652ZM12.3379 1.75842H1.55289V11.1454H1.65715L4.00622 8.86353L6.06254 10.861L9.24985 5.91309L11.3812 9.22179L11.7761 8.6676L12.3379 9.45621V1.75842ZM6.22048 4.50869C6.22048 5.58193 5.35045 6.45196 4.27722 6.45196C3.20398 6.45196 2.33395 5.58193 2.33395 4.50869C2.33395 3.43546 3.20398 2.56543 4.27722 2.56543C5.35045 2.56543 6.22048 3.43546 6.22048 4.50869Z\"/></svg>\\n',tooltip:!0}),o.bind(\"isOn\",\"isEnabled\").to(r,\"value\",\"isEnabled\"),this.listenTo(o,\"execute\",(()=>{n(i,(({attributes:t})=>{e.execute(\"insertDrupalMedia\",t)}),a)})),o}))}}class f extends e.Plugin{static get requires(){return[t.WidgetToolbarRepository]}static get pluginName(){return\"DrupalMediaToolbar\"}afterInit(){const{editor:e}=this;var i;e.plugins.get(t.WidgetToolbarRepository).register(\"drupalMedia\",{ariaLabel:Drupal.t(\"Drupal Media toolbar\"),items:(i=e.config.get(\"drupalMedia.toolbar\"),i.map((e=>l(e)?e.name:e))||[]),getRelatedElement:e=>s(e)})}}class b extends e.Command{refresh(){const e=o(this.editor.model.document.selection);this.isEnabled=!!e&&e.getAttribute(\"drupalMediaIsImage\")&&e.getAttribute(\"drupalMediaIsImage\")!==m,this.isEnabled?this.value=e.getAttribute(\"drupalMediaAlt\"):this.value=!1}execute(e){const{model:t}=this.editor,i=o(t.document.selection);e.newValue=e.newValue.trim(),t.change((t=>{e.newValue.length>0?t.setAttribute(\"drupalMediaAlt\",e.newValue,i):t.removeAttribute(\"drupalMediaAlt\",i)}))}}class w extends e.Plugin{init(){this._data=new WeakMap}getMetadata(e){if(this._data.get(e))return new Promise((t=>{t(this._data.get(e))}));const t=this.editor.config.get(\"drupalMedia\");if(!t)return new Promise(((e,t)=>{t(new Error(\"drupalMedia configuration is required for parsing metadata.\"))}));if(!e.hasAttribute(\"drupalMediaEntityUuid\"))return new Promise(((e,t)=>{t(new Error(\"drupalMedia element must have drupalMediaEntityUuid attribute to retrieve metadata.\"))}));const{metadataUrl:i}=t;return(async e=>{const t=await fetch(e);if(t.ok)return JSON.parse(await t.text());throw new Error(\"Fetching media embed metadata from the server failed.\")})(`${i}&${new URLSearchParams({uuid:e.getAttribute(\"drupalMediaEntityUuid\")})}`).then((t=>(this._data.set(e,t),t)))}static get pluginName(){return\"DrupalMediaMetadataRepository\"}}class y extends e.Plugin{static get requires(){return[w]}static get pluginName(){return\"MediaImageTextAlternativeEditing\"}init(){const{editor:e,editor:{model:t,conversion:i}}=this;t.schema.extend(\"drupalMedia\",{allowAttributes:[\"drupalMediaIsImage\"]}),i.for(\"editingDowncast\").add((e=>{e.on(\"attribute:drupalMediaIsImage\",((e,t,i)=>{const{writer:n,mapper:a}=i,r=a.toViewElement(t.item);if(t.attributeNewValue!==m){const e=Array.from(r.getChildren()).find((e=>e.getCustomProperty(\"drupalMediaMetadataError\")));return void(e&&(n.setCustomProperty(\"widgetLabel\",e.getCustomProperty(\"drupalMediaOriginalWidgetLabel\"),e),n.removeElement(e)))}const o=Drupal.t(\"Not all functionality may be available because some information could not be retrieved.\"),s=new g.Template({tag:\"span\",children:[{tag:\"span\",attributes:{class:\"drupal-media__metadata-error-icon\",\"data-cke-tooltip-text\":o}}]}).render(),l=n.createRawElement(\"div\",{class:\"drupal-media__metadata-error\"},((e,t)=>{t.setContentOf(e,s.outerHTML)}));n.setCustomProperty(\"drupalMediaMetadataError\",!0,l);const d=r.getCustomProperty(\"widgetLabel\");n.setCustomProperty(\"drupalMediaOriginalWidgetLabel\",d,l),n.setCustomProperty(\"widgetLabel\",`${d} (${o})`,r),n.insert(n.createPositionAt(r,0),l)}),{priority:\"low\"})})),e.commands.add(\"mediaImageTextAlternative\",new b(this.editor))}}function v(e){const t=e.editing.view,i=g.BalloonPanelView.defaultPositions;return{target:t.domConverter.viewToDom(t.document.selection.getSelectedElement()),positions:[i.northArrowSouth,i.northArrowSouthWest,i.northArrowSouthEast,i.southArrowNorth,i.southArrowNorthWest,i.southArrowNorthEast]}}var E=i(\"ckeditor5/src/utils.js\");class M extends g.View{constructor(t){super(t),this.focusTracker=new E.FocusTracker,this.keystrokes=new E.KeystrokeHandler,this.labeledInput=this._createLabeledInputView(),this.set(\"defaultAltText\",void 0),this.defaultAltTextView=this._createDefaultAltTextView(),this.saveButtonView=this._createButton(Drupal.t(\"Save\"),e.icons.check,\"ck-button-save\"),this.saveButtonView.type=\"submit\",this.cancelButtonView=this._createButton(Drupal.t(\"Cancel\"),e.icons.cancel,\"ck-button-cancel\",\"cancel\"),this._focusables=new g.ViewCollection,this._focusCycler=new g.FocusCycler({focusables:this._focusables,focusTracker:this.focusTracker,keystrokeHandler:this.keystrokes,actions:{focusPrevious:\"shift + tab\",focusNext:\"tab\"}}),this.setTemplate({tag:\"form\",attributes:{class:[\"ck\",\"ck-media-alternative-text-form\",\"ck-vertical-form\"],tabindex:\"-1\"},children:[this.defaultAltTextView,this.labeledInput,this.saveButtonView,this.cancelButtonView]}),(0,g.injectCssTransitionDisabler)(this)}render(){super.render(),this.keystrokes.listenTo(this.element),(0,g.submitHandler)({view:this}),[this.labeledInput,this.saveButtonView,this.cancelButtonView].forEach((e=>{this._focusables.add(e),this.focusTracker.add(e.element)}))}_createButton(e,t,i,n){const a=new g.ButtonView(this.locale);return a.set({label:e,icon:t,tooltip:!0}),a.extendTemplate({attributes:{class:i}}),n&&a.delegate(\"execute\").to(this,n),a}_createLabeledInputView(){const e=new g.LabeledFieldView(this.locale,g.createLabeledInputText);return e.label=Drupal.t(\"Alternative text override\"),e}_createDefaultAltTextView(){const e=g.Template.bind(this,this);return new g.Template({tag:\"div\",attributes:{class:[\"ck-media-alternative-text-form__default-alt-text\",e.if(\"defaultAltText\",\"ck-hidden\",(e=>!e))]},children:[{tag:\"strong\",attributes:{class:\"ck-media-alternative-text-form__default-alt-text-label\"},children:[Drupal.t(\"Default alternative text:\")]},\" \",{tag:\"span\",attributes:{class:\"ck-media-alternative-text-form__default-alt-text-value\"},children:[{text:[e.to(\"defaultAltText\")]}]}]})}}class k extends e.Plugin{static get requires(){return[g.ContextualBalloon]}static get pluginName(){return\"MediaImageTextAlternativeUi\"}init(){this._createButton(),this._createForm()}destroy(){super.destroy(),this._form.destroy()}_createButton(){const t=this.editor;t.ui.componentFactory.add(\"mediaImageTextAlternative\",(i=>{const n=t.commands.get(\"mediaImageTextAlternative\"),a=new g.ButtonView(i);return a.set({label:Drupal.t(\"Override media image alternative text\"),icon:e.icons.lowVision,tooltip:!0}),a.bind(\"isVisible\").to(n,\"isEnabled\"),this.listenTo(a,\"execute\",(()=>{this._showForm()})),a}))}_createForm(){const e=this.editor,t=e.editing.view.document;this._balloon=this.editor.plugins.get(\"ContextualBalloon\"),this._form=new M(e.locale),this._form.render(),this.listenTo(this._form,\"submit\",(()=>{e.execute(\"mediaImageTextAlternative\",{newValue:this._form.labeledInput.fieldView.element.value}),this._hideForm(!0)})),this.listenTo(this._form,\"cancel\",(()=>{this._hideForm(!0)})),this._form.keystrokes.set(\"Esc\",((e,t)=>{this._hideForm(!0),t()})),this.listenTo(e.ui,\"update\",(()=>{s(t.selection)?this._isVisible&&function(e){const t=e.plugins.get(\"ContextualBalloon\");if(s(e.editing.view.document.selection)){const i=v(e);t.updatePosition(i)}}(e):this._hideForm(!0)})),(0,g.clickOutsideHandler)({emitter:this._form,activator:()=>this._isVisible,contextElements:[this._balloon.view.element],callback:()=>this._hideForm()})}_showForm(){if(this._isVisible)return;const e=this.editor,t=e.commands.get(\"mediaImageTextAlternative\"),i=e.plugins.get(\"DrupalMediaMetadataRepository\"),n=this._form.labeledInput;this._form.disableCssTransitions(),this._isInBalloon||this._balloon.add({view:this._form,position:v(e)}),n.fieldView.element.value=t.value||\"\",n.fieldView.value=n.fieldView.element.value,this._form.defaultAltText=\"\";const r=e.model.document.selection.getSelectedElement();a(r)&&i.getMetadata(r).then((e=>{this._form.defaultAltText=e.imageSourceMetadata?e.imageSourceMetadata.alt:\"\"})).catch((e=>{console.warn(e.toString())})),this._form.labeledInput.fieldView.select(),this._form.enableCssTransitions()}_hideForm(e){this._isInBalloon&&(this._form.focusTracker.isFocused&&this._form.saveButtonView.focus(),this._balloon.remove(this._form),e&&this.editor.editing.view.focus())}get _isVisible(){return this._balloon.visibleView===this._form}get _isInBalloon(){return this._balloon.hasView(this._form)}}class A extends e.Plugin{static get requires(){return[y,k]}static get pluginName(){return\"MediaImageTextAlternative\"}}function D(e,t,i){if(t.attributes)for(const[n,a]of Object.entries(t.attributes))e.setAttribute(n,a,i);t.styles&&e.setStyle(t.styles,i),t.classes&&e.addClass(t.classes,i)}function C(e,t,i){if(!i.consumable.consume(t.item,e.name))return;const n=i.mapper.toViewElement(t.item);D(i.writer,t.attributeNewValue,n)}class _ extends e.Plugin{constructor(e){if(super(e),!e.plugins.has(\"GeneralHtmlSupport\"))return;e.plugins.has(\"DataFilter\")&&e.plugins.has(\"DataSchema\")||console.error(\"DataFilter and DataSchema plugins are required for Drupal Media to integrate with General HTML Support plugin.\");const{schema:t}=e.model,{conversion:i}=e,n=this.editor.plugins.get(\"DataFilter\");this.editor.plugins.get(\"DataSchema\").registerBlockElement({model:\"drupalMedia\",view:\"drupal-media\"}),n.on(\"register:drupal-media\",((e,a)=>{\"drupalMedia\"===a.model&&(t.extend(\"drupalMedia\",{allowAttributes:[\"htmlLinkAttributes\",\"htmlAttributes\"]}),i.for(\"upcast\").add(function(e){return t=>{t.on(\"element:drupal-media\",((t,i,n)=>{function a(t,a){const r=e.processViewAttributes(t,n);r&&n.writer.setAttribute(a,r,i.modelRange)}const r=i.viewItem,o=r.parent;a(r,\"htmlAttributes\"),o.is(\"element\",\"a\")&&a(o,\"htmlLinkAttributes\")}),{priority:\"low\"})}}(n)),i.for(\"editingDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{if(!i.consumable.consume(t.item,\"attribute:htmlLinkAttributes:drupalMedia\"))return;const n=i.mapper.toViewElement(t.item),a=function(e,t,i){const n=e.createRangeOn(t);for(const{item:e}of n.getWalker())if(e.is(\"element\",i))return e}(i.writer,n,\"a\");D(i.writer,t.item.getAttribute(\"htmlLinkAttributes\"),a)}),{priority:\"low\"})})),i.for(\"dataDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{if(!i.consumable.consume(t.item,\"attribute:htmlLinkAttributes:drupalMedia\"))return;const n=i.mapper.toViewElement(t.item).parent;D(i.writer,t.item.getAttribute(\"htmlLinkAttributes\"),n)}),{priority:\"low\"}),e.on(\"attribute:htmlAttributes:drupalMedia\",C,{priority:\"low\"})})),e.stop())}))}static get pluginName(){return\"DrupalMediaGeneralHtmlSupport\"}}class x extends e.Plugin{static get requires(){return[p,_,h,f,A]}static get pluginName(){return\"DrupalMedia\"}}var V=i(\"ckeditor5/src/engine.js\");function S(e){return Array.from(e.getChildren()).find((e=>\"drupal-media\"===e.name))}function T(e){return t=>{t.on(`attribute:${e.id}:drupalMedia`,((t,i,n)=>{const a=n.mapper.toViewElement(i.item);let r=Array.from(a.getChildren()).find((e=>\"a\"===e.name));if(r=!r&&a.is(\"element\",\"a\")?a:Array.from(a.getAncestors()).find((e=>\"a\"===e.name)),r){for(const[t,i]of(0,E.toMap)(e.attributes))n.writer.setAttribute(t,i,r);e.classes&&n.writer.addClass(e.classes,r);for(const t in e.styles)Object.prototype.hasOwnProperty.call(e.styles,t)&&n.writer.setStyle(t,e.styles[t],r)}}))}}function I(e,t){return e=>{e.on(\"element:a\",((e,i,n)=>{const a=i.viewItem;if(!S(a))return;const r=new V.Matcher(t._createPattern()).match(a);if(!r)return;if(!n.consumable.consume(a,r.match))return;const o=i.modelCursor.nodeBefore;n.writer.setAttribute(t.id,!0,o)}),{priority:\"high\"})}}class L extends e.Plugin{static get requires(){return[\"LinkEditing\",\"DrupalMediaEditing\"]}static get pluginName(){return\"DrupalLinkMediaEditing\"}init(){const{editor:e}=this;e.model.schema.extend(\"drupalMedia\",{allowAttributes:[\"linkHref\"]}),e.conversion.for(\"upcast\").add((e=>{e.on(\"element:a\",((e,t,i)=>{const n=t.viewItem,a=S(n);if(!a)return;if(!i.consumable.consume(n,{attributes:[\"href\"],name:!0}))return;const r=n.getAttribute(\"href\");if(!r)return;const o=i.convertItem(a,t.modelCursor);t.modelRange=o.modelRange,t.modelCursor=o.modelCursor;const s=t.modelCursor.nodeBefore;s&&s.is(\"element\",\"drupalMedia\")&&i.writer.setAttribute(\"linkHref\",r,s)}),{priority:\"high\"})})),e.conversion.for(\"editingDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{const{writer:n}=i;if(!i.consumable.consume(t.item,e.name))return;const a=i.mapper.toViewElement(t.item),r=Array.from(a.getChildren()).find((e=>\"a\"===e.name));if(r)t.attributeNewValue?n.setAttribute(\"href\",t.attributeNewValue,r):(n.move(n.createRangeIn(r),n.createPositionAt(a,0)),n.remove(r));else{const e=Array.from(a.getChildren()).find((e=>e.getAttribute(\"data-drupal-media-preview\"))),i=n.createContainerElement(\"a\",{href:t.attributeNewValue});n.insert(n.createPositionAt(a,0),i),n.move(n.createRangeOn(e),n.createPositionAt(i,0))}}),{priority:\"high\"})})),e.conversion.for(\"dataDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{const{writer:n}=i;if(!i.consumable.consume(t.item,e.name))return;const a=i.mapper.toViewElement(t.item),r=n.createContainerElement(\"a\",{href:t.attributeNewValue});n.insert(n.createPositionBefore(a),r),n.move(n.createRangeOn(a),n.createPositionAt(r,0))}),{priority:\"high\"})})),this._enableManualDecorators();if(e.commands.get(\"link\").automaticDecorators.length>0)throw new Error(\"The Drupal Media plugin is not compatible with automatic link decorators. To use Drupal Media, disable any plugins providing automatic link decorators.\")}_enableManualDecorators(){const e=this.editor,t=e.commands.get(\"link\");for(const i of t.manualDecorators)e.model.schema.extend(\"drupalMedia\",{allowAttributes:i.id}),e.conversion.for(\"downcast\").add(T(i)),e.conversion.for(\"upcast\").add(I(0,i))}}class P extends e.Plugin{static get requires(){return[\"LinkEditing\",\"LinkUI\",\"DrupalMediaEditing\"]}static get pluginName(){return\"DrupalLinkMediaUi\"}init(){const{editor:e}=this,t=e.editing.view.document;this.listenTo(t,\"click\",((t,i)=>{this._isSelectedLinkedMedia(e.model.document.selection)&&(i.preventDefault(),t.stop())}),{priority:\"high\"}),this._createToolbarLinkMediaButton()}_createToolbarLinkMediaButton(){const{editor:e}=this;e.ui.componentFactory.add(\"drupalLinkMedia\",(t=>{const i=new g.ButtonView(t),n=e.plugins.get(\"LinkUI\"),a=e.commands.get(\"link\");return i.set({isEnabled:!0,label:Drupal.t(\"Link media\"),icon:'<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m11.077 15 .991-1.416a.75.75 0 1 1 1.229.86l-1.148 1.64a.748.748 0 0 1-.217.206 5.251 5.251 0 0 1-8.503-5.955.741.741 0 0 1 .12-.274l1.147-1.639a.75.75 0 1 1 1.228.86L4.933 10.7l.006.003a3.75 3.75 0 0 0 6.132 4.294l.006.004zm5.494-5.335a.748.748 0 0 1-.12.274l-1.147 1.639a.75.75 0 1 1-1.228-.86l.86-1.23a3.75 3.75 0 0 0-6.144-4.301l-.86 1.229a.75.75 0 0 1-1.229-.86l1.148-1.64a.748.748 0 0 1 .217-.206 5.251 5.251 0 0 1 8.503 5.955zm-4.563-2.532a.75.75 0 0 1 .184 1.045l-3.155 4.505a.75.75 0 1 1-1.229-.86l3.155-4.506a.75.75 0 0 1 1.045-.184z\"/></svg>\\n',keystroke:\"Ctrl+K\",tooltip:!0,isToggleable:!0}),i.bind(\"isEnabled\").to(a,\"isEnabled\"),i.bind(\"isOn\").to(a,\"value\",(e=>!!e)),this.listenTo(i,\"execute\",(()=>{this._isSelectedLinkedMedia(e.model.document.selection)?n._addActionsView():n._showUI(!0)})),i}))}_isSelectedLinkedMedia(e){const t=e.getSelectedElement();return!!t&&t.is(\"element\",\"drupalMedia\")&&t.hasAttribute(\"linkHref\")}}class O extends e.Plugin{static get requires(){return[L,P]}static get pluginName(){return\"DrupalLinkMedia\"}}const{objectFullWidth:B,objectInline:N,objectLeft:R,objectRight:j,objectCenter:F,objectBlockLeft:U,objectBlockRight:H}=e.icons,$={get inline(){return{name:\"inline\",title:\"In line\",icon:N,modelElements:[\"imageInline\"],isDefault:!0}},get alignLeft(){return{name:\"alignLeft\",title:\"Left aligned image\",icon:R,modelElements:[\"imageBlock\",\"imageInline\"],className:\"image-style-align-left\"}},get alignBlockLeft(){return{name:\"alignBlockLeft\",title:\"Left aligned image\",icon:U,modelElements:[\"imageBlock\"],className:\"image-style-block-align-left\"}},get alignCenter(){return{name:\"alignCenter\",title:\"Centered image\",icon:F,modelElements:[\"imageBlock\"],className:\"image-style-align-center\"}},get alignRight(){return{name:\"alignRight\",title:\"Right aligned image\",icon:j,modelElements:[\"imageBlock\",\"imageInline\"],className:\"image-style-align-right\"}},get alignBlockRight(){return{name:\"alignBlockRight\",title:\"Right aligned image\",icon:H,modelElements:[\"imageBlock\"],className:\"image-style-block-align-right\"}},get block(){return{name:\"block\",title:\"Centered image\",icon:F,modelElements:[\"imageBlock\"],isDefault:!0}},get side(){return{name:\"side\",title:\"Side image\",icon:j,modelElements:[\"imageBlock\"],className:\"image-style-side\"}}},q={full:B,left:U,right:H,center:F,inlineLeft:R,inlineRight:j,inline:N},W=[{name:\"imageStyle:wrapText\",title:\"Wrap text\",defaultItem:\"imageStyle:alignLeft\",items:[\"imageStyle:alignLeft\",\"imageStyle:alignRight\"]},{name:\"imageStyle:breakText\",title:\"Break text\",defaultItem:\"imageStyle:block\",items:[\"imageStyle:alignBlockLeft\",\"imageStyle:block\",\"imageStyle:alignBlockRight\"]}];function K(e){(0,E.logWarning)(\"image-style-configuration-definition-invalid\",e)}const z={normalizeStyles:function(e){return(e.configuredStyles.options||[]).map((e=>function(e){e=\"string\"==typeof e?$[e]?{...$[e]}:{name:e}:function(e,t){const i={...t};for(const n in e)Object.prototype.hasOwnProperty.call(t,n)||(i[n]=e[n]);return i}($[e.name],e);\"string\"==typeof e.icon&&(e.icon=q[e.icon]||e.icon);return e}(e))).filter((t=>function(e,{isBlockPluginLoaded:t,isInlinePluginLoaded:i}){const{modelElements:n,name:a}=e;if(!(n&&n.length&&a))return K({style:e}),!1;{const a=[t?\"imageBlock\":null,i?\"imageInline\":null];if(!n.some((e=>a.includes(e))))return(0,E.logWarning)(\"image-style-missing-dependency\",{style:e,missingPlugins:n.map((e=>\"imageBlock\"===e?\"ImageBlockEditing\":\"ImageInlineEditing\"))}),!1}return!0}(t,e)))},getDefaultStylesConfiguration:function(e,t){return e&&t?{options:[\"inline\",\"alignLeft\",\"alignRight\",\"alignCenter\",\"alignBlockLeft\",\"alignBlockRight\",\"block\",\"side\"]}:e?{options:[\"block\",\"side\"]}:t?{options:[\"inline\",\"alignLeft\",\"alignRight\"]}:{}},getDefaultDropdownDefinitions:function(e){return e.has(\"ImageBlockEditing\")&&e.has(\"ImageInlineEditing\")?[...W]:[]},warnInvalidStyle:K,DEFAULT_OPTIONS:$,DEFAULT_ICONS:q,DEFAULT_DROPDOWN_DEFINITIONS:W};function Z(e,t,i){for(const n of t)if(i.checkAttribute(e,n))return!0;return!1}function G(e,t,i){const n=e.getSelectedElement();if(n&&Z(n,i,t))return n;let{parent:a}=e.getFirstPosition();for(;a;){if(a.is(\"element\")&&Z(a,i,t))return a;a=a.parent}return null}class J extends e.Command{constructor(e,t){super(e),this.styles={},Object.keys(t).forEach((e=>{this.styles[e]=new Map(t[e].map((e=>[e.name,e])))})),this.modelAttributes=[];for(const e of Object.keys(t)){const t=u(e);this.modelAttributes.push(t)}}refresh(){const{editor:e}=this,t=G(e.model.document.selection,e.model.schema,this.modelAttributes);this.isEnabled=!!t,this.isEnabled?this.value=this.getValue(t):this.value=!1}getValue(e){const t={};return Object.keys(this.styles).forEach((i=>{const n=u(i);if(e.hasAttribute(n))t[i]=e.getAttribute(n);else for(const[,e]of this.styles[i])e.isDefault&&(t[i]=e.name)})),t}execute(e={}){const{editor:{model:t}}=this,{value:i,group:n}=e,a=u(n);t.change((e=>{const r=G(t.document.selection,t.schema,this.modelAttributes);!i||this.styles[n].get(i).isDefault?e.removeAttribute(a,r):e.setAttribute(a,i,r)}))}}function X(e,t){for(const i of t)if(i.name===e)return i}class Q extends e.Plugin{init(){const{editor:t}=this,i=t.config.get(\"drupalElementStyles\");this.normalizedStyles={},Object.keys(i).forEach((t=>{this.normalizedStyles[t]=i[t].map((t=>(\"string\"==typeof t.icon&&e.icons[t.icon]&&(t.icon=e.icons[t.icon]),t.name&&(t.name=`${t.name}`),t))).filter((e=>e.isDefault||e.attributeName&&e.attributeValue?e.modelElements&&Array.isArray(e.modelElements)?!!e.name||(console.warn(\"drupalElementStyles options must include a name.\"),!1):(console.warn(\"drupalElementStyles options must include an array of supported modelElements.\"),!1):(console.warn(`${e.attributeValue} drupalElementStyles options must include attributeName and attributeValue.`),!1)))})),this._setupConversion(),t.commands.add(\"drupalElementStyle\",new J(t,this.normalizedStyles))}_setupConversion(){const{editor:e}=this,{schema:t}=e.model;Object.keys(this.normalizedStyles).forEach((i=>{const n=u(i),a=(r=this.normalizedStyles[i],(e,t,i)=>{if(!i.consumable.consume(t.item,e.name))return;const n=X(t.attributeNewValue,r),a=X(t.attributeOldValue,r),o=i.mapper.toViewElement(t.item),s=i.writer;a&&(\"class\"===a.attributeName?s.removeClass(a.attributeValue,o):s.removeAttribute(a.attributeName,o)),n&&(\"class\"===n.attributeName?s.addClass(n.attributeValue,o):n.isDefault||s.setAttribute(n.attributeName,n.attributeValue,o))});var r;const o=function(e,t){const i=e.filter((e=>!e.isDefault));return(e,n,a)=>{if(!n.modelRange)return;const r=n.viewItem,o=(0,E.first)(n.modelRange.getItems());if(o&&a.schema.checkAttribute(o,t))for(const e of i)if(\"class\"===e.attributeName)a.consumable.consume(r,{classes:e.attributeValue})&&a.writer.setAttribute(t,e.name,o);else if(a.consumable.consume(r,{attributes:[e.attributeName]}))for(const e of i)e.attributeValue===r.getAttribute(e.attributeName)&&a.writer.setAttribute(t,e.name,o)}}(this.normalizedStyles[i],n);e.editing.downcastDispatcher.on(`attribute:${n}`,a),e.data.downcastDispatcher.on(`attribute:${n}`,a);[...new Set(this.normalizedStyles[i].map((e=>e.modelElements)).flat())].forEach((e=>{t.extend(e,{allowAttributes:n})})),e.data.upcastDispatcher.on(\"element\",o,{priority:\"low\"})}))}static get pluginName(){return\"DrupalElementStyleEditing\"}}const Y=e=>e,ee=(e,t)=>(e?`${e}: `:\"\")+t;function te(e,t){return`drupalElementStyle:${t}:${e}`}class ie extends e.Plugin{static get requires(){return[Q]}init(){const{plugins:e}=this.editor,t=this.editor.config.get(\"drupalMedia.toolbar\")||[],i=e.get(\"DrupalElementStyleEditing\").normalizedStyles;Object.keys(i).forEach((e=>{i[e].forEach((t=>{this._createButton(t,e,i[e])}))}));t.filter(l).filter((e=>{const t=[];if(!e.display)return console.warn(\"dropdown configuration must include a display key specifying either listDropdown or splitButton.\"),!1;e.items.includes(e.defaultItem)||console.warn(\"defaultItem must be part of items in the dropdown configuration.\");for(const i of e.items){const e=i.split(\":\")[1];t.push(e)}return!!t.every((e=>e===t[0]))||(console.warn(\"dropdown configuration should only contain buttons from one group.\"),!1)})).forEach((e=>{if(e.items.length>=2){const t=e.name.split(\":\")[1];switch(e.display){case\"splitButton\":this._createDropdown(e,i[t]);break;case\"listDropdown\":this._createListDropdown(e,i[t])}}}))}updateOptionVisibility(e,t,i,n){const{selection:a}=this.editor.model.document,r={};r[n]=e;const o=a?a.getSelectedElement():G(a,this.editor.model.schema,r),s=e.filter((function(e){for(const[t,i]of(0,E.toMap)(e.modelAttributes))if(o&&o.hasAttribute(t))return i.includes(o.getAttribute(t));return!0}));i.hasOwnProperty(\"model\")?s.includes(t)?i.model.set({class:\"\"}):i.model.set({class:\"ck-hidden\"}):s.includes(t)?i.set({class:\"\"}):i.set({class:\"ck-hidden\"})}_createDropdown(e,t){const i=this.editor.ui.componentFactory;i.add(e.name,(n=>{let a;const{defaultItem:r,items:o,title:s}=e,l=o.filter((e=>{const i=e.split(\":\")[1];return t.find((({name:t})=>te(t,i)===e))})).map((e=>{const t=i.create(e);return e===r&&(a=t),t}));o.length!==l.length&&z.warnInvalidStyle({dropdown:e});const d=(0,g.createDropdown)(n,g.SplitButtonView),u=d.buttonView;return(0,g.addToolbarToDropdown)(d,l),u.set({label:ee(s,a.label),class:null,tooltip:!0}),u.bind(\"icon\").toMany(l,\"isOn\",((...e)=>{const t=e.findIndex(Y);return t<0?a.icon:l[t].icon})),u.bind(\"label\").toMany(l,\"isOn\",((...e)=>{const t=e.findIndex(Y);return ee(s,t<0?a.label:l[t].label)})),u.bind(\"isOn\").toMany(l,\"isOn\",((...e)=>e.some(Y))),u.bind(\"class\").toMany(l,\"isOn\",((...e)=>e.some(Y)?\"ck-splitbutton_flatten\":null)),u.on(\"execute\",(()=>{l.some((({isOn:e})=>e))?d.isOpen=!d.isOpen:a.fire(\"execute\")})),d.bind(\"isEnabled\").toMany(l,\"isEnabled\",((...e)=>e.some(Y))),d}))}_createButton(e,t,i){const n=e.name;this.editor.ui.componentFactory.add(te(n,t),(a=>{const r=this.editor.commands.get(\"drupalElementStyle\"),o=new g.ButtonView(a);return o.set({label:e.title,icon:e.icon,tooltip:!0,isToggleable:!0}),o.bind(\"isEnabled\").to(r,\"isEnabled\"),o.bind(\"isOn\").to(r,\"value\",(e=>e&&e[t]===n)),o.on(\"execute\",this._executeCommand.bind(this,n,t)),this.listenTo(this.editor.ui,\"update\",(()=>{this.updateOptionVisibility(i,e,o,t)})),o}))}getDropdownListItemDefinitions(e,t,i){const n=new E.Collection;return e.forEach((t=>{const a={type:\"button\",model:new g.Model({group:i,commandValue:t.name,label:t.title,withText:!0,class:\"\"})};n.add(a),this.listenTo(this.editor.ui,\"update\",(()=>{this.updateOptionVisibility(e,t,a,i)}))})),n}_createListDropdown(e,t){const i=this.editor.ui.componentFactory;i.add(e.name,(n=>{let a;const{defaultItem:r,items:o,title:s,defaultText:l}=e,d=e.name.split(\":\")[1],u=o.filter((e=>t.find((({name:t})=>te(t,d)===e)))).map((e=>{const t=i.create(e);return e===r&&(a=t),t}));o.length!==u.length&&z.warnInvalidStyle({dropdown:e});const c=(0,g.createDropdown)(n,g.DropdownButtonView),m=c.buttonView;m.set({label:ee(s,a.label),class:null,tooltip:l,withText:!0});const p=this.editor.commands.get(\"drupalElementStyle\");return m.bind(\"label\").to(p,\"value\",(e=>{if(e&&e[d])for(const i of t)if(i.name===e[d])return i.title;return l})),c.bind(\"isOn\").to(p),c.bind(\"isEnabled\").to(this),(0,g.addListToDropdown)(c,this.getDropdownListItemDefinitions(t,p,d)),this.listenTo(c,\"execute\",(e=>{this._executeCommand(e.source.commandValue,e.source.group)})),c}))}_executeCommand(e,t){this.editor.execute(\"drupalElementStyle\",{value:e,group:t}),this.editor.editing.view.focus()}static get pluginName(){return\"DrupalElementStyleUi\"}}class ne extends e.Plugin{static get requires(){return[Q,ie]}static get pluginName(){return\"DrupalElementStyle\"}}function ae(e){const t=e.getFirstPosition().findAncestor(\"caption\");return t&&a(t.parent)?t:null}function re(e){for(const t of e.getChildren())if(t&&t.is(\"element\",\"caption\"))return t;return null}class oe extends e.Command{refresh(){const e=this.editor.model.document.selection,t=e.getSelectedElement();if(!t)return this.isEnabled=!!o(e),void(this.value=!!ae(e));this.isEnabled=a(t),this.isEnabled?this.value=!!re(t):this.value=!1}execute(e={}){const{focusCaptionOnShow:t}=e;this.editor.model.change((e=>{this.value?this._hideDrupalMediaCaption(e):this._showDrupalMediaCaption(e,t)}))}_showDrupalMediaCaption(e,t){const i=this.editor.model.document.selection,n=this.editor.plugins.get(\"DrupalMediaCaptionEditing\"),a=o(i),r=n._getSavedCaption(a)||e.createElement(\"caption\");e.append(r,a),t&&e.setSelection(r,\"in\")}_hideDrupalMediaCaption(e){const t=this.editor,i=t.model.document.selection,n=t.plugins.get(\"DrupalMediaCaptionEditing\");let a,r=i.getSelectedElement();r?a=re(r):(a=ae(i),r=o(i)),n._saveCaption(r,a),e.setSelection(r,\"on\"),e.remove(a)}}class se extends e.Plugin{static get requires(){return[]}static get pluginName(){return\"DrupalMediaCaptionEditing\"}constructor(e){super(e),this._savedCaptionsMap=new WeakMap}init(){const e=this.editor,t=e.model.schema;t.isRegistered(\"caption\")?t.extend(\"caption\",{allowIn:\"drupalMedia\"}):t.register(\"caption\",{allowIn:\"drupalMedia\",allowContentOf:\"$block\",isLimit:!0}),e.commands.add(\"toggleMediaCaption\",new oe(e)),this._setupConversion()}_setupConversion(){const e=this.editor,i=e.editing.view;var n;e.conversion.for(\"upcast\").add(function(e){const t=(t,i,n)=>{const{viewItem:a}=i,{writer:r,consumable:o}=n;if(!i.modelRange||!o.consume(a,{attributes:[\"data-caption\"]}))return;const s=r.createElement(\"caption\"),l=i.modelRange.start.nodeAfter,d=e.data.processor.toView(a.getAttribute(\"data-caption\"));n.consumable.constructor.createFrom(d,n.consumable),n.convertChildren(d,s),r.append(s,l)};return e=>{e.on(\"element:drupal-media\",t,{priority:\"low\"})}}(e)),e.conversion.for(\"editingDowncast\").elementToElement({model:\"caption\",view:(e,{writer:n})=>{if(!a(e.parent))return null;const r=n.createEditableElement(\"figcaption\");return r.placeholder=Drupal.t(\"Enter media caption\"),(0,V.enablePlaceholder)({view:i,element:r,keepOnFocus:!0}),(0,t.toWidgetEditable)(r,n)}}),e.editing.mapper.on(\"modelToViewPosition\",(n=i,(e,t)=>{const i=t.modelPosition,r=i.parent;if(!a(r))return;const o=t.mapper.toViewElement(r);t.viewPosition=n.createPositionAt(o,i.offset+1)})),e.conversion.for(\"dataDowncast\").add(function(e){return t=>{t.on(\"insert:caption\",((t,i,n)=>{const{consumable:r,writer:o,mapper:s}=n;if(!a(i.item.parent)||!r.consume(i.item,\"insert\"))return;const l=e.model.createRangeIn(i.item),d=o.createDocumentFragment();s.bindElements(i.item,d);for(const{item:t}of Array.from(l)){const i={item:t,range:e.model.createRangeOn(t)},a=`insert:${t.name||\"$text\"}`;e.data.downcastDispatcher.fire(a,i,n);for(const a of t.getAttributeKeys())Object.assign(i,{attributeKey:a,attributeOldValue:null,attributeNewValue:i.item.getAttribute(a)}),e.data.downcastDispatcher.fire(`attribute:${a}`,i,n)}for(const e of o.createRangeIn(d).getItems())s.unbindViewElement(e);s.unbindViewElement(d);const u=e.data.processor.toData(d);if(u){const e=s.toViewElement(i.item.parent);o.setAttribute(\"data-caption\",u,e)}}))}}(e))}_getSavedCaption(e){const t=this._savedCaptionsMap.get(e);return t?V.Element.fromJSON(t):null}_saveCaption(e,t){this._savedCaptionsMap.set(e,t.toJSON())}}class le extends e.Plugin{static get requires(){return[]}static get pluginName(){return\"DrupalMediaCaptionUI\"}init(){const{editor:t}=this,i=t.editing.view;t.ui.componentFactory.add(\"toggleDrupalMediaCaption\",(n=>{const a=new g.ButtonView(n),r=t.commands.get(\"toggleMediaCaption\");return a.set({label:Drupal.t(\"Caption media\"),icon:e.icons.caption,tooltip:!0,isToggleable:!0}),a.bind(\"isOn\",\"isEnabled\").to(r,\"value\",\"isEnabled\"),a.bind(\"label\").to(r,\"value\",(e=>e?Drupal.t(\"Toggle caption off\"):Drupal.t(\"Toggle caption on\"))),this.listenTo(a,\"execute\",(()=>{t.execute(\"toggleMediaCaption\",{focusCaptionOnShow:!0});const e=ae(t.model.document.selection);if(e){const n=t.editing.mapper.toViewElement(e);i.scrollToTheSelection(),i.change((e=>{e.addClass(\"drupal-media__caption_highlighted\",n)}))}t.editing.view.focus()})),a}))}}class de extends e.Plugin{static get requires(){return[se,le]}static get pluginName(){return\"DrupalMediaCaption\"}}const ue={DrupalMedia:x,MediaImageTextAlternative:A,MediaImageTextAlternativeEditing:y,MediaImageTextAlternativeUi:k,DrupalLinkMedia:O,DrupalMediaCaption:de,DrupalElementStyle:ne}})(),n=n.default})()));\n\\ No newline at end of file\n+!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.CKEditor5=t():(e.CKEditor5=e.CKEditor5||{},e.CKEditor5.drupalMedia=t())}(globalThis,(()=>(()=>{var e={\"ckeditor5/src/core.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/core.js\")},\"ckeditor5/src/engine.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/engine.js\")},\"ckeditor5/src/ui.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/ui.js\")},\"ckeditor5/src/utils.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/utils.js\")},\"ckeditor5/src/widget.js\":(e,t,i)=>{e.exports=i(\"dll-reference CKEditor5.dll\")(\"./src/widget.js\")},\"dll-reference CKEditor5.dll\":e=>{\"use strict\";e.exports=CKEditor5.dll}},t={};function i(n){var a=t[n];if(void 0!==a)return a.exports;var r=t[n]={exports:{}};return e[n](r,r.exports,i),r.exports}i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var n={};return(()=>{\"use strict\";i.d(n,{default:()=>ue});var e=i(\"ckeditor5/src/core.js\"),t=i(\"ckeditor5/src/widget.js\");function a(e){return!!e&&e.is(\"element\",\"drupalMedia\")}function r(e){return(0,t.isWidget)(e)&&!!e.getCustomProperty(\"drupalMedia\")}function o(e){const t=e.getSelectedElement();return a(t)?t:e.getFirstPosition().findAncestor(\"drupalMedia\")}function s(e){const t=e.getSelectedElement();if(t&&r(t))return t;if(null===e.getFirstPosition())return null;let i=e.getFirstPosition().parent;for(;i;){if(i.is(\"element\")&&r(i))return i;i=i.parent}return null}function l(e){const t=typeof e;return null!=e&&(\"object\"===t||\"function\"===t)}function d(e){for(const t of e){if(t.hasAttribute(\"data-drupal-media-preview\"))return t;if(t.childCount){const e=d(t.getChildren());if(e)return e}}return null}function u(e){return`drupalElementStyle${e[0].toUpperCase()+e.substring(1)}`}class c extends e.Command{execute(e){const t=this.editor.plugins.get(\"DrupalMediaEditing\"),i=Object.entries(t.attrs).reduce(((e,[t,i])=>(e[i]=t,e)),{}),n=Object.keys(e).reduce(((t,n)=>(i[n]&&(t[i[n]]=e[n]),t)),{});if(this.editor.plugins.has(\"DrupalElementStyleEditing\")){const t=this.editor.plugins.get(\"DrupalElementStyleEditing\"),{normalizedStyles:i}=t;for(const a of Object.keys(i))for(const i of t.normalizedStyles[a])if(e[i.attributeName]&&i.attributeValue===e[i.attributeName]){const e=u(a);n[e]=i.name}}this.editor.model.change((e=>{this.editor.model.insertObject(function(e,t){return e.createElement(\"drupalMedia\",t)}(e,n))}))}refresh(){const e=this.editor.model,t=e.document.selection,i=e.schema.findAllowedParent(t.getFirstPosition(),\"drupalMedia\");this.isEnabled=null!==i}}const m=\"METADATA_ERROR\";class p extends e.Plugin{static get requires(){return[t.Widget]}constructor(e){super(e),this.attrs={drupalMediaAlt:\"alt\",drupalMediaEntityType:\"data-entity-type\",drupalMediaEntityUuid:\"data-entity-uuid\"},this.converterAttributes=[\"drupalMediaEntityUuid\",\"drupalElementStyleViewMode\",\"drupalMediaEntityType\",\"drupalMediaAlt\"]}init(){const e=this.editor.config.get(\"drupalMedia\");if(!e)return;const{previewURL:t,themeError:i}=e;this.previewUrl=t,this.labelError=Drupal.t(\"Preview failed\"),this.themeError=i||`\\n      <p>${Drupal.t(\"An error occurred while trying to preview the media. Save your work and reload this page.\")}<p>\\n    `,this._defineSchema(),this._defineConverters(),this._defineListeners(),this.editor.commands.add(\"insertDrupalMedia\",new c(this.editor))}upcastDrupalMediaIsImage(e){const{model:t,plugins:i}=this.editor;i.get(\"DrupalMediaMetadataRepository\").getMetadata(e).then((i=>{e&&t.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaIsImage\",!!i.imageSourceMetadata,e)}))})).catch((i=>{e&&(console.warn(i.toString()),t.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaIsImage\",m,e)})))}))}upcastDrupalMediaType(e){this.editor.plugins.get(\"DrupalMediaMetadataRepository\").getMetadata(e).then((t=>{e&&this.editor.model.enqueueChange({isUndoable:!1},(i=>{i.setAttribute(\"drupalMediaType\",t.type,e)}))})).catch((t=>{e&&(console.warn(t.toString()),this.editor.model.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaType\",m,e)})))}))}async _fetchPreview(e){const t={text:this._renderElement(e),uuid:e.getAttribute(\"drupalMediaEntityUuid\")},i=await fetch(`${this.previewUrl}?${new URLSearchParams(t)}`,{headers:{\"X-Drupal-MediaPreview-CSRF-Token\":this.editor.config.get(\"drupalMedia\").previewCsrfToken}});if(i.ok){return{label:i.headers.get(\"drupal-media-label\"),preview:await i.text()}}return{label:this.labelError,preview:this.themeError}}_defineSchema(){this.editor.model.schema.register(\"drupalMedia\",{inheritAllFrom:\"$blockObject\",allowAttributes:Object.keys(this.attrs)}),this.editor.editing.view.domConverter.blockElements.push(\"drupal-media\")}_defineConverters(){const e=this.editor.conversion,i=this.editor.plugins.get(\"DrupalMediaMetadataRepository\");e.for(\"upcast\").elementToElement({view:{name:\"drupal-media\"},model:\"drupalMedia\"}).add((e=>{e.on(\"element:drupal-media\",((e,t)=>{const[n]=t.modelRange.getItems();i.getMetadata(n).then((e=>{n&&(this.upcastDrupalMediaIsImage(n),this.editor.model.enqueueChange({isUndoable:!1},(t=>{t.setAttribute(\"drupalMediaType\",e.type,n)})))})).catch((e=>{console.warn(e.toString())}))}),{priority:\"lowest\"})})),e.for(\"dataDowncast\").elementToElement({model:\"drupalMedia\",view:{name:\"drupal-media\"}}),e.for(\"editingDowncast\").elementToElement({model:\"drupalMedia\",view:(e,{writer:i})=>{const n=i.createContainerElement(\"figure\",{class:\"drupal-media\"});if(!this.previewUrl){const e=i.createRawElement(\"div\",{\"data-drupal-media-preview\":\"unavailable\"});i.insert(i.createPositionAt(n,0),e)}return i.setCustomProperty(\"drupalMedia\",!0,n),(0,t.toWidget)(n,i,{label:Drupal.t(\"Media widget\")})}}).add((e=>{const t=(e,t,i)=>{const n=i.writer,a=t.item,r=i.mapper.toViewElement(t.item);let o=d(r.getChildren());if(o){if(\"ready\"!==o.getAttribute(\"data-drupal-media-preview\"))return;n.setAttribute(\"data-drupal-media-preview\",\"loading\",o)}else o=n.createRawElement(\"div\",{\"data-drupal-media-preview\":\"loading\"}),n.insert(n.createPositionAt(r,0),o);this._fetchPreview(a).then((({label:e,preview:t})=>{o&&this.editor.editing.view.change((i=>{const n=i.createRawElement(\"div\",{\"data-drupal-media-preview\":\"ready\",\"aria-label\":e},(e=>{e.innerHTML=t}));i.insert(i.createPositionBefore(o),n),i.remove(o)}))}))};return this.converterAttributes.forEach((i=>{e.on(`attribute:${i}:drupalMedia`,t)})),e})),e.for(\"editingDowncast\").add((e=>{e.on(\"attribute:drupalElementStyleAlign:drupalMedia\",((e,t,i)=>{const n={left:\"drupal-media-style-align-left\",right:\"drupal-media-style-align-right\",center:\"drupal-media-style-align-center\"},a=i.mapper.toViewElement(t.item),r=i.writer;n[t.attributeOldValue]&&r.removeClass(n[t.attributeOldValue],a),n[t.attributeNewValue]&&i.consumable.consume(t.item,e.name)&&r.addClass(n[t.attributeNewValue],a)}))})),Object.keys(this.attrs).forEach((t=>{const i={model:{key:t,name:\"drupalMedia\"},view:{name:\"drupal-media\",key:this.attrs[t]}};e.for(\"dataDowncast\").attributeToAttribute(i),e.for(\"upcast\").attributeToAttribute(i)}))}_defineListeners(){this.editor.model.on(\"insertContent\",((e,[t])=>{a(t)&&(this.upcastDrupalMediaIsImage(t),this.upcastDrupalMediaType(t))}))}_renderElement(e){const t=this.editor.model.change((t=>{const i=t.createDocumentFragment(),n=t.cloneElement(e,!1);return[\"linkHref\"].forEach((e=>{t.removeAttribute(e,n)})),t.append(n,i),i}));return this.editor.data.stringify(t)}static get pluginName(){return\"DrupalMediaEditing\"}}var g=i(\"ckeditor5/src/ui.js\");class h extends e.Plugin{init(){const e=this.editor,t=this.editor.config.get(\"drupalMedia\");if(!t)return;const{libraryURL:i,openDialog:n,dialogSettings:a={}}=t;i&&\"function\"==typeof n&&e.ui.componentFactory.add(\"drupalMedia\",(t=>{const r=e.commands.get(\"insertDrupalMedia\"),o=new g.ButtonView(t);return o.set({label:Drupal.t(\"Insert Media\"),icon:'<svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.1873 4.86414L10.2509 6.86414V7.02335H10.2499V15.5091C9.70972 15.1961 9.01793 15.1048 8.34069 15.3136C7.12086 15.6896 6.41013 16.8967 6.75322 18.0096C7.09631 19.1226 8.3633 19.72 9.58313 19.344C10.6666 19.01 11.3484 18.0203 11.2469 17.0234H11.2499V9.80173L18.1803 8.25067V14.3868C17.6401 14.0739 16.9483 13.9825 16.2711 14.1913C15.0513 14.5674 14.3406 15.7744 14.6836 16.8875C15.0267 18.0004 16.2937 18.5978 17.5136 18.2218C18.597 17.8877 19.2788 16.8982 19.1773 15.9011H19.1803V8.02687L19.1873 8.0253V4.86414Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.5039 0.743652H0.386932V12.1603H13.5039V0.743652ZM12.3379 1.75842H1.55289V11.1454H1.65715L4.00622 8.86353L6.06254 10.861L9.24985 5.91309L11.3812 9.22179L11.7761 8.6676L12.3379 9.45621V1.75842ZM6.22048 4.50869C6.22048 5.58193 5.35045 6.45196 4.27722 6.45196C3.20398 6.45196 2.33395 5.58193 2.33395 4.50869C2.33395 3.43546 3.20398 2.56543 4.27722 2.56543C5.35045 2.56543 6.22048 3.43546 6.22048 4.50869Z\"/></svg>\\n',tooltip:!0}),o.bind(\"isOn\",\"isEnabled\").to(r,\"value\",\"isEnabled\"),this.listenTo(o,\"execute\",(()=>{n(i,(({attributes:t})=>{e.execute(\"insertDrupalMedia\",t)}),a)})),o}))}}class f extends e.Plugin{static get requires(){return[t.WidgetToolbarRepository]}static get pluginName(){return\"DrupalMediaToolbar\"}afterInit(){const{editor:e}=this;var i;e.plugins.get(t.WidgetToolbarRepository).register(\"drupalMedia\",{ariaLabel:Drupal.t(\"Drupal Media toolbar\"),items:(i=e.config.get(\"drupalMedia.toolbar\"),i.map((e=>l(e)?e.name:e))||[]),getRelatedElement:e=>s(e)})}}class b extends e.Command{refresh(){const e=o(this.editor.model.document.selection);this.isEnabled=!!e&&e.getAttribute(\"drupalMediaIsImage\")&&e.getAttribute(\"drupalMediaIsImage\")!==m,this.isEnabled?this.value=e.getAttribute(\"drupalMediaAlt\"):this.value=!1}execute(e){const{model:t}=this.editor,i=o(t.document.selection);e.newValue=e.newValue.trim(),t.change((t=>{e.newValue.length>0?t.setAttribute(\"drupalMediaAlt\",e.newValue,i):t.removeAttribute(\"drupalMediaAlt\",i)}))}}class w extends e.Plugin{init(){this._data=new WeakMap}getMetadata(e){if(this._data.get(e))return new Promise((t=>{t(this._data.get(e))}));const t=this.editor.config.get(\"drupalMedia\");if(!t)return new Promise(((e,t)=>{t(new Error(\"drupalMedia configuration is required for parsing metadata.\"))}));if(!e.hasAttribute(\"drupalMediaEntityUuid\"))return new Promise(((e,t)=>{t(new Error(\"drupalMedia element must have drupalMediaEntityUuid attribute to retrieve metadata.\"))}));const{metadataUrl:i}=t;return(async e=>{const t=await fetch(e);if(t.ok)return JSON.parse(await t.text());throw new Error(\"Fetching media embed metadata from the server failed.\")})(`${i}&${new URLSearchParams({uuid:e.getAttribute(\"drupalMediaEntityUuid\")})}`).then((t=>(this._data.set(e,t),t)))}static get pluginName(){return\"DrupalMediaMetadataRepository\"}}class y extends e.Plugin{static get requires(){return[w]}static get pluginName(){return\"MediaImageTextAlternativeEditing\"}init(){const{editor:e,editor:{model:t,conversion:i}}=this;t.schema.extend(\"drupalMedia\",{allowAttributes:[\"drupalMediaIsImage\"]}),i.for(\"editingDowncast\").add((e=>{e.on(\"attribute:drupalMediaIsImage\",((e,t,i)=>{const{writer:n,mapper:a}=i,r=a.toViewElement(t.item);if(t.attributeNewValue!==m){const e=Array.from(r.getChildren()).find((e=>e.getCustomProperty(\"drupalMediaMetadataError\")));return void(e&&(n.setCustomProperty(\"widgetLabel\",e.getCustomProperty(\"drupalMediaOriginalWidgetLabel\"),e),n.removeElement(e)))}const o=Drupal.t(\"Not all functionality may be available because some information could not be retrieved.\"),s=new g.Template({tag:\"span\",children:[{tag:\"span\",attributes:{class:\"drupal-media__metadata-error-icon\",\"data-cke-tooltip-text\":o}}]}).render(),l=n.createRawElement(\"div\",{class:\"drupal-media__metadata-error\"},((e,t)=>{t.setContentOf(e,s.outerHTML)}));n.setCustomProperty(\"drupalMediaMetadataError\",!0,l);const d=r.getCustomProperty(\"widgetLabel\");n.setCustomProperty(\"drupalMediaOriginalWidgetLabel\",d,l),n.setCustomProperty(\"widgetLabel\",`${d} (${o})`,r),n.insert(n.createPositionAt(r,0),l)}),{priority:\"low\"})})),e.commands.add(\"mediaImageTextAlternative\",new b(this.editor))}}function v(e){const t=e.editing.view,i=g.BalloonPanelView.defaultPositions;return{target:t.domConverter.viewToDom(t.document.selection.getSelectedElement()),positions:[i.northArrowSouth,i.northArrowSouthWest,i.northArrowSouthEast,i.southArrowNorth,i.southArrowNorthWest,i.southArrowNorthEast]}}var E=i(\"ckeditor5/src/utils.js\");class M extends g.View{constructor(t){super(t),this.focusTracker=new E.FocusTracker,this.keystrokes=new E.KeystrokeHandler,this.labeledInput=this._createLabeledInputView(),this.set(\"defaultAltText\",void 0),this.defaultAltTextView=this._createDefaultAltTextView(),this.saveButtonView=this._createButton(Drupal.t(\"Save\"),e.icons.check,\"ck-button-save\"),this.saveButtonView.type=\"submit\",this.cancelButtonView=this._createButton(Drupal.t(\"Cancel\"),e.icons.cancel,\"ck-button-cancel\",\"cancel\"),this._focusables=new g.ViewCollection,this._focusCycler=new g.FocusCycler({focusables:this._focusables,focusTracker:this.focusTracker,keystrokeHandler:this.keystrokes,actions:{focusPrevious:\"shift + tab\",focusNext:\"tab\"}}),this.setTemplate({tag:\"form\",attributes:{class:[\"ck\",\"ck-media-alternative-text-form\",\"ck-vertical-form\"],tabindex:\"-1\"},children:[this.defaultAltTextView,this.labeledInput,this.saveButtonView,this.cancelButtonView]}),(0,g.injectCssTransitionDisabler)(this)}render(){super.render(),this.keystrokes.listenTo(this.element),(0,g.submitHandler)({view:this}),[this.labeledInput,this.saveButtonView,this.cancelButtonView].forEach((e=>{this._focusables.add(e),this.focusTracker.add(e.element)}))}_createButton(e,t,i,n){const a=new g.ButtonView(this.locale);return a.set({label:e,icon:t,tooltip:!0}),a.extendTemplate({attributes:{class:i}}),n&&a.delegate(\"execute\").to(this,n),a}_createLabeledInputView(){const e=new g.LabeledFieldView(this.locale,g.createLabeledInputText);return e.label=Drupal.t(\"Alternative text override\"),e}_createDefaultAltTextView(){const e=g.Template.bind(this,this);return new g.Template({tag:\"div\",attributes:{class:[\"ck-media-alternative-text-form__default-alt-text\",e.if(\"defaultAltText\",\"ck-hidden\",(e=>!e))]},children:[{tag:\"strong\",attributes:{class:\"ck-media-alternative-text-form__default-alt-text-label\"},children:[Drupal.t(\"Default alternative text:\")]},\" \",{tag:\"span\",attributes:{class:\"ck-media-alternative-text-form__default-alt-text-value\"},children:[{text:[e.to(\"defaultAltText\")]}]}]})}}class k extends e.Plugin{static get requires(){return[g.ContextualBalloon]}static get pluginName(){return\"MediaImageTextAlternativeUi\"}init(){this._createButton(),this._createForm()}destroy(){super.destroy(),this._form.destroy()}_createButton(){const t=this.editor;t.ui.componentFactory.add(\"mediaImageTextAlternative\",(i=>{const n=t.commands.get(\"mediaImageTextAlternative\"),a=new g.ButtonView(i);return a.set({label:Drupal.t(\"Override media image alternative text\"),icon:e.icons.lowVision,tooltip:!0}),a.bind(\"isVisible\").to(n,\"isEnabled\"),this.listenTo(a,\"execute\",(()=>{this._showForm()})),a}))}_createForm(){const e=this.editor,t=e.editing.view.document;this._balloon=this.editor.plugins.get(\"ContextualBalloon\"),this._form=new M(e.locale),this._form.render(),this.listenTo(this._form,\"submit\",(()=>{e.execute(\"mediaImageTextAlternative\",{newValue:this._form.labeledInput.fieldView.element.value}),this._hideForm(!0)})),this.listenTo(this._form,\"cancel\",(()=>{this._hideForm(!0)})),this._form.keystrokes.set(\"Esc\",((e,t)=>{this._hideForm(!0),t()})),this.listenTo(e.ui,\"update\",(()=>{s(t.selection)?this._isVisible&&function(e){const t=e.plugins.get(\"ContextualBalloon\");if(s(e.editing.view.document.selection)){const i=v(e);t.updatePosition(i)}}(e):this._hideForm(!0)})),(0,g.clickOutsideHandler)({emitter:this._form,activator:()=>this._isVisible,contextElements:[this._balloon.view.element],callback:()=>this._hideForm()})}_showForm(){if(this._isVisible)return;const e=this.editor,t=e.commands.get(\"mediaImageTextAlternative\"),i=e.plugins.get(\"DrupalMediaMetadataRepository\"),n=this._form.labeledInput;this._form.disableCssTransitions(),this._isInBalloon||this._balloon.add({view:this._form,position:v(e)}),n.fieldView.element.value=t.value||\"\",n.fieldView.value=n.fieldView.element.value,this._form.defaultAltText=\"\";const r=e.model.document.selection.getSelectedElement();a(r)&&i.getMetadata(r).then((e=>{this._form.defaultAltText=e.imageSourceMetadata?e.imageSourceMetadata.alt:\"\"})).catch((e=>{console.warn(e.toString())})),this._form.labeledInput.fieldView.select(),this._form.enableCssTransitions()}_hideForm(e){this._isInBalloon&&(this._form.focusTracker.isFocused&&this._form.saveButtonView.focus(),this._balloon.remove(this._form),e&&this.editor.editing.view.focus())}get _isVisible(){return this._balloon.visibleView===this._form}get _isInBalloon(){return this._balloon.hasView(this._form)}}class A extends e.Plugin{static get requires(){return[y,k]}static get pluginName(){return\"MediaImageTextAlternative\"}}function D(e,t,i){if(t.attributes)for(const[n,a]of Object.entries(t.attributes))e.setAttribute(n,a,i);t.styles&&e.setStyle(t.styles,i),t.classes&&e.addClass(t.classes,i)}function C(e,t,i){if(!i.consumable.consume(t.item,e.name))return;const n=i.mapper.toViewElement(t.item);D(i.writer,t.attributeNewValue,n)}class _ extends e.Plugin{constructor(e){if(super(e),!e.plugins.has(\"GeneralHtmlSupport\"))return;e.plugins.has(\"DataFilter\")&&e.plugins.has(\"DataSchema\")||console.error(\"DataFilter and DataSchema plugins are required for Drupal Media to integrate with General HTML Support plugin.\");const{schema:t}=e.model,{conversion:i}=e,n=this.editor.plugins.get(\"DataFilter\");this.editor.plugins.get(\"DataSchema\").registerBlockElement({model:\"drupalMedia\",view:\"drupal-media\"}),n.on(\"register:drupal-media\",((e,a)=>{\"drupalMedia\"===a.model&&(t.extend(\"drupalMedia\",{allowAttributes:[\"htmlLinkAttributes\",\"htmlAttributes\"]}),i.for(\"upcast\").add(function(e){return t=>{t.on(\"element:drupal-media\",((t,i,n)=>{function a(t,a){const r=e.processViewAttributes(t,n);r&&n.writer.setAttribute(a,r,i.modelRange)}const r=i.viewItem,o=r.parent;a(r,\"htmlAttributes\"),o.is(\"element\",\"a\")&&a(o,\"htmlLinkAttributes\")}),{priority:\"low\"})}}(n)),i.for(\"editingDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{if(!i.consumable.consume(t.item,\"attribute:htmlLinkAttributes:drupalMedia\"))return;const n=i.mapper.toViewElement(t.item),a=function(e,t,i){const n=e.createRangeOn(t);for(const{item:e}of n.getWalker())if(e.is(\"element\",i))return e}(i.writer,n,\"a\");D(i.writer,t.item.getAttribute(\"htmlLinkAttributes\"),a)}),{priority:\"low\"})})),i.for(\"dataDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{if(!i.consumable.consume(t.item,\"attribute:htmlLinkAttributes:drupalMedia\"))return;const n=i.mapper.toViewElement(t.item).parent;D(i.writer,t.item.getAttribute(\"htmlLinkAttributes\"),n)}),{priority:\"low\"}),e.on(\"attribute:htmlAttributes:drupalMedia\",C,{priority:\"low\"})})),e.stop())}))}static get pluginName(){return\"DrupalMediaGeneralHtmlSupport\"}}class x extends e.Plugin{static get requires(){return[p,_,h,f,A]}static get pluginName(){return\"DrupalMedia\"}}var V=i(\"ckeditor5/src/engine.js\");function S(e){return Array.from(e.getChildren()).find((e=>\"drupal-media\"===e.name))}function T(e){return t=>{t.on(`attribute:${e.id}:drupalMedia`,((t,i,n)=>{const a=n.mapper.toViewElement(i.item);let r=Array.from(a.getChildren()).find((e=>\"a\"===e.name));if(r=!r&&a.is(\"element\",\"a\")?a:Array.from(a.getAncestors()).find((e=>\"a\"===e.name)),r){for(const[t,i]of(0,E.toMap)(e.attributes))n.writer.setAttribute(t,i,r);e.classes&&n.writer.addClass(e.classes,r);for(const t in e.styles)Object.prototype.hasOwnProperty.call(e.styles,t)&&n.writer.setStyle(t,e.styles[t],r)}}))}}function I(e,t){return e=>{e.on(\"element:a\",((e,i,n)=>{const a=i.viewItem;if(!S(a))return;const r=new V.Matcher(t._createPattern()).match(a);if(!r)return;if(!n.consumable.consume(a,r.match))return;const o=i.modelCursor.nodeBefore;n.writer.setAttribute(t.id,!0,o)}),{priority:\"high\"})}}class L extends e.Plugin{static get requires(){return[\"LinkEditing\",\"DrupalMediaEditing\"]}static get pluginName(){return\"DrupalLinkMediaEditing\"}init(){const{editor:e}=this;e.model.schema.extend(\"drupalMedia\",{allowAttributes:[\"linkHref\"]}),e.conversion.for(\"upcast\").add((e=>{e.on(\"element:a\",((e,t,i)=>{const n=t.viewItem,a=S(n);if(!a)return;if(!i.consumable.consume(n,{attributes:[\"href\"],name:!0}))return;const r=n.getAttribute(\"href\");if(null===r)return;const o=i.convertItem(a,t.modelCursor);t.modelRange=o.modelRange,t.modelCursor=o.modelCursor;const s=t.modelCursor.nodeBefore;s&&s.is(\"element\",\"drupalMedia\")&&i.writer.setAttribute(\"linkHref\",r,s)}),{priority:\"high\"})})),e.conversion.for(\"editingDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{const{writer:n}=i;if(!i.consumable.consume(t.item,e.name))return;const a=i.mapper.toViewElement(t.item),r=Array.from(a.getChildren()).find((e=>\"a\"===e.name));if(r)t.attributeNewValue?n.setAttribute(\"href\",t.attributeNewValue,r):(n.move(n.createRangeIn(r),n.createPositionAt(a,0)),n.remove(r));else{const e=Array.from(a.getChildren()).find((e=>e.getAttribute(\"data-drupal-media-preview\"))),i=n.createContainerElement(\"a\",{href:t.attributeNewValue});n.insert(n.createPositionAt(a,0),i),n.move(n.createRangeOn(e),n.createPositionAt(i,0))}}),{priority:\"high\"})})),e.conversion.for(\"dataDowncast\").add((e=>{e.on(\"attribute:linkHref:drupalMedia\",((e,t,i)=>{const{writer:n}=i;if(!i.consumable.consume(t.item,e.name))return;const a=i.mapper.toViewElement(t.item),r=n.createContainerElement(\"a\",{href:t.attributeNewValue});n.insert(n.createPositionBefore(a),r),n.move(n.createRangeOn(a),n.createPositionAt(r,0))}),{priority:\"high\"})})),this._enableManualDecorators();if(e.commands.get(\"link\").automaticDecorators.length>0)throw new Error(\"The Drupal Media plugin is not compatible with automatic link decorators. To use Drupal Media, disable any plugins providing automatic link decorators.\")}_enableManualDecorators(){const e=this.editor,t=e.commands.get(\"link\");for(const i of t.manualDecorators)e.model.schema.extend(\"drupalMedia\",{allowAttributes:i.id}),e.conversion.for(\"downcast\").add(T(i)),e.conversion.for(\"upcast\").add(I(0,i))}}class P extends e.Plugin{static get requires(){return[\"LinkEditing\",\"LinkUI\",\"DrupalMediaEditing\"]}static get pluginName(){return\"DrupalLinkMediaUi\"}init(){const{editor:e}=this,t=e.editing.view.document;this.listenTo(t,\"click\",((t,i)=>{this._isSelectedLinkedMedia(e.model.document.selection)&&(i.preventDefault(),t.stop())}),{priority:\"high\"}),this._createToolbarLinkMediaButton()}_createToolbarLinkMediaButton(){const{editor:e}=this;e.ui.componentFactory.add(\"drupalLinkMedia\",(t=>{const i=new g.ButtonView(t),n=e.plugins.get(\"LinkUI\"),a=e.commands.get(\"link\");return i.set({isEnabled:!0,label:Drupal.t(\"Link media\"),icon:'<svg viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m11.077 15 .991-1.416a.75.75 0 1 1 1.229.86l-1.148 1.64a.748.748 0 0 1-.217.206 5.251 5.251 0 0 1-8.503-5.955.741.741 0 0 1 .12-.274l1.147-1.639a.75.75 0 1 1 1.228.86L4.933 10.7l.006.003a3.75 3.75 0 0 0 6.132 4.294l.006.004zm5.494-5.335a.748.748 0 0 1-.12.274l-1.147 1.639a.75.75 0 1 1-1.228-.86l.86-1.23a3.75 3.75 0 0 0-6.144-4.301l-.86 1.229a.75.75 0 0 1-1.229-.86l1.148-1.64a.748.748 0 0 1 .217-.206 5.251 5.251 0 0 1 8.503 5.955zm-4.563-2.532a.75.75 0 0 1 .184 1.045l-3.155 4.505a.75.75 0 1 1-1.229-.86l3.155-4.506a.75.75 0 0 1 1.045-.184z\"/></svg>\\n',keystroke:\"Ctrl+K\",tooltip:!0,isToggleable:!0}),i.bind(\"isEnabled\").to(a,\"isEnabled\"),i.bind(\"isOn\").to(a,\"value\",(e=>!!e)),this.listenTo(i,\"execute\",(()=>{this._isSelectedLinkedMedia(e.model.document.selection)?n._addActionsView():n._showUI(!0)})),i}))}_isSelectedLinkedMedia(e){const t=e.getSelectedElement();return!!t&&t.is(\"element\",\"drupalMedia\")&&t.hasAttribute(\"linkHref\")}}class O extends e.Plugin{static get requires(){return[L,P]}static get pluginName(){return\"DrupalLinkMedia\"}}const{objectFullWidth:B,objectInline:N,objectLeft:R,objectRight:j,objectCenter:F,objectBlockLeft:U,objectBlockRight:H}=e.icons,$={get inline(){return{name:\"inline\",title:\"In line\",icon:N,modelElements:[\"imageInline\"],isDefault:!0}},get alignLeft(){return{name:\"alignLeft\",title:\"Left aligned image\",icon:R,modelElements:[\"imageBlock\",\"imageInline\"],className:\"image-style-align-left\"}},get alignBlockLeft(){return{name:\"alignBlockLeft\",title:\"Left aligned image\",icon:U,modelElements:[\"imageBlock\"],className:\"image-style-block-align-left\"}},get alignCenter(){return{name:\"alignCenter\",title:\"Centered image\",icon:F,modelElements:[\"imageBlock\"],className:\"image-style-align-center\"}},get alignRight(){return{name:\"alignRight\",title:\"Right aligned image\",icon:j,modelElements:[\"imageBlock\",\"imageInline\"],className:\"image-style-align-right\"}},get alignBlockRight(){return{name:\"alignBlockRight\",title:\"Right aligned image\",icon:H,modelElements:[\"imageBlock\"],className:\"image-style-block-align-right\"}},get block(){return{name:\"block\",title:\"Centered image\",icon:F,modelElements:[\"imageBlock\"],isDefault:!0}},get side(){return{name:\"side\",title:\"Side image\",icon:j,modelElements:[\"imageBlock\"],className:\"image-style-side\"}}},q={full:B,left:U,right:H,center:F,inlineLeft:R,inlineRight:j,inline:N},W=[{name:\"imageStyle:wrapText\",title:\"Wrap text\",defaultItem:\"imageStyle:alignLeft\",items:[\"imageStyle:alignLeft\",\"imageStyle:alignRight\"]},{name:\"imageStyle:breakText\",title:\"Break text\",defaultItem:\"imageStyle:block\",items:[\"imageStyle:alignBlockLeft\",\"imageStyle:block\",\"imageStyle:alignBlockRight\"]}];function K(e){(0,E.logWarning)(\"image-style-configuration-definition-invalid\",e)}const z={normalizeStyles:function(e){return(e.configuredStyles.options||[]).map((e=>function(e){e=\"string\"==typeof e?$[e]?{...$[e]}:{name:e}:function(e,t){const i={...t};for(const n in e)Object.prototype.hasOwnProperty.call(t,n)||(i[n]=e[n]);return i}($[e.name],e);\"string\"==typeof e.icon&&(e.icon=q[e.icon]||e.icon);return e}(e))).filter((t=>function(e,{isBlockPluginLoaded:t,isInlinePluginLoaded:i}){const{modelElements:n,name:a}=e;if(!(n&&n.length&&a))return K({style:e}),!1;{const a=[t?\"imageBlock\":null,i?\"imageInline\":null];if(!n.some((e=>a.includes(e))))return(0,E.logWarning)(\"image-style-missing-dependency\",{style:e,missingPlugins:n.map((e=>\"imageBlock\"===e?\"ImageBlockEditing\":\"ImageInlineEditing\"))}),!1}return!0}(t,e)))},getDefaultStylesConfiguration:function(e,t){return e&&t?{options:[\"inline\",\"alignLeft\",\"alignRight\",\"alignCenter\",\"alignBlockLeft\",\"alignBlockRight\",\"block\",\"side\"]}:e?{options:[\"block\",\"side\"]}:t?{options:[\"inline\",\"alignLeft\",\"alignRight\"]}:{}},getDefaultDropdownDefinitions:function(e){return e.has(\"ImageBlockEditing\")&&e.has(\"ImageInlineEditing\")?[...W]:[]},warnInvalidStyle:K,DEFAULT_OPTIONS:$,DEFAULT_ICONS:q,DEFAULT_DROPDOWN_DEFINITIONS:W};function Z(e,t,i){for(const n of t)if(i.checkAttribute(e,n))return!0;return!1}function G(e,t,i){const n=e.getSelectedElement();if(n&&Z(n,i,t))return n;let{parent:a}=e.getFirstPosition();for(;a;){if(a.is(\"element\")&&Z(a,i,t))return a;a=a.parent}return null}class J extends e.Command{constructor(e,t){super(e),this.styles={},Object.keys(t).forEach((e=>{this.styles[e]=new Map(t[e].map((e=>[e.name,e])))})),this.modelAttributes=[];for(const e of Object.keys(t)){const t=u(e);this.modelAttributes.push(t)}}refresh(){const{editor:e}=this,t=G(e.model.document.selection,e.model.schema,this.modelAttributes);this.isEnabled=!!t,this.isEnabled?this.value=this.getValue(t):this.value=!1}getValue(e){const t={};return Object.keys(this.styles).forEach((i=>{const n=u(i);if(e.hasAttribute(n))t[i]=e.getAttribute(n);else for(const[,e]of this.styles[i])e.isDefault&&(t[i]=e.name)})),t}execute(e={}){const{editor:{model:t}}=this,{value:i,group:n}=e,a=u(n);t.change((e=>{const r=G(t.document.selection,t.schema,this.modelAttributes);!i||this.styles[n].get(i).isDefault?e.removeAttribute(a,r):e.setAttribute(a,i,r)}))}}function X(e,t){for(const i of t)if(i.name===e)return i}class Q extends e.Plugin{init(){const{editor:t}=this,i=t.config.get(\"drupalElementStyles\");this.normalizedStyles={},Object.keys(i).forEach((t=>{this.normalizedStyles[t]=i[t].map((t=>(\"string\"==typeof t.icon&&e.icons[t.icon]&&(t.icon=e.icons[t.icon]),t.name&&(t.name=`${t.name}`),t))).filter((e=>e.isDefault||e.attributeName&&e.attributeValue?e.modelElements&&Array.isArray(e.modelElements)?!!e.name||(console.warn(\"drupalElementStyles options must include a name.\"),!1):(console.warn(\"drupalElementStyles options must include an array of supported modelElements.\"),!1):(console.warn(`${e.attributeValue} drupalElementStyles options must include attributeName and attributeValue.`),!1)))})),this._setupConversion(),t.commands.add(\"drupalElementStyle\",new J(t,this.normalizedStyles))}_setupConversion(){const{editor:e}=this,{schema:t}=e.model;Object.keys(this.normalizedStyles).forEach((i=>{const n=u(i),a=(r=this.normalizedStyles[i],(e,t,i)=>{if(!i.consumable.consume(t.item,e.name))return;const n=X(t.attributeNewValue,r),a=X(t.attributeOldValue,r),o=i.mapper.toViewElement(t.item),s=i.writer;a&&(\"class\"===a.attributeName?s.removeClass(a.attributeValue,o):s.removeAttribute(a.attributeName,o)),n&&(\"class\"===n.attributeName?s.addClass(n.attributeValue,o):n.isDefault||s.setAttribute(n.attributeName,n.attributeValue,o))});var r;const o=function(e,t){const i=e.filter((e=>!e.isDefault));return(e,n,a)=>{if(!n.modelRange)return;const r=n.viewItem,o=(0,E.first)(n.modelRange.getItems());if(o&&a.schema.checkAttribute(o,t))for(const e of i)if(\"class\"===e.attributeName)a.consumable.consume(r,{classes:e.attributeValue})&&a.writer.setAttribute(t,e.name,o);else if(a.consumable.consume(r,{attributes:[e.attributeName]}))for(const e of i)e.attributeValue===r.getAttribute(e.attributeName)&&a.writer.setAttribute(t,e.name,o)}}(this.normalizedStyles[i],n);e.editing.downcastDispatcher.on(`attribute:${n}`,a),e.data.downcastDispatcher.on(`attribute:${n}`,a);[...new Set(this.normalizedStyles[i].map((e=>e.modelElements)).flat())].forEach((e=>{t.extend(e,{allowAttributes:n})})),e.data.upcastDispatcher.on(\"element\",o,{priority:\"low\"})}))}static get pluginName(){return\"DrupalElementStyleEditing\"}}const Y=e=>e,ee=(e,t)=>(e?`${e}: `:\"\")+t;function te(e,t){return`drupalElementStyle:${t}:${e}`}class ie extends e.Plugin{static get requires(){return[Q]}init(){const{plugins:e}=this.editor,t=this.editor.config.get(\"drupalMedia.toolbar\")||[],i=e.get(\"DrupalElementStyleEditing\").normalizedStyles;Object.keys(i).forEach((e=>{i[e].forEach((t=>{this._createButton(t,e,i[e])}))}));t.filter(l).filter((e=>{const t=[];if(!e.display)return console.warn(\"dropdown configuration must include a display key specifying either listDropdown or splitButton.\"),!1;e.items.includes(e.defaultItem)||console.warn(\"defaultItem must be part of items in the dropdown configuration.\");for(const i of e.items){const e=i.split(\":\")[1];t.push(e)}return!!t.every((e=>e===t[0]))||(console.warn(\"dropdown configuration should only contain buttons from one group.\"),!1)})).forEach((e=>{if(e.items.length>=2){const t=e.name.split(\":\")[1];switch(e.display){case\"splitButton\":this._createDropdown(e,i[t]);break;case\"listDropdown\":this._createListDropdown(e,i[t])}}}))}updateOptionVisibility(e,t,i,n){const{selection:a}=this.editor.model.document,r={};r[n]=e;const o=a?a.getSelectedElement():G(a,this.editor.model.schema,r),s=e.filter((function(e){for(const[t,i]of(0,E.toMap)(e.modelAttributes))if(o&&o.hasAttribute(t))return i.includes(o.getAttribute(t));return!0}));i.hasOwnProperty(\"model\")?s.includes(t)?i.model.set({class:\"\"}):i.model.set({class:\"ck-hidden\"}):s.includes(t)?i.set({class:\"\"}):i.set({class:\"ck-hidden\"})}_createDropdown(e,t){const i=this.editor.ui.componentFactory;i.add(e.name,(n=>{let a;const{defaultItem:r,items:o,title:s}=e,l=o.filter((e=>{const i=e.split(\":\")[1];return t.find((({name:t})=>te(t,i)===e))})).map((e=>{const t=i.create(e);return e===r&&(a=t),t}));o.length!==l.length&&z.warnInvalidStyle({dropdown:e});const d=(0,g.createDropdown)(n,g.SplitButtonView),u=d.buttonView;return(0,g.addToolbarToDropdown)(d,l),u.set({label:ee(s,a.label),class:null,tooltip:!0}),u.bind(\"icon\").toMany(l,\"isOn\",((...e)=>{const t=e.findIndex(Y);return t<0?a.icon:l[t].icon})),u.bind(\"label\").toMany(l,\"isOn\",((...e)=>{const t=e.findIndex(Y);return ee(s,t<0?a.label:l[t].label)})),u.bind(\"isOn\").toMany(l,\"isOn\",((...e)=>e.some(Y))),u.bind(\"class\").toMany(l,\"isOn\",((...e)=>e.some(Y)?\"ck-splitbutton_flatten\":null)),u.on(\"execute\",(()=>{l.some((({isOn:e})=>e))?d.isOpen=!d.isOpen:a.fire(\"execute\")})),d.bind(\"isEnabled\").toMany(l,\"isEnabled\",((...e)=>e.some(Y))),d}))}_createButton(e,t,i){const n=e.name;this.editor.ui.componentFactory.add(te(n,t),(a=>{const r=this.editor.commands.get(\"drupalElementStyle\"),o=new g.ButtonView(a);return o.set({label:e.title,icon:e.icon,tooltip:!0,isToggleable:!0}),o.bind(\"isEnabled\").to(r,\"isEnabled\"),o.bind(\"isOn\").to(r,\"value\",(e=>e&&e[t]===n)),o.on(\"execute\",this._executeCommand.bind(this,n,t)),this.listenTo(this.editor.ui,\"update\",(()=>{this.updateOptionVisibility(i,e,o,t)})),o}))}getDropdownListItemDefinitions(e,t,i){const n=new E.Collection;return e.forEach((t=>{const a={type:\"button\",model:new g.Model({group:i,commandValue:t.name,label:t.title,withText:!0,class:\"\"})};n.add(a),this.listenTo(this.editor.ui,\"update\",(()=>{this.updateOptionVisibility(e,t,a,i)}))})),n}_createListDropdown(e,t){const i=this.editor.ui.componentFactory;i.add(e.name,(n=>{let a;const{defaultItem:r,items:o,title:s,defaultText:l}=e,d=e.name.split(\":\")[1],u=o.filter((e=>t.find((({name:t})=>te(t,d)===e)))).map((e=>{const t=i.create(e);return e===r&&(a=t),t}));o.length!==u.length&&z.warnInvalidStyle({dropdown:e});const c=(0,g.createDropdown)(n,g.DropdownButtonView),m=c.buttonView;m.set({label:ee(s,a.label),class:null,tooltip:l,withText:!0});const p=this.editor.commands.get(\"drupalElementStyle\");return m.bind(\"label\").to(p,\"value\",(e=>{if(e&&e[d])for(const i of t)if(i.name===e[d])return i.title;return l})),c.bind(\"isOn\").to(p),c.bind(\"isEnabled\").to(this),(0,g.addListToDropdown)(c,this.getDropdownListItemDefinitions(t,p,d)),this.listenTo(c,\"execute\",(e=>{this._executeCommand(e.source.commandValue,e.source.group)})),c}))}_executeCommand(e,t){this.editor.execute(\"drupalElementStyle\",{value:e,group:t}),this.editor.editing.view.focus()}static get pluginName(){return\"DrupalElementStyleUi\"}}class ne extends e.Plugin{static get requires(){return[Q,ie]}static get pluginName(){return\"DrupalElementStyle\"}}function ae(e){const t=e.getFirstPosition().findAncestor(\"caption\");return t&&a(t.parent)?t:null}function re(e){for(const t of e.getChildren())if(t&&t.is(\"element\",\"caption\"))return t;return null}class oe extends e.Command{refresh(){const e=this.editor.model.document.selection,t=e.getSelectedElement();if(!t)return this.isEnabled=!!o(e),void(this.value=!!ae(e));this.isEnabled=a(t),this.isEnabled?this.value=!!re(t):this.value=!1}execute(e={}){const{focusCaptionOnShow:t}=e;this.editor.model.change((e=>{this.value?this._hideDrupalMediaCaption(e):this._showDrupalMediaCaption(e,t)}))}_showDrupalMediaCaption(e,t){const i=this.editor.model.document.selection,n=this.editor.plugins.get(\"DrupalMediaCaptionEditing\"),a=o(i),r=n._getSavedCaption(a)||e.createElement(\"caption\");e.append(r,a),t&&e.setSelection(r,\"in\")}_hideDrupalMediaCaption(e){const t=this.editor,i=t.model.document.selection,n=t.plugins.get(\"DrupalMediaCaptionEditing\");let a,r=i.getSelectedElement();r?a=re(r):(a=ae(i),r=o(i)),n._saveCaption(r,a),e.setSelection(r,\"on\"),e.remove(a)}}class se extends e.Plugin{static get requires(){return[]}static get pluginName(){return\"DrupalMediaCaptionEditing\"}constructor(e){super(e),this._savedCaptionsMap=new WeakMap}init(){const e=this.editor,t=e.model.schema;t.isRegistered(\"caption\")?t.extend(\"caption\",{allowIn:\"drupalMedia\"}):t.register(\"caption\",{allowIn:\"drupalMedia\",allowContentOf:\"$block\",isLimit:!0}),e.commands.add(\"toggleMediaCaption\",new oe(e)),this._setupConversion()}_setupConversion(){const e=this.editor,i=e.editing.view;var n;e.conversion.for(\"upcast\").add(function(e){const t=(t,i,n)=>{const{viewItem:a}=i,{writer:r,consumable:o}=n;if(!i.modelRange||!o.consume(a,{attributes:[\"data-caption\"]}))return;const s=r.createElement(\"caption\"),l=i.modelRange.start.nodeAfter,d=e.data.processor.toView(a.getAttribute(\"data-caption\"));n.consumable.constructor.createFrom(d,n.consumable),n.convertChildren(d,s),r.append(s,l)};return e=>{e.on(\"element:drupal-media\",t,{priority:\"low\"})}}(e)),e.conversion.for(\"editingDowncast\").elementToElement({model:\"caption\",view:(e,{writer:n})=>{if(!a(e.parent))return null;const r=n.createEditableElement(\"figcaption\");return r.placeholder=Drupal.t(\"Enter media caption\"),(0,V.enablePlaceholder)({view:i,element:r,keepOnFocus:!0}),(0,t.toWidgetEditable)(r,n)}}),e.editing.mapper.on(\"modelToViewPosition\",(n=i,(e,t)=>{const i=t.modelPosition,r=i.parent;if(!a(r))return;const o=t.mapper.toViewElement(r);t.viewPosition=n.createPositionAt(o,i.offset+1)})),e.conversion.for(\"dataDowncast\").add(function(e){return t=>{t.on(\"insert:caption\",((t,i,n)=>{const{consumable:r,writer:o,mapper:s}=n;if(!a(i.item.parent)||!r.consume(i.item,\"insert\"))return;const l=e.model.createRangeIn(i.item),d=o.createDocumentFragment();s.bindElements(i.item,d);for(const{item:t}of Array.from(l)){const i={item:t,range:e.model.createRangeOn(t)},a=`insert:${t.name||\"$text\"}`;e.data.downcastDispatcher.fire(a,i,n);for(const a of t.getAttributeKeys())Object.assign(i,{attributeKey:a,attributeOldValue:null,attributeNewValue:i.item.getAttribute(a)}),e.data.downcastDispatcher.fire(`attribute:${a}`,i,n)}for(const e of o.createRangeIn(d).getItems())s.unbindViewElement(e);s.unbindViewElement(d);const u=e.data.processor.toData(d);if(u){const e=s.toViewElement(i.item.parent);o.setAttribute(\"data-caption\",u,e)}}))}}(e))}_getSavedCaption(e){const t=this._savedCaptionsMap.get(e);return t?V.Element.fromJSON(t):null}_saveCaption(e,t){this._savedCaptionsMap.set(e,t.toJSON())}}class le extends e.Plugin{static get requires(){return[]}static get pluginName(){return\"DrupalMediaCaptionUI\"}init(){const{editor:t}=this,i=t.editing.view;t.ui.componentFactory.add(\"toggleDrupalMediaCaption\",(n=>{const a=new g.ButtonView(n),r=t.commands.get(\"toggleMediaCaption\");return a.set({label:Drupal.t(\"Caption media\"),icon:e.icons.caption,tooltip:!0,isToggleable:!0}),a.bind(\"isOn\",\"isEnabled\").to(r,\"value\",\"isEnabled\"),a.bind(\"label\").to(r,\"value\",(e=>e?Drupal.t(\"Toggle caption off\"):Drupal.t(\"Toggle caption on\"))),this.listenTo(a,\"execute\",(()=>{t.execute(\"toggleMediaCaption\",{focusCaptionOnShow:!0});const e=ae(t.model.document.selection);if(e){const n=t.editing.mapper.toViewElement(e);i.scrollToTheSelection(),i.change((e=>{e.addClass(\"drupal-media__caption_highlighted\",n)}))}t.editing.view.focus()})),a}))}}class de extends e.Plugin{static get requires(){return[se,le]}static get pluginName(){return\"DrupalMediaCaption\"}}const ue={DrupalMedia:x,MediaImageTextAlternative:A,MediaImageTextAlternativeEditing:y,MediaImageTextAlternativeUi:k,DrupalLinkMedia:O,DrupalMediaCaption:de,DrupalElementStyle:ne}})(),n=n.default})()));\n\\ No newline at end of file"
                },
                {
                    "sha": "bd5f3facdf9c19f252461880e24eea078a0f5dbe",
                    "filename": "html/core/modules/ckeditor5/js/ckeditor5.js",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 17,
                    "changes": 25,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -116,6 +116,10 @@\n       });\n     }\n \n+    if (config === null) {\n+      return null;\n+    }\n+\n     return Object.entries(config).reduce((processed, [key, value]) => {\n       if (typeof value === 'object') {\n         // Check for null values.\n@@ -443,22 +447,9 @@\n           editor.model.document.on('change:data', () => {\n             const callback = callbacks.get(id);\n             if (callback) {\n-              if (editor.plugins.has('SourceEditing')) {\n-                // If the change:data is being called while in source editing\n-                // mode, it means that the form is being submitted. To avoid\n-                // race conditions, in this case the callback gets called\n-                // without decorating the callback with debounce.\n-                // @see https://www.drupal.org/i/3229174\n-                // @see Drupal.editorDetach\n-                if (editor.plugins.get('SourceEditing').isSourceEditingMode) {\n-                  callback();\n-                  return;\n-                }\n-              }\n-\n               // Marks the field as changed.\n               // @see Drupal.editorAttach\n-              debounce(callback, 400)();\n+              callback();\n             }\n           });\n \n@@ -530,7 +521,7 @@\n      *   Callback called with the value of the editor.\n      */\n     onChange(element, callback) {\n-      callbacks.set(getElementId(element), callback);\n+      callbacks.set(getElementId(element), debounce(callback, 400, true));\n     },\n \n     /**\n@@ -570,7 +561,7 @@\n             const callback = callbacks.get(id);\n             if (callback) {\n               // Allow modules to update EditorModel by providing the current data.\n-              debounce(callback, 400)(editor.getData());\n+              callback(editor.getData());\n             }\n           });\n         })\n@@ -637,7 +628,7 @@\n \n   // Redirect on hash change when the original hash has an associated CKEditor 5.\n   function redirectTextareaFragmentToCKEditor5Instance() {\n-    const hash = window.location.hash.substr(1);\n+    const hash = window.location.hash.substring(1);\n     const element = document.getElementById(hash);\n     if (element) {\n       const editorID = getElementId(element);"
                },
                {
                    "sha": "8c6ceadd4a1346fa0e81ca3a16baecb166b5d67c",
                    "filename": "html/core/modules/ckeditor5/js/ckeditor5_plugins/drupalImage/src/imagealternativetext/ui/imagealternativetextformview.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5_plugins%2FdrupalImage%2Fsrc%2Fimagealternativetext%2Fui%2Fimagealternativetextformview.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5_plugins%2FdrupalImage%2Fsrc%2Fimagealternativetext%2Fui%2Fimagealternativetextformview.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5_plugins%2FdrupalImage%2Fsrc%2Fimagealternativetext%2Fui%2Fimagealternativetextformview.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -251,7 +251,7 @@ export default class ImageAlternativeTextFormView extends View {\n     labeledInput\n       .bind('class')\n       .to(this.decorativeToggle, 'isOn', (value) => (value ? 'ck-hidden' : ''));\n-    labeledInput.label = Drupal.t('Text alternative');\n+    labeledInput.label = Drupal.t('Alternative text');\n \n     return labeledInput;\n   }"
                },
                {
                    "sha": "38aa11f865758bf6086c4afad8443a8802adfce2",
                    "filename": "html/core/modules/ckeditor5/js/ckeditor5_plugins/drupalMedia/src/drupallinkmedia/drupallinkmediaediting.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5_plugins%2FdrupalMedia%2Fsrc%2Fdrupallinkmedia%2Fdrupallinkmediaediting.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5_plugins%2FdrupalMedia%2Fsrc%2Fdrupallinkmedia%2Fdrupallinkmediaediting.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fjs%2Fckeditor5_plugins%2FdrupalMedia%2Fsrc%2Fdrupallinkmedia%2Fdrupallinkmediaediting.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -53,7 +53,7 @@ function upcastMediaLink() {\n         const linkHref = viewLink.getAttribute('href');\n \n         // Missing the `href` attribute.\n-        if (!linkHref) {\n+        if (linkHref === null) {\n           return;\n         }\n "
                },
                {
                    "sha": "a649ff59d65d1789b5109dc0d4730ba43af27e0b",
                    "filename": "html/core/modules/ckeditor5/src/Controller/CKEditor5ImageController.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 0,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fsrc%2FController%2FCKEditor5ImageController.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Fsrc%2FController%2FCKEditor5ImageController.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Fsrc%2FController%2FCKEditor5ImageController.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -137,7 +137,11 @@ public static function create(ContainerInterface $container) {\n    */\n   public function upload(Request $request) {\n     // Getting the UploadedFile directly from the request.\n+    /** @var \\Symfony\\Component\\HttpFoundation\\File\\UploadedFile|null $upload */\n     $upload = $request->files->get('upload');\n+    if ($upload === NULL || !$upload->isValid()) {\n+      throw new HttpException(500, $upload?->getErrorMessage() ?: 'Invalid file upload');\n+    }\n     $filename = $upload->getClientOriginalName();\n \n     $editor = $request->attributes->get('editor');"
                },
                {
                    "sha": "fac456f5a6f35f877e6987dac4652ee268869c07",
                    "filename": "html/core/modules/ckeditor5/tests/src/FunctionalJavascript/CKEditor5Test.php",
                    "status": "modified",
                    "additions": 78,
                    "deletions": 0,
                    "changes": 78,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Ftests%2Fsrc%2FFunctionalJavascript%2FCKEditor5Test.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fckeditor5%2Ftests%2Fsrc%2FFunctionalJavascript%2FCKEditor5Test.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fckeditor5%2Ftests%2Fsrc%2FFunctionalJavascript%2FCKEditor5Test.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -792,4 +792,82 @@ function (ConstraintViolation $v) {\n     $assert_session->responseContains('<!-- Hamsters, alpacas, llamas, and kittens are cute! --><p>This is a <em>test!</em></p>');\n   }\n \n+  /**\n+   * Ensures that changes are saved in CKEditor 5.\n+   */\n+  public function testSave(): void {\n+    // To replicate the bug from https://www.drupal.org/i/3396742\n+    // We need 2 or more text formats and node edit page.\n+    FilterFormat::create([\n+      'format' => 'ckeditor5',\n+      'name' => 'CKEditor 5 HTML',\n+      'roles' => [RoleInterface::AUTHENTICATED_ID],\n+    ])->save();\n+    Editor::create([\n+      'format' => 'ckeditor5',\n+      'editor' => 'ckeditor5',\n+      'settings' => [\n+        'toolbar' => [\n+          'items' => [\n+            'sourceEditing',\n+          ],\n+        ],\n+        'plugins' => [\n+          'ckeditor5_sourceEditing' => [\n+            'allowed_tags' => [],\n+          ],\n+        ],\n+      ],\n+    ])->save();\n+    $this->assertSame([], array_map(\n+      function (ConstraintViolation $v) {\n+        return (string) $v->getMessage();\n+      },\n+      iterator_to_array(CKEditor5::validatePair(\n+        Editor::load('ckeditor5'),\n+        FilterFormat::load('ckeditor5')\n+      ))\n+    ));\n+    FilterFormat::create([\n+      'format' => 'ckeditor5_2',\n+      'name' => 'CKEditor 5 HTML 2',\n+      'roles' => [RoleInterface::AUTHENTICATED_ID],\n+    ])->save();\n+    Editor::create([\n+      'format' => 'ckeditor5_2',\n+      'editor' => 'ckeditor5',\n+    ])->save();\n+    $this->assertSame([], array_map(\n+      function (ConstraintViolation $v) {\n+        return (string) $v->getMessage();\n+      },\n+      iterator_to_array(CKEditor5::validatePair(\n+        Editor::load('ckeditor5_2'),\n+        FilterFormat::load('ckeditor5_2')\n+      ))\n+    ));\n+    $this->drupalCreateNode([\n+      'title' => 'My test content',\n+    ]);\n+\n+    // Test that entered text is saved.\n+    $this->drupalGet('node/1/edit');\n+    $page = $this->getSession()->getPage();\n+    $this->waitForEditor();\n+    $editor = $page->find('css', '.ck-content');\n+    $editor->setValue('Very important information');\n+    $page->pressButton('Save');\n+    $this->assertSession()->responseContains('Very important information');\n+\n+    // Test that changes only in source are saved.\n+    $this->drupalGet('node/1/edit');\n+    $page = $this->getSession()->getPage();\n+    $this->waitForEditor();\n+    $this->pressEditorButton('Source');\n+    $editor = $page->find('css', '.ck-source-editing-area textarea');\n+    $editor->setValue('Text hidden in the source');\n+    $page->pressButton('Save');\n+    $this->assertSession()->responseContains('Text hidden in the source');\n+  }\n+\n }"
                },
                {
                    "sha": "408f0dee57d39e4e932919fbcbf2c3040ba20b5d",
                    "filename": "html/core/modules/comment/src/CommentForm.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Fsrc%2FCommentForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Fsrc%2FCommentForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcomment%2Fsrc%2FCommentForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -313,7 +313,7 @@ public function buildEntity(array $form, FormStateInterface $form_state) {\n     // Validate the comment's subject. If not specified, extract from comment\n     // body.\n     if (trim($comment->getSubject()) == '') {\n-      if ($comment->hasField('comment_body')) {\n+      if ($comment->hasField('comment_body') && !$comment->comment_body->isEmpty()) {\n         // The body may be in any format, so:\n         // 1) Filter it into HTML\n         // 2) Strip out all HTML tags\n@@ -323,7 +323,7 @@ public function buildEntity(array $form, FormStateInterface $form_state) {\n       }\n       // Edge cases where the comment body is populated only by HTML tags will\n       // require a default subject.\n-      if ($comment->getSubject() == '') {\n+      if (trim($comment->getSubject()) == '') {\n         $comment->setSubject($this->t('(No subject)'));\n       }\n     }"
                },
                {
                    "sha": "d553411b9f34db02ef2ea932179c97b693557d64",
                    "filename": "html/core/modules/comment/src/CommentLazyBuilders.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 1,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Fsrc%2FCommentLazyBuilders.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Fsrc%2FCommentLazyBuilders.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcomment%2Fsrc%2FCommentLazyBuilders.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -161,7 +161,9 @@ public function renderLinks($comment_entity_id, $view_mode, $langcode, $is_in_pr\n    *   The entity to which the comment is attached.\n    *\n    * @return array\n-   *   An array that can be processed by drupal_pre_render_links().\n+   *   An array that can be processed by Link::preRenderLinks().\n+   *\n+   * @see \\Drupal\\Core\\Render\\Element\\Link::preRenderLinks()\n    */\n   protected function buildLinks(CommentInterface $entity, EntityInterface $commented_entity) {\n     $links = [];"
                },
                {
                    "sha": "dfc8a21dc8fbebf674db117ed5d3da97a1878547",
                    "filename": "html/core/modules/comment/tests/src/Functional/CommentInterfaceTest.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 0,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FCommentInterfaceTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FCommentInterfaceTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FCommentInterfaceTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -8,6 +8,7 @@\n use Drupal\\comment\\Entity\\Comment;\n use Drupal\\Core\\Entity\\Entity\\EntityViewDisplay;\n use Drupal\\Core\\Entity\\Entity\\EntityViewMode;\n+use Drupal\\field\\Entity\\FieldConfig;\n use Drupal\\user\\RoleInterface;\n use Drupal\\filter\\Entity\\FilterFormat;\n \n@@ -238,6 +239,16 @@ public function testAutoFilledSubject() {\n     $body_text2 = 'AQuickBrownFoxJumpedOverTheLazyDog';\n     $comment2 = $this->postComment(NULL, $body_text2, '', TRUE);\n     $this->assertEquals('AQuickBrownFoxJumpedOverTheL…', $comment2->getSubject());\n+\n+    // Make the body field non required.\n+    $comment_body_field = FieldConfig::loadByName('comment', 'comment', 'comment_body');\n+    $comment_body_field->setRequired(FALSE)->save();\n+    // Try to post a comment without any value in body and subject fields.\n+    $this->drupalGet('node/' . $this->node->id());\n+    // Ensure that there are no PHP errors or warnings when automatically\n+    // generating the subject. This occurs when the comment body is empty.\n+    $comment2 = $this->postComment(NULL, '', '', TRUE);\n+    $this->assertEquals('(No subject)', $comment2->getSubject());\n   }\n \n   /**"
                },
                {
                    "sha": "08ced21dc42fed61bf382e0e71e2df07c7723772",
                    "filename": "html/core/modules/comment/tests/src/Functional/CommentThreadingTest.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 5,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FCommentThreadingTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FCommentThreadingTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FCommentThreadingTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -125,14 +125,14 @@ public function testCommentThreading() {\n   /**\n    * Asserts that the link to the specified parent comment is present.\n    *\n-   * @param int $cid\n+   * @param string $cid\n    *   The comment ID to check.\n-   * @param int $pid\n+   * @param string $pid\n    *   The expected parent comment ID.\n    *\n    * @internal\n    */\n-  protected function assertParentLink(int $cid, int $pid): void {\n+  protected function assertParentLink(string $cid, string $pid): void {\n     // This pattern matches a markup structure like:\n     // @code\n     // <article id=\"comment-2\">\n@@ -156,12 +156,12 @@ protected function assertParentLink(int $cid, int $pid): void {\n   /**\n    * Asserts that the specified comment does not have a link to a parent.\n    *\n-   * @param int $cid\n+   * @param string $cid\n    *   The comment ID to check.\n    *\n    * @internal\n    */\n-  protected function assertNoParentLink(int $cid): void {\n+  protected function assertNoParentLink(string $cid): void {\n     $pattern = \"//article[@id='comment-$cid']\";\n     // A parent link is always accompanied by the text \"In reply to\".\n     $this->assertSession()->elementTextNotContains('xpath', $pattern, 'In reply to');"
                },
                {
                    "sha": "f404d0e49e603fda5f83f9dff16f9ec8405dbbc5",
                    "filename": "html/core/modules/comment/tests/src/Functional/Rest/CommentResourceTestBase.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FRest%2FCommentResourceTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FRest%2FCommentResourceTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcomment%2Ftests%2Fsrc%2FFunctional%2FRest%2FCommentResourceTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -359,6 +359,9 @@ public function testPostSkipCommentApproval() {\n     $this->assertResourceResponse(201, FALSE, $response);\n     $this->assertFalse($unserialized->isPublished());\n \n+    // Make sure the role save below properly invalidates cache tags.\n+    $this->refreshVariables();\n+\n     // Grant anonymous permission to skip comment approval.\n     $this->grantPermissionsToTestedRole(['skip comment approval']);\n "
                },
                {
                    "sha": "86fa29ef972d667fbc710ae28b5f01b2ee71d985",
                    "filename": "html/core/modules/config/tests/src/Functional/ConfigEntityListTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fconfig%2Ftests%2Fsrc%2FFunctional%2FConfigEntityListTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fconfig%2Ftests%2Fsrc%2FFunctional%2FConfigEntityListTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fconfig%2Ftests%2Fsrc%2FFunctional%2FConfigEntityListTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -277,7 +277,7 @@ public function testPager() {\n     // Create 51 test entities.\n     for ($i = 1; $i < 52; $i++) {\n       $storage->create([\n-        'id' => str_pad($i, 2, '0', STR_PAD_LEFT),\n+        'id' => str_pad((string) $i, 2, '0', STR_PAD_LEFT),\n         'label' => 'Test config entity ' . $i,\n         'weight' => $i,\n         'protected_property' => $i,"
                },
                {
                    "sha": "dc5ace9423cc3833d74d9d37cc94ad4b8709de88",
                    "filename": "html/core/modules/config/tests/src/Functional/ConfigInstallProfileUnmetDependenciesTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fconfig%2Ftests%2Fsrc%2FFunctional%2FConfigInstallProfileUnmetDependenciesTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fconfig%2Ftests%2Fsrc%2FFunctional%2FConfigInstallProfileUnmetDependenciesTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fconfig%2Ftests%2Fsrc%2FFunctional%2FConfigInstallProfileUnmetDependenciesTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -80,7 +80,7 @@ protected function copyTestingOverrides() {\n         mkdir($dest . DIRECTORY_SEPARATOR . $iterator->getSubPathName());\n       }\n       else {\n-        copy($item, $dest . DIRECTORY_SEPARATOR . $iterator->getSubPathName());\n+        copy((string) $item, $dest . DIRECTORY_SEPARATOR . $iterator->getSubPathName());\n       }\n     }\n "
                },
                {
                    "sha": "51282d4b45501b368adda2d47b51f54f77e1db1b",
                    "filename": "html/core/modules/config_translation/tests/src/Functional/ConfigTranslationListUiTest.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fconfig_translation%2Ftests%2Fsrc%2FFunctional%2FConfigTranslationListUiTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fconfig_translation%2Ftests%2Fsrc%2FFunctional%2FConfigTranslationListUiTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fconfig_translation%2Ftests%2Fsrc%2FFunctional%2FConfigTranslationListUiTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -190,6 +190,11 @@ protected function doVocabularyListTest() {\n     // Test if the link to translate actually goes to the translate page.\n     $this->drupalGet($translate_link);\n     $this->assertSession()->responseContains('<th>Language</th>');\n+\n+    // Test if the local task for translation is on this page.\n+    $this->assertSession()->linkExists('Translate taxonomy vocabulary');\n+    $local_task_url = parse_url($this->getSession()->getPage()->findLink('Translate taxonomy vocabulary')->getAttribute('href'));\n+    $this->assertSame(base_path() . $translate_link, $local_task_url['path']);\n   }\n \n   /**"
                },
                {
                    "sha": "53013109324d79e4085849ab0beb227007138851",
                    "filename": "html/core/modules/contact/contact.module",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 1,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontact%2Fcontact.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontact%2Fcontact.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontact%2Fcontact.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -161,7 +161,13 @@ function contact_mail($key, &$message, $params) {\n       $message['subject'] .= t('[@site-name] @subject', $variables, $options);\n       $message['body'][] = t('Hello @recipient-name,', $variables, $options);\n       $message['body'][] = t(\"@sender-name (@sender-url) has sent you a message via your contact form at @site-name.\", $variables, $options);\n-      $message['body'][] = t(\"If you don't want to receive such emails, you can change your settings at @recipient-edit-url.\", $variables, $options);\n+      // Only include the opt-out line in the original email and not in the\n+      // copy to the sender. Also exclude this if the email was sent from a\n+      // user administrator because they can always send emails even if the\n+      // contacted user has disabled their contact form.\n+      if ($key === 'user_mail' && !$params['sender']->hasPermission('administer users')) {\n+        $message['body'][] = t(\"If you don't want to receive such messages, you can change your settings at @recipient-edit-url.\", $variables, $options);\n+      }\n       $build = \\Drupal::entityTypeManager()\n         ->getViewBuilder('contact_message')\n         ->view($contact_message, 'mail');"
                },
                {
                    "sha": "ea3b6c08c7ed79652457d659228010db232e0d50",
                    "filename": "html/core/modules/contact/tests/src/Functional/ContactPersonalTest.php",
                    "status": "modified",
                    "additions": 48,
                    "deletions": 1,
                    "changes": 49,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontact%2Ftests%2Fsrc%2FFunctional%2FContactPersonalTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontact%2Ftests%2Fsrc%2FFunctional%2FContactPersonalTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontact%2Ftests%2Fsrc%2FFunctional%2FContactPersonalTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -336,18 +336,65 @@ protected function checkContactAccess($response, $contact_value = NULL) {\n    * @param array $message\n    *   (optional) An array with the form fields being used. Defaults to an empty\n    *   array.\n+   * @param bool $user_copy\n+   *   (optional) A boolean to determine whether to send a user copy email.\n+   *   Defaults to FALSE.\n    *\n    * @return array\n    *   An array with the form fields being used.\n    */\n-  protected function submitPersonalContact(AccountInterface $account, array $message = []) {\n+  protected function submitPersonalContact(AccountInterface $account, array $message = [], bool $user_copy = FALSE) {\n     $message += [\n       'subject[0][value]' => $this->randomMachineName(16) . '< \" =+ >',\n       'message[0][value]' => $this->randomMachineName(64) . '< \" =+ >',\n+      'copy' => $user_copy,\n     ];\n     $this->drupalGet('user/' . $account->id() . '/contact');\n     $this->submitForm($message, 'Send message');\n     return $message;\n   }\n \n+  /**\n+   * Tests that the opt-out message is included correctly in contact emails.\n+   */\n+  public function testPersonalContactForm(): void {\n+    $opt_out_message = \"If you don't want to receive such messages, you can change your settings at\";\n+\n+    // Send an email from an admin (should not contain the opt-out message).\n+    $this->drupalLogin($this->adminUser);\n+    $this->submitPersonalContact($this->contactUser);\n+    $this->drupalLogout();\n+\n+    $this->assertStringNotContainsString($opt_out_message, $this->getMails()[0]['body'], 'Opt-out message excluded in email.');\n+\n+    // Send an email from a non-admin (should contain the opt-out message).\n+    $this->drupalLogin($this->webUser);\n+    $this->submitPersonalContact($this->contactUser);\n+\n+    $this->assertMailString('body', $opt_out_message, 1, 'Opt-out message included in email.');\n+  }\n+\n+  /**\n+   * Tests that the opt-out message is not included in user copy emails.\n+   */\n+  public function testPersonalContactFormUserCopy(): void {\n+    $opt_out_message = \"If you don't want to receive such messages, you can change your settings at\";\n+\n+    // Send an email from an admin.\n+    $this->drupalLogin($this->adminUser);\n+    $this->submitPersonalContact($this->contactUser, [], TRUE);\n+    $this->drupalLogout();\n+\n+    // Send an email from a non-admin.\n+    $this->drupalLogin($this->webUser);\n+    $this->submitPersonalContact($this->contactUser, [], TRUE);\n+\n+    $user_copy_emails = $this->getMails(['id' => 'contact_user_copy']);\n+\n+    // Tests that the opt-out message is not included in admin user copy emails.\n+    $this->assertStringNotContainsString($opt_out_message, $user_copy_emails[0]['body'], 'Opt-out message not included in admin user copy email.');\n+    // Tests that the opt-out message is not included in non-admin user copy emails.\n+    $this->assertStringNotContainsString($opt_out_message, $user_copy_emails[1]['body'], 'Opt-out message not included in non-admin user copy email.');\n+  }\n+\n }"
                },
                {
                    "sha": "6fbdff1d4dfd03398d64828a46fb2d193a757c22",
                    "filename": "html/core/modules/contact/tests/src/Unit/MailHandlerTest.php",
                    "status": "modified",
                    "additions": 47,
                    "deletions": 114,
                    "changes": 161,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontact%2Ftests%2Fsrc%2FUnit%2FMailHandlerTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontact%2Ftests%2Fsrc%2FUnit%2FMailHandlerTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontact%2Ftests%2Fsrc%2FUnit%2FMailHandlerTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -6,10 +6,8 @@\n \n use Drupal\\contact\\MailHandler;\n use Drupal\\contact\\MailHandlerException;\n-use Drupal\\contact\\MessageInterface;\n use Drupal\\Core\\Entity\\EntityTypeManagerInterface;\n use Drupal\\Core\\Language\\Language;\n-use Drupal\\Core\\Session\\AccountInterface;\n use Drupal\\Tests\\UnitTestCase;\n use Drupal\\user\\Entity\\User;\n \n@@ -135,19 +133,37 @@ public function testInvalidRecipient() {\n    *\n    * @covers ::sendMailMessages\n    */\n-  public function testSendMailMessages(MessageInterface $message, AccountInterface $sender, $results) {\n+  public function testSendMailMessages(bool $anonymous, ?bool $auto_reply, bool $copy_sender, array $results) {\n+    if ($anonymous) {\n+      $message = $this->getAnonymousMockMessage(explode(', ', $results[0]['to']), $auto_reply, $copy_sender);\n+      $sender = $this->getMockSender();\n+    }\n+    else {\n+      $message = $this->getAuthenticatedMockMessage($copy_sender);\n+      $sender = $this->getMockSender(FALSE, 'user@drupal.org');\n+    }\n+\n+    $expected_params['contact_message'] = $message;\n+    $expected_params['sender'] = $sender;\n+    if ($anonymous) {\n+      $expected_params['contact_form'] = $message->getContactForm();\n+    }\n+    else {\n+      $expected_params['recipient'] = $message->getPersonalRecipient();\n+    }\n+\n     $this->logger->expects($this->once())\n       ->method('info');\n     $this->mailManager->expects($this->any())\n       ->method('mail')\n       ->willReturnCallback(\n-        function ($module, $key, $to, $langcode, $params, $from) use (&$results) {\n+        function ($module, $key, $to, $langcode, $params, $from) use (&$results, $expected_params) {\n           $result = array_shift($results);\n           $this->assertEquals($module, $result['module']);\n           $this->assertEquals($key, $result['key']);\n           $this->assertEquals($to, $result['to']);\n           $this->assertEquals($langcode, $result['langcode']);\n-          $this->assertEquals($params, $result['params']);\n+          $this->assertEquals($params, $expected_params);\n           $this->assertEquals($from, $result['from']);\n         });\n     $this->userStorage->expects($this->any())\n@@ -159,128 +175,48 @@ function ($module, $key, $to, $langcode, $params, $from) use (&$results) {\n   /**\n    * Data provider for ::testSendMailMessages.\n    */\n-  public function getSendMailMessages() {\n-    $data = [];\n-    $recipients = ['admin@drupal.org', 'user@drupal.org'];\n+  public static function getSendMailMessages() {\n     $default_result = [\n       'module' => 'contact',\n-      'key' => '',\n-      'to' => implode(', ', $recipients),\n+      'key' => 'page_mail',\n+      'to' => 'admin@drupal.org, user@drupal.org',\n       'langcode' => 'en',\n       'params' => [],\n       'from' => 'anonymous@drupal.org',\n     ];\n-    $results = [];\n-    $message = $this->getAnonymousMockMessage($recipients, '');\n-    $sender = $this->getMockSender();\n-    $result = [\n-      'key' => 'page_mail',\n-      'params' => [\n-        'contact_message' => $message,\n-        'sender' => $sender,\n-        'contact_form' => $message->getContactForm(),\n-      ],\n-    ];\n-    $results[] = $result + $default_result;\n-    $data[] = [$message, $sender, $results];\n \n-    $results = [];\n-    $message = $this->getAnonymousMockMessage($recipients, 'reply');\n-    $sender = $this->getMockSender();\n-    $result = [\n-      'key' => 'page_mail',\n-      'params' => [\n-        'contact_message' => $message,\n-        'sender' => $sender,\n-        'contact_form' => $message->getContactForm(),\n-      ],\n-    ];\n-    $results[] = $result + $default_result;\n-    $result['key'] = 'page_autoreply';\n-    $result['to'] = 'anonymous@drupal.org';\n-    $result['from'] = NULL;\n-    $results[] = $result + $default_result;\n-    $data[] = [$message, $sender, $results];\n-\n-    $results = [];\n-    $message = $this->getAnonymousMockMessage($recipients, '', TRUE);\n-    $sender = $this->getMockSender();\n-    $result = [\n-      'key' => 'page_mail',\n-      'params' => [\n-        'contact_message' => $message,\n-        'sender' => $sender,\n-        'contact_form' => $message->getContactForm(),\n-      ],\n-    ];\n-    $results[] = $result + $default_result;\n-    $result['key'] = 'page_copy';\n-    $result['to'] = 'anonymous@drupal.org';\n-    $results[] = $result + $default_result;\n-    $data[] = [$message, $sender, $results];\n-\n-    $results = [];\n-    $message = $this->getAnonymousMockMessage($recipients, 'reply', TRUE);\n-    $sender = $this->getMockSender();\n-    $result = [\n-      'key' => 'page_mail',\n-      'params' => [\n-        'contact_message' => $message,\n-        'sender' => $sender,\n-        'contact_form' => $message->getContactForm(),\n-      ],\n-    ];\n-    $results[] = $result + $default_result;\n-    $result['key'] = 'page_copy';\n-    $result['to'] = 'anonymous@drupal.org';\n-    $results[] = $result + $default_result;\n-    $result['key'] = 'page_autoreply';\n-    $result['from'] = NULL;\n-    $results[] = $result + $default_result;\n-    $data[] = [$message, $sender, $results];\n+    $autoreply_result = [\n+      'key' => 'page_autoreply',\n+      'to' => 'anonymous@drupal.org',\n+      'from' => NULL,\n+    ] + $default_result;\n \n-    // For authenticated user.\n-    $results = [];\n-    $message = $this->getAuthenticatedMockMessage();\n-    $sender = $this->getMockSender(FALSE, 'user@drupal.org');\n-    $result = [\n-      'module' => 'contact',\n-      'key' => 'user_mail',\n-      'to' => 'user2@drupal.org',\n-      'langcode' => 'en',\n-      'params' => [\n-        'contact_message' => $message,\n-        'sender' => $sender,\n-        'recipient' => $message->getPersonalRecipient(),\n-      ],\n-      'from' => 'user@drupal.org',\n-    ];\n-    $results[] = $result;\n-    $data[] = [$message, $sender, $results];\n+    $copy_result = [\n+      'key' => 'page_copy',\n+      'to' => 'anonymous@drupal.org',\n+    ] + $default_result;\n \n-    $results = [];\n-    $message = $this->getAuthenticatedMockMessage(TRUE);\n-    $sender = $this->getMockSender(FALSE, 'user@drupal.org');\n-    $result = [\n+    yield 'anonymous, no auto reply, no copy sender' => [TRUE, FALSE, FALSE, [$default_result]];\n+    yield 'anonymous, auto reply, no copy sender' => [TRUE, TRUE, FALSE, [$default_result, $autoreply_result]];\n+    yield 'anonymous, no auto reply, copy sender' => [TRUE, FALSE, TRUE, [$default_result, $copy_result]];\n+    yield 'anonymous, auto reply, copy sender' => [TRUE, TRUE, TRUE, [$default_result, $copy_result, $autoreply_result]];\n+\n+    // For authenticated user.\n+    $default_result = [\n       'module' => 'contact',\n       'key' => 'user_mail',\n       'to' => 'user2@drupal.org',\n       'langcode' => 'en',\n-      'params' => [\n-        'contact_message' => $message,\n-        'sender' => $sender,\n-        'recipient' => $message->getPersonalRecipient(),\n-      ],\n       'from' => 'user@drupal.org',\n     ];\n-    $results[] = $result;\n \n-    $result['key'] = 'user_copy';\n-    $result['to'] = $result['from'];\n-    $results[] = $result;\n-    $data[] = [$message, $sender, $results];\n+    $copy_result = [\n+      'key' => 'user_copy',\n+      'to' => 'user@drupal.org',\n+    ] + $default_result;\n \n-    return $data;\n+    yield 'authenticated, no copy sender' => [FALSE, NULL, FALSE, [$default_result]];\n+    yield 'authenticated, copy sender' => [FALSE, NULL, TRUE, [$default_result, $copy_result]];\n   }\n \n   /**\n@@ -347,7 +283,7 @@ protected function getAnonymousMockMessage($recipients, $auto_reply, $copy_sende\n       ->willReturn($copy_sender);\n     $message->expects($this->any())\n       ->method('getContactForm')\n-      ->willReturn($this->getMockContactForm($recipients, $auto_reply));\n+      ->willReturn($this->getMockContactForm($recipients, $auto_reply ? 'reply' : ''));\n     return $message;\n   }\n \n@@ -381,9 +317,6 @@ protected function getAuthenticatedMockMessage($copy_sender = FALSE) {\n     $message->expects($this->any())\n       ->method('getPersonalRecipient')\n       ->willReturn($recipient);\n-    $message->expects($this->any())\n-      ->method('getContactForm')\n-      ->willReturn($this->getMockContactForm('user2@drupal.org', FALSE));\n     return $message;\n   }\n "
                },
                {
                    "sha": "68eb18dbb8b33ee9e145b8f4985a2681cc5e09d1",
                    "filename": "html/core/modules/content_moderation/src/EventSubscriber/ConfigImportSubscriber.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Fsrc%2FEventSubscriber%2FConfigImportSubscriber.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Fsrc%2FEventSubscriber%2FConfigImportSubscriber.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_moderation%2Fsrc%2FEventSubscriber%2FConfigImportSubscriber.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -47,7 +47,8 @@ public function onConfigImporterValidate(ConfigImporterEvent $event) {\n     foreach (['update', 'delete'] as $op) {\n       $unprocessed_configurations = $event->getConfigImporter()->getUnprocessedConfiguration($op);\n       foreach ($unprocessed_configurations as $unprocessed_configuration) {\n-        if ($workflow = $this->getWorkflow($unprocessed_configuration)) {\n+        if (($workflow = $this->getWorkflow($unprocessed_configuration))\n+            && $workflow->getTypePlugin()->getPluginId() === 'content_moderation') {\n           if ($op === 'update') {\n             $original_workflow_config = $event->getConfigImporter()\n               ->getStorageComparer()"
                },
                {
                    "sha": "b5b9f1dcc9cce533e6f26feb55bdd9946f259eff",
                    "filename": "html/core/modules/content_moderation/src/Plugin/views/filter/ModerationStateFilter.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FModerationStateFilter.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FModerationStateFilter.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_moderation%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FModerationStateFilter.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -144,16 +144,17 @@ protected function opSimple() {\n         $entity_base_table = $entity_type->getBaseTable();\n         $entity_revision_base_table = $entity_type->isTranslatable() ? $entity_type->getRevisionDataTable() : $entity_type->getRevisionTable();\n         if ($this->table === $entity_revision_base_table) {\n+          $entity_revision_base_table_alias = $this->relationship ?: $this->table;\n           $configuration = [\n             'table' => $entity_base_table,\n             'field' => $entity_type->getKey('id'),\n-            'left_table' => $entity_revision_base_table,\n+            'left_table' => $entity_revision_base_table_alias,\n             'left_field' => $entity_type->getKey('id'),\n             'type' => 'INNER',\n           ];\n \n           $join = Views::pluginManager('join')->createInstance('standard', $configuration);\n-          $entity_base_table_alias = $this->query->addRelationship($entity_base_table, $join, $entity_revision_base_table);\n+          $entity_base_table_alias = $this->query->addRelationship($entity_base_table, $join, $entity_revision_base_table_alias);\n         }\n \n         $bundle_condition = $this->view->query->getConnection()->condition('AND');"
                },
                {
                    "sha": "ca998cde89df49c91708bd7c432e51728e9fdcc3",
                    "filename": "html/core/modules/content_moderation/tests/modules/content_moderation_test_views/config/install/views.view.test_content_moderation_filter_via_revision_relationship.yml",
                    "status": "added",
                    "additions": 351,
                    "deletions": 0,
                    "changes": 351,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fmodules%2Fcontent_moderation_test_views%2Fconfig%2Finstall%2Fviews.view.test_content_moderation_filter_via_revision_relationship.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fmodules%2Fcontent_moderation_test_views%2Fconfig%2Finstall%2Fviews.view.test_content_moderation_filter_via_revision_relationship.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fmodules%2Fcontent_moderation_test_views%2Fconfig%2Finstall%2Fviews.view.test_content_moderation_filter_via_revision_relationship.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,351 @@\n+langcode: en\n+status: true\n+dependencies:\n+  module:\n+    - content_moderation\n+    - user\n+id: test_content_moderation_filter_via_revision_relationship\n+label: test_content_moderation_filter_via_revision_relationship\n+module: views\n+description: ''\n+tag: ''\n+base_table: users_field_data\n+base_field: uid\n+display:\n+  default:\n+    id: default\n+    display_title: Default\n+    display_plugin: default\n+    position: 0\n+    display_options:\n+      title: test_content_moderation_filter_via_revision_relationship\n+      fields:\n+        name:\n+          id: name\n+          table: users_field_data\n+          field: name\n+          relationship: none\n+          group_type: group\n+          admin_label: ''\n+          entity_type: user\n+          entity_field: name\n+          plugin_id: field\n+          label: ''\n+          exclude: false\n+          alter:\n+            alter_text: false\n+            text: ''\n+            make_link: false\n+            path: ''\n+            absolute: false\n+            external: false\n+            replace_spaces: false\n+            path_case: none\n+            trim_whitespace: false\n+            alt: ''\n+            rel: ''\n+            link_class: ''\n+            prefix: ''\n+            suffix: ''\n+            target: ''\n+            nl2br: false\n+            max_length: 0\n+            word_boundary: false\n+            ellipsis: false\n+            more_link: false\n+            more_link_text: ''\n+            more_link_path: ''\n+            strip_tags: false\n+            trim: false\n+            preserve_tags: ''\n+            html: false\n+          element_type: ''\n+          element_class: ''\n+          element_label_type: ''\n+          element_label_class: ''\n+          element_label_colon: false\n+          element_wrapper_type: ''\n+          element_wrapper_class: ''\n+          element_default_classes: true\n+          empty: ''\n+          hide_empty: false\n+          empty_zero: false\n+          hide_alter_empty: true\n+          click_sort_column: value\n+          type: user_name\n+          settings:\n+            link_to_entity: false\n+          group_column: value\n+          group_columns: {  }\n+          group_rows: true\n+          delta_limit: 0\n+          delta_offset: 0\n+          delta_reversed: false\n+          delta_first_last: false\n+          multi_type: separator\n+          separator: ', '\n+          field_api_classes: false\n+        title:\n+          id: title\n+          table: node_field_revision\n+          field: title\n+          relationship: uid_revision_test\n+          group_type: group\n+          admin_label: ''\n+          entity_type: node\n+          entity_field: title\n+          plugin_id: field\n+          label: ''\n+          exclude: false\n+          alter:\n+            alter_text: false\n+            text: ''\n+            make_link: false\n+            path: ''\n+            absolute: false\n+            external: false\n+            replace_spaces: false\n+            path_case: none\n+            trim_whitespace: false\n+            alt: ''\n+            rel: ''\n+            link_class: ''\n+            prefix: ''\n+            suffix: ''\n+            target: ''\n+            nl2br: false\n+            max_length: 0\n+            word_boundary: true\n+            ellipsis: true\n+            more_link: false\n+            more_link_text: ''\n+            more_link_path: ''\n+            strip_tags: false\n+            trim: false\n+            preserve_tags: ''\n+            html: false\n+          element_type: ''\n+          element_class: ''\n+          element_label_type: ''\n+          element_label_class: ''\n+          element_label_colon: false\n+          element_wrapper_type: ''\n+          element_wrapper_class: ''\n+          element_default_classes: true\n+          empty: ''\n+          hide_empty: false\n+          empty_zero: false\n+          hide_alter_empty: true\n+          click_sort_column: value\n+          type: string\n+          settings:\n+            link_to_entity: false\n+          group_column: value\n+          group_columns: {  }\n+          group_rows: true\n+          delta_limit: 0\n+          delta_offset: 0\n+          delta_reversed: false\n+          delta_first_last: false\n+          multi_type: separator\n+          separator: ', '\n+          field_api_classes: false\n+        moderation_state:\n+          id: moderation_state\n+          table: node_field_revision\n+          field: moderation_state\n+          relationship: uid_revision_test\n+          group_type: group\n+          admin_label: ''\n+          entity_type: node\n+          plugin_id: moderation_state_field\n+          label: ''\n+          exclude: false\n+          alter:\n+            alter_text: false\n+            text: ''\n+            make_link: false\n+            path: ''\n+            absolute: false\n+            external: false\n+            replace_spaces: false\n+            path_case: none\n+            trim_whitespace: false\n+            alt: ''\n+            rel: ''\n+            link_class: ''\n+            prefix: ''\n+            suffix: ''\n+            target: ''\n+            nl2br: false\n+            max_length: 0\n+            word_boundary: true\n+            ellipsis: true\n+            more_link: false\n+            more_link_text: ''\n+            more_link_path: ''\n+            strip_tags: false\n+            trim: false\n+            preserve_tags: ''\n+            html: false\n+          element_type: ''\n+          element_class: ''\n+          element_label_type: ''\n+          element_label_class: ''\n+          element_label_colon: false\n+          element_wrapper_type: ''\n+          element_wrapper_class: ''\n+          element_default_classes: true\n+          empty: ''\n+          hide_empty: false\n+          empty_zero: false\n+          hide_alter_empty: true\n+          click_sort_column: value\n+          type: content_moderation_state\n+          settings: {  }\n+          group_column: value\n+          group_columns: {  }\n+          group_rows: true\n+          delta_limit: 0\n+          delta_offset: 0\n+          delta_reversed: false\n+          delta_first_last: false\n+          multi_type: separator\n+          separator: ', '\n+          field_api_classes: false\n+      pager:\n+        type: none\n+        options:\n+          offset: 0\n+      exposed_form:\n+        type: basic\n+        options:\n+          submit_button: Apply\n+          reset_button: false\n+          reset_button_label: Reset\n+          exposed_sorts_label: 'Sort by'\n+          expose_sort_order: true\n+          sort_asc_label: Asc\n+          sort_desc_label: Desc\n+      access:\n+        type: perm\n+        options:\n+          perm: 'access user profiles'\n+      cache:\n+        type: tag\n+        options: {  }\n+      empty: {  }\n+      sorts:\n+        vid:\n+          id: vid\n+          table: node_field_revision\n+          field: vid\n+          relationship: uid_revision_test\n+          group_type: group\n+          admin_label: ''\n+          entity_type: node\n+          entity_field: vid\n+          plugin_id: standard\n+          order: ASC\n+          expose:\n+            label: ''\n+            field_identifier: ''\n+          exposed: false\n+      arguments: {  }\n+      filters:\n+        moderation_state:\n+          id: moderation_state\n+          table: node_field_revision\n+          field: moderation_state\n+          relationship: uid_revision_test\n+          group_type: group\n+          admin_label: ''\n+          entity_type: node\n+          plugin_id: moderation_state_filter\n+          operator: in\n+          value: {  }\n+          group: 1\n+          exposed: true\n+          expose:\n+            operator_id: moderation_state_op\n+            label: 'Moderation state'\n+            description: ''\n+            use_operator: false\n+            operator: moderation_state_op\n+            operator_limit_selection: false\n+            operator_list: {  }\n+            identifier: moderation_state\n+            required: false\n+            remember: false\n+            multiple: false\n+            remember_roles:\n+              authenticated: authenticated\n+              anonymous: '0'\n+              administrator: '0'\n+            reduce: false\n+          is_grouped: false\n+          group_info:\n+            label: ''\n+            description: ''\n+            identifier: ''\n+            optional: true\n+            widget: select\n+            multiple: false\n+            remember: false\n+            default_group: All\n+            default_group_multiple: {  }\n+            group_items: {  }\n+      style:\n+        type: default\n+      row:\n+        type: fields\n+      query:\n+        type: views_query\n+        options:\n+          query_comment: ''\n+          disable_sql_rewrite: false\n+          distinct: false\n+          replica: false\n+          query_tags: {  }\n+      relationships:\n+        uid_revision_test:\n+          id: uid_revision_test\n+          table: users_field_data\n+          field: uid_revision_test\n+          relationship: none\n+          group_type: group\n+          admin_label: 'node revisions'\n+          entity_type: user\n+          plugin_id: standard\n+          required: true\n+      header: {  }\n+      footer: {  }\n+      display_extenders: {  }\n+    cache_metadata:\n+      max-age: -1\n+      contexts:\n+        - 'languages:language_content'\n+        - 'languages:language_interface'\n+        - url\n+        - url.query_args\n+        - user.permissions\n+      tags:\n+        - 'config:workflow_list'\n+  page_1:\n+    id: page_1\n+    display_title: Page\n+    display_plugin: page\n+    position: 1\n+    display_options:\n+      display_extenders: {  }\n+      path: test-content-moderation-filter-revision-relationship\n+    cache_metadata:\n+      max-age: -1\n+      contexts:\n+        - 'languages:language_content'\n+        - 'languages:language_interface'\n+        - url\n+        - url.query_args\n+        - user.permissions\n+      tags:\n+        - 'config:workflow_list'"
                },
                {
                    "sha": "47f34c21f667321046893606938e02991430e83f",
                    "filename": "html/core/modules/content_moderation/tests/modules/content_moderation_test_views/content_moderation_test_views.module",
                    "status": "modified",
                    "additions": 23,
                    "deletions": 0,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fmodules%2Fcontent_moderation_test_views%2Fcontent_moderation_test_views.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fmodules%2Fcontent_moderation_test_views%2Fcontent_moderation_test_views.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fmodules%2Fcontent_moderation_test_views%2Fcontent_moderation_test_views.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -20,3 +20,26 @@ function content_moderation_test_views_views_query_alter(ViewExecutable $view, Q\n     $query->addOrderBy('node_field_revision', 'vid', 'ASC');\n   }\n }\n+\n+/**\n+ * Implements hook_views_data_alter().\n+ *\n+ * @see \\Drupal\\Tests\\content_moderation\\Kernel\\ViewsModerationStateFilterTest\n+ */\n+function content_moderation_test_views_views_data_alter(array &$data) {\n+  if (isset($data['users_field_data'])) {\n+    $data['users_field_data']['uid_revision_test'] = [\n+      'help' => t('Relate the content revision to the user who created it.'),\n+      'real field' => 'uid',\n+      'relationship' => [\n+        'title' => t('Content revision authored'),\n+        'help' => t('Relate the content revision to the user who created it. This relationship will create one record for each content revision item created by the user.'),\n+        'id' => 'standard',\n+        'base' => 'node_field_revision',\n+        'base field' => 'uid',\n+        'field' => 'uid',\n+        'label' => t('node revisions'),\n+      ],\n+    ];\n+  }\n+}"
                },
                {
                    "sha": "c4b992ac196e245b8016284f652bd1d628fbca34",
                    "filename": "html/core/modules/content_moderation/tests/src/Functional/ModerationFormTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FFunctional%2FModerationFormTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FFunctional%2FModerationFormTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FFunctional%2FModerationFormTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -312,7 +312,7 @@ public function testContentTranslationNodeForm() {\n     $french = \\Drupal::languageManager()->getLanguage('fr');\n \n     $this->drupalGet($latest_version_path);\n-    $this->assertSession()->statusCodeEquals('403');\n+    $this->assertSession()->statusCodeEquals(403);\n     $this->assertSession()->elementNotExists('xpath', '//ul[@class=\"entity-moderation-form\"]');\n \n     // Add french translation (revision 2).\n@@ -326,7 +326,7 @@ public function testContentTranslationNodeForm() {\n     ], 'Save (this translation)');\n \n     $this->drupalGet($latest_version_path, ['language' => $french]);\n-    $this->assertSession()->statusCodeEquals('403');\n+    $this->assertSession()->statusCodeEquals(403);\n     $this->assertSession()->elementNotExists('xpath', '//ul[@class=\"entity-moderation-form\"]');\n \n     // Add french pending revision (revision 3)."
                },
                {
                    "sha": "a3e7354ca9b142624f1d04ee8c2428d1ffed78ce",
                    "filename": "html/core/modules/content_moderation/tests/src/Functional/ViewsModerationStateFilterTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FFunctional%2FViewsModerationStateFilterTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FFunctional%2FViewsModerationStateFilterTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FFunctional%2FViewsModerationStateFilterTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -341,7 +341,7 @@ protected function assertFilterStates(array $states, bool $check_size = FALSE):\n     // Check that the size of the select element does not exceed 8 options.\n     if ($check_size) {\n       $this->assertGreaterThan(8, count($states));\n-      $assert_session->elementAttributeContains('css', '#edit-default-revision-state', 'size', 8);\n+      $assert_session->elementAttributeContains('css', '#edit-default-revision-state', 'size', '8');\n     }\n \n     // Check that an option exists for each of the expected states."
                },
                {
                    "sha": "063d91149580a6bfa6b805f400770e34dd8f0c66",
                    "filename": "html/core/modules/content_moderation/tests/src/Kernel/ViewsModerationStateFilterTest.php",
                    "status": "modified",
                    "additions": 28,
                    "deletions": 0,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FKernel%2FViewsModerationStateFilterTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FKernel%2FViewsModerationStateFilterTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_moderation%2Ftests%2Fsrc%2FKernel%2FViewsModerationStateFilterTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -240,6 +240,34 @@ public function testModerationStateFilterOnJoinedEntity() {\n     ]);\n     $view->execute();\n     $this->assertIdenticalResultset($view, [], ['name' => 'name']);\n+\n+    // Revision Data Table Relationship: Filtering by the published state will\n+    // filter out the sample content.\n+    $view = Views::getView('test_content_moderation_filter_via_revision_relationship');\n+    $view->setExposedInput([\n+      'moderation_state' => 'editorial-published',\n+    ]);\n+    $view->execute();\n+    $this->assertIdenticalResultset($view, [\n+      [\n+        'name' => 'Test user',\n+        'title' => 'Test node',\n+        'moderation_state' => 'published',\n+      ],\n+    ], [\n+      'name' => 'name',\n+      'title' => 'title',\n+      'moderation_state' => 'moderation_state',\n+    ]);\n+\n+    // Revision Data Table Relationship: Filtering by the draft state will\n+    // filter out the sample content.\n+    $view = Views::getView('test_content_moderation_filter_via_revision_relationship');\n+    $view->setExposedInput([\n+      'moderation_state' => 'editorial-draft',\n+    ]);\n+    $view->execute();\n+    $this->assertIdenticalResultset($view, [], ['name' => 'name']);\n   }\n \n   /**"
                },
                {
                    "sha": "f24cc4dac51ef4fa4aafd4dc13880c1126d54fed",
                    "filename": "html/core/modules/content_translation/content_translation.admin.js",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 2,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Fcontent_translation.admin.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Fcontent_translation.admin.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_translation%2Fcontent_translation.admin.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -61,7 +61,10 @@\n           $element = $fields.filter(filterFieldsList);\n         }\n \n-        if ($element[0].matches(`input[value=\"${column}\"]:checked`)) {\n+        if (\n+          $element.length &&\n+          $element[0].matches(`input[value=\"${column}\"]:checked`)\n+        ) {\n           $fields.prop('checked', true).not($element).prop('disabled', true);\n         } else {\n           $fields.prop('disabled', false);\n@@ -89,7 +92,7 @@\n       ).forEach((input) => {\n         const $input = $(input);\n         const $bundleSettings = $input.closest('.bundle-settings');\n-        if (input.checked) {\n+        if (!input.checked) {\n           $bundleSettings.nextUntil('.bundle-settings').hide();\n         } else {\n           $bundleSettings"
                },
                {
                    "sha": "eba279690f0663d6dd9e7cab55b9e31532c4e364",
                    "filename": "html/core/modules/content_translation/content_translation.module",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Fcontent_translation.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Fcontent_translation.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_translation%2Fcontent_translation.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -28,7 +28,7 @@ function content_translation_help($route_name, RouteMatchInterface $route_match)\n     case 'help.page.content_translation':\n       $output = '';\n       $output .= '<h2>' . t('About') . '</h2>';\n-      $output .= '<p>' . t('The Content Translation module allows you to translate content, comments, content blocks, taxonomy terms, users and other <a href=\":field_help\" title=\"Field module help, with background on content entities\">content entities</a>. Together with the modules <a href=\":language\">Language</a>, <a href=\":config-trans\">Configuration Translation</a>, and <a href=\":locale\">Interface Translation</a>, it allows you to build multilingual websites. For more information, see the <a href=\":translation-entity\">online documentation for the Content Translation module</a>.', [':locale' => (\\Drupal::moduleHandler()->moduleExists('locale')) ? Url::fromRoute('help.page', ['name' => 'locale'])->toString() : '#', ':config-trans' => (\\Drupal::moduleHandler()->moduleExists('config_translation')) ? Url::fromRoute('help.page', ['name' => 'config_translation'])->toString() : '#', ':language' => Url::fromRoute('help.page', ['name' => 'language'])->toString(), ':translation-entity' => 'https://www.drupal.org/documentation/modules/translation', ':field_help' => Url::fromRoute('help.page', ['name' => 'field'])->toString()]) . '</p>';\n+      $output .= '<p>' . t('The Content Translation module allows you to translate content, comments, content blocks, taxonomy terms, users and other <a href=\":field_help\" title=\"Field module help, with background on content entities\">content entities</a>. Together with the modules <a href=\":language\">Language</a>, <a href=\":config-trans\">Configuration Translation</a>, and <a href=\":locale\">Interface Translation</a>, it allows you to build multilingual websites. For more information, see the <a href=\":translation-entity\">online documentation for the Content Translation module</a>.', [':locale' => (\\Drupal::moduleHandler()->moduleExists('locale')) ? Url::fromRoute('help.page', ['name' => 'locale'])->toString() : '#', ':config-trans' => (\\Drupal::moduleHandler()->moduleExists('config_translation')) ? Url::fromRoute('help.page', ['name' => 'config_translation'])->toString() : '#', ':language' => Url::fromRoute('help.page', ['name' => 'language'])->toString(), ':translation-entity' => 'https://www.drupal.org/docs/8/core/modules/content-translation', ':field_help' => Url::fromRoute('help.page', ['name' => 'field'])->toString()]) . '</p>';\n       $output .= '<h2>' . t('Uses') . '</h2>';\n       $output .= '<dl>';\n       $output .= '<dt>' . t('Enabling translation') . '</dt>';"
                },
                {
                    "sha": "c2035dcb2fb6b0ca82704b5c697400b99f9f95f3",
                    "filename": "html/core/modules/content_translation/tests/src/Functional/ContentTranslationUITestBase.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 2,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Ftests%2Fsrc%2FFunctional%2FContentTranslationUITestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Ftests%2Fsrc%2FFunctional%2FContentTranslationUITestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_translation%2Ftests%2Fsrc%2FFunctional%2FContentTranslationUITestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\content_translation\\Functional;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Cache\\Cache;\n use Drupal\\Core\\Entity\\EntityChangedInterface;\n use Drupal\\Core\\Entity\\EntityInterface;\n@@ -576,7 +575,7 @@ protected function doTestTranslationChanged() {\n         $entity = $storage->load($this->entityId);\n         $this->assertEquals(\n           $entity->getChangedTimeAcrossTranslations(), $entity->getTranslation($langcode)->getChangedTime(),\n-          new FormattableMarkup('Changed time for language %language is the latest change over all languages.', ['%language' => $language->getName()])\n+          \"Changed time for language {$language->getName()} is the latest change over all languages.\"\n         );\n       }\n "
                },
                {
                    "sha": "ed54b4527079e189541c7e85e7750b67222a9cb8",
                    "filename": "html/core/modules/content_translation/tests/src/FunctionalJavascript/ContentTranslationConfigUITest.php",
                    "status": "added",
                    "additions": 47,
                    "deletions": 0,
                    "changes": 47,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Ftests%2Fsrc%2FFunctionalJavascript%2FContentTranslationConfigUITest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontent_translation%2Ftests%2Fsrc%2FFunctionalJavascript%2FContentTranslationConfigUITest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontent_translation%2Ftests%2Fsrc%2FFunctionalJavascript%2FContentTranslationConfigUITest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,47 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Drupal\\Tests\\content_translation\\FunctionalJavascript;\n+\n+use Drupal\\FunctionalJavascriptTests\\WebDriverTestBase;\n+\n+/**\n+ * Tests that the content translation configuration javascript does't fail.\n+ *\n+ * @group content_translation\n+ */\n+class ContentTranslationConfigUITest extends WebDriverTestBase {\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected static $modules = ['content_translation', 'node'];\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected $defaultTheme = 'stark';\n+\n+  /**\n+   * Use the minimal profile.\n+   *\n+   * @var string\n+   */\n+  protected $profile = 'standard';\n+\n+  /**\n+   * Tests that the content translation configuration javascript does't fail.\n+   */\n+  public function testContentTranslationConfigUI() {\n+    $content_translation_manager = $this->container->get('content_translation.manager');\n+    $content_translation_manager->setEnabled('node', 'article', TRUE);\n+    $this->rebuildContainer();\n+\n+    $admin = $this->drupalCreateUser([], NULL, TRUE);\n+    $this->drupalLogin($admin);\n+    $this->drupalGet('/admin/config/regional/content-language');\n+    $this->failOnJavaScriptErrors();\n+  }\n+\n+}"
                },
                {
                    "sha": "d57ca6c17818ec5fab82d6ab0d6fe7c5a9ffb659",
                    "filename": "html/core/modules/contextual/contextual.module",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontextual%2Fcontextual.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fcontextual%2Fcontextual.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fcontextual%2Fcontextual.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -77,7 +77,7 @@ function contextual_help($route_name, RouteMatchInterface $route_match) {\n     case 'help.page.contextual':\n       $output = '';\n       $output .= '<h2>' . t('About') . '</h2>';\n-      $output .= '<p>' . t('The Contextual links module gives users with the <em>Use contextual links</em> permission quick access to tasks associated with certain areas of pages on your site. For example, a menu displayed as a block has links to edit the menu and configure the block. For more information, see the <a href=\":contextual\">online documentation for the Contextual Links module</a>.', [':contextual' => 'https://www.drupal.org/documentation/modules/contextual']) . '</p>';\n+      $output .= '<p>' . t('The Contextual links module gives users with the <em>Use contextual links</em> permission quick access to tasks associated with certain areas of pages on your site. For example, a menu displayed as a block has links to edit the menu and configure the block. For more information, see the <a href=\":contextual\">online documentation for the Contextual Links module</a>.', [':contextual' => 'https://www.drupal.org/docs/8/core/modules/contextual']) . '</p>';\n       $output .= '<h2>' . t('Uses') . '</h2>';\n       $output .= '<dl>';\n       $output .= '<dt>' . t('Displaying contextual links') . '</dt>';"
                },
                {
                    "sha": "fdb33d1710949b22c9a763230adbd66a21868691",
                    "filename": "html/core/modules/datetime/tests/src/Functional/Views/FilterDateTest.php",
                    "status": "modified",
                    "additions": 20,
                    "deletions": 7,
                    "changes": 27,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fdatetime%2Ftests%2Fsrc%2FFunctional%2FViews%2FFilterDateTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fdatetime%2Ftests%2Fsrc%2FFunctional%2FViews%2FFilterDateTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fdatetime%2Ftests%2Fsrc%2FFunctional%2FViews%2FFilterDateTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -122,12 +122,12 @@ protected function setUp($import_test_views = TRUE, $modules = ['views_test_conf\n    * Tests exposed grouped filters.\n    */\n   public function testExposedGroupedFilters() {\n-    // Expose the empty and not empty operators in a grouped filter.\n-    $this->drupalGet('admin/structure/views/nojs/handler/test_filter_datetime/default/filter/' . $this->fieldName . '_value');\n+    $filter_identifier = $this->fieldName . '_value';\n+    $this->drupalGet('admin/structure/views/nojs/handler/test_filter_datetime/default/filter/' . $filter_identifier);\n     $this->submitForm([], 'Expose filter');\n     $this->submitForm([], 'Grouped filters');\n \n-    // Test operators with different amount of expected values.\n+    // Create groups with different amount of expected values.\n     $edit = [];\n     // No values are required.\n     $edit['options[group_info][group_items][1][title]'] = 'empty';\n@@ -160,24 +160,37 @@ public function testExposedGroupedFilters() {\n     $this->drupalGet($path);\n \n     // Filter the Preview by 'empty'.\n-    $this->getSession()->getPage()->findField($this->fieldName . '_value')->selectOption(1);\n+    $this->getSession()->getPage()->findField($filter_identifier)->selectOption('1');\n     $this->getSession()->getPage()->pressButton('Apply');\n     $this->assertIds([4]);\n \n     // Filter the Preview by 'not empty'.\n-    $this->getSession()->getPage()->findField($this->fieldName . '_value')->selectOption(2);\n+    $this->getSession()->getPage()->findField($filter_identifier)->selectOption('2');\n     $this->getSession()->getPage()->pressButton('Apply');\n     $this->assertIds([1, 2, 3]);\n \n     // Filter the Preview by 'less than'.\n-    $this->getSession()->getPage()->findField($this->fieldName . '_value')->selectOption(3);\n+    $this->getSession()->getPage()->findField($filter_identifier)->selectOption('3');\n     $this->getSession()->getPage()->pressButton('Apply');\n     $this->assertIds([2, 3]);\n \n     // Filter the Preview by 'between'.\n-    $this->getSession()->getPage()->findField($this->fieldName . '_value')->selectOption(4);\n+    $this->getSession()->getPage()->findField($filter_identifier)->selectOption('4');\n     $this->getSession()->getPage()->pressButton('Apply');\n     $this->assertIds([2]);\n+\n+    // Change the identifier for grouped exposed filter.\n+    $this->drupalGet('admin/structure/views/nojs/handler/test_filter_datetime/default/filter/' . $filter_identifier);\n+    $filter_identifier = 'date';\n+    $edit['options[group_info][identifier]'] = $filter_identifier;\n+    $this->submitForm($edit, 'Apply');\n+    $this->submitForm([], 'Save');\n+\n+    // Filter results again using a new filter identifier.\n+    $this->drupalGet($path);\n+    $this->getSession()->getPage()->findField($filter_identifier)->selectOption('2');\n+    $this->getSession()->getPage()->pressButton('Apply');\n+    $this->assertIds([1, 2, 3]);\n   }\n \n   /**"
                },
                {
                    "sha": "534d0718f125a5e8c59a2075422ff9a107dd4709",
                    "filename": "html/core/modules/field/field.module",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield%2Ffield.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield%2Ffield.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield%2Ffield.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -392,6 +392,9 @@ function field_field_storage_config_update(FieldStorageConfigInterface $field_st\n  * Determine the selection handler plugin ID for an entity reference field.\n  */\n function field_field_config_create(FieldConfigInterface $field) {\n+  if ($field->isSyncing()) {\n+    return;\n+  }\n   // Act on all sub-types of the entity_reference field type.\n   /** @var \\Drupal\\Core\\Field\\FieldTypePluginManager $field_type_manager */\n   $field_type_manager = \\Drupal::service('plugin.manager.field.field_type');"
                },
                {
                    "sha": "28e602741c4384e54bcc593ad0fc22a5de9a86f7",
                    "filename": "html/core/modules/field/tests/src/Functional/Number/NumberFieldTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield%2Ftests%2Fsrc%2FFunctional%2FNumber%2FNumberFieldTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield%2Ftests%2Fsrc%2FFunctional%2FNumber%2FNumberFieldTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield%2Ftests%2Fsrc%2FFunctional%2FNumber%2FNumberFieldTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -339,7 +339,7 @@ public function testNumberFloatField() {\n     $this->assertSession()->responseContains('placeholder=\"0.00\"');\n \n     // Submit a signed decimal value within the allowed precision and scale.\n-    $value = '-1234.5678';\n+    $value = -1234.5678;\n     $edit = [\n       \"{$field_name}[0][value]\" => $value,\n     ];"
                },
                {
                    "sha": "ef12736e38f2bc3e1bf5b9968f0eb736295a7dcd",
                    "filename": "html/core/modules/field/tests/src/Kernel/EntityReference/EntityReferenceItemTest.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 0,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield%2Ftests%2Fsrc%2FKernel%2FEntityReference%2FEntityReferenceItemTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield%2Ftests%2Fsrc%2FKernel%2FEntityReference%2FEntityReferenceItemTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield%2Ftests%2Fsrc%2FKernel%2FEntityReference%2FEntityReferenceItemTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -404,6 +404,17 @@ public function testSelectionHandlerSettings() {\n     $field_storage->save();\n     $field = FieldConfig::load($field->id());\n     $this->assertEquals('views', $field->getSetting('handler'));\n+\n+    // Check that selection handlers aren't changed during sync.\n+    $field = FieldConfig::create([\n+      'field_storage' => $field_storage,\n+      'bundle' => 'entity_test',\n+      'settings' => [\n+        'handler' => 'fake:thing',\n+      ],\n+      'isSyncing' => TRUE,\n+    ]);\n+    $this->assertEquals('fake:thing', $field->getSetting('handler'));\n   }\n \n   /**"
                },
                {
                    "sha": "421347b8311fc69153af006f3aeb778e1ad3755e",
                    "filename": "html/core/modules/field_ui/field_ui.module",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ffield_ui.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ffield_ui.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield_ui%2Ffield_ui.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -26,7 +26,7 @@ function field_ui_help($route_name, RouteMatchInterface $route_match) {\n     case 'help.page.field_ui':\n       $output = '';\n       $output .= '<h2>' . t('About') . '</h2>';\n-      $output .= '<p>' . t('The Field UI module provides an administrative user interface (UI) for managing and displaying fields. Fields can be attached to most content entity sub-types. Different field types, widgets, and formatters are provided by the modules installed on your site, and managed by the Field module. For background information and terminology related to fields and entities, see the <a href=\":field\">Field module help page</a>. For more information about the Field UI, see the <a href=\":field_ui_docs\">online documentation for the Field UI module</a>.', [':field' => Url::fromRoute('help.page', ['name' => 'field'])->toString(), ':field_ui_docs' => 'https://www.drupal.org/documentation/modules/field-ui']) . '</p>';\n+      $output .= '<p>' . t('The Field UI module provides an administrative user interface (UI) for managing and displaying fields. Fields can be attached to most content entity sub-types. Different field types, widgets, and formatters are provided by the modules installed on your site, and managed by the Field module. For background information and terminology related to fields and entities, see the <a href=\":field\">Field module help page</a>. For more information about the Field UI, see the <a href=\":field_ui_docs\">online documentation for the Field UI module</a>.', [':field' => Url::fromRoute('help.page', ['name' => 'field'])->toString(), ':field_ui_docs' => 'https://www.drupal.org/docs/8/core/modules/field-ui']) . '</p>';\n       $output .= '<h2>' . t('Uses') . '</h2>';\n       $output .= '<dl>';\n       $output .= '<dt>' . t('Creating a field') . '</dt>';"
                },
                {
                    "sha": "c374d0ae6cbf293889a4cc6889245723e90c8a5c",
                    "filename": "html/core/modules/field_ui/src/Form/FieldConfigEditForm.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Fsrc%2FForm%2FFieldConfigEditForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Fsrc%2FForm%2FFieldConfigEditForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield_ui%2Fsrc%2FForm%2FFieldConfigEditForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -451,7 +451,7 @@ public function save(array $form, FormStateInterface $form_state) {\n       }\n     }\n     catch (\\Exception $e) {\n-      $this->messenger()->addStatus(\n+      $this->messenger()->addError(\n         $this->t(\n           'Attempt to update field %label failed: %message.',\n           ["
                },
                {
                    "sha": "d0f9b8a51fcc09a97e24fac727e24d5c90ada0e6",
                    "filename": "html/core/modules/field_ui/tests/src/Functional/ManageDisplayTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FFunctional%2FManageDisplayTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FFunctional%2FManageDisplayTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FFunctional%2FManageDisplayTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -108,7 +108,7 @@ public function testViewModeCustom() {\n     // For this test, use a formatter setting value that is an integer unlikely\n     // to appear in a rendered node other than as part of the field being tested\n     // (for example, unlikely to be part of the \"Submitted by ... on ...\" line).\n-    $value = 12345;\n+    $value = '12345';\n     $settings = [\n       'type' => $this->type,\n       'field_test' => [['value' => $value]],"
                },
                {
                    "sha": "d5f36e395f1e9026f2b0be807597c1d15d87473a",
                    "filename": "html/core/modules/field_ui/tests/src/FunctionalJavascript/ManageFieldsTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FFunctionalJavascript%2FManageFieldsTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FFunctionalJavascript%2FManageFieldsTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FFunctionalJavascript%2FManageFieldsTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -15,6 +15,7 @@\n  * Tests the Field UI \"Manage Fields\" screens.\n  *\n  * @group field_ui\n+ * @group #slow\n  */\n class ManageFieldsTest extends WebDriverTestBase {\n "
                },
                {
                    "sha": "d9b76b4fe050cd280055e3a1d9657c1d90c02aa8",
                    "filename": "html/core/modules/field_ui/tests/src/Kernel/EntityDisplayTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 3,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FKernel%2FEntityDisplayTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FKernel%2FEntityDisplayTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffield_ui%2Ftests%2Fsrc%2FKernel%2FEntityDisplayTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\field_ui\\Kernel;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Cache\\Cache;\n use Drupal\\Core\\Database\\Database;\n use Drupal\\Core\\Entity\\Display\\EntityDisplayInterface;\n@@ -703,8 +702,8 @@ protected function assertDependencyHelper(bool $assertion, string $type, string\n     $dependencies = !empty($all_dependencies[$type]) ? $all_dependencies[$type] : [];\n     $context = $display instanceof EntityViewDisplayInterface ? 'View' : 'Form';\n     $value = $assertion ? in_array($key, $dependencies) : !in_array($key, $dependencies);\n-    $args = ['@context' => $context, '@id' => $display->id(), '@type' => $type, '@key' => $key];\n-    $message = $assertion ? new FormattableMarkup(\"@context display '@id' depends on @type '@key'.\", $args) : new FormattableMarkup(\"@context display '@id' do not depend on @type '@key'.\", $args);\n+    $display_id = $display->id();\n+    $message = $assertion ? \"$context display '$display_id' depends on $type '$key'.\" : \"$context display '$display_id' do not depend on $type '$key'.\";\n     $this->assertTrue($value, $message);\n   }\n "
                },
                {
                    "sha": "04899c5103212183a7bbab149b954a0c5421b273",
                    "filename": "html/core/modules/file/file.api.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 6,
                    "changes": 17,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ffile.api.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ffile.api.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ffile.api.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -15,7 +15,7 @@\n  * Using \\Drupal\\file\\Element\\ManagedFile field with a defined list of allowed\n  * extensions is best way to provide a file upload field. It will ensure that:\n  * - File names are sanitized by the FileUploadSanitizeNameEvent event.\n- * - Files are validated by hook implementations of hook_file_validate().\n+ * - Files are validated by \\Drupal\\file\\Validation\\FileValidatorInterface().\n  * - Files with insecure extensions will be blocked by default even if they are\n  *   listed. If .txt is an allowed extension such files will be renamed.\n  *\n@@ -27,14 +27,15 @@\n  *   '#type' => 'file',\n  *   '#title' => $this->t('Upload file'),\n  *   '#upload_validators' => [\n- *     'file_validate_extensions' => [\n- *       'png gif jpg',\n+ *     'FileExtension' => [\n+ *        'extensions' => 'png gif jpg',\n+ *       ],\n  *     ],\n  *   ],\n  * ];\n  * @endcode\n  * - Use file_save_upload() to trigger the FileUploadSanitizeNameEvent event and\n- *   hook_file_validate().\n+ *   \\Drupal\\file\\Validation\\FileValidatorInterface::validate().\n  *\n  * Important considerations, regardless of the form element used:\n  * - Always use and validate against a list of allowed extensions.\n@@ -43,7 +44,7 @@\n  *   recommended.\n  *\n  * @see https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html\n- * @see \\hook_file_validate()\n+ * @see \\Drupal\\file\\Validation\\FileValidatorInterface\n  * @see file_save_upload()\n  * @see \\Drupal\\Core\\File\\Event\\FileUploadSanitizeNameEvent\n  * @see \\Drupal\\system\\EventSubscriber\\SecurityFileUploadEventSubscriber\n@@ -71,7 +72,11 @@\n  *   An array of error messages. If there are no problems with the file return\n  *   an empty array.\n  *\n- * @see file_validate()\n+ * @deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. Use the\n+ *    'file.validator' service instead.\n+ *\n+ * @see https://www.drupal.org/node/3363700\n+ * @see \\Drupal\\file\\Validation\\FileValidatorInterface\n  */\n function hook_file_validate(\\Drupal\\file\\FileInterface $file) {\n   $errors = [];"
                },
                {
                    "sha": "a6ca00e44dda63c7153530661107f9067228deb6",
                    "filename": "html/core/modules/file/file.module",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ffile.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ffile.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ffile.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -295,6 +295,8 @@ function file_validate_image_resolution(FileInterface $file, $maximum_dimensions\n         if ($image->scale($width, $height)) {\n           $scaling = TRUE;\n           $image->save();\n+          // Update the file size now that the image has been resized.\n+          $file->setSize($image->getFileSize());\n           if (!empty($width) && !empty($height)) {\n             $message = t('The image was resized to fit within the maximum allowed dimensions of %dimensions pixels. The new dimensions of the resized image are %new_widthx%new_height pixels.',\n               ["
                },
                {
                    "sha": "44f3d310df16797ef9c1cc299da370b4d318c21a",
                    "filename": "html/core/modules/file/src/Plugin/rest/resource/FileUploadResource.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FPlugin%2Frest%2Fresource%2FFileUploadResource.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FPlugin%2Frest%2Fresource%2FFileUploadResource.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FPlugin%2Frest%2Fresource%2FFileUploadResource.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -76,7 +76,7 @@ class FileUploadResource extends ResourceBase {\n   /**\n    * The file system service.\n    *\n-   * @var \\Drupal\\Core\\File\\FileSystem\n+   * @var \\Drupal\\Core\\File\\FileSystemInterface\n    */\n   protected $fileSystem;\n "
                },
                {
                    "sha": "3b4e951846a27f8195526ddf6269aad97e8c1a1a",
                    "filename": "html/core/modules/file/src/Upload/FileUploadHandler.php",
                    "status": "modified",
                    "additions": 31,
                    "deletions": 19,
                    "changes": 50,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FUpload%2FFileUploadHandler.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FUpload%2FFileUploadHandler.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FUpload%2FFileUploadHandler.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -341,31 +341,43 @@ protected function moveUploadedFile(UploadedFileInterface $uploadedFile, string\n    *   The space delimited list of allowed file extensions.\n    */\n   protected function handleExtensionValidation(array &$validators): string {\n-    // Build a list of allowed extensions.\n-    if (isset($validators['FileExtension'])) {\n-      if (!isset($validators['FileExtension']['extensions'])) {\n-        // If 'FileExtension' is set and the list is empty then the caller wants\n-        // to allow any extension. In this case we have to remove the validator\n-        // or else it will reject all extensions.\n-        unset($validators['FileExtension']);\n+    // Handle legacy extension validation.\n+    if (isset($validators['file_validate_extensions'])) {\n+      @trigger_error(\n+        '\\'file_validate_extensions\\' is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. Use the \\'FileExtension\\' constraint instead. See https://www.drupal.org/node/3363700',\n+        E_USER_DEPRECATED\n+      );\n+      // Empty string means all extensions are allowed so we should remove the\n+      // validator.\n+      if (\\is_string($validators['file_validate_extensions']) && empty($validators['file_validate_extensions'])) {\n+        unset($validators['file_validate_extensions']);\n+        return '';\n       }\n+      // The deprecated 'file_validate_extensions' has configuration, so that\n+      // should be used.\n+      $validators['FileExtension']['extensions'] = $validators['file_validate_extensions'][0];\n+      unset($validators['file_validate_extensions']);\n+      return $validators['FileExtension']['extensions'];\n     }\n-    else {\n-      if (!empty($validators['file_validate_extensions'][0])) {\n-        // The deprecated 'file_validate_extensions' has configuration, so that\n-        // should be used.\n-        $validators['FileExtension']['extensions'] = $validators['file_validate_extensions'][0];\n-        @trigger_error('\\'file_validate_extensions\\' is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. Use the \\'FileExtension\\' constraint instead. See https://www.drupal.org/node/3363700', E_USER_DEPRECATED);\n-        return $validators['FileExtension']['extensions'];\n-      }\n \n-      // No validator was provided, so add one using the default list.\n-      // Build a default non-munged safe list for\n-      // \\Drupal\\system\\EventSubscriber\\SecurityFileUploadEventSubscriber::sanitizeName().\n+    // No validator was provided, so add one using the default list.\n+    // Build a default non-munged safe list for\n+    // \\Drupal\\system\\EventSubscriber\\SecurityFileUploadEventSubscriber::sanitizeName().\n+    if (!isset($validators['FileExtension'])) {\n       $validators['FileExtension'] = ['extensions' => self::DEFAULT_EXTENSIONS];\n+      return self::DEFAULT_EXTENSIONS;\n+    }\n \n+    // Check if we want to allow all extensions.\n+    if (!isset($validators['FileExtension']['extensions'])) {\n+      // If 'FileExtension' is set and the list is empty then the caller wants\n+      // to allow any extension. In this case we have to remove the validator\n+      // or else it will reject all extensions.\n+      unset($validators['FileExtension']);\n+      return '';\n     }\n-    return $validators['FileExtension']['extensions'] ?? '';\n+\n+    return $validators['FileExtension']['extensions'];\n   }\n \n   /**"
                },
                {
                    "sha": "4e517e531ad88baee5065c6c0992bbc22c7fb801",
                    "filename": "html/core/modules/file/src/Validation/FileValidator.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FValidation%2FFileValidator.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FValidation%2FFileValidator.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Fsrc%2FValidation%2FFileValidator.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -46,6 +46,9 @@ public function validate(FileInterface $file, array $validators): ConstraintViol\n     foreach ($validators as $validator => $options) {\n       if (function_exists($validator)) {\n         @trigger_error('Support for file validation function ' . $validator . '() is deprecated in drupal:10.2.0 and will be removed in drupal:11.0.0. Use Symfony Constraints instead. See https://www.drupal.org/node/3363700', E_USER_DEPRECATED);\n+        if (!is_array($options)) {\n+          $options = [$options];\n+        }\n         array_unshift($options, $file);\n         // Call the validation function.\n         // Options are a list of function args."
                },
                {
                    "sha": "e70db1ebd65173b2480a6c076f5ff8880321b423",
                    "filename": "html/core/modules/file/tests/file_test/file_test.services.yml",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Ffile_test%2Ffile_test.services.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Ffile_test%2Ffile_test.services.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Ffile_test%2Ffile_test.services.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -15,3 +15,8 @@ services:\n     class: Drupal\\file_test\\StreamWrapper\\DummyExternalReadOnlyWrapper\n     tags:\n       - { name: stream_wrapper, scheme: dummy-external-readonly }\n+  stream_wrapper.dummy_multiple:\n+    class: Drupal\\file_test\\StreamWrapper\\DummyMultipleStreamWrapper\n+    tags:\n+      - { name: stream_wrapper, scheme: dummy1 }\n+      - { name: stream_wrapper, scheme: dummy2 }"
                },
                {
                    "sha": "76ac49d97a5fe302e82f27eeacd65bf777134e29",
                    "filename": "html/core/modules/file/tests/file_test/src/StreamWrapper/DummyMultipleStreamWrapper.php",
                    "status": "added",
                    "additions": 10,
                    "deletions": 0,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Ffile_test%2Fsrc%2FStreamWrapper%2FDummyMultipleStreamWrapper.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Ffile_test%2Fsrc%2FStreamWrapper%2FDummyMultipleStreamWrapper.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Ffile_test%2Fsrc%2FStreamWrapper%2FDummyMultipleStreamWrapper.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,10 @@\n+<?php\n+\n+namespace Drupal\\file_test\\StreamWrapper;\n+\n+/**\n+ * Helper class for testing the stream wrapper registry.\n+ *\n+ * Dummy stream wrapper implementation (dummy1://, dummy2://).\n+ */\n+class DummyMultipleStreamWrapper extends DummyStreamWrapper {}"
                },
                {
                    "sha": "a533a90ec68d3dce69b620f4d32a3a03b78e5f29",
                    "filename": "html/core/modules/file/tests/src/Functional/FileOnTranslatedEntityTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FFileOnTranslatedEntityTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FFileOnTranslatedEntityTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FFileOnTranslatedEntityTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -72,7 +72,7 @@ protected function setUp(): void {\n \n     // Enable translation for \"Basic page\" nodes.\n     static::enableContentTranslation('node', 'page');\n-    static::setFieldTranslatable('node', 'page', $this->fieldName, 1);\n+    static::setFieldTranslatable('node', 'page', $this->fieldName, TRUE);\n   }\n \n   /**"
                },
                {
                    "sha": "9e056051247cb969b2fb4f2ca8210e9d6102f90d",
                    "filename": "html/core/modules/file/tests/src/Functional/Formatter/FileMediaFormatterTestBase.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FFormatter%2FFileMediaFormatterTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FFormatter%2FFileMediaFormatterTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FFormatter%2FFileMediaFormatterTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -84,7 +84,7 @@ protected function createMediaField($formatter, $file_extensions, array $formatt\n    *     - The number of expected HTML tags.\n    *     - An array of settings for the field formatter.\n    */\n-  public function dataProvider() {\n+  public static function dataProvider(): array {\n     return [\n       [2, []],\n       [1, ['multiple_file_display_type' => 'sources']],"
                },
                {
                    "sha": "2ebf180392b6376b64e9d5f6e340b3a18e48d01b",
                    "filename": "html/core/modules/file/tests/src/Functional/PrivateFileOnTranslatedEntityTest.php",
                    "status": "modified",
                    "additions": 31,
                    "deletions": 14,
                    "changes": 45,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FPrivateFileOnTranslatedEntityTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FPrivateFileOnTranslatedEntityTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctional%2FPrivateFileOnTranslatedEntityTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -64,7 +64,7 @@ protected function setUp(): void {\n \n     // Enable translation for \"Basic page\" nodes.\n     static::enableContentTranslation('node', 'page');\n-    static::setFieldTranslatable('node', 'page', $this->fieldName, 1);\n+    static::setFieldTranslatable('node', 'page', $this->fieldName, TRUE);\n   }\n \n   /**\n@@ -79,11 +79,15 @@ public function testPrivateLanguageFile() {\n     $default_language_node = $this->drupalCreateNode(['type' => 'page']);\n \n     // Edit the node to upload a file.\n-    $edit = [];\n-    $name = 'files[' . $this->fieldName . '_0]';\n-    $edit[$name] = \\Drupal::service('file_system')->realpath($this->drupalGetTestFiles('text')[0]->uri);\n-    $this->drupalGet('node/' . $default_language_node->id() . '/edit');\n-    $this->submitForm($edit, 'Save');\n+    $file = File::create(\n+      [\n+        'uri' => $this->drupalGetTestFiles('text')[0]->uri,\n+      ]\n+    );\n+    $file->save();\n+\n+    $default_language_node->set($this->fieldName, $file->id());\n+    $default_language_node->save();\n     $last_fid_prior = $this->getLastFileId();\n \n     // Languages are cached on many levels, and we need to clear those caches.\n@@ -97,18 +101,31 @@ public function testPrivateLanguageFile() {\n     $this->assertSession()->statusCodeEquals(200);\n \n     // Translate the node into French.\n-    $this->drupalGet('node/' . $default_language_node->id() . '/translations');\n-    $this->clickLink('Add');\n+    $node->addTranslation(\n+      'fr', [\n+        'title' => $this->randomString(),\n+      ]\n+    );\n+    $node->save();\n \n     // Remove the existing file.\n-    $this->submitForm([], 'Remove');\n+    $existing_file = $node->{$this->fieldName}->entity;\n+    if ($existing_file) {\n+      $node->set($this->fieldName, NULL);\n+      $existing_file->delete();\n+      $node->save();\n+    }\n \n     // Upload a different file.\n-    $edit = [];\n-    $edit['title[0][value]'] = $this->randomMachineName();\n-    $name = 'files[' . $this->fieldName . '_0]';\n-    $edit[$name] = \\Drupal::service('file_system')->realpath($this->drupalGetTestFiles('text')[1]->uri);\n-    $this->submitForm($edit, 'Save (this translation)');\n+    $default_language_node = $node->getTranslation('fr');\n+    $file = File::create(\n+      [\n+        'uri' => $this->drupalGetTestFiles('text')[1]->uri,\n+      ]\n+    );\n+    $file->save();\n+    $default_language_node->set($this->fieldName, $file->id());\n+    $default_language_node->save();\n     $last_fid = $this->getLastFileId();\n \n     // Verify the translation was created."
                },
                {
                    "sha": "8089031020609f8ca086c8064f7f0b280c904ea3",
                    "filename": "html/core/modules/file/tests/src/FunctionalJavascript/FileFieldWidgetClaroThemeTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctionalJavascript%2FFileFieldWidgetClaroThemeTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctionalJavascript%2FFileFieldWidgetClaroThemeTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FFunctionalJavascript%2FFileFieldWidgetClaroThemeTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -15,6 +15,7 @@\n  * @see _claro_preprocess_file_and_image_widget()\n  *\n  * @group file\n+ * @group #slow\n  */\n class FileFieldWidgetClaroThemeTest extends FileFieldWidgetTest {\n "
                },
                {
                    "sha": "2ee17ddb73d46c5283166921539a9261240e63ef",
                    "filename": "html/core/modules/file/tests/src/Kernel/FileManagedUnitTestBase.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FFileManagedUnitTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FFileManagedUnitTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FFileManagedUnitTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -57,16 +57,16 @@ public function assertFileHooksCalled($expected) {\n     // Determine if there were any expected that were not called.\n     $uncalled = array_diff($expected, $actual);\n     if (count($uncalled)) {\n-      $this->assertTrue(FALSE, new FormattableMarkup('Expected hooks %expected to be called but %uncalled was not called.', ['%expected' => implode(', ', $expected), '%uncalled' => implode(', ', $uncalled)]));\n+      $this->assertTrue(FALSE, sprintf('Expected hooks %s to be called but %s was not called.', implode(', ', $expected), implode(', ', $uncalled)));\n     }\n     else {\n-      $this->assertTrue(TRUE, new FormattableMarkup('All the expected hooks were called: %expected', ['%expected' => empty($expected) ? '(none)' : implode(', ', $expected)]));\n+      $this->assertTrue(TRUE, sprintf('All the expected hooks were called: %s', empty($expected) ? '(none)' : implode(', ', $expected)));\n     }\n \n     // Determine if there were any unexpected calls.\n     $unexpected = array_diff($actual, $expected);\n     if (count($unexpected)) {\n-      $this->assertTrue(FALSE, new FormattableMarkup('Unexpected hooks were called: %unexpected.', ['%unexpected' => empty($unexpected) ? '(none)' : implode(', ', $unexpected)]));\n+      $this->assertTrue(FALSE, sprintf('Unexpected hooks were called: %s.', empty($unexpected) ? '(none)' : implode(', ', $unexpected)));\n     }\n     else {\n       $this->assertTrue(TRUE, 'No unexpected hooks were called.');"
                },
                {
                    "sha": "d512a0f74272fdf6c0d4426b973b6185b1e4f4c5",
                    "filename": "html/core/modules/file/tests/src/Kernel/FileSaveUploadTest.php",
                    "status": "added",
                    "additions": 70,
                    "deletions": 0,
                    "changes": 70,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FFileSaveUploadTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FFileSaveUploadTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FFileSaveUploadTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,70 @@\n+<?php\n+\n+namespace Drupal\\Tests\\file\\Kernel;\n+\n+use Drupal\\Core\\Messenger\\MessengerInterface;\n+use Drupal\\KernelTests\\KernelTestBase;\n+use Symfony\\Component\\HttpFoundation\\File\\UploadedFile;\n+use Symfony\\Component\\HttpFoundation\\Request;\n+use Symfony\\Component\\HttpFoundation\\RequestStack;\n+\n+/**\n+ * Tests file_save_upload().\n+ *\n+ * @group file\n+ * @group legacy\n+ */\n+class FileSaveUploadTest extends KernelTestBase {\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected static $modules = [\n+    'file',\n+    'file_test',\n+    'file_validator_test',\n+    'user',\n+  ];\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected function setUp(): void {\n+    \\file_put_contents('test.bbb', 'test');\n+\n+    parent::setUp();\n+    $request = new Request();\n+    $request->files->set('files', [\n+      'file' => new UploadedFile(\n+        path: 'test.bbb',\n+        originalName: 'test.bbb',\n+        mimeType: 'text/plain',\n+        error: \\UPLOAD_ERR_OK,\n+        test: TRUE\n+      ),\n+    ]);\n+\n+    $requestStack = new RequestStack();\n+    $requestStack->push($request);\n+\n+    $this->container->set('request_stack', $requestStack);\n+  }\n+\n+  /**\n+   * Tests file_save_upload() with empty extensions.\n+   */\n+  public function testFileSaveUploadEmptyExtensions(): void {\n+    // Allow all extensions.\n+    $validators = ['file_validate_extensions' => ''];\n+    $this->expectDeprecation('\\'file_validate_extensions\\' is deprecated in drupal:10.2.0 and is removed from drupal:11.0.0. Use the \\'FileExtension\\' constraint instead. See https://www.drupal.org/node/3363700');\n+    $files = file_save_upload('file', $validators);\n+    $this->assertCount(1, $files);\n+    $file = $files[0];\n+    // @todo work out why move_uploaded_file() is failing.\n+    $this->assertFalse($file);\n+    $messages = \\Drupal::messenger()->messagesByType(MessengerInterface::TYPE_ERROR);\n+    $this->assertNotEmpty($messages);\n+    $this->assertEquals('File upload error. Could not move uploaded file.', $messages[0]);\n+  }\n+\n+}"
                },
                {
                    "sha": "be2ca42ce3f57c7aea2ed07143f27749a748e80a",
                    "filename": "html/core/modules/file/tests/src/Kernel/LegacyValidatorTest.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FLegacyValidatorTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FLegacyValidatorTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FLegacyValidatorTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -37,6 +37,7 @@ protected function setUp(): void {\n     /** @var \\Drupal\\Core\\File\\FileSystemInterface $file_system */\n     $file_system = \\Drupal::service('file_system');\n     $this->image->setFilename($file_system->basename($this->image->getFileUri()));\n+    $this->image->setSize(@filesize($this->image->getFileUri()));\n \n     $this->nonImage = File::create();\n     $this->nonImage->setFileUri('core/assets/vendor/jquery/jquery.min.js');\n@@ -191,6 +192,8 @@ public function testFileValidateImageResolution() {\n       // Verify that the image was scaled to the correct width and height.\n       $this->assertLessThanOrEqual(10, $image->getWidth());\n       $this->assertLessThanOrEqual(5, $image->getHeight());\n+      // Verify that the file size has been updated after resizing.\n+      $this->assertEquals($this->image->getSize(), $image->getFileSize());\n \n       // Once again, now with negative width and height to force an error.\n       copy('core/misc/druplicon.png', 'temporary://druplicon.png');"
                },
                {
                    "sha": "35c7e526bd754278c9dafac8fb58199e8b8fb670",
                    "filename": "html/core/modules/file/tests/src/Kernel/MoveTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 2,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FMoveTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FMoveTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffile%2Ftests%2Fsrc%2FKernel%2FMoveTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\file\\Kernel;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Entity\\EntityStorageException;\n use Drupal\\Core\\Entity\\EntityTypeManager;\n use Drupal\\Core\\File\\Exception\\FileExistsException;\n@@ -57,7 +56,7 @@ public function testNormal() {\n     $this->assertFileHooksCalled(['move', 'load', 'update']);\n \n     // Make sure we got the same file back.\n-    $this->assertEquals($source->id(), $result->id(), new FormattableMarkup(\"Source file id's' %fid is unchanged after move.\", ['%fid' => $source->id()]));\n+    $this->assertEquals($source->id(), $result->id(), \"Source file ID {$source->id()} should be unchanged after move.\");\n \n     // Reload the file from the database and check that the changes were\n     // actually saved."
                },
                {
                    "sha": "cfc8cdb5038d7c59182d9766eb863c38eea0ecdc",
                    "filename": "html/core/modules/filter/tests/src/Kernel/FilterKernelTest.php",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 17,
                    "changes": 33,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffilter%2Ftests%2Fsrc%2FKernel%2FFilterKernelTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ffilter%2Ftests%2Fsrc%2FKernel%2FFilterKernelTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ffilter%2Ftests%2Fsrc%2FKernel%2FFilterKernelTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\filter\\Kernel;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Component\\Utility\\Html;\n use Drupal\\Core\\Language\\Language;\n use Drupal\\Core\\Render\\RenderContext;\n@@ -940,18 +939,18 @@ public function assertFilteredString(FilterInterface $filter, array $tests): voi\n       $result = $filter->process($source, $filter)->getProcessedText();\n       foreach ($tasks as $value => $is_expected) {\n         if ($is_expected) {\n-          $this->assertStringContainsString($value, $result, new FormattableMarkup('@source: @value found. Filtered result: @result.', [\n-            '@source' => var_export($source, TRUE),\n-            '@value' => var_export($value, TRUE),\n-            '@result' => var_export($result, TRUE),\n-          ]));\n+          $this->assertStringContainsString($value, $result, sprintf('%s: %s found. Filtered result: %s.',\n+            var_export($source, TRUE),\n+            var_export($value, TRUE),\n+            var_export($result, TRUE),\n+          ));\n         }\n         else {\n-          $this->assertStringNotContainsString($value, $result, new FormattableMarkup('@source: @value not found. Filtered result: @result.', [\n-            '@source' => var_export($source, TRUE),\n-            '@value' => var_export($value, TRUE),\n-            '@result' => var_export($result, TRUE),\n-          ]));\n+          $this->assertStringNotContainsString($value, $result, sprintf('%s: %s not found. Filtered result: %s.',\n+            var_export($source, TRUE),\n+            var_export($value, TRUE),\n+            var_export($result, TRUE),\n+          ));\n         }\n       }\n     }\n@@ -1124,44 +1123,44 @@ public function testHtmlCorrectorFilter() {\n body {color:red}\n /*]]>*/\n </style></p>';\n-    $this->assertEquals($html, Html::normalize($html), new FormattableMarkup('HTML corrector -- Existing cdata section @pattern_name properly escaped', ['@pattern_name' => '/*<![CDATA[*/']));\n+    $this->assertEquals($html, Html::normalize($html), 'HTML corrector -- Existing cdata section /*<![CDATA[*/ properly escaped');\n \n     $html = '<p><style>\n /*<![CDATA[*/\n   /* Styling */\n   body {color:red}\n /*]]>*/\n </style></p>';\n-    $this->assertEquals($html, Html::normalize($html), new FormattableMarkup('HTML corrector -- Existing cdata section @pattern_name properly escaped', ['@pattern_name' => '<!--/*--><![CDATA[/* ><!--*/']));\n+    $this->assertEquals($html, Html::normalize($html), 'HTML corrector -- Existing cdata section <!--/*--><![CDATA[/* ><!--*/ properly escaped');\n \n     $html = '<p><script>\n //<![CDATA[\n   alert(\"test\");\n //]]>\n </script></p>';\n-    $this->assertEquals($html, Html::normalize($html), new FormattableMarkup('HTML corrector -- Existing cdata section @pattern_name properly escaped', ['@pattern_name' => '<!--//--><![CDATA[// ><!--']));\n+    $this->assertEquals($html, Html::normalize($html), 'HTML corrector -- Existing cdata section <!--//--><![CDATA[// ><!-- properly escaped');\n \n     $html = '<p><script>\n // <![CDATA[\n   alert(\"test\");\n //]]>\n </script></p>';\n-    $this->assertEquals($html, Html::normalize($html), new FormattableMarkup('HTML corrector -- Existing cdata section @pattern_name properly escaped', ['@pattern_name' => '// <![CDATA[']));\n+    $this->assertEquals($html, Html::normalize($html), 'HTML corrector -- Existing cdata section // <![CDATA[ properly escaped');\n \n     $html = '<p><script>\n // <![CDATA[![CDATA[![CDATA[\n   alert(\"test\");\n //]]]]]]>\n </script></p>';\n-    $this->assertEquals($html, Html::normalize($html), new FormattableMarkup('HTML corrector -- Existing cdata section @pattern_name properly escaped', ['@pattern_name' => '// <![CDATA[![CDATA[![CDATA[']));\n+    $this->assertEquals($html, Html::normalize($html), 'HTML corrector -- Existing cdata section // <![CDATA[![CDATA[![CDATA[ properly escaped');\n \n     // Test calling Html::normalize() twice.\n     $html = '<p><script>\n // <![CDATA[![CDATA[![CDATA[\n   alert(\"test\");\n //]]]]]]>\n </script></p>';\n-    $this->assertEquals($html, Html::normalize(Html::normalize($html)), new FormattableMarkup('HTML corrector -- Existing cdata section @pattern_name properly escaped', ['@pattern_name' => '// <![CDATA[![CDATA[![CDATA[']));\n+    $this->assertEquals($html, Html::normalize(Html::normalize($html)), 'HTML corrector -- Existing cdata section // <![CDATA[![CDATA[![CDATA[ properly escaped');\n   }\n \n   /**"
                },
                {
                    "sha": "798acbb473cf3f0da53fd28897f36a9418c16666",
                    "filename": "html/core/modules/forum/forum.routing.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Fforum.routing.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Fforum.routing.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fforum%2Fforum.routing.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -29,6 +29,7 @@ forum.page:\n     _title_callback: '\\Drupal\\taxonomy\\Controller\\TaxonomyController::termTitle'\n   requirements:\n     _permission: 'access content'\n+    _entity_access: 'taxonomy_term.view'\n \n forum.add_container:\n   path: '/admin/structure/forum/add/container'"
                },
                {
                    "sha": "79b91b1db39f0226bc30e741b8b35dc5f08ec38b",
                    "filename": "html/core/modules/forum/src/ForumManager.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Fsrc%2FForumManager.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Fsrc%2FForumManager.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fforum%2Fsrc%2FForumManager.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -415,6 +415,9 @@ public function getChildren($vid, $tid) {\n     $forums = [];\n     $_forums = $this->entityTypeManager->getStorage('taxonomy_term')->loadTree($vid, $tid, NULL, TRUE);\n     foreach ($_forums as $forum) {\n+      if (!$forum->access('view')) {\n+        continue;\n+      }\n       // Merge in the topic and post counters.\n       if (($count = $this->getForumStatistics($forum->id()))) {\n         $forum->num_topics = $count->topic_count;"
                },
                {
                    "sha": "944b37241ce045badc048b09917af5879ce4278d",
                    "filename": "html/core/modules/forum/tests/src/Functional/ForumTermAccessTest.php",
                    "status": "added",
                    "additions": 93,
                    "deletions": 0,
                    "changes": 93,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FFunctional%2FForumTermAccessTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FFunctional%2FForumTermAccessTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FFunctional%2FForumTermAccessTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,93 @@\n+<?php\n+\n+namespace Drupal\\Tests\\forum\\Functional;\n+\n+use Drupal\\Tests\\BrowserTestBase;\n+use Drupal\\taxonomy\\Entity\\Term;\n+\n+/**\n+ * Tests forum taxonomy terms for access.\n+ *\n+ * @group forum\n+ */\n+class ForumTermAccessTest extends BrowserTestBase {\n+\n+  /**\n+   * Modules to enable.\n+   *\n+   * @var array\n+   */\n+  protected static $modules = [\n+    'forum',\n+    'taxonomy',\n+  ];\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected $defaultTheme = 'stark';\n+\n+  /**\n+   * Creates some users and creates a public forum and an unpublished forum.\n+   *\n+   * Adds both published and unpublished forums.\n+   * Tests to ensure publish/unpublished forums access is respected.\n+   */\n+  public function testForumTermAccess(): void {\n+    $assert_session = $this->assertSession();\n+    // Create some users.\n+    $public_user = $this->drupalCreateUser(['access content']);\n+    $admin_user = $this->drupalCreateUser([\n+      'access administration pages',\n+      'administer forums',\n+      'administer taxonomy',\n+      'access taxonomy overview',\n+    ]);\n+\n+    $this->drupalLogin($admin_user);\n+    // The vocabulary for forums.\n+    $vid = $this->config('forum.settings')->get('vocabulary');\n+    // Create an unpublished forum.\n+    $unpublished_forum_name = $this->randomMachineName(8);\n+    $unpublished_forum = Term::create([\n+      'vid' => $vid,\n+      'name' => $unpublished_forum_name,\n+      'status' => 0,\n+    ]);\n+    $unpublished_forum->save();\n+\n+    // Create a new published forum.\n+    $published_forum_name = $this->randomMachineName(8);\n+    $published_forum = Term::create([\n+      'vid' => $vid,\n+      'name' => $published_forum_name,\n+      'status' => 1,\n+    ]);\n+    $published_forum->save();\n+\n+    // Test for admin user.\n+    // Go to the Forum index page.\n+    $this->drupalGet('forum');\n+    // The unpublished forum should be in this page for an admin user.\n+    $assert_session->pageTextContains($unpublished_forum_name);\n+    // Go to the unpublished forum page.\n+    $this->drupalGet('forum/' . $unpublished_forum->id());\n+    $assert_session->statusCodeEquals(200);\n+    $assert_session->pageTextContains($unpublished_forum_name);\n+\n+    // Test for public user.\n+    $this->drupalLogin($public_user);\n+    // Go to the Forum index page.\n+    $this->drupalGet('forum');\n+    // The published forum should be in this page.\n+    $assert_session->pageTextContains($published_forum_name);\n+    // The unpublished forum should not be in this page.\n+    $assert_session->pageTextNotContains($unpublished_forum_name);\n+    // Go to the unpublished forum page.\n+    $this->drupalGet('forum/' . $unpublished_forum->id());\n+    // Public should not be able to access the unpublished forum.\n+    $assert_session->statusCodeEquals(403);\n+    $assert_session->pageTextNotContains($unpublished_forum_name);\n+  }\n+\n+}"
                },
                {
                    "sha": "928bfd8a45e1aa8826a482971e11613297f288e0",
                    "filename": "html/core/modules/forum/tests/src/Unit/Breadcrumb/ForumListingBreadcrumbBuilderTest.php",
                    "status": "modified",
                    "additions": 20,
                    "deletions": 33,
                    "changes": 53,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FUnit%2FBreadcrumb%2FForumListingBreadcrumbBuilderTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FUnit%2FBreadcrumb%2FForumListingBreadcrumbBuilderTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FUnit%2FBreadcrumb%2FForumListingBreadcrumbBuilderTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -8,6 +8,7 @@\n use Drupal\\Core\\Entity\\EntityTypeManagerInterface;\n use Drupal\\Core\\Link;\n use Drupal\\forum\\Breadcrumb\\ForumListingBreadcrumbBuilder;\n+use Drupal\\taxonomy\\Entity\\Term;\n use Drupal\\taxonomy\\TermStorageInterface;\n use Drupal\\Tests\\UnitTestCase;\n use Symfony\\Component\\DependencyInjection\\Container;\n@@ -46,12 +47,21 @@ protected function setUp(): void {\n    * @dataProvider providerTestApplies\n    * @covers ::applies\n    */\n-  public function testApplies($expected, $route_name = NULL, $parameter_map = []) {\n+  public function testApplies(bool $expected, ?string $route_name = NULL, array $parameter_map = []): void {\n     // Make some test doubles.\n     $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);\n     $config_factory = $this->getConfigFactoryStub([]);\n     $forum_manager = $this->createMock('Drupal\\forum\\ForumManagerInterface');\n     $translation_manager = $this->createMock('Drupal\\Core\\StringTranslation\\TranslationInterface');\n+    $map = [];\n+    if ($parameter_map) {\n+      foreach ($parameter_map as $parameter) {\n+        $map[] = [\n+          $parameter[0],\n+          $parameter[1] === TRUE ? $this->getMockBuilder(Term::class)->disableOriginalConstructor()->getMock() : $parameter[1],\n+        ];\n+      }\n+    }\n \n     // Make an object to test.\n     $builder = new ForumListingBreadcrumbBuilder($entity_type_manager, $config_factory, $forum_manager, $translation_manager);\n@@ -62,48 +72,25 @@ public function testApplies($expected, $route_name = NULL, $parameter_map = [])\n       ->willReturn($route_name);\n     $route_match->expects($this->any())\n       ->method('getParameter')\n-      ->willReturnMap($parameter_map);\n+      ->willReturnMap($map);\n \n     $this->assertEquals($expected, $builder->applies($route_match));\n   }\n \n   /**\n    * Provides test data for testApplies().\n    *\n-   * @return array\n-   *   Array of datasets for testApplies(). Structured as such:\n+   * @return \\Generator\n+   *   Datasets for testApplies(). Structured as such:\n    *   - ForumListBreadcrumbBuilder::applies() expected result.\n    *   - ForumListBreadcrumbBuilder::applies() $attributes input array.\n    */\n-  public function providerTestApplies() {\n-    // Send a Node mock, because NodeInterface cannot be mocked.\n-    $mock_term = $this->getMockBuilder('Drupal\\taxonomy\\Entity\\Term')\n-      ->disableOriginalConstructor()\n-      ->getMock();\n-\n-    return [\n-      [\n-        FALSE,\n-      ],\n-      [\n-        FALSE,\n-        'NOT.forum.page',\n-      ],\n-      [\n-        FALSE,\n-        'forum.page',\n-      ],\n-      [\n-        TRUE,\n-        'forum.page',\n-        [['taxonomy_term', 'anything']],\n-      ],\n-      [\n-        TRUE,\n-        'forum.page',\n-        [['taxonomy_term', $mock_term]],\n-      ],\n-    ];\n+  public static function providerTestApplies(): \\Generator {\n+    yield [FALSE];\n+    yield [FALSE, 'NOT.forum.page'];\n+    yield [FALSE, 'forum.page'];\n+    yield [TRUE, 'forum.page', [['taxonomy_term', 'anything']]];\n+    yield [TRUE, 'forum.page', [['taxonomy_term', TRUE]]];\n   }\n \n   /**"
                },
                {
                    "sha": "959c616703b6a8b0064d727999d69692ae0ecb1e",
                    "filename": "html/core/modules/forum/tests/src/Unit/Breadcrumb/ForumNodeBreadcrumbBuilderTest.php",
                    "status": "modified",
                    "additions": 20,
                    "deletions": 33,
                    "changes": 53,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FUnit%2FBreadcrumb%2FForumNodeBreadcrumbBuilderTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FUnit%2FBreadcrumb%2FForumNodeBreadcrumbBuilderTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fforum%2Ftests%2Fsrc%2FUnit%2FBreadcrumb%2FForumNodeBreadcrumbBuilderTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -8,6 +8,7 @@\n use Drupal\\Core\\Entity\\EntityTypeManagerInterface;\n use Drupal\\Core\\Link;\n use Drupal\\forum\\Breadcrumb\\ForumNodeBreadcrumbBuilder;\n+use Drupal\\node\\Entity\\Node;\n use Drupal\\taxonomy\\TermStorageInterface;\n use Drupal\\Tests\\UnitTestCase;\n use Symfony\\Component\\DependencyInjection\\Container;\n@@ -46,10 +47,19 @@ protected function setUp(): void {\n    * @dataProvider providerTestApplies\n    * @covers ::applies\n    */\n-  public function testApplies($expected, $route_name = NULL, $parameter_map = []) {\n+  public function testApplies(bool $expected, ?string $route_name = NULL, array $parameter_map = []): void {\n     // Make some test doubles.\n     $entity_type_manager = $this->createMock(EntityTypeManagerInterface::class);\n     $config_factory = $this->getConfigFactoryStub([]);\n+    $map = [];\n+    if ($parameter_map) {\n+      foreach ($parameter_map as $parameter) {\n+        $map[] = [\n+          $parameter[0],\n+          $parameter[1] === TRUE ? $this->getMockBuilder(Node::class)->disableOriginalConstructor()->getMock() : $parameter[1],\n+        ];\n+      }\n+    }\n \n     $forum_manager = $this->createMock('Drupal\\forum\\ForumManagerInterface');\n     $forum_manager->expects($this->any())\n@@ -67,7 +77,7 @@ public function testApplies($expected, $route_name = NULL, $parameter_map = [])\n       ->willReturn($route_name);\n     $route_match->expects($this->any())\n       ->method('getParameter')\n-      ->willReturnMap($parameter_map);\n+      ->willReturnMap($map);\n \n     $this->assertEquals($expected, $builder->applies($route_match));\n   }\n@@ -77,40 +87,17 @@ public function testApplies($expected, $route_name = NULL, $parameter_map = [])\n    *\n    * Note that this test is incomplete, because we can't mock NodeInterface.\n    *\n-   * @return array\n-   *   Array of datasets for testApplies(). Structured as such:\n+   * @return \\Generator\n+   *   Datasets for testApplies(). Structured as such:\n    *   - ForumNodeBreadcrumbBuilder::applies() expected result.\n    *   - ForumNodeBreadcrumbBuilder::applies() $attributes input array.\n    */\n-  public function providerTestApplies() {\n-    // Send a Node mock, because NodeInterface cannot be mocked.\n-    $mock_node = $this->getMockBuilder('Drupal\\node\\Entity\\Node')\n-      ->disableOriginalConstructor()\n-      ->getMock();\n-\n-    return [\n-      [\n-        FALSE,\n-      ],\n-      [\n-        FALSE,\n-        'NOT.entity.node.canonical',\n-      ],\n-      [\n-        FALSE,\n-        'entity.node.canonical',\n-      ],\n-      [\n-        FALSE,\n-        'entity.node.canonical',\n-        [['node', NULL]],\n-      ],\n-      [\n-        TRUE,\n-        'entity.node.canonical',\n-        [['node', $mock_node]],\n-      ],\n-    ];\n+  public static function providerTestApplies(): \\Generator {\n+    yield [FALSE];\n+    yield [FALSE, 'NOT.entity.node.canonical'];\n+    yield [FALSE, 'entity.node.canonical'];\n+    yield [FALSE, 'entity.node.canonical', [['node', NULL]]];\n+    yield [TRUE, 'entity.node.canonical', [['node', TRUE]]];\n   }\n \n   /**"
                },
                {
                    "sha": "b2ea67a00b08eccc5048c6a3ca3df63ebcf06c5d",
                    "filename": "html/core/modules/image/image.admin.inc",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 1,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fimage.admin.inc",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fimage.admin.inc",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Fimage.admin.inc?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -58,6 +58,11 @@ function template_preprocess_image_style_preview(&$variables) {\n     $style->createDerivative($original_path, $preview_file);\n   }\n   $preview_image = $image_factory->get($preview_file);\n+\n+  // Generate an itok.\n+  $defaultScheme = \\Drupal::config('system.file')->get('default_scheme');\n+  $variables['itok'] = $style->getPathToken($defaultScheme . '://' . $original_path);\n+\n   $variables['derivative'] = [\n     'url' => $file_url_generator->generateString($preview_file),\n     'width' => $preview_image->getWidth(),\n@@ -89,7 +94,7 @@ function template_preprocess_image_style_preview(&$variables) {\n   // to prevent caching of images on the client side.\n   $variables['derivative']['rendered'] = [\n     '#theme' => 'image',\n-    '#uri' => $variables['derivative']['url'] . '?cache_bypass=' . $variables['cache_bypass'],\n+    '#uri' => $variables['derivative']['url'] . '?cache_bypass=' . $variables['cache_bypass'] . '&itok=' . $variables['itok'],\n     '#alt' => t('Sample modified image'),\n     '#title' => '',\n     '#attributes' => ["
                },
                {
                    "sha": "0d8bd4b1f265a84c3e2e170787c2343e8aef8f1d",
                    "filename": "html/core/modules/image/image.module",
                    "status": "modified",
                    "additions": 27,
                    "deletions": 0,
                    "changes": 27,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fimage.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fimage.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Fimage.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -13,6 +13,7 @@ use Drupal\\Core\\Url;\n use Drupal\\field\\FieldConfigInterface;\n use Drupal\\field\\FieldStorageConfigInterface;\n use Drupal\\file\\FileInterface;\n+use Drupal\\image\\Controller\\ImageStyleDownloadController;\n use Drupal\\image\\Entity\\ImageStyle;\n \n /**\n@@ -151,6 +152,18 @@ function image_file_download($uri) {\n     // Check that the file exists and is an image.\n     $image = \\Drupal::service('image.factory')->get($uri);\n     if ($image->isValid()) {\n+      // If the image style converted the extension, it has been added to the\n+      // original file, resulting in filenames like image.png.jpeg. So to find\n+      // the actual source image, we remove the extension and check if that\n+      // image exists.\n+      if (!file_exists($original_uri)) {\n+        $converted_original_uri = ImageStyleDownloadController::getUriWithoutConvertedExtension($original_uri);\n+        if ($converted_original_uri !== $original_uri && file_exists($converted_original_uri)) {\n+          // The converted file does exist, use it as the source.\n+          $original_uri = $converted_original_uri;\n+        }\n+      }\n+\n       // Check the permissions of the original to grant access to this image.\n       $headers = \\Drupal::moduleHandler()->invokeAll('file_download', [$original_uri]);\n       // Confirm there's at least one module granting access and none denying access.\n@@ -167,6 +180,20 @@ function image_file_download($uri) {\n     }\n     return -1;\n   }\n+\n+  // If it is the sample image we need to grant access.\n+  $samplePath = \\Drupal::config('image.settings')->get('preview_image');\n+  if ($path === $samplePath) {\n+    $image = \\Drupal::service('image.factory')->get($samplePath);\n+    return [\n+      // Send headers describing the image's size, and MIME-type.\n+      'Content-Type' => $image->getMimeType(),\n+      'Content-Length' => $image->getFileSize(),\n+      // By not explicitly setting them here, this uses normal Drupal\n+      // Expires, Cache-Control and ETag headers to prevent proxy or\n+      // browser caching of private images.\n+    ];\n+  }\n }\n \n /**"
                },
                {
                    "sha": "427d51ac05de9cc4c12ea31770f4901af1dfe415",
                    "filename": "html/core/modules/image/src/Controller/ImageStyleDownloadController.php",
                    "status": "modified",
                    "additions": 51,
                    "deletions": 16,
                    "changes": 67,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fsrc%2FController%2FImageStyleDownloadController.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fsrc%2FController%2FImageStyleDownloadController.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Fsrc%2FController%2FImageStyleDownloadController.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -110,6 +110,7 @@ public function deliver(Request $request, $scheme, ImageStyleInterface $image_st\n     $target = $request->query->get('file');\n     $image_uri = $scheme . '://' . $target;\n     $image_uri = $this->streamWrapperManager->normalizeUri($image_uri);\n+    $sample_image_uri = $scheme . '://' . $this->config('image.settings')->get('preview_image');\n \n     if ($this->streamWrapperManager->isValidScheme($scheme)) {\n       $normalized_target = $this->streamWrapperManager->getTarget($image_uri);\n@@ -166,33 +167,40 @@ public function deliver(Request $request, $scheme, ImageStyleInterface $image_st\n \n     $headers = [];\n \n-    // If not using a public scheme, let other modules provide headers and\n-    // control access to the file.\n-    if (!$is_public) {\n-      $headers = $this->moduleHandler()->invokeAll('file_download', [$image_uri]);\n-      if (in_array(-1, $headers) || empty($headers)) {\n-        throw new AccessDeniedHttpException();\n-      }\n-    }\n-\n     // Don't try to generate file if source is missing.\n-    if (!$this->sourceImageExists($image_uri, $token_is_valid)) {\n+    if ($image_uri !== $sample_image_uri && !$this->sourceImageExists($image_uri, $token_is_valid)) {\n       // If the image style converted the extension, it has been added to the\n       // original file, resulting in filenames like image.png.jpeg. So to find\n       // the actual source image, we remove the extension and check if that\n       // image exists.\n-      $path_info = pathinfo(StreamWrapperManager::getTarget($image_uri));\n-      $converted_image_uri = sprintf('%s://%s%s%s', $this->streamWrapperManager->getScheme($derivative_uri), $path_info['dirname'], DIRECTORY_SEPARATOR, $path_info['filename']);\n-      if (!$this->sourceImageExists($converted_image_uri, $token_is_valid)) {\n+      $converted_image_uri = static::getUriWithoutConvertedExtension($image_uri);\n+      if ($converted_image_uri !== $image_uri &&\n+          $this->sourceImageExists($converted_image_uri, $token_is_valid)) {\n+        // The converted file does exist, use it as the source.\n+        $image_uri = $converted_image_uri;\n+      }\n+      else {\n         $this->logger->notice('Source image at %source_image_path not found while trying to generate derivative image at %derivative_path.', ['%source_image_path' => $image_uri, '%derivative_path' => $derivative_uri]);\n         return new Response($this->t('Error generating image, missing source file.'), 404);\n       }\n-      else {\n-        // The converted file does exist, use it as the source.\n-        $image_uri = $converted_image_uri;\n+    }\n+\n+    // If not using a public scheme, let other modules provide headers and\n+    // control access to the file.\n+    if (!$is_public) {\n+      $headers = $this->moduleHandler()->invokeAll('file_download', [$image_uri]);\n+      if (in_array(-1, $headers) || empty($headers)) {\n+        throw new AccessDeniedHttpException();\n       }\n     }\n \n+    // If it is default sample.png, ignore scheme.\n+    // This value swap must be done after hook_file_download is called since\n+    // the hooks are expecting a URI, not a file path.\n+    if ($image_uri === $sample_image_uri) {\n+      $image_uri = $target;\n+    }\n+\n     // Don't start generating the image if the derivative already exists or if\n     // generation is in progress in another thread.\n     if (!file_exists($derivative_uri)) {\n@@ -271,4 +279,31 @@ private function sourceImageExists(string $image_uri, bool $token_is_valid): boo\n     return TRUE;\n   }\n \n+  /**\n+   * Get the file URI without the extension from any conversion image style.\n+   *\n+   * If the image style converted the image, then an extension has been added\n+   * to the original file, resulting in filenames like image.png.jpeg.\n+   *\n+   * @param string $uri\n+   *   The file URI.\n+   *\n+   * @return string\n+   *   The file URI without the extension from any conversion image style.\n+   */\n+  public static function getUriWithoutConvertedExtension(string $uri): string {\n+    $original_uri = $uri;\n+    $path_info = pathinfo(StreamWrapperManager::getTarget($uri));\n+    // Only convert the URI when the filename still has an extension.\n+    if (!empty($path_info['filename']) && pathinfo($path_info['filename'], PATHINFO_EXTENSION)) {\n+      $original_uri = StreamWrapperManager::getScheme($uri) . '://';\n+      if (!empty($path_info['dirname']) && $path_info['dirname'] !== '.') {\n+        $original_uri .= $path_info['dirname'] . DIRECTORY_SEPARATOR;\n+      }\n+      $original_uri .= $path_info['filename'];\n+    }\n+\n+    return $original_uri;\n+  }\n+\n }"
                },
                {
                    "sha": "abb6160dffd71612230183c602d8968ca9ebdea7",
                    "filename": "html/core/modules/image/src/Entity/ImageStyle.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 4,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fsrc%2FEntity%2FImageStyle.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Fsrc%2FEntity%2FImageStyle.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Fsrc%2FEntity%2FImageStyle.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -298,10 +298,12 @@ public function flush($path = NULL) {\n     $module_handler = \\Drupal::moduleHandler();\n     $module_handler->invokeAll('image_style_flush', [$this, $path]);\n \n-    // Clear caches so that formatters may be added for this style.\n-    \\Drupal::service('theme.registry')->reset();\n-\n-    Cache::invalidateTags($this->getCacheTagsToInvalidate());\n+    // Clear caches when the complete image style is flushed,\n+    // so that field formatters may be added for this style.\n+    if (!isset($path)) {\n+      \\Drupal::service('theme.registry')->reset();\n+      Cache::invalidateTags($this->getCacheTagsToInvalidate());\n+    }\n \n     return $this;\n   }"
                },
                {
                    "sha": "b0de9171e35a70d3c4cbda7d1c56f084ae9b1edd",
                    "filename": "html/core/modules/image/tests/src/Functional/ImageAdminStylesTest.php",
                    "status": "modified",
                    "additions": 34,
                    "deletions": 0,
                    "changes": 34,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageAdminStylesTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageAdminStylesTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageAdminStylesTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -518,4 +518,38 @@ public function testImageStyleAccess() {\n     $this->assertSession()->pageTextContains(\"Select a new effect\");\n   }\n \n+  /**\n+   * Tests the display of preview images using a private scheme.\n+   */\n+  public function testPreviewImageShowInPrivateScheme(): void {\n+    $this->config('system.file')->set('default_scheme', 'private')->save();\n+\n+    /** @var \\Drupal\\Core\\File\\FileUrlGeneratorInterface $file_url_generator */\n+    $file_url_generator = \\Drupal::service('file_url_generator');\n+\n+    // Get the original preview image file in core config.\n+    $original_path = $this->config('image.settings')->get('preview_image');\n+    $style = ImageStyle::create(['name' => 'test_foo', 'label' => 'test foo']);\n+    $style->save();\n+\n+    // Build the derivative preview image file with the Image Style.\n+    // @see template_preprocess_image_style_preview()\n+    $preview_file = $style->buildUri($original_path);\n+    $style->createDerivative($original_path, $preview_file);\n+\n+    // Check if the derivative image exists.\n+    $this->assertFileExists($preview_file);\n+\n+    // Generate itok token for the preview image.\n+    $itok = $style->getPathToken('private://' . $original_path);\n+\n+    $url = $file_url_generator->generateAbsoluteString($preview_file);\n+    $url .= '?itok=' . $itok;\n+\n+    // Check if the preview image with style is shown.\n+    $this->drupalGet($url);\n+    $this->assertSession()->statusCodeEquals(200);\n+    $this->assertSession()->responseHeaderContains('Content-Type', 'image/png');\n+  }\n+\n }"
                },
                {
                    "sha": "fcfa3b8d7b7a80735dec621215eb05098832a021",
                    "filename": "html/core/modules/image/tests/src/Functional/ImageDimensionsTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageDimensionsTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageDimensionsTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageDimensionsTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -304,7 +304,7 @@ public function testImageDimensions() {\n    * altered and the element is re-rendered each time.\n    */\n   protected function getImageTag($variables) {\n-    return str_replace(\"\\n\", '', \\Drupal::service('renderer')->renderRoot($variables));\n+    return str_replace(\"\\n\", '', (string) \\Drupal::service('renderer')->renderRoot($variables));\n   }\n \n }"
                },
                {
                    "sha": "14ccf54cc92d8424243cd825692b8a1027b6a7ad",
                    "filename": "html/core/modules/image/tests/src/Functional/ImageFieldDisplayTest.php",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 10,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageFieldDisplayTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageFieldDisplayTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageFieldDisplayTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -116,7 +116,7 @@ public function _testImageFieldFormatters($scheme) {\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $default_output = str_replace(\"\\n\", '', $renderer->renderRoot($image));\n+    $default_output = str_replace(\"\\n\", '', (string) $renderer->renderRoot($image));\n     $this->assertSession()->responseContains($default_output);\n \n     // Test the image linked to file formatter.\n@@ -137,7 +137,7 @@ public function _testImageFieldFormatters($scheme) {\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $default_output = '<a href=\"' . $file->createFileUrl() . '\">' . $renderer->renderRoot($image) . '</a>';\n+    $default_output = '<a href=\"' . $file->createFileUrl() . '\">' . (string) $renderer->renderRoot($image) . '</a>';\n     $this->drupalGet('node/' . $nid);\n     $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', $file->getCacheTags()[0]);\n     // @todo Remove in https://www.drupal.org/node/2646744.\n@@ -196,7 +196,7 @@ public function _testImageFieldFormatters($scheme) {\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $default_output = $renderer->renderRoot($image_style);\n+    $default_output = (string) $renderer->renderRoot($image_style);\n     $this->drupalGet('node/' . $nid);\n     $image_style = ImageStyle::load('thumbnail');\n     $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', $image_style->getCacheTags()[0]);\n@@ -313,7 +313,7 @@ public function testImageFieldSettings() {\n     ];\n     $this->drupalGet('node/' . $nid . '/edit');\n     $this->submitForm($edit, 'Save');\n-    $default_output = str_replace(\"\\n\", '', $renderer->renderRoot($image));\n+    $default_output = str_replace(\"\\n\", '', (string) $renderer->renderRoot($image));\n     $this->assertSession()->responseContains($default_output);\n \n     // Verify that alt/title longer than allowed results in a validation error.\n@@ -421,7 +421,7 @@ public function testImageLoadingAttribute(): void {\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $default_output = str_replace(\"\\n\", '', $renderer->renderRoot($image));\n+    $default_output = str_replace(\"\\n\", '', (string) $renderer->renderRoot($image));\n     $this->assertSession()->responseContains($default_output);\n \n     // Test overrides of image loading attribute.\n@@ -446,7 +446,7 @@ public function testImageLoadingAttribute(): void {\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'eager'],\n     ];\n-    $default_output = $renderer->renderRoot($image);\n+    $default_output = (string) $renderer->renderRoot($image);\n     $this->drupalGet('node/' . $nid);\n     $this->assertSession()->responseContains($default_output);\n \n@@ -467,7 +467,7 @@ public function testImageLoadingAttribute(): void {\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'eager'],\n     ];\n-    $default_output = $renderer->renderRoot($image_style);\n+    $default_output = (string) $renderer->renderRoot($image_style);\n     $this->drupalGet('node/' . $nid);\n     $this->assertSession()->responseContains($default_output);\n   }\n@@ -521,7 +521,7 @@ public function testImageFieldDefaultImage() {\n       '#height' => 20,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $default_output = str_replace(\"\\n\", '', $renderer->renderRoot($image));\n+    $default_output = str_replace(\"\\n\", '', (string) $renderer->renderRoot($image));\n     $this->drupalGet('node/' . $node->id());\n     $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', $file->getCacheTags()[0]);\n     // Verify that no image style cache tags are found.\n@@ -547,7 +547,7 @@ public function testImageFieldDefaultImage() {\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $image_output = str_replace(\"\\n\", '', $renderer->renderRoot($image));\n+    $image_output = str_replace(\"\\n\", '', (string) $renderer->renderRoot($image));\n     $this->drupalGet('node/' . $nid);\n     $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', $file->getCacheTags()[0]);\n     // Verify that no image style cache tags are found.\n@@ -602,7 +602,7 @@ public function testImageFieldDefaultImage() {\n       '#height' => 20,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $default_output = str_replace(\"\\n\", '', $renderer->renderRoot($image));\n+    $default_output = str_replace(\"\\n\", '', (string) $renderer->renderRoot($image));\n     $this->drupalGet('node/' . $node->id());\n     $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', $file->getCacheTags()[0]);\n     // Verify that no image style cache tags are found."
                },
                {
                    "sha": "71a04a87cb744476681e9d8de0582d738d6c1dc4",
                    "filename": "html/core/modules/image/tests/src/Functional/ImageStylesPathAndUrlTest.php",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 0,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageStylesPathAndUrlTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageStylesPathAndUrlTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FFunctional%2FImageStylesPathAndUrlTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -119,6 +119,22 @@ public function testImageStyleUrlExtraSlash() {\n     $this->doImageStyleUrlAndPathTests('public', TRUE, TRUE);\n   }\n \n+  /**\n+   * Test an image style URL with a private file that also gets converted.\n+   */\n+  public function testImageStylePrivateWithConversion(): void {\n+    // Add the \"convert\" image style effect to our style.\n+    $this->style->addImageEffect([\n+      'uuid' => '',\n+      'id' => 'image_convert',\n+      'weight' => 1,\n+      'data' => [\n+        'extension' => 'jpeg',\n+      ],\n+    ]);\n+    $this->doImageStyleUrlAndPathTests('private');\n+  }\n+\n   /**\n    * Tests that an invalid source image returns a 404.\n    */"
                },
                {
                    "sha": "6ddaab36e616b094886aa167a6e58b04c1597403",
                    "filename": "html/core/modules/image/tests/src/Unit/ImageStyleTest.php",
                    "status": "modified",
                    "additions": 57,
                    "deletions": 0,
                    "changes": 57,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FUnit%2FImageStyleTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FUnit%2FImageStyleTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fimage%2Ftests%2Fsrc%2FUnit%2FImageStyleTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -5,6 +5,7 @@\n namespace Drupal\\Tests\\image\\Unit;\n \n use Drupal\\Component\\Utility\\Crypt;\n+use Drupal\\Core\\DependencyInjection\\ContainerBuilder;\n use Drupal\\Tests\\UnitTestCase;\n \n /**\n@@ -198,6 +199,62 @@ public function testGetPathToken() {\n     $this->assertEquals(substr(Crypt::hmacBase64($image_style->id() . ':' . 'public://test.jpeg', $private_key . $hash_salt), 0, 8), $image_style->getPathToken('public://test.jpeg'));\n   }\n \n+  /**\n+   * @covers ::flush\n+   */\n+  public function testFlush() {\n+    $cache_tag_invalidator = $this->createMock('\\Drupal\\Core\\Cache\\CacheTagsInvalidator');\n+    $file_system = $this->createMock('\\Drupal\\Core\\File\\FileSystemInterface');\n+    $module_handler = $this->createMock('\\Drupal\\Core\\Extension\\ModuleHandlerInterface');\n+    $stream_wrapper_manager = $this->createMock('\\Drupal\\Core\\StreamWrapper\\StreamWrapperManagerInterface');\n+    $stream_wrapper_manager->expects($this->any())\n+      ->method('getWrappers')\n+      ->will($this->returnValue([]));\n+    $theme_registry = $this->createMock('\\Drupal\\Core\\Theme\\Registry');\n+\n+    $container = new ContainerBuilder();\n+    $container->set('cache_tags.invalidator', $cache_tag_invalidator);\n+    $container->set('file_system', $file_system);\n+    $container->set('module_handler', $module_handler);\n+    $container->set('stream_wrapper_manager', $stream_wrapper_manager);\n+    $container->set('theme.registry', $theme_registry);\n+    \\Drupal::setContainer($container);\n+\n+    $image_effect_id = $this->randomMachineName();\n+    $image_effect = $this->getMockBuilder('\\Drupal\\image\\ImageEffectBase');\n+\n+    $image_style = $this->getImageStyleMock($image_effect_id, $image_effect, ['buildUri', 'getCacheTagsToInvalidate']);\n+    $image_style->expects($this->any())\n+      ->method('buildUri')\n+      ->willReturn('test.jpg');\n+    $image_style->expects($this->any())\n+      ->method('getCacheTagsToInvalidate')\n+      ->willReturn([]);\n+\n+    // Assert the theme registry is reset.\n+    $theme_registry\n+      ->expects($this->once())\n+      ->method('reset');\n+    // Assert the cache tags are invalidated.\n+    $cache_tag_invalidator\n+      ->expects($this->once())\n+      ->method('invalidateTags');\n+\n+    $image_style->flush();\n+\n+    // Assert the theme registry is not reset a path is flushed.\n+    $theme_registry\n+      ->expects($this->never())\n+      ->method('reset');\n+    // Assert the cache tags are not reset a path is flushed.\n+    $cache_tag_invalidator\n+      ->expects($this->never())\n+      ->method('invalidateTags');\n+\n+    $image_style->flush('test.jpg');\n+\n+  }\n+\n   /**\n    * Mock function for ImageStyle::fileDefaultScheme().\n    */"
                },
                {
                    "sha": "901bf7e1055a03ac7b214532f79095b25eb9f160",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/BlockContentTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FBlockContentTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FBlockContentTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FBlockContentTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -162,7 +162,7 @@ protected function getExpectedDocument() {\n           ],\n           'changed' => (new \\DateTime())->setTimestamp($this->entity->getChangedTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           'info' => 'Llama',\n-          'revision_created' => (new \\DateTime())->setTimestamp($this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n+          'revision_created' => (new \\DateTime())->setTimestamp((int) $this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           'revision_translation_affected' => TRUE,\n           'status' => FALSE,\n           'langcode' => 'en',"
                },
                {
                    "sha": "16904c9e415dd16fbcd24f29cc854dad90f61cae",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/EntityTestComputedFieldTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestComputedFieldTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestComputedFieldTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestComputedFieldTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -108,11 +108,12 @@ protected function getExpectedDocument() {\n           'self' => ['href' => $self_url],\n         ],\n         'attributes' => [\n-          'created' => (new \\DateTime())->setTimestamp($this->entity->get('created')->value)->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n+          'created' => (new \\DateTime())->setTimestamp((int) $this->entity->get('created')->value)->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           'name' => 'Llama',\n           'drupal_internal__id' => 1,\n           'computed_string_field' => NULL,\n           'computed_test_cacheable_string_field' => 'computed test cacheable string field',\n+          'computed_test_cacheable_integer_field' => 0,\n         ],\n         'relationships' => [\n           'computed_reference_field' => ["
                },
                {
                    "sha": "5a1d7ab70c8790ef7fce383af417657651a1aeb7",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/EntityTestMapFieldTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestMapFieldTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestMapFieldTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestMapFieldTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -109,7 +109,7 @@ protected function getExpectedDocument() {\n           'self' => ['href' => $self_url],\n         ],\n         'attributes' => [\n-          'created' => (new \\DateTime())->setTimestamp($this->entity->get('created')->value)->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n+          'created' => (new \\DateTime())->setTimestamp((int) $this->entity->get('created')->value)->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           'langcode' => 'en',\n           'name' => 'Llama',\n           'data' => static::$mapValue,"
                },
                {
                    "sha": "8f224a407871a6e5aea868f7910b9e9fc094d686",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/EntityTestTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FEntityTestTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -120,7 +120,7 @@ protected function getExpectedDocument() {\n           'self' => ['href' => $self_url],\n         ],\n         'attributes' => [\n-          'created' => (new \\DateTime())->setTimestamp($this->entity->get('created')->value)->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n+          'created' => (new \\DateTime())->setTimestamp((int) $this->entity->get('created')->value)->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           'field_test_text' => NULL,\n           'langcode' => 'en',\n           'name' => 'Llama',"
                },
                {
                    "sha": "b38fa6c64f9e463d99422f909a50d23e23a5bc2a",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/JsonApiFunctionalDateFieldTest.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FJsonApiFunctionalDateFieldTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FJsonApiFunctionalDateFieldTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FJsonApiFunctionalDateFieldTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -57,9 +57,9 @@ public function testRead() {\n     /** @var \\Drupal\\Core\\Datetime\\DateFormatterInterface $date_formatter */\n     $date_formatter = $this->container->get('date.formatter');\n \n-    $timestamp_1 = '5000000';\n-    $timestamp_2 = '6000000';\n-    $timestamp_3 = '7000000';\n+    $timestamp_1 = 5000000;\n+    $timestamp_2 = 6000000;\n+    $timestamp_3 = 7000000;\n     // Expected: node 1.\n     $timestamp_smaller_than_value = $timestamp_2;\n     // Expected: node 1 and node 2."
                },
                {
                    "sha": "8bd69aff1363a5f7670b2318dc0065ed4f2566ec",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/MediaTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FMediaTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FMediaTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FMediaTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -184,7 +184,7 @@ protected function getExpectedDocument() {\n           'status' => TRUE,\n           'created' => '1973-11-29T21:33:09+00:00',\n           'changed' => (new \\DateTime())->setTimestamp($this->entity->getChangedTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n-          'revision_created' => (new \\DateTime())->setTimestamp($this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n+          'revision_created' => (new \\DateTime())->setTimestamp((int) $this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           'default_langcode' => TRUE,\n           'revision_log_message' => NULL,\n           // @todo Attempt to remove this in https://www.drupal.org/project/drupal/issues/2933518."
                },
                {
                    "sha": "36b90c8f94b1c8c9ad698adafbed805ce02681be",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/MenuLinkContentTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FMenuLinkContentTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FMenuLinkContentTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FMenuLinkContentTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -130,7 +130,7 @@ protected function getExpectedDocument() {\n           'weight' => 0,\n           'drupal_internal__id' => 1,\n           'drupal_internal__revision_id' => 1,\n-          'revision_created' => (new \\DateTime())->setTimestamp($this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n+          'revision_created' => (new \\DateTime())->setTimestamp((int) $this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           'revision_log_message' => NULL,\n           // @todo Attempt to remove this in https://www.drupal.org/project/drupal/issues/2933518.\n           'revision_translation_affected' => TRUE,"
                },
                {
                    "sha": "cebb6f2c731fd63cee9e5ae9209c983bbd8584dd",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/ResourceTestBase.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FResourceTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FResourceTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FResourceTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2741,7 +2741,7 @@ protected function doTestIncluded(Url $url, array $request_options) {\n       'all' => $relationship_field_names,\n     ];\n     if (count($relationship_field_names) > 1) {\n-      $about_half_the_fields = floor(count($relationship_field_names) / 2);\n+      $about_half_the_fields = (int) floor(count($relationship_field_names) / 2);\n       $field_sets['some'] = array_slice($relationship_field_names, $about_half_the_fields);\n \n       $nested_includes = $this->getNestedIncludePaths();\n@@ -3334,7 +3334,7 @@ protected function getSparseFieldSets() {\n     $field_names = array_keys($this->entity->toArray());\n     $field_sets = [\n       'empty' => [],\n-      'some' => array_slice($field_names, floor(count($field_names) / 2)),\n+      'some' => array_slice($field_names, (int) floor(count($field_names) / 2)),\n       'all' => $field_names,\n     ];\n     if ($this->entity instanceof EntityOwnerInterface) {"
                },
                {
                    "sha": "98a0bce520d1841d41217a9268ca7f5e132462c8",
                    "filename": "html/core/modules/jsonapi/tests/src/Functional/TermTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FTermTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FTermTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fjsonapi%2Ftests%2Fsrc%2FFunctional%2FTermTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -280,7 +280,7 @@ protected function getExpectedDocument() {\n           'drupal_internal__tid' => 1,\n           'status' => TRUE,\n           'drupal_internal__revision_id' => 1,\n-          'revision_created' => (new \\DateTime())->setTimestamp($this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n+          'revision_created' => (new \\DateTime())->setTimestamp((int) $this->entity->getRevisionCreationTime())->setTimezone(new \\DateTimeZone('UTC'))->format(\\DateTime::RFC3339),\n           // @todo Attempt to remove this in https://www.drupal.org/project/drupal/issues/2933518.\n           'revision_translation_affected' => TRUE,\n         ],"
                },
                {
                    "sha": "88dae43c63ed02e3e4b08ac9fa90dd6fe1917836",
                    "filename": "html/core/modules/language/language.module",
                    "status": "modified",
                    "additions": 24,
                    "deletions": 3,
                    "changes": 27,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Flanguage.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Flanguage.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flanguage%2Flanguage.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -7,12 +7,15 @@\n \n use Drupal\\Core\\Url;\n use Drupal\\Core\\Access\\AccessResult;\n+use Drupal\\Core\\Config\\FileStorage;\n+use Drupal\\Core\\Config\\InstallStorage;\n use Drupal\\Core\\Entity\\ContentEntityFormInterface;\n use Drupal\\Core\\Entity\\EntityFormInterface;\n use Drupal\\Core\\Entity\\EntityInterface;\n use Drupal\\Core\\Field\\FieldDefinitionInterface;\n use Drupal\\Core\\Field\\FieldItemListInterface;\n use Drupal\\Core\\Form\\FormStateInterface;\n+use Drupal\\Core\\Installer\\InstallerKernel;\n use Drupal\\Core\\Language\\LanguageInterface;\n use Drupal\\Core\\Routing\\RouteMatchInterface;\n use Drupal\\Core\\Session\\AccountInterface;\n@@ -289,8 +292,26 @@ function language_negotiation_url_prefixes_update() {\n /**\n  * Implements hook_modules_installed().\n  */\n-function language_modules_installed($modules) {\n+function language_modules_installed($modules, $is_syncing) {\n+  if ($is_syncing) {\n+    return;\n+  }\n+\n   if (!in_array('language', $modules)) {\n+    if (InstallerKernel::installationAttempted()) {\n+      // If the install profile provides its own language.types configuration do\n+      // not overwrite it.\n+      $profile_directory = \\Drupal::service('extension.list.profile')->getPath(\\Drupal::installProfile());\n+      $profile_storages = [\n+        new FileStorage($profile_directory . '/' . InstallStorage::CONFIG_INSTALL_DIRECTORY),\n+        new FileStorage($profile_directory . '/' . InstallStorage::CONFIG_OPTIONAL_DIRECTORY),\n+      ];\n+      foreach ($profile_storages as $storage) {\n+        if ($storage->exists('language.types')) {\n+          return;\n+        }\n+      }\n+    }\n     // Since newly (un)installed modules may change the default settings for\n     // non-locked language types (e.g. content language), we need to resave the\n     // language type configuration.\n@@ -318,8 +339,8 @@ function language_modules_installed($modules) {\n /**\n  * Implements hook_modules_uninstalled().\n  */\n-function language_modules_uninstalled($modules) {\n-  language_modules_installed($modules);\n+function language_modules_uninstalled($modules, $is_syncing) {\n+  language_modules_installed($modules, $is_syncing);\n }\n \n /**"
                },
                {
                    "sha": "74a8bd9352c72352fdfe4237d0ea8daaf178eb60",
                    "filename": "html/core/modules/language/tests/src/Functional/LanguageConfigInstallOverrideExistingTest.php",
                    "status": "added",
                    "additions": 42,
                    "deletions": 0,
                    "changes": 42,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FFunctional%2FLanguageConfigInstallOverrideExistingTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FFunctional%2FLanguageConfigInstallOverrideExistingTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FFunctional%2FLanguageConfigInstallOverrideExistingTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,42 @@\n+<?php\n+\n+namespace Drupal\\Tests\\language\\Functional;\n+\n+use Drupal\\Tests\\BrowserTestBase;\n+\n+/**\n+ * Ensures the language config is installed but not altered on install.\n+ *\n+ * @group language\n+ */\n+class LanguageConfigInstallOverrideExistingTest extends BrowserTestBase {\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected $profile = 'test_language_negotiation';\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected $defaultTheme = 'stark';\n+\n+  /**\n+   * Tests when language config is installed existing config is not overridden.\n+   */\n+  public function testLanguageConfigInstallOverrideExisting() {\n+    /** @var \\Drupal\\Core\\Config\\StorageInterface $storage */\n+    $storage = $this->container->get('config.storage');\n+    $config = $this->config('language.types');\n+\n+    // The negotiation methods that have been removed should be disabled after\n+    // purging if not avoided in language_modules_installed().\n+    $language_types_data = $storage->read('language.types');\n+    $this->assertTrue(isset($language_types_data['negotiation']['language_content']['enabled']['test_language_negotiation_method']));\n+    $this->assertTrue(isset($language_types_data['negotiation']['language_content']['enabled']['language-selected']));\n+\n+    $this->assertEquals(-10, $config->get('negotiation.language_content.enabled.test_language_negotiation_method'));\n+    $this->assertEquals(12, $config->get('negotiation.language_content.enabled.language-selected'));\n+  }\n+\n+}"
                },
                {
                    "sha": "e3964762d7d34a5f15fefb321ce20256b8eec933",
                    "filename": "html/core/modules/language/tests/src/Unit/ContentLanguageSettingsUnitTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FUnit%2FContentLanguageSettingsUnitTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FUnit%2FContentLanguageSettingsUnitTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FUnit%2FContentLanguageSettingsUnitTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -267,7 +267,7 @@ public function testLoadByEntityTypeBundle($config_id, ContentLanguageSettings $\n       ->with('language_content_settings')\n       ->willReturn($this->configEntityStorageInterface);\n \n-    $entity_type_repository = $this->getMockForAbstractClass(EntityTypeRepositoryInterface::class);\n+    $entity_type_repository = $this->createMock(EntityTypeRepositoryInterface::class);\n     $entity_type_repository->expects($this->any())\n       ->method('getEntityTypeFromClass')\n       ->with(ContentLanguageSettings::class)"
                },
                {
                    "sha": "fac7885f7bf1470d8114873fac7be67a89237629",
                    "filename": "html/core/modules/language/tests/src/Unit/Plugin/LanguageNegotiation/LanguageNegotiationContentEntityTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FUnit%2FPlugin%2FLanguageNegotiation%2FLanguageNegotiationContentEntityTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FUnit%2FPlugin%2FLanguageNegotiation%2FLanguageNegotiationContentEntityTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flanguage%2Ftests%2Fsrc%2FUnit%2FPlugin%2FLanguageNegotiation%2FLanguageNegotiationContentEntityTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -12,7 +12,7 @@\n use Drupal\\Core\\Url;\n use Drupal\\language\\ConfigurableLanguageManagerInterface;\n use Drupal\\language\\Plugin\\LanguageNegotiation\\LanguageNegotiationContentEntity;\n-use Symfony\\Component\\HttpFoundation\\ParameterBag;\n+use Symfony\\Component\\HttpFoundation\\InputBag;\n use Symfony\\Component\\HttpFoundation\\Request;\n use Symfony\\Component\\HttpFoundation\\ServerBag;\n use Symfony\\Component\\Routing\\Route;\n@@ -106,7 +106,7 @@ public function testGetLangcode() {\n     // Case 2: A request is available, but the languageManager is not set and\n     // the static::QUERY_PARAMETER is not provided as a named parameter.\n     $request = Request::create('/de/foo', 'GET');\n-    $request->query = new ParameterBag();\n+    $request->query = new InputBag();\n     $this->assertEquals(NULL, $languageNegotiationContentEntity->getLangcode($request));\n \n     // Case 3: A request is available, the languageManager is set, but the"
                },
                {
                    "sha": "5e4f7c250310ae24c484574366e74d254a4a96f1",
                    "filename": "html/core/modules/layout_builder/src/Form/DiscardLayoutChangesForm.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FForm%2FDiscardLayoutChangesForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FForm%2FDiscardLayoutChangesForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FForm%2FDiscardLayoutChangesForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -79,7 +79,7 @@ public function getQuestion() {\n    * {@inheritdoc}\n    */\n   public function getCancelUrl() {\n-    return $this->sectionStorage->getRedirectUrl();\n+    return $this->sectionStorage->getLayoutBuilderUrl();\n   }\n \n   /**\n@@ -100,7 +100,7 @@ public function submitForm(array &$form, FormStateInterface $form_state) {\n \n     $this->messenger->addMessage($this->t('The changes to the layout have been discarded.'));\n \n-    $form_state->setRedirectUrl($this->getCancelUrl());\n+    $form_state->setRedirectUrl($this->sectionStorage->getRedirectUrl());\n   }\n \n }"
                },
                {
                    "sha": "1d4c5acae12a3a34e7df68ba2cc1f0dfd8d41f6e",
                    "filename": "html/core/modules/layout_builder/src/Plugin/Block/FieldBlock.php",
                    "status": "modified",
                    "additions": 31,
                    "deletions": 7,
                    "changes": 38,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FPlugin%2FBlock%2FFieldBlock.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FPlugin%2FBlock%2FFieldBlock.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FPlugin%2FBlock%2FFieldBlock.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -22,6 +22,7 @@\n use Drupal\\Core\\Plugin\\ContextAwarePluginInterface;\n use Drupal\\Core\\Session\\AccountInterface;\n use Drupal\\Core\\StringTranslation\\TranslatableMarkup;\n+use Drupal\\field\\FieldConfigInterface;\n use Drupal\\layout_builder\\Plugin\\Derivative\\FieldBlockDeriver;\n use Psr\\Log\\LoggerInterface;\n use Symfony\\Component\\DependencyInjection\\ContainerInterface;\n@@ -212,13 +213,7 @@ protected function blockAccess(AccountInterface $account) {\n     }\n \n     // Check to see if the field has any values or a default value.\n-    if ($field->isEmpty() && !$field->getFieldDefinition()->getDefaultValue($entity)) {\n-      // @todo Remove special handling of image fields after\n-      //   https://www.drupal.org/project/drupal/issues/3005528.\n-      if ($field->getFieldDefinition()->getType() === 'image' && $field->getFieldDefinition()->getSetting('default_image')) {\n-        return $access;\n-      }\n-\n+    if ($field->isEmpty() && !$this->entityFieldHasDefaultValue()) {\n       return $access->andIf(AccessResult::forbidden());\n     }\n     return $access;\n@@ -414,4 +409,33 @@ protected function getFormatter(array $parents, FormStateInterface $form_state)\n     ]);\n   }\n \n+  /**\n+   * Checks whether there is a default value set on the field.\n+   *\n+   * @return bool\n+   *   TRUE if default value set, FALSE otherwise.\n+   */\n+  protected function entityFieldHasDefaultValue(): bool {\n+    $entity = $this->getEntity();\n+    $field = $entity->get($this->fieldName);\n+    $definition = $field->getFieldDefinition();\n+    if ($definition->getDefaultValue($entity)) {\n+      return TRUE;\n+    }\n+\n+    // @todo Remove special handling of image fields after\n+    // https://www.drupal.org/project/drupal/issues/3005528.\n+    if ($definition->getType() !== 'image') {\n+      return FALSE;\n+    }\n+\n+    $default_image = $definition->getSetting('default_image');\n+    // If we are dealing with a configurable field, look in both instance-level\n+    // and field-level settings.\n+    if (empty($default_image['uuid']) && ($definition instanceof FieldConfigInterface)) {\n+      $default_image = $definition->getFieldStorageDefinition()->getSetting('default_image');\n+    }\n+    return !empty($default_image['uuid']);\n+  }\n+\n }"
                },
                {
                    "sha": "2a5d43a84980b594c1f33b45cb6f2e91937e2b46",
                    "filename": "html/core/modules/layout_builder/src/Plugin/Layout/MultiWidthLayoutBase.php",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FPlugin%2FLayout%2FMultiWidthLayoutBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FPlugin%2FLayout%2FMultiWidthLayoutBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flayout_builder%2Fsrc%2FPlugin%2FLayout%2FMultiWidthLayoutBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -8,9 +8,6 @@\n \n /**\n  * Base class of layouts with configurable widths.\n- *\n- * @internal\n- *   Plugin classes are internal.\n  */\n abstract class MultiWidthLayoutBase extends LayoutDefault implements PluginFormInterface {\n "
                },
                {
                    "sha": "8e8f40d903b49e82cb316ba225911102dedf34d1",
                    "filename": "html/core/modules/layout_builder/tests/src/Functional/LayoutBuilderDefaultValuesTest.php",
                    "status": "modified",
                    "additions": 101,
                    "deletions": 18,
                    "changes": 119,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FFunctional%2FLayoutBuilderDefaultValuesTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FFunctional%2FLayoutBuilderDefaultValuesTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FFunctional%2FLayoutBuilderDefaultValuesTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -13,6 +13,8 @@\n use Drupal\\Tests\\image\\Kernel\\ImageFieldCreationTrait;\n use Drupal\\Tests\\TestFileCreationTrait;\n \n+// cspell:ignore blocknodetest typefield\n+\n /**\n  * Tests rendering default field values in Layout Builder.\n  *\n@@ -62,14 +64,22 @@ protected function setUp(): void {\n       'field_string_with_default' => 'It is ok to be different',\n       'field_string_with_callback' => 'Not from a callback',\n       'field_string_late_default' => 'I am way ahead of you.',\n-      'field_image_with_default' => [\n-        'target_id' => 2,\n-        'alt' => 'My different alt text',\n-      ],\n-      'field_image_no_default' => [\n+      'field_image_storage_default' => [\n         'target_id' => 3,\n         'alt' => 'My third alt text',\n       ],\n+      'field_image_instance_default' => [\n+        'target_id' => 4,\n+        'alt' => 'My fourth alt text',\n+      ],\n+      'field_image_both_defaults' => [\n+        'target_id' => 5,\n+        'alt' => 'My fifth alt text',\n+      ],\n+      'field_image_no_default' => [\n+        'target_id' => 6,\n+        'alt' => 'My sixth alt text',\n+      ],\n     ]);\n \n     // Create node 2 relying on defaults.\n@@ -123,22 +133,46 @@ protected function assertNodeWithValues() {\n     $assert_session->pageTextContains('field_string_late_default');\n     $assert_session->pageTextNotContains('Too late!');\n     $assert_session->pageTextContains('I am way ahead of you');\n-    // Image field with default should render non-default value.\n-    $assert_session->pageTextContains('field_image_with_default');\n-    $assert_session->responseNotContains('My default alt text');\n+    // Image field with storage default should render non-default value.\n+    $assert_session->pageTextContains('field_image_storage_default');\n+    $assert_session->responseNotContains('My storage default alt text');\n     $assert_session->responseNotContains('test-file-1');\n-    $assert_session->responseContains('My different alt text');\n-    $assert_session->responseContains('test-file-2');\n-    // Image field with no default should render a value.\n-    $assert_session->pageTextContains('field_image_no_default');\n     $assert_session->responseContains('My third alt text');\n     $assert_session->responseContains('test-file-3');\n+    // Image field with instance default should render non-default value.\n+    $assert_session->pageTextContains('field_image_instance_default');\n+    $assert_session->responseNotContains('My instance default alt text');\n+    $assert_session->responseNotContains('test-file-1');\n+    $assert_session->responseContains('My fourth alt text');\n+    $assert_session->responseContains('test-file-4');\n+    // Image field with both storage and instance defaults should render\n+    // non-default value.\n+    $assert_session->pageTextContains('field_image_both_defaults');\n+    $assert_session->responseNotContains('My storage default alt text');\n+    $assert_session->responseNotContains('My instance default alt text');\n+    $assert_session->responseNotContains('test-file-1');\n+    $assert_session->responseNotContains('test-file-2');\n+    $assert_session->responseContains('My fifth alt text');\n+    $assert_session->responseContains('test-file-5');\n+    // Image field with no default should render a value.\n+    $assert_session->pageTextContains('field_image_no_default');\n+    $assert_session->responseContains('My sixth alt text');\n+    $assert_session->responseContains('test-file-6');\n   }\n \n   /**\n    * Test for expected text on node 2.\n    */\n   protected function assertNodeWithDefaultValues() {\n+    // Switch theme to starterkit_theme so that layout builder components will\n+    // have block classes.\n+    /** @var \\Drupal\\Core\\Extension\\ThemeInstallerInterface $theme_installer */\n+    $theme_installer = $this->container->get('theme_installer');\n+    $theme_installer->install(['starterkit_theme']);\n+    $this->config('system.theme')\n+      ->set('default', 'starterkit_theme')\n+      ->save();\n+\n     $this->drupalGet('node/2');\n     $assert_session = $this->assertSession();\n     // String field with no default should not render.\n@@ -153,11 +187,20 @@ protected function assertNodeWithDefaultValues() {\n     $assert_session->pageTextNotContains('field_string_late_default');\n     $assert_session->pageTextNotContains('Too late!');\n     // Image field with default should render default value.\n-    $assert_session->pageTextContains('field_image_with_default');\n-    $assert_session->responseContains('My default alt text');\n+    $assert_session->pageTextContains('field_image_storage_default');\n+    $assert_session->responseContains('My storage default alt text');\n+    $assert_session->responseContains('test-file-1');\n+    $assert_session->pageTextContains('field_image_instance_default');\n+    $assert_session->responseContains('My instance default alt text');\n     $assert_session->responseContains('test-file-1');\n+    $assert_session->pageTextContains('field_image_both_defaults');\n+    $assert_session->responseContains('My instance default alt text');\n+    $assert_session->responseContains('test-file-2');\n     // Image field with no default should not render.\n     $assert_session->pageTextNotContains('field_image_no_default');\n+    // Confirm that there is no DOM element for the field_image_with_no_default\n+    // field block.\n+    $assert_session->elementNotExists('css', '.block-field-blocknodetest-node-typefield-image-no-default');\n   }\n \n   /**\n@@ -243,7 +286,7 @@ protected function addImageFields() {\n     // Create files to use as the default images.\n     $files = $this->drupalGetTestFiles('image');\n     $images = [];\n-    for ($i = 1; $i <= 3; $i++) {\n+    for ($i = 1; $i <= 6; $i++) {\n       $filename = \"test-file-$i\";\n       $desired_filepath = 'public://' . $filename;\n       \\Drupal::service('file_system')->copy($files[0]->uri, $desired_filepath, FileSystemInterface::EXISTS_ERROR);\n@@ -256,17 +299,57 @@ protected function addImageFields() {\n       $images[] = $file;\n     }\n \n-    $field_name = 'field_image_with_default';\n+    $field_name = 'field_image_storage_default';\n     $storage_settings['default_image'] = [\n       'uuid' => $images[0]->uuid(),\n-      'alt' => 'My default alt text',\n+      'alt' => 'My storage default alt text',\n       'title' => '',\n       'width' => 0,\n       'height' => 0,\n     ];\n     $field_settings['default_image'] = [\n+      'uuid' => NULL,\n+      'alt' => '',\n+      'title' => '',\n+      'width' => NULL,\n+      'height' => NULL,\n+    ];\n+    $widget_settings = [\n+      'preview_image_style' => 'medium',\n+    ];\n+    $this->createImageField($field_name, 'test_node_type', $storage_settings, $field_settings, $widget_settings);\n+\n+    $field_name = 'field_image_instance_default';\n+    $storage_settings['default_image'] = [\n+      'uuid' => NULL,\n+      'alt' => '',\n+      'title' => '',\n+      'width' => NULL,\n+      'height' => NULL,\n+    ];\n+    $field_settings['default_image'] = [\n+      'uuid' => $images[0]->uuid(),\n+      'alt' => 'My instance default alt text',\n+      'title' => '',\n+      'width' => 0,\n+      'height' => 0,\n+    ];\n+    $widget_settings = [\n+      'preview_image_style' => 'medium',\n+    ];\n+    $this->createImageField($field_name, 'test_node_type', $storage_settings, $field_settings, $widget_settings);\n+\n+    $field_name = 'field_image_both_defaults';\n+    $storage_settings['default_image'] = [\n       'uuid' => $images[0]->uuid(),\n-      'alt' => 'My default alt text',\n+      'alt' => 'My storage default alt text',\n+      'title' => '',\n+      'width' => 0,\n+      'height' => 0,\n+    ];\n+    $field_settings['default_image'] = [\n+      'uuid' => $images[1]->uuid(),\n+      'alt' => 'My instance default alt text',\n       'title' => '',\n       'width' => 0,\n       'height' => 0,"
                },
                {
                    "sha": "7b6e8cb1e4fb8180f1c3e3fe04c232dd66406277",
                    "filename": "html/core/modules/layout_builder/tests/src/FunctionalJavascript/LayoutBuilderUiTest.php",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 1,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FFunctionalJavascript%2FLayoutBuilderUiTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FFunctionalJavascript%2FLayoutBuilderUiTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FFunctionalJavascript%2FLayoutBuilderUiTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -94,10 +94,17 @@ public function testUnsavedChangesMessage() {\n     $assert_session = $this->assertSession();\n     $page = $this->getSession()->getPage();\n \n-    // Make and then discard changes.\n     $this->assertModifiedLayout(static::FIELD_UI_PREFIX . '/display/default/layout');\n+    // Discard then cancel.\n+    $page->pressButton('Discard changes');\n+    $page->clickLink('Cancel');\n+    $assert_session->addressEquals(static::FIELD_UI_PREFIX . '/display/default/layout');\n+    $assert_session->pageTextContainsOnce('You have unsaved changes.');\n+\n+    // Discard then confirm.\n     $page->pressButton('Discard changes');\n     $page->pressButton('Confirm');\n+    $assert_session->addressEquals(static::FIELD_UI_PREFIX . '/display/default');\n     $assert_session->pageTextNotContains('You have unsaved changes.');\n \n     // Make and then save changes."
                },
                {
                    "sha": "48f829a30836fba5917a80e0765d2a3e89066d7a",
                    "filename": "html/core/modules/layout_builder/tests/src/Kernel/EntityViewAlterTest.php",
                    "status": "added",
                    "additions": 64,
                    "deletions": 0,
                    "changes": 64,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FKernel%2FEntityViewAlterTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FKernel%2FEntityViewAlterTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flayout_builder%2Ftests%2Fsrc%2FKernel%2FEntityViewAlterTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,64 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Drupal\\Tests\\layout_builder\\Kernel;\n+\n+use Drupal\\Core\\Routing\\RouteObjectInterface;\n+use Drupal\\entity_test\\Entity\\EntityTest;\n+use Drupal\\KernelTests\\KernelTestBase;\n+use Drupal\\layout_builder\\Entity\\LayoutBuilderEntityViewDisplay;\n+use Symfony\\Component\\HttpFoundation\\Request;\n+use Symfony\\Component\\HttpFoundation\\Session\\Session;\n+use Symfony\\Component\\HttpFoundation\\Session\\Storage\\MockArraySessionStorage;\n+use Symfony\\Component\\Routing\\Route;\n+\n+/**\n+ * @covers layout_builder_entity_view_alter\n+ *\n+ * @group layout_builder\n+ */\n+class EntityViewAlterTest extends KernelTestBase {\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected static $modules = [\n+    'layout_discovery',\n+    'layout_builder',\n+    'layout_builder_defaults_test',\n+    'entity_test',\n+    'user',\n+  ];\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected function setUp(): void {\n+    parent::setUp();\n+    entity_test_create_bundle('bundle_with_extra_fields');\n+    $this->installEntitySchema('entity_test');\n+    $this->installConfig(['layout_builder_defaults_test']);\n+  }\n+\n+  /**\n+   * Tests that contextual links are removed when rendering Layout Builder.\n+   */\n+  public function testContextualLinksRemoved(): void {\n+    $display = LayoutBuilderEntityViewDisplay::load('entity_test.bundle_with_extra_fields.default');\n+    $entity = EntityTest::create();\n+    $build = [\n+      '#contextual_links' => ['entity.node.canonical'],\n+    ];\n+    // Create a fake request that starts with layout_builder.\n+    $request = Request::create('<front>');\n+    $request->attributes->set(RouteObjectInterface::ROUTE_NAME, 'layout_builder.test');\n+    $request->attributes->set(RouteObjectInterface::ROUTE_OBJECT, new Route('/'));\n+    $request->setSession(new Session(new MockArraySessionStorage()));\n+    \\Drupal::requestStack()->push($request);\n+    // Assert the contextual links are removed.\n+    layout_builder_entity_view_alter($build, $entity, $display);\n+    $this->assertArrayNotHasKey('#contextual_links', $build);\n+  }\n+\n+}"
                },
                {
                    "sha": "36d5b97703d373d76736f1725c2fd63a8fb92439",
                    "filename": "html/core/modules/link/tests/src/Kernel/LinkItemSerializationTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flink%2Ftests%2Fsrc%2FKernel%2FLinkItemSerializationTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flink%2Ftests%2Fsrc%2FKernel%2FLinkItemSerializationTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flink%2Ftests%2Fsrc%2FKernel%2FLinkItemSerializationTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -96,7 +96,7 @@ public function testLinkDeserialization() {\n       ->set('query', $parsed_url['query']);\n     $json = json_decode($this->serializer->serialize($entity, 'json'), TRUE);\n     $json['field_test'][0]['options'] = 'string data';\n-    $serialized = json_encode($json, TRUE);\n+    $serialized = json_encode($json);\n     $this->expectException(\\LogicException::class);\n     $this->expectExceptionMessage('The generic FieldItemNormalizer cannot denormalize string values for \"options\" properties of the \"field_test\" field (field item class: Drupal\\link\\Plugin\\Field\\FieldType\\LinkItem).');\n     $this->serializer->deserialize($serialized, EntityTest::class, 'json');"
                },
                {
                    "sha": "4c995841a6445305a09c7f2c2141a80f16714c4e",
                    "filename": "html/core/modules/locale/locale.install",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Flocale.install",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Flocale.install",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flocale%2Flocale.install?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -21,6 +21,12 @@ function locale_install() {\n     \\Drupal::configFactory()->getEditable('locale.settings')->set('translation.path', $directory)->save();\n   }\n   \\Drupal::service('file_system')->prepareDirectory($directory, FileSystemInterface::CREATE_DIRECTORY | FileSystemInterface::MODIFY_PERMISSIONS);\n+\n+  $t_args = [\n+    ':translate_status' => base_path() . 'admin/reports/translations/check?destination=' . urlencode(base_path() . 'admin/reports/translations'),\n+  ];\n+  $message = t('Check <a href=\":translate_status\">available translations</a> for your language(s).', $t_args);\n+  \\Drupal::messenger()->addStatus($message);\n }\n \n /**"
                },
                {
                    "sha": "776509cbc3a2daf21de7fbe46e70bb89881b51a2",
                    "filename": "html/core/modules/locale/tests/src/Functional/LocaleInstallTest.php",
                    "status": "added",
                    "additions": 47,
                    "deletions": 0,
                    "changes": 47,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FFunctional%2FLocaleInstallTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FFunctional%2FLocaleInstallTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FFunctional%2FLocaleInstallTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,47 @@\n+<?php\n+\n+declare(strict_types=1);\n+namespace Drupal\\Tests\\locale\\Functional;\n+\n+use Drupal\\Tests\\BrowserTestBase;\n+\n+/**\n+ * Test installation of Locale module.\n+ *\n+ * @group locale\n+ */\n+class LocaleInstallTest extends BrowserTestBase {\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected static $modules = [\n+    'system',\n+    'file',\n+    'language',\n+  ];\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected $defaultTheme = 'stark';\n+\n+  /**\n+   * Tests Locale install message.\n+   */\n+  public function testLocaleInstallMessage(): void {\n+    $admin_user = $this->drupalCreateUser([\n+      'access administration pages',\n+      'administer modules',\n+    ]);\n+    $this->drupalLogin($admin_user);\n+\n+    $edit = [];\n+    $edit['modules[locale][enable]'] = 'locale';\n+    $this->drupalGet('admin/modules');\n+    $this->submitForm($edit, 'Install');\n+\n+    $this->assertSession()->statusMessageContains('available translations', 'status');\n+  }\n+\n+}"
                },
                {
                    "sha": "6cfc2b344dd04ab82e54f1e645c2bd392a967a18",
                    "filename": "html/core/modules/locale/tests/src/Functional/LocalePluralFormatTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FFunctional%2FLocalePluralFormatTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FFunctional%2FLocalePluralFormatTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FFunctional%2FLocalePluralFormatTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -144,7 +144,7 @@ public function testGetPluralFormat() {\n         // Assert that the we get the right translation for that. Change the\n         // expected index as per the logic for translation lookups.\n         $expected_plural_index = ($count == 1) ? 0 : $expected_plural_index;\n-        $expected_plural_string = str_replace('@count', $count, $plural_strings[$langcode][$expected_plural_index]);\n+        $expected_plural_string = str_replace('@count', (string) $count, $plural_strings[$langcode][$expected_plural_index]);\n         $this->assertSame($expected_plural_string, \\Drupal::translation()->formatPlural($count, '@count hour', '@count hours', [], ['langcode' => $langcode])->render(), 'Plural translation of @count hour / @count hours for count ' . $count . ' in ' . $langcode . ' is ' . $expected_plural_string);\n         // DO NOT use translation to pass translated strings into\n         // PluralTranslatableMarkup::createFromTranslatedString() this way. It"
                },
                {
                    "sha": "70c2b5309776f7c86dbd41dc914061a7cdbae6b4",
                    "filename": "html/core/modules/locale/tests/src/Kernel/LocaleConfigSubscriberTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 3,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FKernel%2FLocaleConfigSubscriberTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FKernel%2FLocaleConfigSubscriberTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Flocale%2Ftests%2Fsrc%2FKernel%2FLocaleConfigSubscriberTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -458,7 +458,7 @@ protected function assertNoTranslation(string $config_name, string $langcode): v\n   }\n \n   /**\n-   * Ensures a translation exists and is marked as customized.\n+   * Asserts if a specific translation exists and its customization status.\n    *\n    * @param string $config_name\n    *   The configuration name.\n@@ -467,8 +467,7 @@ protected function assertNoTranslation(string $config_name, string $langcode): v\n    * @param string $langcode\n    *   The language code.\n    * @param bool $customized\n-   *   Whether or not the string should be asserted to be customized or not\n-   *   customized.\n+   *   (optional) Asserts if the translation is customized or not.\n    *\n    * @internal\n    */"
                },
                {
                    "sha": "340d15056f507dd493f3b8547754974c1643dc01",
                    "filename": "html/core/modules/media/src/OEmbed/UrlResolver.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Fsrc%2FOEmbed%2FUrlResolver.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Fsrc%2FOEmbed%2FUrlResolver.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmedia%2Fsrc%2FOEmbed%2FUrlResolver.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -176,7 +176,7 @@ public function getResourceUrl($url, $max_width = NULL, $max_height = NULL) {\n     // provide extra parameters in the query string. For example, Instagram also\n     // supports the 'omitscript' parameter.\n     $this->moduleHandler->alter('oembed_resource_url', $parsed_url, $provider);\n-    $resource_url = $parsed_url['path'] . '?' . rawurldecode(UrlHelper::buildQuery($parsed_url['query']));\n+    $resource_url = $parsed_url['path'] . '?' . UrlHelper::buildQuery($parsed_url['query']);\n \n     $this->urlCache[$url] = $resource_url;\n     $this->cacheBackend->set($cache_id, $resource_url);"
                },
                {
                    "sha": "ac2bb016fa6a1940d84cfe230c778f4b3503ba4c",
                    "filename": "html/core/modules/media/tests/src/Functional/MediaOverviewPageTest.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FMediaOverviewPageTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FMediaOverviewPageTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FMediaOverviewPageTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -86,6 +86,9 @@ public function testMediaOverviewPage() {\n     ]);\n     $media3->save();\n \n+    // Make sure the role save below properly invalidates cache tags.\n+    $this->refreshVariables();\n+\n     // Verify the view is now correctly populated. The non-admin user can only\n     // view published media.\n     $this->grantPermissions($role, [\n@@ -138,6 +141,9 @@ public function testMediaOverviewPage() {\n     $assert_session->elementExists('css', 'td.views-field-operations li a:contains(\"Delete\")', $row1);\n     $assert_session->linkByHrefExists('/media/' . $media1->id() . '/delete');\n \n+    // Make sure the role save below properly invalidates cache tags.\n+    $this->refreshVariables();\n+\n     // Make the user the owner of the unpublished media item and assert the\n     // media item is only visible with the 'view own unpublished media'\n     // permission."
                },
                {
                    "sha": "b0d5c2087753c1783f122345b3414c90b9367bb3",
                    "filename": "html/core/modules/media/tests/src/Functional/Rest/MediaResourceTestBase.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FRest%2FMediaResourceTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FRest%2FMediaResourceTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FRest%2FMediaResourceTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -375,6 +375,9 @@ protected function uploadFile() {\n     static::recursiveKSort($actual);\n     $this->assertSame($expected, $actual);\n \n+    // Make sure the role save below properly invalidates cache tags.\n+    $this->refreshVariables();\n+\n     // To still run the complete test coverage for POSTing a Media entity, we\n     // must revoke the additional permissions that we granted.\n     $role = Role::load(static::$auth ? RoleInterface::AUTHENTICATED_ID : RoleInterface::ANONYMOUS_ID);"
                },
                {
                    "sha": "6c9ca1ebb6ee8f7c90e527ec2de566fd195b7128",
                    "filename": "html/core/modules/media/tests/src/Functional/UrlResolverTest.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FUrlResolverTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FUrlResolverTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmedia%2Ftests%2Fsrc%2FFunctional%2FUrlResolverTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -41,19 +41,19 @@ public function providerEndpointMatching() {\n     return [\n       'match by endpoint: Twitter' => [\n         'https://twitter.com/Dries/status/999985431595880448',\n-        'https://publish.twitter.com/oembed?url=https://twitter.com/Dries/status/999985431595880448',\n+        'https://publish.twitter.com/oembed?url=https%3A//twitter.com/Dries/status/999985431595880448',\n       ],\n       'match by endpoint: Vimeo' => [\n         'https://vimeo.com/14782834',\n-        'https://vimeo.com/api/oembed.json?url=https://vimeo.com/14782834',\n+        'https://vimeo.com/api/oembed.json?url=https%3A//vimeo.com/14782834',\n       ],\n       'match by endpoint: Dailymotion' => [\n         'https://www.dailymotion.com/video/x2vzluh',\n-        'https://www.dailymotion.com/services/oembed?url=https://www.dailymotion.com/video/x2vzluh',\n+        'https://www.dailymotion.com/services/oembed?url=https%3A//www.dailymotion.com/video/x2vzluh',\n       ],\n       'match by endpoint: Facebook' => [\n         'https://www.facebook.com/facebook/videos/10153231379946729/',\n-        'https://www.facebook.com/plugins/video/oembed.json?url=https://www.facebook.com/facebook/videos/10153231379946729/',\n+        'https://www.facebook.com/plugins/video/oembed.json?url=https%3A//www.facebook.com/facebook/videos/10153231379946729/',\n       ],\n     ];\n   }"
                },
                {
                    "sha": "9207e5500ead890820e771fe26def5bb325b969d",
                    "filename": "html/core/modules/media_library/tests/src/Unit/MediaLibrarySelectFormTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 10,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia_library%2Ftests%2Fsrc%2FUnit%2FMediaLibrarySelectFormTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmedia_library%2Ftests%2Fsrc%2FUnit%2FMediaLibrarySelectFormTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmedia_library%2Ftests%2Fsrc%2FUnit%2FMediaLibrarySelectFormTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -14,7 +14,7 @@\n use Drupal\\views\\ResultRow;\n use Drupal\\views\\ViewExecutable;\n use Symfony\\Component\\DependencyInjection\\ContainerBuilder;\n-use Symfony\\Component\\HttpFoundation\\ParameterBag;\n+use Symfony\\Component\\HttpFoundation\\InputBag;\n use Symfony\\Component\\HttpFoundation\\Request;\n \n /**\n@@ -50,18 +50,10 @@ public function testViewsForm(): void {\n     $container->set('string_translation', $this->createMock(TranslationInterface::class));\n     \\Drupal::setContainer($container);\n \n-    $query = $this->getMockBuilder(ParameterBag::class)\n-      ->onlyMethods(['all'])\n-      ->disableOriginalConstructor()\n-      ->getMock();\n-    $query->expects($this->any())\n-      ->method('all')\n-      ->willReturn([]);\n-\n     $request = $this->getMockBuilder(Request::class)\n       ->disableOriginalConstructor()\n       ->getMock();\n-    $request->query = $query;\n+    $request->query = new InputBag();\n \n     $view = $this->getMockBuilder(ViewExecutable::class)\n       ->onlyMethods(['getRequest', 'initStyle', 'getDisplay'])"
                },
                {
                    "sha": "ffdeb3595662a7c17280e3a23689e4867002686e",
                    "filename": "html/core/modules/menu_link_content/src/Form/MenuLinkContentForm.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 3,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_link_content%2Fsrc%2FForm%2FMenuLinkContentForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_link_content%2Fsrc%2FForm%2FMenuLinkContentForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmenu_link_content%2Fsrc%2FForm%2FMenuLinkContentForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -11,6 +11,7 @@\n use Drupal\\Core\\Language\\LanguageManagerInterface;\n use Drupal\\Core\\Menu\\MenuParentFormSelectorInterface;\n use Drupal\\Core\\Path\\PathValidatorInterface;\n+use Drupal\\system\\MenuInterface;\n use Symfony\\Component\\DependencyInjection\\ContainerInterface;\n \n /**\n@@ -92,9 +93,9 @@ public function form(array $form, FormStateInterface $form_state) {\n     $parent_id = $this->entity->getParentId() ?: $this->getRequest()->query->get('parent');\n     $default = $this->entity->getMenuName() . ':' . $parent_id;\n     $id = $this->entity->isNew() ? '' : $this->entity->getPluginId();\n-    if ($this->entity->isNew()) {\n-      $menu_id = $this->entity->getMenuName();\n-      $menu = $this->entityTypeManager->getStorage('menu')->load($menu_id);\n+    $menu_id = $this->entity->getMenuName();\n+    $menu = $this->entityTypeManager->getStorage('menu')->load($menu_id);\n+    if ($menu instanceof MenuInterface && $this->entity->isNew()) {\n       $form['menu_parent'] = $this->menuParentSelector->parentSelectElement($default, $id, [\n         $menu_id => $menu->label(),\n       ]);"
                },
                {
                    "sha": "14d4dcc3c46af3f19a1ad8f8974171287a812692",
                    "filename": "html/core/modules/menu_link_content/tests/src/Kernel/MenuLinksTest.php",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 2,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_link_content%2Ftests%2Fsrc%2FKernel%2FMenuLinksTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_link_content%2Ftests%2Fsrc%2FKernel%2FMenuLinksTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmenu_link_content%2Ftests%2Fsrc%2FKernel%2FMenuLinksTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\menu_link_content\\Kernel;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Menu\\MenuTreeParameters;\n use Drupal\\entity_test\\Entity\\EntityTestExternal;\n use Drupal\\KernelTests\\KernelTestBase;\n@@ -129,7 +128,8 @@ public function assertMenuLinkParents(array $links, array $expected_hierarchy):\n       $menu_link_plugin = $this->menuLinkManager->createInstance($links[$id]);\n       $expected_parent = $links[$parent] ?? '';\n \n-      $this->assertEquals($expected_parent, $menu_link_plugin->getParent(), new FormattableMarkup('Menu link %id has parent of %parent, expected %expected_parent.', ['%id' => $id, '%parent' => $menu_link_plugin->getParent(), '%expected_parent' => $expected_parent]));\n+      $link_parent = $menu_link_plugin->getParent();\n+      $this->assertEquals($expected_parent, $link_parent, \"Menu link $id has parent of $link_parent, expected $expected_parent.\");\n     }\n   }\n \n@@ -459,4 +459,20 @@ public function testMenuLinkContentGetEntity(): void {\n     $this->assertEquals($menu_link->id(), $tree_element->link->getEntity()->id());\n   }\n \n+  /**\n+   * Tests that the form doesn't break for links with arbitrary menu names.\n+   */\n+  public function testMenuLinkContentFormInvalidParentMenu(): void {\n+    $menu_link = MenuLinkContent::create([\n+      'title' => 'Menu link test',\n+      'provider' => 'menu_link_content',\n+      'menu_name' => 'non-existent',\n+      'link' => ['uri' => 'internal:/user/login'],\n+    ]);\n+    // Get the form for a new link, assert that building it doesn't break if\n+    // the links menu name doesn't exist.\n+    $build = \\Drupal::service('entity.form_builder')->getForm($menu_link);\n+    static::assertIsArray($build);\n+  }\n+\n }"
                },
                {
                    "sha": "314d175d74e87f86fa4e26b233b4304cb89e0c7c",
                    "filename": "html/core/modules/menu_ui/menu_ui.module",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_ui%2Fmenu_ui.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_ui%2Fmenu_ui.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmenu_ui%2Fmenu_ui.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -30,7 +30,7 @@ function menu_ui_help($route_name, RouteMatchInterface $route_match) {\n     case 'help.page.menu_ui':\n       $output = '';\n       $output .= '<h2>' . t('About') . '</h2>';\n-      $output .= '<p>' . t('The Menu UI module provides an interface for managing menus. A menu is a hierarchical collection of links, which can be within or external to the site, generally used for navigation. For more information, see the <a href=\":menu\">online documentation for the Menu UI module</a>.', [':menu' => 'https://www.drupal.org/documentation/modules/menu/']) . '</p>';\n+      $output .= '<p>' . t('The Menu UI module provides an interface for managing menus. A menu is a hierarchical collection of links, which can be within or external to the site, generally used for navigation. For more information, see the <a href=\":menu\">online documentation for the Menu UI module</a>.', [':menu' => 'https://www.drupal.org/docs/core-modules-and-themes/core-modules/menu-ui-module']) . '</p>';\n       $output .= '<h2>' . t('Uses') . '</h2>';\n       $output .= '<dl>';\n       $output .= '<dt>' . t('Managing menus') . '</dt>';"
                },
                {
                    "sha": "5a6621b4e3b8278037062045225f73c5378f3678",
                    "filename": "html/core/modules/menu_ui/tests/src/Functional/MenuUiTest.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 5,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_ui%2Ftests%2Fsrc%2FFunctional%2FMenuUiTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmenu_ui%2Ftests%2Fsrc%2FFunctional%2FMenuUiTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmenu_ui%2Ftests%2Fsrc%2FFunctional%2FMenuUiTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1130,36 +1130,36 @@ private function verifyAccess($response = 200) {\n     $this->drupalGet('admin/help/menu');\n     $this->assertSession()->statusCodeEquals($response);\n     if ($response == 200) {\n-      $this->assertSession()->pageTextContains('Menu', 'Menu help was displayed');\n+      $this->assertSession()->pageTextContains('Menu');\n     }\n \n     // View menu build overview page.\n     $this->drupalGet('admin/structure/menu');\n     $this->assertSession()->statusCodeEquals($response);\n     if ($response == 200) {\n-      $this->assertSession()->pageTextContains('Menus', 'Menu build overview page was displayed');\n+      $this->assertSession()->pageTextContains('Menus');\n     }\n \n     // View tools menu customization page.\n     $this->drupalGet('admin/structure/menu/manage/' . $this->menu->id());\n     $this->assertSession()->statusCodeEquals($response);\n     if ($response == 200) {\n-      $this->assertSession()->pageTextContains('Tools', 'Tools menu page was displayed');\n+      $this->assertSession()->pageTextContains('Tools');\n     }\n \n     // View menu edit page for a static link.\n     $item = $this->getStandardMenuLink();\n     $this->drupalGet('admin/structure/menu/link/' . $item->getPluginId() . '/edit');\n     $this->assertSession()->statusCodeEquals($response);\n     if ($response == 200) {\n-      $this->assertSession()->pageTextContains('Edit menu item', 'Menu edit page was displayed');\n+      $this->assertSession()->pageTextContains('Edit menu item');\n     }\n \n     // View add menu page.\n     $this->drupalGet('admin/structure/menu/add');\n     $this->assertSession()->statusCodeEquals($response);\n     if ($response == 200) {\n-      $this->assertSession()->pageTextContains('Menus', 'Add menu page was displayed');\n+      $this->assertSession()->pageTextContains('Menus');\n     }\n   }\n "
                },
                {
                    "sha": "12a3aef7124dbf63c4b279db6c5e2f1cccd080b4",
                    "filename": "html/core/modules/migrate/src/Plugin/MigrateDestinationInterface.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 1,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2FMigrateDestinationInterface.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2FMigrateDestinationInterface.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2FMigrateDestinationInterface.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -98,7 +98,9 @@ public function fields();\n    * @param \\Drupal\\migrate\\Row $row\n    *   The row object.\n    * @param array $old_destination_id_values\n-   *   (optional) The old destination IDs. Defaults to an empty array.\n+   *   (optional) The destination IDs from the previous import of this source\n+   *   row. This is empty the first time a source row is migrated. Defaults to\n+   *   an empty array.\n    *\n    * @return array|bool\n    *   An indexed array of destination IDs in the same order as defined in the"
                },
                {
                    "sha": "54d55cfb0332567419525b80bb62ffa1025b07f3",
                    "filename": "html/core/modules/migrate/src/Plugin/migrate/id_map/Sql.php",
                    "status": "modified",
                    "additions": 12,
                    "deletions": 3,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2Fmigrate%2Fid_map%2FSql.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2Fmigrate%2Fid_map%2FSql.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2Fmigrate%2Fid_map%2FSql.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -590,14 +590,23 @@ public function getRowsNeedingUpdate($count) {\n   public function lookupSourceId(array $destination_id_values) {\n     $source_id_fields = $this->sourceIdFields();\n     $query = $this->getDatabase()->select($this->mapTableName(), 'map');\n+    // To allow source field names to be defined with spaces and special\n+    // characters, create an alias map of column alias to source field name,\n+    // since SQL column aliases do not support spaces or special characters.\n+    $alias_map = [];\n     foreach ($source_id_fields as $source_field_name => $id_map_field_name) {\n-      $query->addField('map', $id_map_field_name, $source_field_name);\n+      $alias = $query->addField('map', $id_map_field_name);\n+      $alias_map[$alias] = $source_field_name;\n     }\n     foreach ($this->destinationIdFields() as $field_name => $destination_id) {\n       $query->condition(\"map.$destination_id\", $destination_id_values[$field_name], '=');\n     }\n-    $result = $query->execute();\n-    return $result->fetchAssoc() ?: [];\n+    $result = $query->execute()->fetchAssoc() ?: [];\n+    $source_ids = [];\n+    foreach ($result as $alias => $id) {\n+      $source_ids[$alias_map[$alias]] = $id;\n+    }\n+    return $source_ids;\n   }\n \n   /**"
                },
                {
                    "sha": "0b4c76958cc346c7e9d9bfefc8a0f40dcc574e24",
                    "filename": "html/core/modules/migrate/src/Plugin/migrate/source/SqlBase.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2Fmigrate%2Fsource%2FSqlBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2Fmigrate%2Fsource%2FSqlBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmigrate%2Fsrc%2FPlugin%2Fmigrate%2Fsource%2FSqlBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -63,7 +63,7 @@\n  * For a complete example on migrating data from an SQL source, refer to\n  * https://www.drupal.org/docs/8/api/migrate-api/migrating-data-from-sql-source\n  *\n- * @see https://www.drupal.org/docs/8/api/database-api\n+ * @see https://www.drupal.org/docs/drupal-apis/database-api\n  * @see \\Drupal\\migrate_drupal\\Plugin\\migrate\\source\\DrupalSqlBase\n  */\n abstract class SqlBase extends SourcePluginBase implements ContainerFactoryPluginInterface, RequirementsInterface {"
                },
                {
                    "sha": "c7784eea0034f68a71f3d7e297a81bcf7d0dfdb9",
                    "filename": "html/core/modules/migrate/tests/src/Kernel/MigrateSourceTestBase.php",
                    "status": "modified",
                    "additions": 23,
                    "deletions": 18,
                    "changes": 41,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Ftests%2Fsrc%2FKernel%2FMigrateSourceTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Ftests%2Fsrc%2FKernel%2FMigrateSourceTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmigrate%2Ftests%2Fsrc%2FKernel%2FMigrateSourceTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -10,6 +10,29 @@\n \n /**\n  * Base class for tests of Migrate source plugins.\n+ *\n+ * Implementing classes must declare a providerSource() method for this class\n+ * to work, defined as follows:\n+ *\n+ * @code\n+ * abstract public static function providerSource(): array;\n+ * @endcode\n+ *\n+ * The returned array should be as follows:\n+ *\n+ * @code\n+ *    Array of data sets to test, each of which is a numerically indexed array\n+ *    with the following elements:\n+ *    - An array of source data, which can be optionally processed and set up\n+ *      by subclasses.\n+ *    - An array of expected result rows.\n+ *    - (optional) The number of result rows the plugin under test is expected\n+ *      to return. If this is not a numeric value, the plugin will not be\n+ *      counted.\n+ *    - (optional) Array of configuration options for the plugin under test.\n+ * @endcode\n+ *\n+ * @see \\Drupal\\Tests\\migrate\\Kernel\\MigrateSourceTestBase::testSource\n  */\n abstract class MigrateSourceTestBase extends KernelTestBase {\n \n@@ -32,24 +55,6 @@ abstract class MigrateSourceTestBase extends KernelTestBase {\n    */\n   protected $plugin;\n \n-  /**\n-   * The data provider.\n-   *\n-   * @see \\Drupal\\Tests\\migrate\\Kernel\\MigrateSourceTestBase::testSource\n-   *\n-   * @return array\n-   *   Array of data sets to test, each of which is a numerically indexed array\n-   *   with the following elements:\n-   *   - An array of source data, which can be optionally processed and set up\n-   *     by subclasses.\n-   *   - An array of expected result rows.\n-   *   - (optional) The number of result rows the plugin under test is expected\n-   *     to return. If this is not a numeric value, the plugin will not be\n-   *     counted.\n-   *   - (optional) Array of configuration options for the plugin under test.\n-   */\n-  abstract public function providerSource();\n-\n   /**\n    * {@inheritdoc}\n    */"
                },
                {
                    "sha": "afcb0cde8dced1a581f6fd1a11e500bac141cf1c",
                    "filename": "html/core/modules/migrate/tests/src/Unit/MigrateSqlIdMapTest.php",
                    "status": "modified",
                    "additions": 38,
                    "deletions": 2,
                    "changes": 40,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Ftests%2Fsrc%2FUnit%2FMigrateSqlIdMapTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmigrate%2Ftests%2Fsrc%2FUnit%2FMigrateSqlIdMapTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmigrate%2Ftests%2Fsrc%2FUnit%2FMigrateSqlIdMapTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -625,6 +625,42 @@ public function lookupSourceIdMappingDataProvider() {\n    * @dataProvider lookupSourceIdMappingDataProvider\n    */\n   public function testLookupSourceIdMapping($num_source_fields, $num_destination_fields) {\n+    $source_id_property_prefix = 'source_id_property_';\n+    $this->doTestLookupSourceIdMapping($num_source_fields, $num_destination_fields, $source_id_property_prefix);\n+  }\n+\n+  /**\n+   * Performs the source ID test on source and destination fields.\n+   *\n+   * This performs same test as ::testLookupSourceIdMapping, except with source\n+   * property names including spaces and special characters not allowed in SQL\n+   * column aliases.\n+   *\n+   * @param int $num_source_fields\n+   *   Number of source fields to test.\n+   * @param int $num_destination_fields\n+   *   Number of destination fields to test.\n+   *\n+   * @dataProvider lookupSourceIdMappingDataProvider\n+   */\n+  public function testLookupSourceIdMappingNonSqlCharacters($num_source_fields, $num_destination_fields) {\n+    $source_id_property_prefix = '$ource id property * ';\n+    $this->doTestLookupSourceIdMapping($num_source_fields, $num_destination_fields, $source_id_property_prefix);\n+  }\n+\n+  /**\n+   * Performs the source ID test on source and destination fields.\n+   *\n+   * @param int $num_source_fields\n+   *   Number of source fields to test.\n+   * @param int $num_destination_fields\n+   *   Number of destination fields to test.\n+   * @param string $source_id_property_prefix\n+   *   Prefix for the source ID properties.\n+   *\n+   * @dataProvider lookupSourceIdMappingDataProvider\n+   */\n+  public function doTestLookupSourceIdMapping(int $num_source_fields, int $num_destination_fields, string $source_id_property_prefix): void {\n     // Adjust the migration configuration according to the number of source and\n     // destination fields.\n     $this->sourceIds = [];\n@@ -635,8 +671,8 @@ public function testLookupSourceIdMapping($num_source_fields, $num_destination_f\n     for ($i = 1; $i <= $num_source_fields; $i++) {\n       $row[\"sourceid$i\"] = \"source_id_value_$i\";\n       $source_ids_values = [$row[\"sourceid$i\"]];\n-      $expected_result[\"source_id_property_$i\"] = \"source_id_value_$i\";\n-      $this->sourceIds[\"source_id_property_$i\"] = [];\n+      $expected_result[$source_id_property_prefix . $i] = \"source_id_value_$i\";\n+      $this->sourceIds[$source_id_property_prefix . $i] = [];\n     }\n     $destination_id_values = [];\n     $nonexistent_id_values = [];"
                },
                {
                    "sha": "a2d7fcbabb86cdf08b78591ae7f71d39eda157d7",
                    "filename": "html/core/modules/mysql/tests/src/Kernel/mysql/TemporaryQueryTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmysql%2Ftests%2Fsrc%2FKernel%2Fmysql%2FTemporaryQueryTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fmysql%2Ftests%2Fsrc%2FKernel%2Fmysql%2FTemporaryQueryTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fmysql%2Ftests%2Fsrc%2FKernel%2Fmysql%2FTemporaryQueryTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -23,7 +23,7 @@ public function testTemporaryQuery() {\n \n     // Assert that the table is indeed a temporary one.\n     $temporary_table_info = $connection->query(\"SHOW CREATE TABLE {\" . $table_name_test . \"}\")->fetchAssoc();\n-    $this->stringContains($temporary_table_info[\"Create Table\"], \"CREATE TEMPORARY TABLE\");\n+    $this->assertStringContainsString('CREATE TEMPORARY TABLE', $temporary_table_info['Create Table']);\n \n     // Assert that both have the same field names.\n     $normal_table_fields = $connection->query(\"SELECT * FROM {test}\")->fetch();"
                },
                {
                    "sha": "5c138c4683f1cda478b5d20cd4bc470a9fa000c7",
                    "filename": "html/core/modules/node/migrations/d6_node_type.yml",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 2,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fmigrations%2Fd6_node_type.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fmigrations%2Fd6_node_type.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Fmigrations%2Fd6_node_type.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -21,7 +21,23 @@ process:\n   'settings/node/options': options\n   create_body: has_body\n   create_body_label: body_label\n-  'third_party_settings/menu_ui/available_menus': available_menus\n-  'third_party_settings/menu_ui/parent': parent\n+  'third_party_settings/menu_ui/available_menus':\n+    plugin: static_map\n+    bypass: true\n+    source: available_menus\n+    map:\n+      main-menu: main\n+      management: admin\n+      navigation: tools\n+      user-menu: account\n+  'third_party_settings/menu_ui/parent':\n+    plugin: static_map\n+    bypass: true\n+    source: parent\n+    map:\n+      'main-menu:': 'main:'\n+      'management:': 'admin:'\n+      'navigation:': 'tools:'\n+      'user-menu:': 'account:'\n destination:\n   plugin: entity:node_type"
                },
                {
                    "sha": "bd9c727f4358cc7fee18a3674b2809de5a204988",
                    "filename": "html/core/modules/node/migrations/d7_node_type.yml",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 2,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fmigrations%2Fd7_node_type.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fmigrations%2Fd7_node_type.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Fmigrations%2Fd7_node_type.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -18,7 +18,23 @@ process:\n   new_revision: 'options/revision'\n   create_body: create_body\n   create_body_label: body_label\n-  'third_party_settings/menu_ui/available_menus': available_menus\n-  'third_party_settings/menu_ui/parent': parent\n+  'third_party_settings/menu_ui/available_menus':\n+    plugin: static_map\n+    bypass: true\n+    source: available_menus\n+    map:\n+      main-menu: main\n+      management: admin\n+      navigation: tools\n+      user-menu: account\n+  'third_party_settings/menu_ui/parent':\n+    plugin: static_map\n+    bypass: true\n+    source: parent\n+    map:\n+      'main-menu:0:': 'main:'\n+      'management:0:': 'admin:'\n+      'navigation:0:': 'tools:'\n+      'user-menu:0:': 'account:'\n destination:\n   plugin: entity:node_type"
                },
                {
                    "sha": "74df9184ce3b078256d0fcbbed083bde297a0501",
                    "filename": "html/core/modules/node/node.module",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fnode.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fnode.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Fnode.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -56,7 +56,7 @@ function node_help($route_name, RouteMatchInterface $route_match) {\n     case 'help.page.node':\n       $output = '';\n       $output .= '<h2>' . t('About') . '</h2>';\n-      $output .= '<p>' . t('The Node module manages the creation, editing, deletion, settings, and display of the main site content. Content items managed by the Node module are typically displayed as pages on your site, and include a title, some meta-data (author, creation time, content type, etc.), and optional fields containing text or other data (fields are managed by the <a href=\":field\">Field module</a>). For more information, see the <a href=\":node\">online documentation for the Node module</a>.', [':node' => 'https://www.drupal.org/documentation/modules/node', ':field' => Url::fromRoute('help.page', ['name' => 'field'])->toString()]) . '</p>';\n+      $output .= '<p>' . t('The Node module manages the creation, editing, deletion, settings, and display of the main site content. Content items managed by the Node module are typically displayed as pages on your site, and include a title, some meta-data (author, creation time, content type, etc.), and optional fields containing text or other data (fields are managed by the <a href=\":field\">Field module</a>). For more information, see the <a href=\":node\">online documentation for the Node module</a>.', [':node' => 'https://www.drupal.org/docs/core-modules-and-themes/core-modules/node-module', ':field' => Url::fromRoute('help.page', ['name' => 'field'])->toString()]) . '</p>';\n       $output .= '<h2>' . t('Uses') . '</h2>';\n       $output .= '<dl>';\n       $output .= '<dt>' . t('Creating content') . '</dt>';"
                },
                {
                    "sha": "b4ab0b5d0f908bc5df99b8d7662bc4e4098ac625",
                    "filename": "html/core/modules/node/src/NodeViewBuilder.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 1,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fsrc%2FNodeViewBuilder.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Fsrc%2FNodeViewBuilder.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Fsrc%2FNodeViewBuilder.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -119,7 +119,9 @@ public static function renderLinks($node_entity_id, $view_mode, $langcode, $is_i\n    *   A view mode identifier.\n    *\n    * @return array\n-   *   An array that can be processed by drupal_pre_render_links().\n+   *   An array that can be processed by Link::preRenderLinks().\n+   *\n+   * @see \\Drupal\\Core\\Render\\Element\\Link::preRenderLinks()\n    */\n   protected static function buildLinks(NodeInterface $entity, $view_mode) {\n     $links = [];"
                },
                {
                    "sha": "641fd709a058dc4c26cb03b01d5171c8ec60017b",
                    "filename": "html/core/modules/node/tests/src/Functional/NodeRevisionsAllTest.php",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FNodeRevisionsAllTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FNodeRevisionsAllTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FNodeRevisionsAllTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -63,9 +63,6 @@ protected function setUp(): void {\n     // This must be different from user performing revert.\n     $this->revisionUser = $this->drupalCreateUser();\n \n-    $settings = get_object_vars($node);\n-    $settings['revision'] = 1;\n-\n     $nodes = [];\n     $logs = [];\n "
                },
                {
                    "sha": "fd0e3332b2b13a14852b95641626cbc49e1150ac",
                    "filename": "html/core/modules/node/tests/src/Functional/NodeRevisionsTest.php",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FNodeRevisionsTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FNodeRevisionsTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FNodeRevisionsTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -95,9 +95,6 @@ protected function setUp(): void {\n \n     // Create initial node.\n     $node = $this->drupalCreateNode();\n-    $settings = get_object_vars($node);\n-    $settings['revision'] = 1;\n-    $settings['isDefaultRevision'] = TRUE;\n \n     $nodes = [];\n     $logs = [];"
                },
                {
                    "sha": "8f780ed07b439626f023deec663a9ee4137f8b15",
                    "filename": "html/core/modules/node/tests/src/Functional/Rest/NodeResourceTestBase.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FRest%2FNodeResourceTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FRest%2FNodeResourceTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FFunctional%2FRest%2FNodeResourceTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -255,6 +255,9 @@ public function testPatchPath() {\n     $this->assertSame('/llama', $this->entityStorage->loadUnchanged($this->entity->id())->get('path')->alias);\n     $this->assertResourceErrorResponse(403, \"Access denied on updating field 'path'. \" . static::$patchProtectedFieldNames['path'], $response);\n \n+    // Make sure the role save below properly invalidates cache tags.\n+    $this->refreshVariables();\n+\n     // Grant permission to create URL aliases.\n     $this->grantPermissionsToTestedRole(['create url aliases']);\n "
                },
                {
                    "sha": "71e27caf827c8e933c27f1d508642293118b59d8",
                    "filename": "html/core/modules/node/tests/src/Kernel/Migrate/d6/MigrateNodeTypeTest.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 6,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FMigrate%2Fd6%2FMigrateNodeTypeTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FMigrate%2Fd6%2FMigrateNodeTypeTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FMigrate%2Fd6%2FMigrateNodeTypeTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -45,9 +45,9 @@ public function testNodeType() {\n     $this->assertSame('This is the body field label', $field->getLabel(), 'Body field was found.');\n \n     // Test default menus.\n-    $expected_available_menus = ['navigation'];\n+    $expected_available_menus = ['tools'];\n     $this->assertSame($expected_available_menus, $node_type_page->getThirdPartySetting('menu_ui', 'available_menus'));\n-    $expected_parent = 'navigation:';\n+    $expected_parent = 'tools:';\n     $this->assertSame($expected_parent, $node_type_page->getThirdPartySetting('menu_ui', 'parent'));\n \n     // Test the test_story content type.\n@@ -64,9 +64,9 @@ public function testNodeType() {\n     $this->assertNull($field, 'No body field found');\n \n     // Test default menus.\n-    $expected_available_menus = ['navigation'];\n+    $expected_available_menus = ['tools'];\n     $this->assertSame($expected_available_menus, $node_type_story->getThirdPartySetting('menu_ui', 'available_menus'));\n-    $expected_parent = 'navigation:';\n+    $expected_parent = 'tools:';\n     $this->assertSame($expected_parent, $node_type_story->getThirdPartySetting('menu_ui', 'parent'));\n \n     // Test the test_event content type.\n@@ -82,9 +82,9 @@ public function testNodeType() {\n     $field = FieldConfig::loadByName('node', 'test_event', 'body');\n     $this->assertSame('Body', $field->getLabel(), 'Body field was found.');\n \n-    $expected_available_menus = ['navigation'];\n+    $expected_available_menus = ['tools'];\n     $this->assertSame($expected_available_menus, $node_type_event->getThirdPartySetting('menu_ui', 'available_menus'));\n-    $expected_parent = 'navigation:';\n+    $expected_parent = 'tools:';\n     $this->assertSame($expected_parent, $node_type_event->getThirdPartySetting('menu_ui', 'parent'));\n \n     // Test the 32 character type name exists."
                },
                {
                    "sha": "fce725328c21178231d78d24a5f1e58a6c1d9db3",
                    "filename": "html/core/modules/node/tests/src/Kernel/Migrate/d7/MigrateNodeTypeTest.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 6,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FMigrate%2Fd7%2FMigrateNodeTypeTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FMigrate%2Fd7%2FMigrateNodeTypeTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FMigrate%2Fd7%2FMigrateNodeTypeTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -81,8 +81,8 @@ protected function assertEntity(string $id, string $label, string $description,\n    * Tests Drupal 7 node type to Drupal 8 migration.\n    */\n   public function testNodeType() {\n-    $expected_available_menus = ['main-menu'];\n-    $expected_parent = 'main-menu:0:';\n+    $expected_available_menus = ['main'];\n+    $expected_parent = 'main:';\n \n     $this->assertEntity('article', 'Article', 'Use <em>articles</em> for time-sensitive content like news, press releases or blog posts.', 'Help text for articles', TRUE, FALSE, $expected_available_menus, $expected_parent, \"Body\");\n     $this->assertEntity('blog', 'Blog entry', 'Use for multi-user blogs. Every user gets a personal blog.', 'Blog away, good sir!', TRUE, FALSE, $expected_available_menus, $expected_parent, 'Body');\n@@ -95,10 +95,10 @@ public function testNodeType() {\n \n     // This node type does not carry a body field.\n     $expected_available_menus = [\n-      'main-menu',\n-      'management',\n-      'navigation',\n-      'user-menu',\n+      'main',\n+      'admin',\n+      'tools',\n+      'account',\n     ];\n     $this->assertEntity('test_content_type', 'Test content type', 'This is the description of the test content type.', 'Help text for test content type', FALSE, TRUE, $expected_available_menus, $expected_parent);\n   }"
                },
                {
                    "sha": "e96c45538a87b587d4d5a1b1e47ae92d468804a0",
                    "filename": "html/core/modules/node/tests/src/Kernel/NodeAccessTestBase.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 8,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FNodeAccessTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FNodeAccessTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FNodeAccessTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\node\\Kernel;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Session\\AccountInterface;\n use Drupal\\KernelTests\\KernelTestBase;\n use Drupal\\node\\NodeInterface;\n@@ -137,13 +136,11 @@ public function assertNodeCreateAccess(string $bundle, bool $result, AccountInte\n    *   about the node access permission test that was performed.\n    */\n   public function nodeAccessAssertMessage($operation, $result, $langcode = NULL) {\n-    return new FormattableMarkup(\n-      'Node access returns @result with operation %op, language code %langcode.',\n-      [\n-        '@result' => $result ? 'true' : 'false',\n-        '%op' => $operation,\n-        '%langcode' => !empty($langcode) ? $langcode : 'empty',\n-      ]\n+    return sprintf(\n+     'Node access returns %s with operation %s, language code %s.',\n+     $result ? 'true' : 'false',\n+     $operation,\n+     !empty($langcode) ? $langcode : 'empty',\n     );\n   }\n "
                },
                {
                    "sha": "c4fbd04d314d32e69415b313d264e66395521d83",
                    "filename": "html/core/modules/node/tests/src/Kernel/Views/PathPluginTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FViews%2FPathPluginTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FViews%2FPathPluginTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FViews%2FPathPluginTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -86,7 +86,7 @@ public function testPathPlugin(): void {\n \n     // Test with view_mode full.\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     foreach ($this->nodes as $node) {\n       $this->assertStringContainsString('This is <strong>not escaped</strong> and this is ' . $node->toLink('the link')->toString(), $output, 'Make sure path field rewriting is not escaped.');\n     }"
                },
                {
                    "sha": "251ee45dc50ccc3de06cd66592b22889844094ba",
                    "filename": "html/core/modules/node/tests/src/Kernel/Views/RowPluginTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FViews%2FRowPluginTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FViews%2FRowPluginTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fnode%2Ftests%2Fsrc%2FKernel%2FViews%2FRowPluginTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -98,7 +98,7 @@ public function testRowPlugin(): void {\n \n     // Test with view_mode full.\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     foreach ($this->nodes as $node) {\n       $this->assertStringNotContainsString($node->body->summary, $output, 'Make sure the teaser appears in the output of the view.');\n       $this->assertStringContainsString($node->body->value, $output, 'Make sure the full text appears in the output of the view.');\n@@ -107,7 +107,7 @@ public function testRowPlugin(): void {\n     // Test with teasers.\n     $view->rowPlugin->options['view_mode'] = 'teaser';\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     foreach ($this->nodes as $node) {\n       $this->assertStringContainsString($node->body->summary, $output, 'Make sure the teaser appears in the output of the view.');\n       $this->assertStringNotContainsString($node->body->value, $output);"
                },
                {
                    "sha": "ccf3c9577ae0a547b46f1ee310e0d9818e4c91cd",
                    "filename": "html/core/modules/responsive_image/tests/src/Functional/ResponsiveImageFieldDisplayTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fresponsive_image%2Ftests%2Fsrc%2FFunctional%2FResponsiveImageFieldDisplayTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fresponsive_image%2Ftests%2Fsrc%2FFunctional%2FResponsiveImageFieldDisplayTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fresponsive_image%2Ftests%2Fsrc%2FFunctional%2FResponsiveImageFieldDisplayTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -213,7 +213,7 @@ protected function doTestResponsiveImageFieldFormatters($scheme, $empty_styles =\n       '#alt' => $alt,\n       '#attributes' => ['loading' => 'lazy'],\n     ];\n-    $default_output = str_replace(\"\\n\", '', $renderer->renderRoot($image));\n+    $default_output = str_replace(\"\\n\", '', (string) $renderer->renderRoot($image));\n     $this->assertSession()->responseContains($default_output);\n \n     // Test field not being configured. This should not cause a fatal error.\n@@ -341,7 +341,7 @@ protected function doTestResponsiveImageFieldFormatters($scheme, $empty_styles =\n     // The image.html.twig template has a newline after the <img> tag but\n     // responsive-image.html.twig doesn't have one after the fallback image, so\n     // we remove it here.\n-    $default_output = trim($renderer->renderRoot($fallback_image));\n+    $default_output = trim((string) $renderer->renderRoot($fallback_image));\n     $this->assertSession()->responseContains($default_output);\n \n     if ($scheme == 'private') {"
                },
                {
                    "sha": "5eaea98aacc644d6a466787b991df7a496168a5c",
                    "filename": "html/core/modules/responsive_image/tests/src/Unit/ResponsiveImageStyleConfigEntityUnitTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fresponsive_image%2Ftests%2Fsrc%2FUnit%2FResponsiveImageStyleConfigEntityUnitTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fresponsive_image%2Ftests%2Fsrc%2FUnit%2FResponsiveImageStyleConfigEntityUnitTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fresponsive_image%2Ftests%2Fsrc%2FUnit%2FResponsiveImageStyleConfigEntityUnitTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -86,7 +86,7 @@ public function testCalculateDependencies() {\n       ->with('image_style')\n       ->willReturn($storage);\n \n-    $entity_type_repository = $this->getMockForAbstractClass(EntityTypeRepositoryInterface::class);\n+    $entity_type_repository = $this->createMock(EntityTypeRepositoryInterface::class);\n     $entity_type_repository->expects($this->any())\n       ->method('getEntityTypeFromClass')\n       ->with('Drupal\\image\\Entity\\ImageStyle')"
                },
                {
                    "sha": "b2d076dedb9e50da57e1df0169235734879ec3cf",
                    "filename": "html/core/modules/rest/tests/src/Functional/CookieResourceTestTrait.php",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FFunctional%2FCookieResourceTestTrait.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FFunctional%2FCookieResourceTestTrait.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FFunctional%2FCookieResourceTestTrait.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -109,10 +109,6 @@ protected function assertResponseWhenMissingAuthentication($method, ResponseInte\n       if (in_array('user.permissions', $expected_cookie_403_cacheability->getCacheContexts(), TRUE)) {\n         $expected_cookie_403_cacheability->addCacheTags(['config:user.role.anonymous']);\n       }\n-      // @todo Fix \\Drupal\\block\\BlockAccessControlHandler::mergeCacheabilityFromConditions() in https://www.drupal.org/node/2867881\n-      if (static::$entityTypeId === 'block') {\n-        $expected_cookie_403_cacheability->setCacheTags(str_replace('user:2', 'user:0', $expected_cookie_403_cacheability->getCacheTags()));\n-      }\n       $this->assertResourceErrorResponse(403, FALSE, $response, $expected_cookie_403_cacheability->getCacheTags(), $expected_cookie_403_cacheability->getCacheContexts(), 'MISS', FALSE);\n     }\n     else {"
                },
                {
                    "sha": "64ec7ed09bdf431514ce26c1ba6f63456d1c3318",
                    "filename": "html/core/modules/rest/tests/src/Functional/ResourceTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FFunctional%2FResourceTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FFunctional%2FResourceTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FFunctional%2FResourceTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -15,6 +15,7 @@\n  * Tests the structure of a REST resource.\n  *\n  * @group rest\n+ * @group #slow\n  */\n class ResourceTest extends BrowserTestBase {\n "
                },
                {
                    "sha": "7ef03be11164f813203fd897de937ada2aec26d1",
                    "filename": "html/core/modules/rest/tests/src/Unit/CollectRoutesTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 4,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FUnit%2FCollectRoutesTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FUnit%2FCollectRoutesTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FUnit%2FCollectRoutesTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -7,6 +7,7 @@\n use Drupal\\Tests\\UnitTestCase;\n use Drupal\\Core\\DependencyInjection\\ContainerBuilder;\n use Drupal\\rest\\Plugin\\views\\display\\RestExport;\n+use Drupal\\views\\Entity\\View;\n use Symfony\\Component\\Routing\\Route;\n use Symfony\\Component\\Routing\\RouteCollection;\n \n@@ -41,10 +42,7 @@ protected function setUp(): void {\n       ->disableOriginalConstructor()\n       ->getMock();\n \n-    $view = $this->getMockBuilder('\\Drupal\\views\\Entity\\View')\n-      ->addMethods(['initHandlers'])\n-      ->setConstructorArgs([['id' => 'test_view'], 'view'])\n-      ->getMock();\n+    $view = new View(['id' => 'test_view'], 'view');\n \n     $view_executable = $this->getMockBuilder('\\Drupal\\views\\ViewExecutable')\n       ->onlyMethods(['initHandlers', 'getTitle'])"
                },
                {
                    "sha": "e809f8eba00dfc8fa1005fd380e5408c6bd8d9db",
                    "filename": "html/core/modules/rest/tests/src/Unit/EntityResourceValidationTraitTest.php",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FUnit%2FEntityResourceValidationTraitTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FUnit%2FEntityResourceValidationTraitTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Frest%2Ftests%2Fsrc%2FUnit%2FEntityResourceValidationTraitTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -75,7 +75,6 @@ public function testFailedValidate() {\n /**\n  * A test class to use to test EntityResourceValidationTrait.\n  *\n- * Using ->getMockForTrait is problematic, as this trait is marked internal.\n  * Because the mock doesn't use the \\Drupal namespace, the Symfony 4+ class\n  * loader will throw a deprecation error.\n  */"
                },
                {
                    "sha": "55855f00c775c54826f7ab7ea985e3c84568d5f6",
                    "filename": "html/core/modules/search/tests/src/Functional/SearchMultilingualEntityTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsearch%2Ftests%2Fsrc%2FFunctional%2FSearchMultilingualEntityTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsearch%2Ftests%2Fsrc%2FFunctional%2FSearchMultilingualEntityTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsearch%2Ftests%2Fsrc%2FFunctional%2FSearchMultilingualEntityTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -159,7 +159,7 @@ public function testMultilingualSearch() {\n     // Make sure index throttle is high enough, via the UI.\n     $this->drupalGet('admin/config/search/pages');\n     $this->submitForm(['cron_limit' => 20], 'Save configuration');\n-    $this->assertEquals(20, $this->config('search.settings')->get('index.cron_limit', 100), 'Config setting was saved correctly');\n+    $this->assertEquals(20, $this->config('search.settings')->get('index.cron_limit'), 'Config setting was saved correctly');\n     // Get a new search plugin, to make sure it has this setting.\n     $this->plugin = $this->container->get('plugin.manager.search')->createInstance('node_search');\n "
                },
                {
                    "sha": "e20debaf0a38c9491937382262c571d919ba1396",
                    "filename": "html/core/modules/shortcut/shortcut.module",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fshortcut%2Fshortcut.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fshortcut%2Fshortcut.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fshortcut%2Fshortcut.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -22,7 +22,7 @@ function shortcut_help($route_name, RouteMatchInterface $route_match) {\n   switch ($route_name) {\n     case 'help.page.shortcut':\n       $output = '<h2>' . t('About') . '</h2>';\n-      $output .= '<p>' . t('The Shortcut module allows users to create sets of <em>shortcut</em> links to commonly-visited pages of the site. Shortcuts are contained within <em>sets</em>. Each user with <em>Select any shortcut set</em> permission can select a shortcut set created by anyone at the site. For more information, see the <a href=\":shortcut\">online documentation for the Shortcut module</a>.', [':shortcut' => 'https://www.drupal.org/documentation/modules/shortcut']) . '</p>';\n+      $output .= '<p>' . t('The Shortcut module allows users to create sets of <em>shortcut</em> links to commonly-visited pages of the site. Shortcuts are contained within <em>sets</em>. Each user with <em>Select any shortcut set</em> permission can select a shortcut set created by anyone at the site. For more information, see the <a href=\":shortcut\">online documentation for the Shortcut module</a>.', [':shortcut' => 'https://www.drupal.org/docs/8/core/modules/shortcut']) . '</p>';\n       $output .= '<h2>' . t('Uses') . '</h2>';\n       $output .= '<dl><dt>' . t('Administering shortcuts') . '</dt>';\n       $output .= '<dd>' . t('Users with the <em>Administer shortcuts</em> permission can manage shortcut sets and edit the shortcuts within sets from the <a href=\":shortcuts\">Shortcuts administration page</a>.', [':shortcuts' => Url::fromRoute('entity.shortcut_set.collection')->toString()]) . '</dd>';"
                },
                {
                    "sha": "7f652abc880891017feaf87199cf61a03ebcf2bb",
                    "filename": "html/core/modules/shortcut/tests/src/Functional/ShortcutLinksTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fshortcut%2Ftests%2Fsrc%2FFunctional%2FShortcutLinksTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fshortcut%2Ftests%2Fsrc%2FFunctional%2FShortcutLinksTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fshortcut%2Ftests%2Fsrc%2FFunctional%2FShortcutLinksTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -466,7 +466,7 @@ public function testShortcutBlockAccess() {\n    */\n   protected function assertShortcutQuickLink(string $label, int $index = 0, string $message = ''): void {\n     $links = $this->xpath('//a[normalize-space()=:label]', [':label' => $label]);\n-    $message = ($message ? $message : new FormattableMarkup('Shortcut quick link with label %label found.', ['%label' => $label]));\n+    $message = ($message ? $message : (string) new FormattableMarkup('Shortcut quick link with label %label found.', ['%label' => $label]));\n     $this->assertArrayHasKey($index, $links, $message);\n   }\n "
                },
                {
                    "sha": "79da8de4609c22785a004d43692a76c9c3bb65d3",
                    "filename": "html/core/modules/statistics/src/Plugin/migrate/destination/NodeCounter.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fstatistics%2Fsrc%2FPlugin%2Fmigrate%2Fdestination%2FNodeCounter.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fstatistics%2Fsrc%2FPlugin%2Fmigrate%2Fdestination%2FNodeCounter.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fstatistics%2Fsrc%2FPlugin%2Fmigrate%2Fdestination%2FNodeCounter.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -98,7 +98,7 @@ public function import(Row $row, array $old_destination_id_values = []) {\n       ->expression('totalcount', '[totalcount] + :totalcount', [':totalcount' => $totalcount])\n       // Per Drupal policy: \"A query may have any number of placeholders, but\n       // all must have unique names even if they have the same value.\"\n-      // https://www.drupal.org/docs/8/api/database-api/static-queries#placeholders\n+      // https://www.drupal.org/docs/drupal-apis/database-api/static-queries#placeholders\n       ->expression('timestamp', 'CASE WHEN [timestamp] > :timestamp1 THEN [timestamp] ELSE :timestamp2 END', [':timestamp1' => $timestamp, ':timestamp2' => $timestamp])\n       ->execute();\n "
                },
                {
                    "sha": "197af589cb6d454a5ec4fe701e6870f4a42b5a61",
                    "filename": "html/core/modules/system/src/Controller/AssetControllerBase.php",
                    "status": "modified",
                    "additions": 15,
                    "deletions": 11,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Fsrc%2FController%2FAssetControllerBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Fsrc%2FController%2FAssetControllerBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Fsrc%2FController%2FAssetControllerBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -160,19 +160,23 @@ public function deliver(Request $request, string $file_name) {\n     $this->themeManager->setActiveTheme($active_theme);\n \n     $attached_assets = new AttachedAssets();\n-    $include_string = UrlHelper::uncompressQueryParameter($request->query->get('include'));\n-\n-    if (!$include_string) {\n-      throw new BadRequestHttpException('The libraries to include are encoded incorrectly.');\n-    }\n-    $attached_assets->setLibraries(explode(',', $include_string));\n+    $include_libraries = explode(',', UrlHelper::uncompressQueryParameter($request->query->get('include')));\n+\n+    // Check that library names are in the correct format.\n+    $validate = function ($libraries_to_check) {\n+      foreach ($libraries_to_check as $library) {\n+        if (substr_count($library, '/') === 0) {\n+          throw new BadRequestHttpException(sprintf('The \"%s\" library name must include at least one slash.', $library));\n+        }\n+      }\n+    };\n+    $validate($include_libraries);\n+    $attached_assets->setLibraries($include_libraries);\n \n     if ($request->query->has('exclude')) {\n-      $exclude_string = UrlHelper::uncompressQueryParameter($request->query->get('exclude'));\n-      if (!$exclude_string) {\n-        throw new BadRequestHttpException('The libraries to exclude are encoded incorrectly.');\n-      }\n-      $attached_assets->setAlreadyLoadedLibraries(explode(',', $exclude_string));\n+      $exclude_libraries = explode(',', UrlHelper::uncompressQueryParameter($request->query->get('exclude')));\n+      $validate($exclude_libraries);\n+      $attached_assets->setAlreadyLoadedLibraries($exclude_libraries);\n     }\n     $groups = $this->getGroups($attached_assets, $request);\n "
                },
                {
                    "sha": "749dad24f7c9f78a118a3d43b9177b1afcb889f4",
                    "filename": "html/core/modules/system/src/PathBasedBreadcrumbBuilder.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 13,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Fsrc%2FPathBasedBreadcrumbBuilder.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Fsrc%2FPathBasedBreadcrumbBuilder.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Fsrc%2FPathBasedBreadcrumbBuilder.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -226,19 +226,7 @@ protected function getRequestForPath($path, array $exclude) {\n       $request->attributes->add($this->router->matchRequest($request));\n       return $request;\n     }\n-    catch (ParamNotConvertedException $e) {\n-      return NULL;\n-    }\n-    catch (ResourceNotFoundException $e) {\n-      return NULL;\n-    }\n-    catch (MethodNotAllowedException $e) {\n-      return NULL;\n-    }\n-    catch (AccessDeniedHttpException $e) {\n-      return NULL;\n-    }\n-    catch (NotFoundHttpException $e) {\n+    catch (ParamNotConvertedException | ResourceNotFoundException | MethodNotAllowedException | AccessDeniedHttpException | NotFoundHttpException $e) {\n       return NULL;\n     }\n   }"
                },
                {
                    "sha": "9ade6b8344a5b5d9eafb0c0cdeaaa321f9dfa91f",
                    "filename": "html/core/modules/system/tests/modules/entity_test/src/Entity/EntityTestComputedField.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 0,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FEntity%2FEntityTestComputedField.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FEntity%2FEntityTestComputedField.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FEntity%2FEntityTestComputedField.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -6,6 +6,7 @@\n use Drupal\\Core\\Field\\BaseFieldDefinition;\n use Drupal\\Core\\StringTranslation\\TranslatableMarkup;\n use Drupal\\entity_test\\Plugin\\Field\\ComputedReferenceTestFieldItemList;\n+use Drupal\\entity_test\\Plugin\\Field\\ComputedTestCacheableIntegerItemList;\n use Drupal\\entity_test\\Plugin\\Field\\ComputedTestCacheableStringItemList;\n use Drupal\\entity_test\\Plugin\\Field\\ComputedTestFieldItemList;\n \n@@ -49,12 +50,22 @@ public static function baseFieldDefinitions(EntityTypeInterface $entity_type) {\n       ->setSetting('target_type', 'entity_test')\n       ->setClass(ComputedReferenceTestFieldItemList::class);\n \n+    // Cacheable metadata can either be provided via the field item properties\n+    // or via the field item list class directly. Add a computed string field\n+    // which does the former and a computed integer field which does the latter.\n     $fields['computed_test_cacheable_string_field'] = BaseFieldDefinition::create('computed_test_cacheable_string_item')\n       ->setLabel(new TranslatableMarkup('Computed Cacheable String Field Test'))\n       ->setComputed(TRUE)\n       ->setClass(ComputedTestCacheableStringItemList::class)\n       ->setReadOnly(FALSE)\n       ->setInternal(FALSE);\n+    $fields['computed_test_cacheable_integer_field'] = BaseFieldDefinition::create('integer')\n+      ->setLabel(new TranslatableMarkup('Computed Cacheable Integer Field Test'))\n+      ->setComputed(TRUE)\n+      ->setClass(ComputedTestCacheableIntegerItemList::class)\n+      ->setReadOnly(FALSE)\n+      ->setInternal(FALSE)\n+      ->setDisplayOptions('view', ['weight' => 10]);\n \n     return $fields;\n   }"
                },
                {
                    "sha": "6c9a85b9aed741b34ee481fb9bfe51d606edf8fb",
                    "filename": "html/core/modules/system/tests/modules/entity_test/src/Plugin/Field/ComputedTestCacheableIntegerItemList.php",
                    "status": "added",
                    "additions": 36,
                    "deletions": 0,
                    "changes": 36,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FPlugin%2FField%2FComputedTestCacheableIntegerItemList.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FPlugin%2FField%2FComputedTestCacheableIntegerItemList.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FPlugin%2FField%2FComputedTestCacheableIntegerItemList.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,36 @@\n+<?php\n+\n+namespace Drupal\\entity_test\\Plugin\\Field;\n+\n+use Drupal\\Core\\Cache\\CacheableDependencyInterface;\n+use Drupal\\Core\\Cache\\CacheableDependencyTrait;\n+use Drupal\\Core\\Cache\\CacheableMetadata;\n+use Drupal\\Core\\Field\\FieldItemList;\n+use Drupal\\Core\\TypedData\\ComputedItemListTrait;\n+\n+/**\n+ * Item list class for computed cacheable string field.\n+ *\n+ * This class sets the cacheable metadata on the field item list directly.\n+ *\n+ * @see \\Drupal\\entity_test\\Plugin\\Field\\ComputedTestCacheableStringItemList\n+ */\n+class ComputedTestCacheableIntegerItemList extends FieldItemList implements CacheableDependencyInterface {\n+\n+  use CacheableDependencyTrait, ComputedItemListTrait;\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected function computeValue() {\n+    $value = \\Drupal::state()->get('entity_test_computed_integer_value', 0);\n+    $item = $this->createItem(0, $value);\n+    $cacheability = (new CacheableMetadata())\n+      ->setCacheContexts(['url.query_args:computed_test_cacheable_integer_field'])\n+      ->setCacheTags(['field:computed_test_cacheable_integer_field'])\n+      ->setCacheMaxAge(31536000);\n+    $this->setCacheability($cacheability);\n+    $this->list[0] = $item;\n+  }\n+\n+}"
                },
                {
                    "sha": "307409babcee5d89bdf0b4ece28fc9c52073bcc0",
                    "filename": "html/core/modules/system/tests/modules/entity_test/src/Plugin/Field/ComputedTestCacheableStringItemList.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 0,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FPlugin%2FField%2FComputedTestCacheableStringItemList.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FPlugin%2FField%2FComputedTestCacheableStringItemList.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Fsrc%2FPlugin%2FField%2FComputedTestCacheableStringItemList.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -8,6 +8,10 @@\n \n /**\n  * Item list class for computed cacheable string field.\n+ *\n+ *  This class sets the cacheable metadata on the field item properties.\n+ *\n+ * @see \\Drupal\\entity_test\\Plugin\\Field\\ComputedTestCacheableIntegerItemList\n  */\n class ComputedTestCacheableStringItemList extends FieldItemList {\n "
                },
                {
                    "sha": "2090db49aa60b40b0ac424c4363b5e24cf98ab62",
                    "filename": "html/core/modules/system/tests/modules/entity_test/tests/src/Functional/Rest/EntityTestComputedFieldNormalizerTest.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Ftests%2Fsrc%2FFunctional%2FRest%2FEntityTestComputedFieldNormalizerTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Ftests%2Fsrc%2FFunctional%2FRest%2FEntityTestComputedFieldNormalizerTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fentity_test%2Ftests%2Fsrc%2FFunctional%2FRest%2FEntityTestComputedFieldNormalizerTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -56,6 +56,12 @@ protected function getExpectedNormalizedEntity() {\n         'value' => 'computed test cacheable string field',\n       ],\n     ];\n+    // @see \\Drupal\\entity_test\\Plugin\\Field\\ComputedTestCacheableIntegerItemList::computeValue().\n+    $expected['computed_test_cacheable_integer_field'] = [\n+      [\n+        'value' => 0,\n+      ],\n+    ];\n \n     $expected['uuid'] = [\n       0 => ["
                },
                {
                    "sha": "be0a1a34a8ba89c55338bb2681017d6fcf546feb",
                    "filename": "html/core/modules/system/tests/modules/form_test/form_test.routing.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 0,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fform_test.routing.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fform_test.routing.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fform_test.routing.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -433,6 +433,15 @@ form_test.details_form:\n   requirements:\n     _access: 'TRUE'\n \n+form_test.details_contains_required_textfield:\n+  path: '/form_test/details-contains-required-textfield/{use_ajax}'\n+  defaults:\n+    _form: '\\Drupal\\form_test\\Form\\FormTestDetailsContainsRequiredTextfieldForm'\n+    _title: 'Form details contains required textfield test'\n+    use_ajax: FALSE\n+  requirements:\n+    _access: 'TRUE'\n+\n form_test.description_display:\n   path: '/form_test/form-descriptions'\n   defaults:"
                },
                {
                    "sha": "2ed323039062db4c7b8be1180fe110e8e9f5b8c2",
                    "filename": "html/core/modules/system/tests/modules/form_test/src/Form/FormTestDetailsContainsRequiredTextfieldForm.php",
                    "status": "added",
                    "additions": 64,
                    "deletions": 0,
                    "changes": 64,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fsrc%2FForm%2FFormTestDetailsContainsRequiredTextfieldForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fsrc%2FForm%2FFormTestDetailsContainsRequiredTextfieldForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fsrc%2FForm%2FFormTestDetailsContainsRequiredTextfieldForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,64 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Drupal\\form_test\\Form;\n+\n+use Drupal\\Core\\Form\\FormBase;\n+use Drupal\\Core\\Form\\FormStateInterface;\n+\n+/**\n+ * Builds a form to test a required textfield within a details element.\n+ *\n+ * @internal\n+ */\n+class FormTestDetailsContainsRequiredTextfieldForm extends FormBase {\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  public function getFormId(): string {\n+    return 'form_test_details_form';\n+  }\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  public function buildForm(array $form, FormStateInterface $form_state, $use_ajax = FALSE): array {\n+\n+    $form['meta'] = [\n+      '#type' => 'details',\n+      '#title' => 'Details element',\n+      '#open' => FALSE,\n+    ];\n+    $form['meta']['required_textfield_in_details'] = [\n+      '#type' => 'textfield',\n+      '#required' => TRUE,\n+      '#title' => 'Required textfield',\n+    ];\n+    $form['submit'] = [\n+      '#type' => 'submit',\n+      '#value' => 'Submit',\n+    ];\n+    if ($use_ajax) {\n+      $form['submitAjax'] = [\n+        '#type' => 'submit',\n+        '#value' => 'Submit Ajax',\n+        '#ajax' => [\n+          'callback' => '::submitForm',\n+          'event' => 'click',\n+          'wrapper' => 'form-test-details-form',\n+        ],\n+      ];\n+    }\n+    return $form;\n+  }\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  public function submitForm(array &$form, FormStateInterface $form_state) {\n+    return $form;\n+  }\n+\n+}"
                },
                {
                    "sha": "0677df3bd06e3a2be32510d7208f670e6cba5ab7",
                    "filename": "html/core/modules/system/tests/modules/form_test/src/Form/JavascriptStatesForm.php",
                    "status": "modified",
                    "additions": 173,
                    "deletions": 0,
                    "changes": 173,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fsrc%2FForm%2FJavascriptStatesForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fsrc%2FForm%2FJavascriptStatesForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fmodules%2Fform_test%2Fsrc%2FForm%2FJavascriptStatesForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -24,6 +24,12 @@ public function getFormId() {\n    * {@inheritdoc}\n    */\n   public function buildForm(array $form, FormStateInterface $form_state) {\n+\n+    $form['header_triggers'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h2',\n+      '#value' => 'Triggers',\n+    ];\n     $form['checkbox_trigger'] = [\n       '#type' => 'checkbox',\n       '#title' => 'Checkbox trigger',\n@@ -112,8 +118,30 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n       '#title' => 'Number trigger',\n     ];\n \n+    $form['multiple_select_trigger'] = [\n+      '#type' => 'select',\n+      '#multiple' => TRUE,\n+      '#title' => 'Multiple select trigger',\n+      '#options' => [\n+        'value1' => 'Value 1',\n+        'value2' => 'Value 2',\n+        'value3' => 'Value 3',\n+      ],\n+    ];\n+\n     // Tested fields.\n+    $form['header_tested_elements'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h2',\n+      '#value' => 'Tested elements',\n+    ];\n+\n     // Checkbox trigger.\n+    $form['header_checkbox'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Checkbox tests',\n+    ];\n     $form['textfield_invisible_when_checkbox_trigger_checked'] = [\n       '#type' => 'textfield',\n       '#title' => 'Textfield invisible when checkbox trigger checked',\n@@ -318,6 +346,11 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n     ];\n \n     // Checkboxes trigger.\n+    $form['header_checkboxes'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Checkboxes tests',\n+    ];\n     $form['textfield_visible_when_checkboxes_trigger_value2_checked'] = [\n       '#type' => 'textfield',\n       '#title' => 'Textfield visible when checkboxes trigger value2 checked',\n@@ -338,6 +371,11 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n     ];\n \n     // Radios trigger.\n+    $form['header_radios'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Radios tests',\n+    ];\n     $form['fieldset_visible_when_radios_trigger_has_value2'] = [\n       '#type' => 'fieldset',\n       '#title' => 'Fieldset visible when radio trigger has value2',\n@@ -407,6 +445,11 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n     ];\n \n     // Select trigger\n+    $form['header_select'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Select tests',\n+    ];\n     $form['item_visible_when_select_trigger_has_value2'] = [\n       '#type' => 'item',\n       '#title' => 'Item visible when select trigger has value2',\n@@ -438,7 +481,72 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n       ],\n     ];\n \n+    // Multiple select trigger.\n+    $form['header_multiple_select'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Multiple select tests',\n+    ];\n+    $form['item_visible_when_multiple_select_trigger_has_value2'] = [\n+      '#type' => 'item',\n+      '#title' => 'Item visible when multiple select trigger has value2',\n+      '#states' => [\n+        'visible' => [\n+          'select[name=\"multiple_select_trigger[]\"]' => ['value' => ['value2']],\n+        ],\n+      ],\n+    ];\n+    $form['item_visible_when_multiple_select_trigger_has_no_value'] = [\n+      '#type' => 'item',\n+      '#title' => 'Item visible when multiple select trigger has no value',\n+      '#states' => [\n+        'visible' => [\n+          'select[name=\"multiple_select_trigger[]\"]' => ['value' => []],\n+        ],\n+      ],\n+    ];\n+    $form['textfield_visible_when_multiple_select_trigger_has_value3'] = [\n+      '#type' => 'textfield',\n+      '#title' => 'Textfield visible when multiple select trigger has value3',\n+      '#states' => [\n+        'visible' => [\n+          'select[name=\"multiple_select_trigger[]\"]' => ['value' => ['value3']],\n+        ],\n+      ],\n+    ];\n+    $form['textfield_visible_when_multiple_select_trigger_has_value2_or_value3'] = [\n+      '#type' => 'textfield',\n+      '#title' => 'Textfield visible when multiple select trigger has value2 OR value3',\n+      '#states' => [\n+        'visible' => [\n+          'select[name=\"multiple_select_trigger[]\"]' => [\n+            ['value' => ['value2']],\n+            ['value' => ['value3']],\n+          ],\n+        ],\n+      ],\n+    ];\n+    $form['textfield_visible_when_multiple_select_trigger_has_value2_and_value3'] = [\n+      '#type' => 'textfield',\n+      '#title' => 'Textfield visible when multiple select trigger has value2 AND value3',\n+      '#states' => [\n+        'visible' => [\n+          'select[name=\"multiple_select_trigger[]\"]' => [\n+            'value' => [\n+              'value3',\n+              'value2',\n+            ],\n+          ],\n+        ],\n+      ],\n+    ];\n+\n     // Textfield trigger.\n+    $form['header_textfield'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Textfield tests',\n+    ];\n     $form['checkbox_checked_when_textfield_trigger_filled'] = [\n       '#type' => 'checkbox',\n       '#title' => 'Checkbox checked when textfield trigger filled',\n@@ -503,6 +611,11 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n     ];\n \n     // Multiple triggers.\n+    $form['header_multiple_triggers'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Multiple triggers tests',\n+    ];\n     $form['item_visible_when_select_trigger_has_value2_and_textfield_trigger_filled'] = [\n       '#type' => 'item',\n       '#title' => 'Item visible when select trigger has value2 and textfield trigger filled',\n@@ -515,6 +628,11 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n     ];\n \n     // Number triggers.\n+    $form['header_number'] = [\n+      '#type' => 'html_tag',\n+      '#tag' => 'h3',\n+      '#value' => 'Number tests',\n+    ];\n     $form['item_visible_when_number_trigger_filled_by_spinner'] = [\n       '#type' => 'item',\n       '#title' => 'Item visible when number trigger filled by spinner widget',\n@@ -557,6 +675,61 @@ public function buildForm(array $form, FormStateInterface $form_state) {\n       ],\n     ];\n \n+    $form['test_button_disabled'] = [\n+      '#type' => 'container',\n+    ];\n+\n+    $form['test_button_disabled']['submit_button'] = [\n+      '#type' => 'submit',\n+      '#value' => 'Submit button disabled when checkbox not checked',\n+      '#states' => [\n+        'disabled' => [':input[name=\"checkbox_enable_submit_button\"]' => ['checked' => FALSE]],\n+      ],\n+    ];\n+    $form['test_button_disabled']['checkbox_enable_submit_button'] = [\n+      '#type' => 'checkbox',\n+      '#title' => 'Enable input submit',\n+    ];\n+\n+    $form['test_button_disabled']['input_textfield'] = [\n+      '#type' => 'textfield',\n+      '#title' => 'Text field disabled when checkbox not checked',\n+      '#states' => [\n+        'disabled' => [':input[name=\"checkbox_enable_input_textfield\"]' => ['checked' => FALSE]],\n+      ],\n+    ];\n+    $form['test_button_disabled']['checkbox_enable_input_textfield'] = [\n+      '#type' => 'checkbox',\n+      '#title' => 'Enable text field',\n+    ];\n+\n+    $form['test_button_disabled']['test_select_disabled'] = [\n+      '#type' => 'select',\n+      '#title' => 'Select disabled when checkbox not checked',\n+      '#options' => [\n+        0 => 0,\n+        1 => 1,\n+      ],\n+      '#states' => [\n+        'disabled' => [':input[name=\"checkbox_enable_select\"]' => ['checked' => FALSE]],\n+      ],\n+    ];\n+    $form['test_button_disabled']['checkbox_enable_select'] = [\n+      '#type' => 'checkbox',\n+      '#title' => 'Enable select',\n+    ];\n+    $form['test_button_disabled']['test_textarea_disabled'] = [\n+      '#type' => 'textarea',\n+      '#title' => 'Textarea disabled when checkbox not checked',\n+      '#states' => [\n+        'disabled' => [':input[name=\"checkbox_enable_textarea\"]' => ['checked' => FALSE]],\n+      ],\n+    ];\n+    $form['test_button_disabled']['checkbox_enable_textarea'] = [\n+      '#type' => 'checkbox',\n+      '#title' => 'Enable textarea',\n+    ];\n+\n     return $form;\n   }\n "
                },
                {
                    "sha": "56e939986f7f33b26bc5916d1b388466267dbc3c",
                    "filename": "html/core/modules/system/tests/src/Functional/Entity/EntityComputedFieldTest.php",
                    "status": "added",
                    "additions": 76,
                    "deletions": 0,
                    "changes": 76,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FEntity%2FEntityComputedFieldTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FEntity%2FEntityComputedFieldTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FEntity%2FEntityComputedFieldTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,76 @@\n+<?php\n+\n+namespace Drupal\\Tests\\system\\Functional\\Entity;\n+\n+use Drupal\\Core\\Cache\\Cache;\n+use Drupal\\Core\\State\\StateInterface;\n+use Drupal\\entity_test\\Entity\\EntityTestComputedField;\n+use Drupal\\Tests\\BrowserTestBase;\n+\n+/**\n+ * Tests that entities with computed fields work correctly.\n+ *\n+ * @group Entity\n+ */\n+class EntityComputedFieldTest extends BrowserTestBase {\n+\n+  /**\n+   * Modules to enable.\n+   *\n+   * @var array\n+   */\n+  protected static $modules = ['entity_test'];\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected $defaultTheme = 'olivero';\n+\n+  /**\n+   * The state service.\n+   *\n+   * @var \\Drupal\\Core\\State\\StateInterface\n+   */\n+  protected StateInterface $state;\n+\n+  protected function setUp(): void {\n+    parent::setUp();\n+\n+    $this->state = $this->container->get('state');\n+  }\n+\n+  /**\n+   * Tests that formatters bubble the cacheable metadata of computed fields.\n+   */\n+  public function testFormatterComputedFieldCacheableMetadata() {\n+    $this->drupalLogin($this->drupalCreateUser(['administer entity_test content']));\n+\n+    $entity = EntityTestComputedField::create([\n+      'name' => 'Test entity with a cacheable, computed field',\n+    ]);\n+    $entity->save();\n+\n+    $this->state->set('entity_test_computed_integer_value', 2024);\n+    $this->drupalGet($entity->toUrl('canonical')->toString());\n+    $field_item_selector = '.field--name-computed-test-cacheable-integer-field .field__item';\n+    $this->assertSession()->elementTextEquals('css', $field_item_selector, 2024);\n+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Contexts', 'url.query_args:computed_test_cacheable_integer_field');\n+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', 'field:computed_test_cacheable_integer_field');\n+    $this->assertSession()->responseHeaderEquals('X-Drupal-Cache-Max-Age', \"31536000\");\n+\n+    $this->state->set('entity_test_computed_integer_value', 2025);\n+    $this->drupalGet($entity->toUrl('canonical')->toString());\n+    $this->assertSession()->elementTextEquals('css', $field_item_selector, 2024);\n+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Contexts', 'url.query_args:computed_test_cacheable_integer_field');\n+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', 'field:computed_test_cacheable_integer_field');\n+    $this->assertSession()->responseHeaderEquals('X-Drupal-Cache-Max-Age', \"31536000\");\n+\n+    Cache::invalidateTags(['field:computed_test_cacheable_integer_field']);\n+    $this->drupalGet($entity->toUrl('canonical')->toString());\n+    $this->assertSession()->elementTextEquals('css', $field_item_selector, 2025);\n+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Contexts', 'url.query_args:computed_test_cacheable_integer_field');\n+    $this->assertSession()->responseHeaderContains('X-Drupal-Cache-Tags', 'field:computed_test_cacheable_integer_field');\n+    $this->assertSession()->responseHeaderEquals('X-Drupal-Cache-Max-Age', \"31536000\");\n+  }\n+\n+}"
                },
                {
                    "sha": "06637337d32beb6c7a1dca936fa9a28cb7b783f1",
                    "filename": "html/core/modules/system/tests/src/Functional/FileTransfer/TestFileTransfer.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 3,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FFileTransfer%2FTestFileTransfer.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FFileTransfer%2FTestFileTransfer.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FFileTransfer%2FTestFileTransfer.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -42,9 +42,10 @@ public static function factory($jail, $settings) {\n   }\n \n   public function connect() {\n-    $connection = new MockTestConnection();\n-    $connection->connectionString = 'test://' . urlencode($this->username) . ':' . urlencode($this->password) . \"@$this->host:$this->port/\";\n-    $this->connection = $connection;\n+    $this->connection = new MockTestConnection();\n+    // Access the connection via the property. The property used to be set via a\n+    // magic method and this can cause problems if coded incorrectly.\n+    $this->connection->connectionString = 'test://' . urlencode($this->username) . ':' . urlencode($this->password) . \"@$this->host:$this->port/\";\n   }\n \n   public function copyFileJailed($source, $destination) {"
                },
                {
                    "sha": "4bd82849b0378fb53e9b9bd5becc239d9f53d2fc",
                    "filename": "html/core/modules/system/tests/src/Functional/Form/CheckboxTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 3,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FCheckboxTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FCheckboxTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FCheckboxTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\system\\Functional\\Form;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Tests\\BrowserTestBase;\n \n /**\n@@ -35,7 +34,7 @@ public function testFormCheckbox() {\n       // @see \\Drupal\\Core\\Render\\Element\\Checkbox::processCheckbox().\n       foreach (['0', '', 1, '1', 'foobar', '1foobar'] as $return_value) {\n         $form_array = \\Drupal::formBuilder()->getForm('\\Drupal\\form_test\\Form\\FormTestCheckboxTypeJugglingForm', $default_value, $return_value);\n-        $form = \\Drupal::service('renderer')->renderRoot($form_array);\n+        $form = (string) \\Drupal::service('renderer')->renderRoot($form_array);\n         if ($default_value === TRUE) {\n           $checked = TRUE;\n         }\n@@ -55,7 +54,7 @@ public function testFormCheckbox() {\n           $checked = ($default_value === '1foobar');\n         }\n         $checked_in_html = str_contains($form, 'checked');\n-        $message = new FormattableMarkup('#default_value is %default_value #return_value is %return_value.', ['%default_value' => var_export($default_value, TRUE), '%return_value' => var_export($return_value, TRUE)]);\n+        $message = '#default_value is ' . var_export($default_value, TRUE) . ' #return_value is ' . var_export($return_value, TRUE) . '.';\n         $this->assertSame($checked, $checked_in_html, $message);\n       }\n     }"
                },
                {
                    "sha": "57f3e286447f9f453d8c0977174cd9a1dceb7ada",
                    "filename": "html/core/modules/system/tests/src/Functional/Form/StorageTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FStorageTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FStorageTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FStorageTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -16,6 +16,7 @@\n  * values are not lost due to a wrong form rebuild.\n  *\n  * @group Form\n+ * @group #slow\n  */\n class StorageTest extends BrowserTestBase {\n "
                },
                {
                    "sha": "4d28dd997e4b6b08516ae189a3d5a7bbb749623c",
                    "filename": "html/core/modules/system/tests/src/Functional/Form/ValidationTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FValidationTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FValidationTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FForm%2FValidationTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -9,6 +9,7 @@\n  * Tests form processing and alteration via form validation handlers.\n  *\n  * @group Form\n+ * @group #slow\n  */\n class ValidationTest extends BrowserTestBase {\n "
                },
                {
                    "sha": "6724fc7cd5259097aed902e28d183bc916fc547f",
                    "filename": "html/core/modules/system/tests/src/Functional/Menu/MenuRouterTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FMenu%2FMenuRouterTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FMenu%2FMenuRouterTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FMenu%2FMenuRouterTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -82,8 +82,8 @@ protected function doTestHookMenuIntegration() {\n    */\n   protected function doTestTitleCallbackFalse() {\n     $this->drupalGet('test-page');\n-    $this->assertSession()->pageTextContains('A title with @placeholder', 'Raw text found on the page');\n-    $this->assertSession()->pageTextNotContains('A title with some other text', 'Text with placeholder substitutions not found.');\n+    $this->assertSession()->pageTextContains('A title with @placeholder');\n+    $this->assertSession()->pageTextNotContains('A title with some other text');\n   }\n \n   /**"
                },
                {
                    "sha": "4bed0be43cc06bec2f5c0fc917d59490343e8f02",
                    "filename": "html/core/modules/system/tests/src/Functional/System/SitesDirectoryHardeningTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FSystem%2FSitesDirectoryHardeningTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FSystem%2FSitesDirectoryHardeningTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FSystem%2FSitesDirectoryHardeningTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -58,7 +58,7 @@ public function testSitesDirectoryHardeningConfig() {\n     $requirements = $this->checkSystemRequirements();\n     $this->assertEquals(REQUIREMENT_WARNING, $requirements['configuration_files']['severity'], 'Warning severity is properly set.');\n     $this->assertEquals('Protection disabled', (string) $requirements['configuration_files']['value']);\n-    $description = strip_tags(\\Drupal::service('renderer')->renderPlain($requirements['configuration_files']['description']));\n+    $description = strip_tags((string) \\Drupal::service('renderer')->renderPlain($requirements['configuration_files']['description']));\n     $this->assertStringContainsString('settings.php is not protected from modifications and poses a security risk.', $description);\n     $this->assertStringContainsString('services.yml is not protected from modifications and poses a security risk.', $description);\n "
                },
                {
                    "sha": "85e1aaa930a249af5e6ec181815b9fa0316fa218",
                    "filename": "html/core/modules/system/tests/src/Functional/System/SystemAuthorizeTest.php",
                    "status": "modified",
                    "additions": 17,
                    "deletions": 0,
                    "changes": 17,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FSystem%2FSystemAuthorizeTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FSystem%2FSystemAuthorizeTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FSystem%2FSystemAuthorizeTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -68,4 +68,21 @@ public function testFileTransferHooks() {\n     $this->assertSession()->responseContains('core/misc/states.js');\n   }\n \n+  /**\n+   * Tests error handling in authorize.php.\n+   */\n+  public function testError(): void {\n+    $settings_filename = $this->siteDirectory . '/settings.php';\n+    chmod($settings_filename, 0777);\n+    $settings_php = file_get_contents($settings_filename);\n+    $settings_php .= \"\\ndefine('SIMPLETEST_COLLECT_ERRORS', FALSE);\\n\";\n+    $settings_php .= \"\\ntrigger_error('Test warning', E_USER_WARNING);\\n\";\n+    file_put_contents($settings_filename, $settings_php);\n+\n+    $this->drupalGetAuthorizePHP();\n+\n+    $this->assertSession()->pageTextContains('User warning: Test warning');\n+    $this->assertSession()->pageTextMatches('@line \\d+ of sites/simpletest@');\n+  }\n+\n }"
                },
                {
                    "sha": "212fc250a88aa80c1efffb16e9345eb89ba9168d",
                    "filename": "html/core/modules/system/tests/src/Functional/Theme/NodeTitleTestBase.php",
                    "status": "added",
                    "additions": 78,
                    "deletions": 0,
                    "changes": 78,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FNodeTitleTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FNodeTitleTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FNodeTitleTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,78 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Drupal\\Tests\\system\\Functional\\Theme;\n+\n+use Drupal\\Tests\\node\\Functional\\NodeTestBase;\n+\n+/**\n+ * Tests node title for a theme.\n+ */\n+abstract class NodeTitleTestBase extends NodeTestBase {\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected $defaultTheme = 'stark';\n+\n+  /**\n+   * Modules to enable.\n+   *\n+   * @var array\n+   */\n+  protected static $modules = ['block'];\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected function setUp(): void {\n+    parent::setUp();\n+    $this->drupalPlaceBlock('page_title_block');\n+\n+    $adminUser = $this->drupalCreateUser([\n+      'administer themes',\n+      'administer nodes',\n+      'create article content',\n+      'create page content',\n+    ]);\n+    $this->drupalLogin($adminUser);\n+  }\n+\n+  /**\n+   * Get the theme name.\n+   *\n+   * @return string\n+   *   The theme to test.\n+   */\n+  protected function getTheme(): string {\n+    return explode('\\\\', get_class($this))[2];\n+  }\n+\n+  /**\n+   * Creates one node with title 0 and tests if the node title has the correct value.\n+   */\n+  public function testNodeWithTitle0(): void {\n+    $theme = $this->getTheme();\n+    if ($theme !== $this->defaultTheme) {\n+      $system_theme_config = $this->container->get('config.factory')\n+        ->getEditable('system.theme');\n+      $system_theme_config\n+        ->set('default', $theme)\n+        ->save();\n+      \\Drupal::service('theme_installer')->install([$theme]);\n+    }\n+\n+    // Create \"Basic page\" content with title 0.\n+    $settings = [\n+      'title' => 0,\n+    ];\n+    $node = $this->drupalCreateNode($settings);\n+    // Test that 0 appears as <title>.\n+    $this->drupalGet('node/' . $node->id());\n+    $this->assertSession()->titleEquals('0 | Drupal');\n+    // Test that 0 appears in the template <h1>.\n+    $this->assertSession()->elementTextEquals('xpath', '//h1', '0');\n+  }\n+\n+}"
                },
                {
                    "sha": "9e9dfd62aa7a839b12d6373d4a7f4202a8870082",
                    "filename": "html/core/modules/system/tests/src/Functional/Theme/TwigDebugMarkupTest.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FTwigDebugMarkupTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FTwigDebugMarkupTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FTwigDebugMarkupTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -50,7 +50,7 @@ public function testTwigDebugMarkup() {\n     $node = $this->drupalCreateNode();\n     $builder = \\Drupal::entityTypeManager()->getViewBuilder('node');\n     $build = $builder->view($node);\n-    $output = $renderer->renderRoot($build);\n+    $output = (string) $renderer->renderRoot($build);\n     $this->assertStringContainsString('<!-- THEME DEBUG -->', $output, 'Twig debug markup found in theme output when debug is enabled.');\n     $this->assertStringContainsString(\"THEME HOOK: 'node'\", $output, 'Theme call information found.');\n     $this->assertStringContainsString('* node--1--full' . $extension . PHP_EOL . '   x node--1' . $extension . PHP_EOL . '   * node--page--full' . $extension . PHP_EOL . '   * node--page' . $extension . PHP_EOL . '   * node--full' . $extension . PHP_EOL . '   * node' . $extension, $output, 'Suggested template files found in order and node ID specific template shown as current template.');\n@@ -63,15 +63,15 @@ public function testTwigDebugMarkup() {\n     // debug markup are correct.\n     $node2 = $this->drupalCreateNode();\n     $build = $builder->view($node2);\n-    $output = $renderer->renderRoot($build);\n+    $output = (string) $renderer->renderRoot($build);\n     $this->assertStringContainsString('* node--2--full' . $extension . PHP_EOL . '   * node--2' . $extension . PHP_EOL . '   * node--page--full' . $extension . PHP_EOL . '   * node--page' . $extension . PHP_EOL . '   * node--full' . $extension . PHP_EOL . '   x node' . $extension, $output, 'Suggested template files found in order and base template shown as current template.');\n \n     // Create another node and make sure the template suggestions shown in the\n     // debug markup are correct.\n     $node3 = $this->drupalCreateNode();\n     $build = ['#theme' => 'node__foo__bar'];\n     $build += $builder->view($node3);\n-    $output = $renderer->renderRoot($build);\n+    $output = (string) $renderer->renderRoot($build);\n     $this->assertStringContainsString(\"THEME HOOK: 'node__foo__bar'\", $output, 'Theme call information found.');\n     $this->assertStringContainsString('* node--foo--bar' . $extension . PHP_EOL . '   * node--foo' . $extension . PHP_EOL . '   * node--&lt;script type=&quot;text/javascript&quot;&gt;alert(&#039;yo&#039;);&lt;/script&gt;' . $extension . PHP_EOL . '   * node--3--full' . $extension . PHP_EOL . '   * node--3' . $extension . PHP_EOL . '   * node--page--full' . $extension . PHP_EOL . '   * node--page' . $extension . PHP_EOL . '   * node--full' . $extension . PHP_EOL . '   x node' . $extension, $output, 'Suggested template files found in order and base template shown as current template.');\n \n@@ -83,7 +83,7 @@ public function testTwigDebugMarkup() {\n     $this->resetAll();\n \n     $build = $builder->view($node);\n-    $output = $renderer->renderRoot($build);\n+    $output = (string) $renderer->renderRoot($build);\n     $this->assertStringNotContainsString('<!-- THEME DEBUG -->', $output, 'Twig debug markup not found in theme output when debug is disabled.');\n   }\n "
                },
                {
                    "sha": "a5516a94912d2141c9e6224f13da9ee0d67dea44",
                    "filename": "html/core/modules/system/tests/src/Functional/Theme/TwigTransTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FTwigTransTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FTwigTransTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctional%2FTheme%2FTwigTransTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -182,7 +182,7 @@ protected function assertTwigTransTags(): void {\n     // Makes sure https://www.drupal.org/node/2489024 doesn't happen without\n     // twig debug.\n     // Ensure that running php code inside a Twig trans is not possible.\n-    $this->assertSession()->pageTextNotContains(pi());\n+    $this->assertSession()->pageTextNotContains((string) pi());\n   }\n \n   /**"
                },
                {
                    "sha": "308fa70a84c9417757561c98894e18ac04c11c7e",
                    "filename": "html/core/modules/system/tests/src/FunctionalJavascript/ModuleFilterTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctionalJavascript%2FModuleFilterTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctionalJavascript%2FModuleFilterTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctionalJavascript%2FModuleFilterTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -10,6 +10,7 @@\n  * Tests the JavaScript functionality of the module filter.\n  *\n  * @group system\n+ * @group #slow\n  */\n class ModuleFilterTest extends WebDriverTestBase {\n "
                },
                {
                    "sha": "0bc84181d1059fa2766600b16149609af1e3fde7",
                    "filename": "html/core/modules/system/tests/src/FunctionalJavascript/System/DateFormatTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctionalJavascript%2FSystem%2FDateFormatTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctionalJavascript%2FSystem%2FDateFormatTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FFunctionalJavascript%2FSystem%2FDateFormatTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -51,9 +51,9 @@ public function testDateFormatXss() {\n     ]);\n     $date_format->save();\n     $this->drupalGet('admin/config/regional/date-time');\n-    $assert->assertEscaped('<script>alert(\"XSS\");</script>', 'The date format was properly escaped');\n+    $assert->assertEscaped('<script>alert(\"XSS\");</script>');\n     $this->drupalGet('admin/config/regional/date-time/formats/manage/xss_short');\n-    $assert->assertEscaped('<script>alert(\"XSS\");</script>', 'The date format was properly escaped');\n+    $assert->assertEscaped('<script>alert(\"XSS\");</script>');\n \n     // Add a new date format with HTML in it.\n     $this->drupalGet('admin/config/regional/date-time/formats/add');"
                },
                {
                    "sha": "4c595cef2f8b3ddf461eaf1a5094c15b830c96a1",
                    "filename": "html/core/modules/system/tests/src/Kernel/Common/SystemListingTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FCommon%2FSystemListingTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FCommon%2FSystemListingTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FCommon%2FSystemListingTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\system\\Kernel\\Common;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Extension\\ExtensionDiscovery;\n use Drupal\\KernelTests\\KernelTestBase;\n \n@@ -46,7 +45,8 @@ public function testDirectoryPrecedence() {\n     foreach ($expected_directories as $module => $directories) {\n       $expected_directory = array_shift($directories);\n       $expected_uri = \"$expected_directory/$module/$module.info.yml\";\n-      $this->assertEquals($expected_uri, $files[$module]->getPathname(), new FormattableMarkup('Module @actual was found at @expected.', ['@actual' => $files[$module]->getPathname(), '@expected' => $expected_uri]));\n+      $module_path = $files[$module]->getPathname();\n+      $this->assertEquals($expected_uri, $module_path, \"Module $module_path was found at $expected_uri.\");\n     }\n   }\n "
                },
                {
                    "sha": "09718581e4c3614a4cc179ae82d39c213603751c",
                    "filename": "html/core/modules/system/tests/src/Kernel/Extension/ModuleHandlerTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FExtension%2FModuleHandlerTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FExtension%2FModuleHandlerTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FExtension%2FModuleHandlerTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -324,6 +324,8 @@ public function testModuleStreamWrappers() {\n     file_exists('dummy://');\n     $stream_wrappers = \\Drupal::service('stream_wrapper_manager')->getWrappers();\n     $this->assertTrue(isset($stream_wrappers['dummy']));\n+    $this->assertTrue(isset($stream_wrappers['dummy1']));\n+    $this->assertTrue(isset($stream_wrappers['dummy2']));\n   }\n \n   /**"
                },
                {
                    "sha": "2f62d85eea3f5b7b1582a032134ba459324147f3",
                    "filename": "html/core/modules/system/tests/src/Kernel/Form/ProgrammaticTest.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 7,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FForm%2FProgrammaticTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FForm%2FProgrammaticTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FForm%2FProgrammaticTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\system\\Kernel\\Form;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Form\\FormState;\n use Drupal\\KernelTests\\KernelTestBase;\n \n@@ -73,18 +72,16 @@ protected function doSubmitForm($values, $valid_input) {\n     // Check that the form returns an error when expected, and vice versa.\n     $errors = $form_state->getErrors();\n     $valid_form = empty($errors);\n-    $args = [\n-      '%values' => print_r($values, TRUE),\n-      '%errors' => $valid_form ? 'None' : implode(' ', $errors),\n-    ];\n-    $this->assertSame($valid_form, $valid_input, new FormattableMarkup('Input values: %values<br />Validation handler errors: %errors', $args));\n+    $input_values = print_r($values, TRUE);\n+    $validation_errors = $valid_form ? t('None') : implode(' ', $errors);\n+    $this->assertSame($valid_form, $valid_input, sprintf('Input values: %s<br />Validation handler errors: %s', $input_values, $validation_errors));\n \n     // We check submitted values only if we have a valid input.\n     if ($valid_input) {\n       // Fetching the values that were set in the submission handler.\n       $stored_values = $form_state->get('programmatic_form_submit');\n       foreach ($values as $key => $value) {\n-        $this->assertEquals($value, $stored_values[$key], new FormattableMarkup('Submission handler correctly executed: %stored_key is %stored_value', ['%stored_key' => $key, '%stored_value' => print_r($value, TRUE)]));\n+        $this->assertEquals($value, $stored_values[$key], sprintf('Submission handler correctly executed: %s is %s', $key, print_r($value, TRUE)));\n       }\n     }\n   }"
                },
                {
                    "sha": "909c85daa5bfedbf088477dd837b24b449cfd9da",
                    "filename": "html/core/modules/system/tests/src/Kernel/Theme/TwigIncludeTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FTheme%2FTwigIncludeTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FTheme%2FTwigIncludeTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FKernel%2FTheme%2FTwigIncludeTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -45,7 +45,7 @@ public function testTemplateInclusion(): void {\n     $element = [];\n     $element['test'] = [\n       '#type' => 'inline_template',\n-      '#template' => \"{% include '@__main__\\/core/tests/fixtures/files/sql-2.sql' %}\",\n+      '#template' => \"{% include '@__main__/core/tests/fixtures/files/sql-2.sql' %}\",\n     ];\n     try {\n       $renderer->renderRoot($element);"
                },
                {
                    "sha": "29cb90f958c1b8d2adac3d1f45ffddfc8f556ec0",
                    "filename": "html/core/modules/system/tests/src/Unit/FileTransfer/FileTransferTest.php",
                    "status": "added",
                    "additions": 34,
                    "deletions": 0,
                    "changes": 34,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FUnit%2FFileTransfer%2FFileTransferTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FUnit%2FFileTransfer%2FFileTransferTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fsystem%2Ftests%2Fsrc%2FUnit%2FFileTransfer%2FFileTransferTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,34 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Drupal\\Tests\\system\\Unit\\FileTransfer;\n+\n+use Drupal\\Tests\\system\\Functional\\FileTransfer\\MockTestConnection;\n+use Drupal\\Tests\\system\\Functional\\FileTransfer\\TestFileTransfer;\n+use Drupal\\Tests\\UnitTestCase;\n+\n+/**\n+ * @group FileTransfer\n+ */\n+class FileTransferTest extends UnitTestCase {\n+\n+  /**\n+   * @var \\Drupal\\Tests\\system\\Functional\\FileTransfer\\TestFileTransfer\n+   */\n+  protected TestFileTransfer $testConnection;\n+\n+  /**\n+   * {@inheritdoc}\n+   */\n+  protected function setUp(): void {\n+    parent::setUp();\n+    $this->testConnection = TestFileTransfer::factory($this->root, []);\n+  }\n+\n+  public function testFileTransferMagicMethods() {\n+    // Test to ensure __get() preserves public access.\n+    $this->assertInstanceOf(MockTestConnection::class, $this->testConnection->connection);\n+  }\n+\n+}"
                },
                {
                    "sha": "bebb262ebdb7d1d4b6759fbeb271709529ae46fd",
                    "filename": "html/core/modules/taxonomy/migrations/d6_taxonomy_term.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Fmigrations%2Fd6_taxonomy_term.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Fmigrations%2Fd6_taxonomy_term.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftaxonomy%2Fmigrations%2Fd6_taxonomy_term.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -8,8 +8,9 @@ source:\n   plugin: d6_taxonomy_term\n process:\n   # If you are using this file to build a custom migration consider removing\n-  # the tid field to allow incremental migrations.\n+  # the tid and revision_id fields to allow incremental migrations.\n   tid: tid\n+  revision_id: tid\n   vid:\n     plugin: migration_lookup\n     migration: d6_taxonomy_vocabulary"
                },
                {
                    "sha": "f7dcfa2dc5e410ff7902b6bfe577a8618a42bded",
                    "filename": "html/core/modules/taxonomy/migrations/d7_taxonomy_term.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Fmigrations%2Fd7_taxonomy_term.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Fmigrations%2Fd7_taxonomy_term.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftaxonomy%2Fmigrations%2Fd7_taxonomy_term.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -9,8 +9,9 @@ source:\n   plugin: d7_taxonomy_term\n process:\n   # If you are using this file to build a custom migration consider removing\n-  # the tid field to allow incremental migrations.\n+  # the tid and revision_id fields to allow incremental migrations.\n   tid: tid\n+  revision_id: tid\n   vid:\n     plugin: migration_lookup\n     migration: d7_taxonomy_vocabulary"
                },
                {
                    "sha": "e98b465cc3eaf732054e6a302ef765e1cda01097",
                    "filename": "html/core/modules/taxonomy/taxonomy.module",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 1,
                    "changes": 17,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Ftaxonomy.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Ftaxonomy.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftaxonomy%2Ftaxonomy.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -22,7 +22,7 @@ function taxonomy_help($route_name, RouteMatchInterface $route_match) {\n       $output = '';\n       $output .= '<h2>' . t('About') . '</h2>';\n       $output .= '<p>' . t('The Taxonomy module allows users who have permission to create and edit content to categorize (tag) content of that type. Users who have the <em>Administer vocabularies and terms</em> <a href=\":permissions\" title=\"Taxonomy module permissions\">permission</a> can add <em>vocabularies</em> that contain a set of related <em>terms</em>. The terms in a vocabulary can either be pre-set by an administrator or built gradually as content is added and edited. Terms may be organized hierarchically if desired.', [':permissions' => Url::fromRoute('user.admin_permissions.module', ['modules' => 'taxonomy'])->toString()]) . '</p>';\n-      $output .= '<p>' . t('For more information, see the <a href=\":taxonomy\">online documentation for the Taxonomy module</a>.', [':taxonomy' => 'https://www.drupal.org/documentation/modules/taxonomy/']) . '</p>';\n+      $output .= '<p>' . t('For more information, see the <a href=\":taxonomy\">online documentation for the Taxonomy module</a>.', [':taxonomy' => 'https://www.drupal.org/docs/8/core/modules/taxonomy']) . '</p>';\n       $output .= '<h2>' . t('Uses') . '</h2>';\n       $output .= '<dl>';\n       $output .= '<dt>' . t('Managing vocabularies') . '</dt>';\n@@ -72,6 +72,21 @@ function taxonomy_theme_suggestions_taxonomy_term(array $variables) {\n   return $suggestions;\n }\n \n+/**\n+ * Implements hook_local_tasks_alter().\n+ *\n+ * @todo Evaluate removing as part of https://www.drupal.org/node/2358923.\n+ */\n+function taxonomy_local_tasks_alter(&$local_tasks) {\n+  $local_task_key = 'config_translation.local_tasks:entity.taxonomy_vocabulary.config_translation_overview';\n+  if (isset($local_tasks[$local_task_key])) {\n+    // The config_translation module expects the base route to be\n+    // entity.taxonomy_vocabulary.edit_form like it is for other configuration\n+    // entities. Taxonomy uses the overview_form as the base route.\n+    $local_tasks[$local_task_key]['base_route'] = 'entity.taxonomy_vocabulary.overview_form';\n+  }\n+}\n+\n /**\n  * Prepares variables for taxonomy term templates.\n  *"
                },
                {
                    "sha": "18167fe7153d7b9f7a04d54ea676d7ea281dbb9b",
                    "filename": "html/core/modules/taxonomy/tests/src/Functional/Views/TaxonomyIndexTidUiTest.php",
                    "status": "modified",
                    "additions": 61,
                    "deletions": 2,
                    "changes": 63,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Ftests%2Fsrc%2FFunctional%2FViews%2FTaxonomyIndexTidUiTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftaxonomy%2Ftests%2Fsrc%2FFunctional%2FViews%2FTaxonomyIndexTidUiTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftaxonomy%2Ftests%2Fsrc%2FFunctional%2FViews%2FTaxonomyIndexTidUiTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -92,6 +92,18 @@ protected function setUp($import_test_views = TRUE, $modules = []): void {\n     }\n     ViewTestData::createTestViews(static::class, ['taxonomy_test_views']);\n \n+    // Extra taxonomy and terms.\n+    Vocabulary::create([\n+      'vid' => 'other_tags',\n+      'name' => 'Other tags',\n+    ])->save();\n+\n+    $this->terms[3][0] = $term = Term::create([\n+      'vid' => 'tags',\n+      'name' => \"Term 3.0\",\n+    ]);\n+    $term->save();\n+\n     Vocabulary::create([\n       'vid' => 'empty_vocabulary',\n       'name' => 'Empty Vocabulary',\n@@ -369,8 +381,12 @@ public function testFilterGrouping() {\n     $field_name = 'taxonomy_tags';\n     $this->createEntityReferenceField('node', $node_type->id(), $field_name, NULL, 'taxonomy_term');\n \n-    // Create 4 nodes: 1 node without any tagging, 2 nodes tagged with 1 term,\n-    // and 1 node with 2 tagged terms.\n+    // Create the other tag field itself.\n+    $field_name2 = 'taxonomy_other_tags';\n+    $this->createEntityReferenceField('node', $node_type->id(), $field_name2, NULL, 'taxonomy_term');\n+\n+    // Create 5 nodes: 1 node without any tagging, 2 nodes tagged with 1 term,\n+    // 1 node with 2 tagged terms and 1 with other tags term.\n     $node_no_term = $this->drupalCreateNode();\n     $node_with_term_1_0 = $this->drupalCreateNode([\n       $field_name => [['target_id' => $this->terms[1][0]->id()]],\n@@ -385,6 +401,10 @@ public function testFilterGrouping() {\n       $field_name => [['target_id' => $this->terms[2][0]->id()]],\n     ]);\n \n+    $node_with_term_3_0 = $this->drupalCreateNode([\n+      $field_name2 => [['target_id' => $this->terms[3][0]->id()]],\n+    ]);\n+\n     // Create two groups. The first group contains the published filter and set\n     // up the second group as an 'OR' group. The first subgroup of the second\n     // filter group will vary as follows:\n@@ -490,6 +510,45 @@ public function testFilterGrouping() {\n     $this->assertSession()->pageTextContainsOnce($node_with_terms_1_0_and_1_1->label());\n     $this->assertSession()->pageTextContainsOnce($node_with_term_2_0->label());\n     $this->assertSession()->pageTextNotContains($node_no_term->label());\n+\n+    // Different fields/taxonomies filters/values.\n+    // Case 5: OR\n+    // - filter \"tid\" with terms from tags as \"is one of\"\n+    // - filter \"taxonomy_other_tags_target_id\" with term from other tags\n+    // as \"is one of\".\n+    $view = View::load('test_filter_taxonomy_index_tid');\n+    $display = &$view->getDisplay('default');\n+    $display['display_options']['filters']['tid']['value'][0] = $this->terms[1][0]->id();\n+    $display['display_options']['filters']['tid']['value'][1] = $this->terms[1][1]->id();\n+    $display['display_options']['filters']['tid']['operator'] = 'or';\n+    $display['display_options']['filters']['tid']['group'] = 2;\n+    $display['display_options']['filters']['taxonomy_other_tags_target_id'] = $display['display_options']['filters']['tid'];\n+    $display['display_options']['filters']['taxonomy_other_tags_target_id']['id'] = 'taxonomy_other_tags_target_id';\n+    $display['display_options']['filters']['taxonomy_other_tags_target_id']['value'][0] = $this->terms[3][0]->id();\n+    $display['display_options']['filters']['taxonomy_other_tags_target_id']['operator'] = 'or';\n+    $display['display_options']['filters']['taxonomy_other_tags_target_id']['group'] = 2;\n+    $display['display_options']['filters']['taxonomy_other_tags_target_id']['table'] = 'node__taxonomy_other_tags';\n+    $display['display_options']['filters']['taxonomy_other_tags_target_id']['field'] = 'taxonomy_other_tags_target_id';\n+    unset($display['display_options']['filters']['tid_2']);\n+    $display['display_options']['filter_groups'] = [\n+      'operator' => 'AND',\n+      'groups' => [\n+        1 => 'AND',\n+        2 => 'OR',\n+      ],\n+    ];\n+    $view->save();\n+\n+    $this->drupalGet('test-filter-taxonomy-index-tid');\n+    // We expect no nodes tagged with term 1.0 or 1.1. The node tagged with\n+    // term 3.0 and the untagged node will be shown.\n+    $this->assertSession()->pageTextContainsOnce($node_with_term_1_0->label());\n+    // The view does not have DISTINCT query enabled, the node tagged with\n+    // both 1.0 and 1.1 will appear twice.\n+    $this->assertSession()->pageTextMatchesCount(2, \"/{$node_with_terms_1_0_and_1_1->label()}/\");\n+    $this->assertSession()->pageTextContainsOnce($node_with_term_3_0->label());\n+    $this->assertSession()->pageTextNotContains($node_with_term_2_0->label());\n+    $this->assertSession()->pageTextNotContains($node_no_term->label());\n   }\n \n }"
                },
                {
                    "sha": "ebb5e60015f8235c35530e16e0c4675f0464664f",
                    "filename": "html/core/modules/telephone/tests/src/Functional/TelephoneFieldTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftelephone%2Ftests%2Fsrc%2FFunctional%2FTelephoneFieldTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftelephone%2Ftests%2Fsrc%2FFunctional%2FTelephoneFieldTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftelephone%2Ftests%2Fsrc%2FFunctional%2FTelephoneFieldTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -91,7 +91,7 @@ protected function setUp(): void {\n   public function testTelephoneWidget() {\n     $this->drupalGet('node/add/article');\n     $this->assertSession()->fieldValueEquals(\"field_telephone[0][value]\", '');\n-    $this->assertSession()->elementAttributeContains('css', 'input[name=\"field_telephone[0][value]\"]', 'maxlength', TelephoneItem::MAX_LENGTH);\n+    $this->assertSession()->elementAttributeContains('css', 'input[name=\"field_telephone[0][value]\"]', 'maxlength', (string) TelephoneItem::MAX_LENGTH);\n     $this->assertSession()->responseContains('placeholder=\"123-456-7890\"');\n   }\n "
                },
                {
                    "sha": "b5e368df257c793bbbeddb04331e80178d88af2a",
                    "filename": "html/core/modules/toolbar/js/toolbar.anti-flicker.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftoolbar%2Fjs%2Ftoolbar.anti-flicker.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftoolbar%2Fjs%2Ftoolbar.anti-flicker.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftoolbar%2Fjs%2Ftoolbar.anti-flicker.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -63,7 +63,7 @@\n       if (userButtonMinWidth) {\n         const userButtonStyle = document.createElement('style');\n         userButtonStyle.textContent = `\n-        #toolbar-item-user {min-width: ${userButtonMinWidth}.px;}`;\n+        #toolbar-item-user {min-width: ${userButtonMinWidth}px;}`;\n         document.querySelector('head').appendChild(userButtonStyle);\n       }\n     }"
                },
                {
                    "sha": "ece513c13f65ae087f462a52178af27f7d2f6f3e",
                    "filename": "html/core/modules/toolbar/js/toolbar.js",
                    "status": "modified",
                    "additions": 17,
                    "deletions": 13,
                    "changes": 30,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftoolbar%2Fjs%2Ftoolbar.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftoolbar%2Fjs%2Ftoolbar.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftoolbar%2Fjs%2Ftoolbar.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -208,26 +208,30 @@\n         $(window).on({\n           'dialog:aftercreate': (event, dialog, $element, settings) => {\n             const toolbarBar = document.getElementById('toolbar-bar');\n-            toolbarBar.style.marginTop = '0';\n+            if (toolbarBar) {\n+              toolbarBar.style.marginTop = '0';\n \n-            // When off-canvas is positioned in top, toolbar has to be moved down.\n-            if (settings.drupalOffCanvasPosition === 'top') {\n-              const height = Drupal.offCanvas\n-                .getContainer($element)\n-                .outerHeight();\n-              toolbarBar.style.marginTop = `${height}px`;\n-\n-              $element.on('dialogContentResize.off-canvas', () => {\n-                const newHeight = Drupal.offCanvas\n+              // When off-canvas is positioned in top, toolbar has to be moved down.\n+              if (settings.drupalOffCanvasPosition === 'top') {\n+                const height = Drupal.offCanvas\n                   .getContainer($element)\n                   .outerHeight();\n-                toolbarBar.style.marginTop = `${newHeight}px`;\n-              });\n+                toolbarBar.style.marginTop = `${height}px`;\n+\n+                $element.on('dialogContentResize.off-canvas', () => {\n+                  const newHeight = Drupal.offCanvas\n+                    .getContainer($element)\n+                    .outerHeight();\n+                  toolbarBar.style.marginTop = `${newHeight}px`;\n+                });\n+              }\n             }\n           },\n           'dialog:beforeclose': () => {\n             const toolbarBar = document.getElementById('toolbar-bar');\n-            toolbarBar.style.marginTop = '0';\n+            if (toolbarBar) {\n+              toolbarBar.style.marginTop = '0';\n+            }\n           },\n         });\n       });"
                },
                {
                    "sha": "ff395da0fcfc8c3e1c6e589bad9f7f3aee489c62",
                    "filename": "html/core/modules/toolbar/toolbar.module",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftoolbar%2Ftoolbar.module",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftoolbar%2Ftoolbar.module",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftoolbar%2Ftoolbar.module?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -21,7 +21,7 @@ function toolbar_help($route_name, RouteMatchInterface $route_match) {\n   switch ($route_name) {\n     case 'help.page.toolbar':\n       $output = '<h2>' . t('About') . '</h2>';\n-      $output .= '<p>' . t('The Toolbar module provides a toolbar for site administrators, which displays tabs and trays provided by the Toolbar module itself and other modules. For more information, see the <a href=\":toolbar_docs\">online documentation for the Toolbar module</a>.', [':toolbar_docs' => 'https://www.drupal.org/documentation/modules/toolbar']) . '</p>';\n+      $output .= '<p>' . t('The Toolbar module provides a toolbar for site administrators, which displays tabs and trays provided by the Toolbar module itself and other modules. For more information, see the <a href=\":toolbar_docs\">online documentation for the Toolbar module</a>.', [':toolbar_docs' => 'https://www.drupal.org/docs/8/core/modules/toolbar']) . '</p>';\n       $output .= '<h4>' . t('Terminology') . '</h4>';\n       $output .= '<dl>';\n       $output .= '<dt>' . t('Tabs') . '</dt>';"
                },
                {
                    "sha": "80ccd424dd1a19d59547bd754ddc619ce8aae41c",
                    "filename": "html/core/modules/tour/tests/src/Functional/TourTestBase.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 2,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftour%2Ftests%2Fsrc%2FFunctional%2FTourTestBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftour%2Ftests%2Fsrc%2FFunctional%2FTourTestBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftour%2Ftests%2Fsrc%2FFunctional%2FTourTestBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\tour\\Functional;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Tests\\BrowserTestBase;\n \n /**\n@@ -61,7 +60,7 @@ public function assertTourTips(array $tips = [], bool $expectEmpty = FALSE) {\n     foreach ($tips as $tip) {\n       if (!empty($tip['data-id'])) {\n         $elements = $this->getSession()->getPage()->findAll('css', '#' . $tip['data-id']);\n-        $this->assertCount(1, $elements, new FormattableMarkup('Found corresponding page element for tour tip with id #%data-id', ['%data-id' => $tip['data-id']]));\n+        $this->assertCount(1, $elements, sprintf('Found corresponding page element for tour tip with id #%s', $tip['data-id']));\n       }\n       elseif (!empty($tip['data-class'])) {\n         $elements = $this->getSession()->getPage()->findAll('css', '.' . $tip['data-class']);"
                },
                {
                    "sha": "106c09f746f0b86a5e4de8fd46e249674d7ea9c1",
                    "filename": "html/core/modules/tracker/tests/src/Functional/TrackerTest.php",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 7,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftracker%2Ftests%2Fsrc%2FFunctional%2FTrackerTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Ftracker%2Ftests%2Fsrc%2FFunctional%2FTrackerTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Ftracker%2Ftests%2Fsrc%2FFunctional%2FTrackerTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -269,19 +269,19 @@ public function testTrackerHistoryMetadata() {\n \n     // Verify that the history metadata is updated.\n     $this->drupalGet('activity');\n-    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), $node->get('comment')->last_comment_timestamp);\n+    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), (int) $node->get('comment')->last_comment_timestamp);\n     $this->drupalGet('activity/' . $this->user->id());\n-    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), $node->get('comment')->last_comment_timestamp);\n+    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), (int) $node->get('comment')->last_comment_timestamp);\n     $this->drupalGet('user/' . $this->user->id() . '/activity');\n-    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), $node->get('comment')->last_comment_timestamp);\n+    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), (int) $node->get('comment')->last_comment_timestamp);\n \n     // Log out, now verify that the metadata is still there, but the library is\n     // not.\n     $this->drupalLogout();\n     $this->drupalGet('activity');\n-    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), $node->get('comment')->last_comment_timestamp, FALSE);\n+    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), (int) $node->get('comment')->last_comment_timestamp, FALSE);\n     $this->drupalGet('user/' . $this->user->id() . '/activity');\n-    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), $node->get('comment')->last_comment_timestamp, FALSE);\n+    $this->assertHistoryMetadata($node->id(), $node->getChangedTime(), (int) $node->get('comment')->last_comment_timestamp, FALSE);\n   }\n \n   /**\n@@ -459,7 +459,7 @@ public function testTrackerAdminUnpublish() {\n    * indicators, as well as the \"x new\" replies link to the tracker.\n    * We do this in JavaScript to prevent breaking the render cache.\n    *\n-   * @param int $node_id\n+   * @param string|int $node_id\n    *   A node ID, that must exist as a data-history-node-id attribute\n    * @param int $node_timestamp\n    *   A node timestamp, that must exist as a data-history-node-timestamp\n@@ -472,7 +472,7 @@ public function testTrackerAdminUnpublish() {\n    *\n    * @internal\n    */\n-  public function assertHistoryMetadata(int $node_id, int $node_timestamp, int $node_last_comment_timestamp, bool $library_is_present = TRUE): void {\n+  public function assertHistoryMetadata(string|int $node_id, int $node_timestamp, int $node_last_comment_timestamp, bool $library_is_present = TRUE): void {\n     $settings = $this->getDrupalSettings();\n     $this->assertSame($library_is_present, isset($settings['ajaxPageState']) && in_array('tracker/history', explode(',', $settings['ajaxPageState']['libraries'])), 'drupal.tracker-history library is present.');\n     $this->assertSession()->elementsCount('xpath', '//table/tbody/tr/td[@data-history-node-id=\"' . $node_id . '\" and @data-history-node-timestamp=\"' . $node_timestamp . '\"]', 1);"
                },
                {
                    "sha": "9e02f5788a5d7076b3edc226f1fd3f96a9ff8d95",
                    "filename": "html/core/modules/update/src/ProjectCoreCompatibility.php",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 1,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Fsrc%2FProjectCoreCompatibility.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Fsrc%2FProjectCoreCompatibility.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fupdate%2Fsrc%2FProjectCoreCompatibility.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -158,7 +158,12 @@ public function setReleaseMessage(array &$project_data) {\n    *   version of Drupal core, otherwise FALSE.\n    */\n   protected function isCoreCompatible($core_compatibility_constraint) {\n-    return Semver::satisfies($this->existingCoreVersion, $core_compatibility_constraint);\n+    try {\n+      return Semver::satisfies($this->existingCoreVersion, $core_compatibility_constraint);\n+    }\n+    catch (\\Exception $e) {\n+      return FALSE;\n+    }\n   }\n \n   /**"
                },
                {
                    "sha": "01e7ce2a0f13f2ddc28140555db3c4c86da8ec9a",
                    "filename": "html/core/modules/update/tests/fixtures/release-history/drupal.broken.xml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Ffixtures%2Frelease-history%2Fdrupal.broken.xml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Ffixtures%2Frelease-history%2Fdrupal.broken.xml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Ffixtures%2Frelease-history%2Fdrupal.broken.xml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,3 +1,6 @@\n <?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<!--\n+This XML file is empty to test no information scenarios.\n+-->\n <project xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n </project>"
                },
                {
                    "sha": "561da0960794d4525e6c084eca6fe744e2649194",
                    "filename": "html/core/modules/update/tests/src/Functional/UpdateSemverCoreTest.php",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 0,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FFunctional%2FUpdateSemverCoreTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FFunctional%2FUpdateSemverCoreTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FFunctional%2FUpdateSemverCoreTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -243,6 +243,11 @@ public function testLocalActions() {\n \n   /**\n    * Checks that Drupal recovers after problems connecting to update server.\n+   *\n+   * This test uses the following XML fixtures.\n+   *  - drupal.broken.xml\n+   *  - drupal.sec.8.0.2.xml\n+   *     'supported_branches' is '8.0.,8.1.'.\n    */\n   public function testBrokenThenFixedUpdates() {\n     $this->drupalLogin($this->drupalCreateUser(["
                },
                {
                    "sha": "ef2a965c4b146af198fc6cb30d30650f4316036a",
                    "filename": "html/core/modules/update/tests/src/Functional/UpdateSemverTestBaselineTrait.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FFunctional%2FUpdateSemverTestBaselineTrait.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FFunctional%2FUpdateSemverTestBaselineTrait.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FFunctional%2FUpdateSemverTestBaselineTrait.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -121,8 +121,8 @@ public function testMajorUpdateAvailable() {\n           $this->refreshUpdateStatus([$this->updateProject => '9']);\n           $this->standardTests();\n           $this->assertUpdateTableTextNotContains('Security update required!');\n-          $this->assertUpdateTableElementContains(Link::fromTextAndUrl('9.0.0', Url::fromUri(\"http://example.com/{$this->updateProject}-9-0-0-release\"))->toString());\n-          $this->assertUpdateTableElementContains(Link::fromTextAndUrl('Release notes', Url::fromUri(\"http://example.com/{$this->updateProject}-9-0-0-release\"))->toString());\n+          $this->assertUpdateTableElementContains((string) Link::fromTextAndUrl('9.0.0', Url::fromUri(\"http://example.com/{$this->updateProject}-9-0-0-release\"))->toString());\n+          $this->assertUpdateTableElementContains((string) Link::fromTextAndUrl('Release notes', Url::fromUri(\"http://example.com/{$this->updateProject}-9-0-0-release\"))->toString());\n           $this->assertUpdateTableTextNotContains('Up to date');\n           $this->assertUpdateTableTextContains('Not supported!');\n           $this->assertUpdateTableTextContains('Recommended version:');"
                },
                {
                    "sha": "82560c4b95dc4b04c59e44a9f7a3a7a3f2ce40f8",
                    "filename": "html/core/modules/update/tests/src/Unit/ProjectCoreCompatibilityTest.php",
                    "status": "modified",
                    "additions": 47,
                    "deletions": 0,
                    "changes": 47,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FUnit%2FProjectCoreCompatibilityTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FUnit%2FProjectCoreCompatibilityTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fupdate%2Ftests%2Fsrc%2FUnit%2FProjectCoreCompatibilityTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -141,4 +141,51 @@ public function providerSetProjectCoreCompatibilityRanges() {\n     return $test_cases;\n   }\n \n+  /**\n+   * @covers ::isCoreCompatible\n+   * @dataProvider providerIsCoreCompatible\n+   *\n+   * @param string $constraint\n+   *   The core_version_constraint to test.\n+   * @param string $installed_core\n+   *   The installed version of core to compare against.\n+   * @param bool $expected\n+   *   The expected result.\n+   */\n+  public function testIsCoreCompatible(string $constraint, string $installed_core, bool $expected): void {\n+    $core_data['existing_version'] = $installed_core;\n+    $project_compatibility = new ProjectCoreCompatibility($core_data, [], []);\n+    $reflection = new \\ReflectionClass(ProjectCoreCompatibility::class);\n+    $reflection_method = $reflection->getMethod('isCoreCompatible');\n+    $result = $reflection_method->invokeArgs($project_compatibility, [$constraint]);\n+    $this->assertSame($expected, $result);\n+  }\n+\n+  /**\n+   * Data provider for testIsCoreCompatible().\n+   */\n+  public static function providerIsCoreCompatible(): array {\n+    $test_cases['compatible exact'] = [\n+      '10.3.0',\n+      '10.3.0',\n+      TRUE,\n+    ];\n+    $test_cases['compatible with OR'] = [\n+      '^9 || ^10',\n+      '10.3.0',\n+      TRUE,\n+    ];\n+    $test_cases['incompatible'] = [\n+      '^10',\n+      '11.0.0',\n+      FALSE,\n+    ];\n+    $test_cases['broken'] = [\n+      '^^11',\n+      '11.0.0',\n+      FALSE,\n+    ];\n+    return $test_cases;\n+  }\n+\n }"
                },
                {
                    "sha": "d9a9f54fddfafc0fefb4a14e895479d12d0d8cbc",
                    "filename": "html/core/modules/user/src/Plugin/EntityReferenceSelection/UserSelection.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Fsrc%2FPlugin%2FEntityReferenceSelection%2FUserSelection.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Fsrc%2FPlugin%2FEntityReferenceSelection%2FUserSelection.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fuser%2Fsrc%2FPlugin%2FEntityReferenceSelection%2FUserSelection.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -117,6 +117,9 @@ public function buildConfigurationForm(array $form, FormStateInterface $form_sta\n         '_none' => $this->t('- None -'),\n         'role' => $this->t('User role'),\n       ],\n+      // Use a form process callback to build #ajax property properly and also\n+      // to avoid code duplication.\n+      // @see \\Drupal\\Core\\Field\\Plugin\\Field\\FieldType\\EntityReferenceItem::fieldSettingsAjaxProcess()\n       '#ajax' => TRUE,\n       '#limit_validation_errors' => [],\n       '#default_value' => $configuration['filter']['type'],"
                },
                {
                    "sha": "0a4273d236e6083d1d4b1019565045efde134d92",
                    "filename": "html/core/modules/user/tests/src/Functional/UserLoginHttpTest.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 11,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FFunctional%2FUserLoginHttpTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FFunctional%2FUserLoginHttpTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FFunctional%2FUserLoginHttpTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -130,7 +130,7 @@ protected function doTestLogin($format) {\n \n     $login_status_url = $this->getLoginStatusUrlString($format);\n     $response = $client->get($login_status_url);\n-    $this->assertHttpResponse($response, 200, UserAuthenticationController::LOGGED_OUT);\n+    $this->assertHttpResponse($response, 200, (string) UserAuthenticationController::LOGGED_OUT);\n \n     // Flooded.\n     $this->config('user.flood')\n@@ -183,7 +183,7 @@ protected function doTestLogin($format) {\n \n     $response = $this->loginRequest($name, $pass, $format);\n     $this->assertEquals(200, $response->getStatusCode());\n-    $result_data = $this->serializer->decode($response->getBody(), $format);\n+    $result_data = $this->serializer->decode((string) $response->getBody(), $format);\n     $this->assertEquals($name, $result_data['current_user']['name']);\n     $this->assertEquals($account->id(), $result_data['current_user']['uid']);\n     $this->assertEquals($account->getRoles(), $result_data['current_user']['roles']);\n@@ -192,16 +192,16 @@ protected function doTestLogin($format) {\n     // Logging in while already logged in results in a 403 with helpful message.\n     $response = $this->loginRequest($name, $pass, $format);\n     $this->assertSame(403, $response->getStatusCode());\n-    $this->assertSame(['message' => 'This route can only be accessed by anonymous users.'], $this->serializer->decode($response->getBody(), $format));\n+    $this->assertSame(['message' => 'This route can only be accessed by anonymous users.'], $this->serializer->decode((string) $response->getBody(), $format));\n \n     $response = $client->get($login_status_url, ['cookies' => $this->cookies]);\n-    $this->assertHttpResponse($response, 200, UserAuthenticationController::LOGGED_IN);\n+    $this->assertHttpResponse($response, 200, (string) UserAuthenticationController::LOGGED_IN);\n \n     $response = $this->logoutRequest($format, $logout_token);\n     $this->assertEquals(204, $response->getStatusCode());\n \n     $response = $client->get($login_status_url, ['cookies' => $this->cookies]);\n-    $this->assertHttpResponse($response, 200, UserAuthenticationController::LOGGED_OUT);\n+    $this->assertHttpResponse($response, 200, (string) UserAuthenticationController::LOGGED_OUT);\n \n     $this->resetFlood();\n   }\n@@ -315,7 +315,7 @@ public function doTestGlobalLoginFloodControl(string $format): void {\n \n     // IP limit has reached to its limit. Even valid user credentials will fail.\n     $response = $this->loginRequest($user->getAccountName(), $user->passRaw, $format);\n-    $this->assertHttpResponseWithMessage($response, '403', 'Access is blocked because of IP based flood prevention.', $format);\n+    $this->assertHttpResponseWithMessage($response, 403, 'Access is blocked because of IP based flood prevention.', $format);\n     $last_log = $database->select('watchdog', 'w')\n       ->fields('w', ['message'])\n       ->condition('type', 'user')\n@@ -392,7 +392,7 @@ public function doTestPerUserLoginFloodControl($format): void {\n \n       // A successful login will reset the per-user flood control count.\n       $response = $this->loginRequest($user1->getAccountName(), $user1->passRaw, $format);\n-      $result_data = $this->serializer->decode($response->getBody(), $format);\n+      $result_data = $this->serializer->decode((string) $response->getBody(), $format);\n       $this->logoutRequest($format, $result_data['logout_token']);\n \n       // Try 3 failed logins for user 1, they will not trigger flood control.\n@@ -475,7 +475,7 @@ public function doTestLogoutCsrfProtection(string $format): void {\n \n     $response = $this->loginRequest($name, $pass, $format);\n     $this->assertEquals(200, $response->getStatusCode());\n-    $result_data = $this->serializer->decode($response->getBody(), $format);\n+    $result_data = $this->serializer->decode((string) $response->getBody(), $format);\n \n     $logout_token = $result_data['logout_token'];\n \n@@ -487,23 +487,23 @@ public function doTestLogoutCsrfProtection(string $format): void {\n \n     // Ensure still logged in.\n     $response = $client->get($login_status_url, ['cookies' => $this->cookies]);\n-    $this->assertHttpResponse($response, 200, UserAuthenticationController::LOGGED_IN);\n+    $this->assertHttpResponse($response, 200, (string) UserAuthenticationController::LOGGED_IN);\n \n     // Try with an incorrect token.\n     $response = $this->logoutRequest($format, 'not-the-correct-token');\n     $this->assertEquals(403, $response->getStatusCode());\n \n     // Ensure still logged in.\n     $response = $client->get($login_status_url, ['cookies' => $this->cookies]);\n-    $this->assertHttpResponse($response, 200, UserAuthenticationController::LOGGED_IN);\n+    $this->assertHttpResponse($response, 200, (string) UserAuthenticationController::LOGGED_IN);\n \n     // Try a logout request with correct token.\n     $response = $this->logoutRequest($format, $logout_token);\n     $this->assertEquals(204, $response->getStatusCode());\n \n     // Ensure actually logged out.\n     $response = $client->get($login_status_url, ['cookies' => $this->cookies]);\n-    $this->assertHttpResponse($response, 200, UserAuthenticationController::LOGGED_OUT);\n+    $this->assertHttpResponse($response, 200, (string) UserAuthenticationController::LOGGED_OUT);\n   }\n \n   /**"
                },
                {
                    "sha": "ff330bd5346041adb4c8e33d36ff5fc67bbd0143",
                    "filename": "html/core/modules/user/tests/src/Functional/Views/HandlerFieldUserNameTest.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FFunctional%2FViews%2FHandlerFieldUserNameTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FFunctional%2FViews%2FHandlerFieldUserNameTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FFunctional%2FViews%2FHandlerFieldUserNameTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -44,20 +44,20 @@ public function testUserName() {\n     $anon_name = $this->config('user.settings')->get('anonymous');\n     $view->result[0]->_entity->setUsername('');\n     $view->result[0]->_entity->uid->value = 0;\n-    $render = $renderer->executeInRenderContext(new RenderContext(), function () use ($view) {\n+    $render = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($view) {\n       return $view->field['name']->advancedRender($view->result[0]);\n     });\n     $this->assertStringContainsString($anon_name, $render, 'For user 0 it should use the default anonymous name by default.');\n \n-    $render = $renderer->executeInRenderContext(new RenderContext(), function () use ($view, $new_user) {\n+    $render = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($view, $new_user) {\n       return $view->field['name']->advancedRender($view->result[$new_user->id()]);\n     });\n     $this->assertStringContainsString($new_user->getDisplayName(), $render, 'If link to user is checked the username should be part of the output.');\n     $this->assertStringContainsString('user/' . $new_user->id(), $render, 'If link to user is checked the link to the user should appear as well.');\n \n     $view->field['name']->options['link_to_user'] = FALSE;\n     $view->field['name']->options['type'] = 'string';\n-    $render = $renderer->executeInRenderContext(new RenderContext(), function () use ($view, $new_user) {\n+    $render = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($view, $new_user) {\n       return $view->field['name']->advancedRender($view->result[$new_user->id()]);\n     });\n     $this->assertEquals($new_user->getDisplayName(), $render, 'If the user is not linked the username should be printed out for a normal user.');\n@@ -77,7 +77,7 @@ public function testNoAdditionalFields() {\n     $username = $this->randomMachineName();\n     $view->result[0]->_entity->setUsername($username);\n     $view->result[0]->_entity->uid->value = 1;\n-    $render = $renderer->executeInRenderContext(new RenderContext(), function () use ($view) {\n+    $render = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($view) {\n       return $view->field['name']->advancedRender($view->result[0]);\n     });\n     $this->assertStringContainsString($username, $render, 'If link to user is checked the username should be part of the output.');"
                },
                {
                    "sha": "d634fa5291a67cf019656fa3b19bfc4ee2d57171",
                    "filename": "html/core/modules/user/tests/src/Kernel/WhoIsOnlineBlockTest.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FKernel%2FWhoIsOnlineBlockTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FKernel%2FWhoIsOnlineBlockTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FKernel%2FWhoIsOnlineBlockTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -115,7 +115,8 @@ public function testWhoIsOnlineBlock() {\n     $this->assertText($user2->getAccountName(), 'Active user 2 found in online list.');\n     $this->assertNoText($user3->getAccountName(), 'Inactive user not found in online list.');\n     // Verify that online users are ordered correctly.\n-    $this->assertGreaterThan(strpos($this->getRawContent(), $user2->getAccountName()), strpos($this->getRawContent(), $user1->getAccountName()));\n+    $raw_content = (string) $this->getRawContent();\n+    $this->assertGreaterThan(strpos($raw_content, $user2->getAccountName()), strpos($raw_content, $user1->getAccountName()));\n   }\n \n }"
                },
                {
                    "sha": "f46b8932033a166785bf2a7e8deb799538ead682",
                    "filename": "html/core/modules/user/tests/src/Unit/Views/Argument/RolesRidTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FUnit%2FViews%2FArgument%2FRolesRidTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FUnit%2FViews%2FArgument%2FRolesRidTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fuser%2Ftests%2Fsrc%2FUnit%2FViews%2FArgument%2FRolesRidTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -32,7 +32,7 @@ public function testTitleQuery() {\n     ], 'user_role');\n \n     // Creates a stub entity storage;\n-    $role_storage = $this->getMockForAbstractClass('Drupal\\Core\\Entity\\EntityStorageInterface');\n+    $role_storage = $this->createMock('Drupal\\Core\\Entity\\EntityStorageInterface');\n     $role_storage->expects($this->any())\n       ->method('loadMultiple')\n       ->willReturnMap(["
                },
                {
                    "sha": "f844ddb9366faeb652c9949b84ccc44de197544f",
                    "filename": "html/core/modules/views/js/base.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fjs%2Fbase.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fjs%2Fbase.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Fjs%2Fbase.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -106,7 +106,7 @@\n     const chars = ['#', '?', '&'];\n     for (let i = 0; i < chars.length; i++) {\n       if (href.includes(chars[i])) {\n-        href = href.substr(0, href.indexOf(chars[i]));\n+        href = href.substring(0, href.indexOf(chars[i]));\n       }\n     }\n     return href;"
                },
                {
                    "sha": "237afa64b435f324ad0db5c35c61cd02181a43cc",
                    "filename": "html/core/modules/views/src/ManyToOneHelper.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 1,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FManyToOneHelper.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FManyToOneHelper.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FManyToOneHelper.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -181,9 +181,12 @@ public function ensureMyTable() {\n           // query optimization, INNER joins are slightly faster, so use them\n           // when we know we can.\n           $join = $this->getJoin();\n-          if (isset($join)) {\n+          $group = $this->handler->options['group'] ?? FALSE;\n+          // Only if there is no group with OR operator.\n+          if (isset($join) && !($group && $this->handler->query->where[$group]['type'] === 'OR')) {\n             $join->type = 'INNER';\n           }\n+\n           $this->handler->tableAlias = $this->handler->query->ensureTable($this->handler->table, $this->handler->relationship, $join);\n           $this->handler->view->many_to_one_tables[$field] = $this->handler->value;\n         }"
                },
                {
                    "sha": "6cd39aa1a31cdf959ee77e1ab7960a677af17200",
                    "filename": "html/core/modules/views/src/Plugin/views/cache/CachePluginBase.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Fcache%2FCachePluginBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Fcache%2FCachePluginBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Fcache%2FCachePluginBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -146,7 +146,7 @@ public function cacheGet($type) {\n             // Load entities for each result.\n             $this->view->query->loadEntities($this->view->result);\n             $this->view->total_rows = $cache->data['total_rows'];\n-            $this->view->setCurrentPage($cache->data['current_page'], TRUE);\n+            $this->view->setCurrentPage($cache->data['current_page']);\n             $this->view->execute_time = 0;\n             return TRUE;\n           }"
                },
                {
                    "sha": "dd2014e86a986ab12b1e79f3e4ff380b2930f3b2",
                    "filename": "html/core/modules/views/src/Plugin/views/display/DisplayPluginBase.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Fdisplay%2FDisplayPluginBase.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Fdisplay%2FDisplayPluginBase.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Fdisplay%2FDisplayPluginBase.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2171,7 +2171,7 @@ protected function getMoreUrl() {\n    * {@inheritdoc}\n    */\n   public function render() {\n-    $rows = (!empty($this->view->result) || $this->view->style_plugin->evenEmpty()) ? $this->view->style_plugin->render($this->view->result) : [];\n+    $rows = (!empty($this->view->result) || $this->view->style_plugin->evenEmpty()) ? $this->view->style_plugin->render() : [];\n \n     $element = [\n       '#theme' => $this->themeFunctions(),"
                },
                {
                    "sha": "439888273817a182ce816ce0c2fc7ef341168594",
                    "filename": "html/core/modules/views/src/Plugin/views/filter/Combine.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FCombine.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FCombine.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FCombine.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -210,7 +210,8 @@ protected function opNotLike($expression) {\n \n   protected function opRegex($expression) {\n     $placeholder = $this->placeholder();\n-    $this->query->addWhereExpression($this->options['group'], \"$expression REGEXP $placeholder\", [$placeholder => $this->value]);\n+    $operator = $this->getConditionOperator('REGEXP');\n+    $this->query->addWhereExpression($this->options['group'], \"$expression $operator $placeholder\", [$placeholder => $this->value]);\n   }\n \n   protected function opEmpty($expression) {"
                },
                {
                    "sha": "68612c8b203e65e2440b4453b6635efd5d7a851e",
                    "filename": "html/core/modules/views/src/Plugin/views/filter/NumericFilter.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 8,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FNumericFilter.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FNumericFilter.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FPlugin%2Fviews%2Ffilter%2FNumericFilter.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -420,15 +420,18 @@ public function acceptExposedInput($input) {\n       return TRUE;\n     }\n \n-    // rewrite the input value so that it's in the correct format so that\n+    // Rewrite the input value so that it's in the correct format so that\n     // the parent gets the right data.\n-    if (!empty($this->options['expose']['identifier'])) {\n-      $value = &$input[$this->options['expose']['identifier']];\n-      if (!is_array($value)) {\n-        $value = [\n-          'value' => $value,\n-        ];\n-      }\n+    $key = $this->isAGroup() ? 'group_info' : 'expose';\n+    if (empty($this->options[$key]['identifier'])) {\n+      // Invalid identifier configuration. Value can't be resolved.\n+      return FALSE;\n+    }\n+    $value = &$input[$this->options[$key]['identifier']];\n+    if (!is_array($value)) {\n+      $value = [\n+        'value' => $value,\n+      ];\n     }\n \n     $rc = parent::acceptExposedInput($input);"
                },
                {
                    "sha": "b76f10ea7d2accddb3d1fa865f8718f255623433",
                    "filename": "html/core/modules/views/src/ViewExecutable.php",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 11,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FViewExecutable.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FViewExecutable.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Fsrc%2FViewExecutable.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1956,17 +1956,6 @@ public function getUrl($args = NULL, $display_id = NULL) {\n \n     if (!isset($args)) {\n       $args = $this->args;\n-\n-      // Exclude arguments that were computed, not passed on the URL.\n-      $position = 0;\n-      if (!empty($this->argument)) {\n-        foreach ($this->argument as $argument) {\n-          if (!empty($argument->is_default)) {\n-            unset($args[$position]);\n-          }\n-          $position++;\n-        }\n-      }\n     }\n \n     $path = $this->getPath();"
                },
                {
                    "sha": "0d1739a220cdd590a150492d78440c1dae90f866",
                    "filename": "html/core/modules/views/tests/modules/views_test_config/test_views/views.view.test_argument_default_node_with_page.yml",
                    "status": "added",
                    "additions": 243,
                    "deletions": 0,
                    "changes": 243,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fmodules%2Fviews_test_config%2Ftest_views%2Fviews.view.test_argument_default_node_with_page.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fmodules%2Fviews_test_config%2Ftest_views%2Fviews.view.test_argument_default_node_with_page.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fmodules%2Fviews_test_config%2Ftest_views%2Fviews.view.test_argument_default_node_with_page.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,243 @@\n+langcode: en\n+status: true\n+dependencies:\n+  config:\n+    - node.type.page\n+  module:\n+    - node\n+    - user\n+id: test_argument_default_node_with_page\n+label: 'Test argument_default node with page'\n+module: views\n+description: ''\n+tag: ''\n+base_table: node_field_data\n+base_field: nid\n+display:\n+  default:\n+    id: default\n+    display_title: Default\n+    display_plugin: default\n+    position: 0\n+    display_options:\n+      title: 'Test argument_default node'\n+      fields:\n+        title:\n+          id: title\n+          table: node_field_data\n+          field: title\n+          relationship: none\n+          group_type: group\n+          admin_label: ''\n+          plugin_id: field\n+          label: ''\n+          exclude: false\n+          alter:\n+            alter_text: false\n+            text: ''\n+            make_link: false\n+            path: ''\n+            absolute: false\n+            external: false\n+            replace_spaces: false\n+            path_case: none\n+            trim_whitespace: false\n+            alt: ''\n+            rel: ''\n+            link_class: ''\n+            prefix: ''\n+            suffix: ''\n+            target: ''\n+            nl2br: false\n+            max_length: 0\n+            word_boundary: true\n+            ellipsis: true\n+            more_link: false\n+            more_link_text: ''\n+            more_link_path: ''\n+            strip_tags: false\n+            trim: false\n+            preserve_tags: ''\n+            html: false\n+          element_type: ''\n+          element_class: ''\n+          element_label_type: ''\n+          element_label_class: ''\n+          element_label_colon: true\n+          element_wrapper_type: ''\n+          element_wrapper_class: ''\n+          element_default_classes: true\n+          empty: ''\n+          hide_empty: false\n+          empty_zero: false\n+          hide_alter_empty: true\n+          click_sort_column: value\n+          type: string\n+          settings:\n+            link_to_entity: true\n+          group_column: value\n+          group_columns: {  }\n+          group_rows: true\n+          delta_limit: 0\n+          delta_offset: 0\n+          delta_reversed: false\n+          delta_first_last: false\n+          multi_type: separator\n+          separator: ', '\n+          field_api_classes: false\n+      pager:\n+        type: none\n+        options:\n+          offset: 0\n+          items_per_page: null\n+      exposed_form:\n+        type: basic\n+        options:\n+          submit_button: Apply\n+          reset_button: false\n+          reset_button_label: Reset\n+          exposed_sorts_label: 'Sort by'\n+          expose_sort_order: true\n+          sort_asc_label: Asc\n+          sort_desc_label: Desc\n+      access:\n+        type: perm\n+        options:\n+          perm: 'access content'\n+      cache:\n+        type: tag\n+        options: {  }\n+      empty: {  }\n+      sorts:\n+        title:\n+          id: title\n+          table: node_field_data\n+          field: title\n+          relationship: none\n+          group_type: group\n+          admin_label: ''\n+          entity_type: node\n+          entity_field: title\n+          plugin_id: standard\n+          order: DESC\n+          expose:\n+            label: ''\n+          exposed: false\n+      arguments:\n+        nid:\n+          id: nid\n+          table: node_field_data\n+          field: nid\n+          relationship: none\n+          group_type: group\n+          admin_label: ''\n+          entity_type: node\n+          entity_field: nid\n+          plugin_id: node_nid\n+          default_action: default\n+          exception:\n+            value: all\n+            title_enable: false\n+            title: All\n+          title_enable: false\n+          title: ''\n+          default_argument_type: node\n+          default_argument_options: {  }\n+          summary_options:\n+            base_path: ''\n+            count: true\n+            override: false\n+            items_per_page: 25\n+          summary:\n+            sort_order: asc\n+            number_of_records: 0\n+            format: default_summary\n+          specify_validation: false\n+          validate:\n+            type: none\n+            fail: 'not found'\n+          validate_options: {  }\n+          break_phrase: false\n+          not: false\n+      filters:\n+        status:\n+          id: status\n+          table: node_field_data\n+          field: status\n+          entity_type: node\n+          entity_field: status\n+          plugin_id: boolean\n+          value: '1'\n+          group: 1\n+          expose:\n+            operator: ''\n+        type:\n+          id: type\n+          table: node_field_data\n+          field: type\n+          entity_type: node\n+          entity_field: type\n+          plugin_id: bundle\n+          value:\n+            page: page\n+      style:\n+        type: default\n+      row:\n+        type: fields\n+      query:\n+        type: views_query\n+        options:\n+          query_comment: ''\n+          disable_sql_rewrite: false\n+          distinct: false\n+          replica: false\n+          query_tags: {  }\n+      relationships: {  }\n+      use_more: true\n+      use_more_always: true\n+      use_more_text: more\n+      header: {  }\n+      footer: {  }\n+      display_extenders: {  }\n+    cache_metadata:\n+      max-age: -1\n+      contexts:\n+        - 'languages:language_content'\n+        - 'languages:language_interface'\n+        - url\n+        - 'user.node_grants:view'\n+        - user.permissions\n+      tags: {  }\n+  block_1:\n+    id: block_1\n+    display_title: Block\n+    display_plugin: block\n+    position: 1\n+    display_options:\n+      display_extenders: {  }\n+    cache_metadata:\n+      max-age: -1\n+      contexts:\n+        - 'languages:language_content'\n+        - 'languages:language_interface'\n+        - url\n+        - 'user.node_grants:view'\n+        - user.permissions\n+      tags: {  }\n+  page_1:\n+    id: page_1\n+    display_title: Page\n+    display_plugin: page\n+    position: 2\n+    display_options:\n+      display_extenders: {  }\n+      path: test-argument-default/%\n+    cache_metadata:\n+      max-age: -1\n+      contexts:\n+        - 'languages:language_content'\n+        - 'languages:language_interface'\n+        - url\n+        - 'user.node_grants:view'\n+        - user.permissions\n+      tags: {  }"
                },
                {
                    "sha": "9c4f6c2ffe4bea8668945cf77d97d99a4ffcfed2",
                    "filename": "html/core/modules/views/tests/src/Functional/Handler/AreaTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FHandler%2FAreaTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FHandler%2FAreaTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FHandler%2FAreaTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -128,7 +128,7 @@ public function testRenderAreaToken() {\n \n     // Test we have the site:name token in the output.\n     $output = $view->preview();\n-    $output = $this->container->get('renderer')->renderRoot($output);\n+    $output = (string) $this->container->get('renderer')->renderRoot($output);\n     $expected = \\Drupal::token()->replace('[site:name]');\n     $this->assertStringContainsString($expected, $output);\n   }"
                },
                {
                    "sha": "d55853dbc81360ca6b86a4642e328f6a99cb3796",
                    "filename": "html/core/modules/views/tests/src/Functional/Handler/FieldWebTest.php",
                    "status": "modified",
                    "additions": 43,
                    "deletions": 44,
                    "changes": 87,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FHandler%2FFieldWebTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FHandler%2FFieldWebTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FHandler%2FFieldWebTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\views\\Functional\\Handler;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Component\\Utility\\Html;\n use Drupal\\Component\\Utility\\UrlHelper;\n use Drupal\\Core\\Render\\RenderContext;\n@@ -235,15 +234,15 @@ public function testAlterUrl() {\n     // Tests that the suffix/prefix appears on the output.\n     $id_field->options['alter']['prefix'] = $prefix = $this->randomMachineName();\n     $id_field->options['alter']['suffix'] = $suffix = $this->randomMachineName();\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, $prefix);\n     $this->assertSubString($output, $suffix);\n     unset($id_field->options['alter']['prefix']);\n     unset($id_field->options['alter']['suffix']);\n \n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, $path, 'Make sure that the path is part of the output');\n@@ -256,28 +255,28 @@ public function testAlterUrl() {\n \n       $expected_result = Url::fromRoute('entity.node.canonical', ['node' => '123'], ['absolute' => $absolute])->toString();\n       $alter['absolute'] = $absolute;\n-      $result = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+      $result = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n         return $id_field->theme($row);\n       });\n       $this->assertSubString($result, $expected_result);\n \n       $expected_result = Url::fromRoute('entity.node.canonical', ['node' => '123'], ['fragment' => 'foo', 'absolute' => $absolute])->toString();\n       $alter['path'] = 'node/123#foo';\n-      $result = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+      $result = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n         return $id_field->theme($row);\n       });\n       $this->assertSubString($result, $expected_result);\n \n       $expected_result = Url::fromRoute('entity.node.canonical', ['node' => '123'], ['query' => ['foo' => NULL], 'absolute' => $absolute])->toString();\n       $alter['path'] = 'node/123?foo';\n-      $result = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+      $result = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n         return $id_field->theme($row);\n       });\n       $this->assertSubString($result, $expected_result);\n \n       $expected_result = Url::fromRoute('entity.node.canonical', ['node' => '123'], ['query' => ['foo' => 'bar', 'bar' => 'baz'], 'absolute' => $absolute])->toString();\n       $alter['path'] = 'node/123?foo=bar&bar=baz';\n-      $result = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+      $result = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n         return $id_field->theme($row);\n       });\n       $this->assertSubString(Html::decodeEntities($result), Html::decodeEntities($expected_result));\n@@ -286,14 +285,14 @@ public function testAlterUrl() {\n       // $expected_result = Url::fromRoute('entity.node.canonical', ['node' => '123'], ['query' => ['foo' => NULL], 'fragment' => 'bar', 'absolute' => $absolute])->toString();\n       $expected_result = Url::fromUserInput('/node/123', ['query' => ['foo' => NULL], 'fragment' => 'bar', 'absolute' => $absolute])->toString();\n       $alter['path'] = 'node/123?foo#bar';\n-      $result = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+      $result = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n         return $id_field->theme($row);\n       });\n       $this->assertSubString(Html::decodeEntities($result), Html::decodeEntities($expected_result));\n \n       $expected_result = Url::fromRoute('<front>', [], ['absolute' => $absolute])->toString();\n       $alter['path'] = '<front>';\n-      $result = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+      $result = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n         return $id_field->theme($row);\n       });\n       $this->assertSubString($result, $expected_result);\n@@ -302,12 +301,12 @@ public function testAlterUrl() {\n     // Tests the replace spaces with dashes feature.\n     $id_field->options['alter']['replace_spaces'] = TRUE;\n     $id_field->options['alter']['path'] = $path = $this->randomMachineName() . ' ' . $this->randomMachineName();\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, str_replace(' ', '-', $path));\n     $id_field->options['alter']['replace_spaces'] = FALSE;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     // The URL has a space in it, so to check we have to decode the URL output.\n@@ -317,49 +316,49 @@ public function testAlterUrl() {\n     // Switch on the external flag should output an external URL as well.\n     $id_field->options['alter']['external'] = TRUE;\n     $id_field->options['alter']['path'] = $path = 'www.example.com';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, 'http://www.example.com');\n \n     // Setup a not external URL, which shouldn't lead to an external URL.\n     $id_field->options['alter']['external'] = FALSE;\n     $id_field->options['alter']['path'] = $path = 'www.example.com';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertNotSubString($output, 'http://www.example.com');\n \n     // Tests the transforming of the case setting.\n     $id_field->options['alter']['path'] = $path = $this->randomMachineName();\n     $id_field->options['alter']['path_case'] = 'none';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, $path);\n \n     // Switch to uppercase and lowercase.\n     $id_field->options['alter']['path_case'] = 'upper';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, strtoupper($path));\n     $id_field->options['alter']['path_case'] = 'lower';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, strtolower($path));\n \n     // Switch to ucfirst and ucwords.\n     $id_field->options['alter']['path_case'] = 'ucfirst';\n     $id_field->options['alter']['path'] = 'drupal has a great community';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, UrlHelper::encodePath('Drupal has a great community'));\n \n     $id_field->options['alter']['path_case'] = 'ucwords';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $this->assertSubString($output, UrlHelper::encodePath('Drupal Has A Great Community'));\n@@ -368,7 +367,7 @@ public function testAlterUrl() {\n     // Tests the link_class setting and see whether it actually exists in the\n     // output.\n     $id_field->options['alter']['link_class'] = $class = $this->randomMachineName();\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $elements = $this->xpathContent($output, '//a[contains(@class, :class)]', [':class' => $class]);\n@@ -378,7 +377,7 @@ public function testAlterUrl() {\n \n     // Tests the alt setting.\n     $id_field->options['alter']['alt'] = $rel = $this->randomMachineName();\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $elements = $this->xpathContent($output, '//a[contains(@title, :alt)]', [':alt' => $rel]);\n@@ -387,7 +386,7 @@ public function testAlterUrl() {\n \n     // Tests the rel setting.\n     $id_field->options['alter']['rel'] = $rel = $this->randomMachineName();\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $elements = $this->xpathContent($output, '//a[contains(@rel, :rel)]', [':rel' => $rel]);\n@@ -396,7 +395,7 @@ public function testAlterUrl() {\n \n     // Tests the target setting.\n     $id_field->options['alter']['target'] = $target = $this->randomMachineName();\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($id_field, $row) {\n       return $id_field->theme($row);\n     });\n     $elements = $this->xpathContent($output, '//a[contains(@target, :target)]', [':target' => $target]);\n@@ -420,13 +419,13 @@ public function testFieldClasses() {\n     // Setup some kind of label by default.\n     $id_field->options['label'] = $this->randomMachineName();\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertEmpty($this->xpathContent($output, '//div[contains(@class, :class)]', [':class' => 'field-content']));\n     $this->assertEmpty($this->xpathContent($output, '//div[contains(@class, :class)]', [':class' => 'field__label']));\n \n     $id_field->options['element_default_classes'] = TRUE;\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     // Per default the label and the element of the field are spans.\n     $this->assertNotEmpty($this->xpathContent($output, '//span[contains(@class, :class)]', [':class' => 'field-content']));\n     $this->assertNotEmpty($this->xpathContent($output, '//span[contains(@class, :class)]', [':class' => 'views-label']));\n@@ -442,13 +441,13 @@ public function testFieldClasses() {\n       // Set a custom wrapper element css class.\n       $id_field->options['element_wrapper_class'] = $random_class;\n       $output = $view->preview();\n-      $output = $renderer->renderRoot($output);\n+      $output = (string) $renderer->renderRoot($output);\n       $this->assertNotEmpty($this->xpathContent($output, \"//{$element_type}[contains(@class, :class)]\", [':class' => $random_class]));\n \n       // Set no custom css class.\n       $id_field->options['element_wrapper_class'] = '';\n       $output = $view->preview();\n-      $output = $renderer->renderRoot($output);\n+      $output = (string) $renderer->renderRoot($output);\n       $this->assertEmpty($this->xpathContent($output, \"//{$element_type}[contains(@class, :class)]\", [':class' => $random_class]));\n       $this->assertNotEmpty($this->xpathContent($output, \"//li[contains(@class, views-row)]/{$element_type}\"));\n     }\n@@ -462,13 +461,13 @@ public function testFieldClasses() {\n       // Set a custom label element css class.\n       $id_field->options['element_label_class'] = $random_class;\n       $output = $view->preview();\n-      $output = $renderer->renderRoot($output);\n+      $output = (string) $renderer->renderRoot($output);\n       $this->assertNotEmpty($this->xpathContent($output, \"//li[contains(@class, views-row)]//{$element_type}[contains(@class, :class)]\", [':class' => $random_class]));\n \n       // Set no custom css class.\n       $id_field->options['element_label_class'] = '';\n       $output = $view->preview();\n-      $output = $renderer->renderRoot($output);\n+      $output = (string) $renderer->renderRoot($output);\n       $this->assertEmpty($this->xpathContent($output, \"//li[contains(@class, views-row)]//{$element_type}[contains(@class, :class)]\", [':class' => $random_class]));\n       $this->assertNotEmpty($this->xpathContent($output, \"//li[contains(@class, views-row)]//{$element_type}\"));\n     }\n@@ -482,13 +481,13 @@ public function testFieldClasses() {\n       // Set a custom label element css class.\n       $id_field->options['element_class'] = $random_class;\n       $output = $view->preview();\n-      $output = $renderer->renderRoot($output);\n+      $output = (string) $renderer->renderRoot($output);\n       $this->assertNotEmpty($this->xpathContent($output, \"//li[contains(@class, views-row)]//div[contains(@class, views-field)]//{$element_type}[contains(@class, :class)]\", [':class' => $random_class]));\n \n       // Set no custom css class.\n       $id_field->options['element_class'] = '';\n       $output = $view->preview();\n-      $output = $renderer->renderRoot($output);\n+      $output = (string) $renderer->renderRoot($output);\n       $this->assertEmpty($this->xpathContent($output, \"//li[contains(@class, views-row)]//div[contains(@class, views-field)]//{$element_type}[contains(@class, :class)]\", [':class' => $random_class]));\n       $this->assertNotEmpty($this->xpathContent($output, \"//li[contains(@class, views-row)]//div[contains(@class, views-field)]//{$element_type}\"));\n     }\n@@ -534,22 +533,22 @@ public function testTextRendering() {\n     $row = $view->result[0];\n \n     $name_field->options['alter']['strip_tags'] = TRUE;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, $random_text, 'Find text without html if stripping of views field output is enabled.');\n     $this->assertNotSubString($output, $html_text, 'Find no text with the html if stripping of views field output is enabled.');\n \n     // Tests preserving of html tags.\n     $name_field->options['alter']['preserve_tags'] = '<div>';\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, $random_text, 'Find text without html if stripping of views field output is enabled but a div is allowed.');\n     $this->assertSubString($output, $html_text, 'Find text with the html if stripping of views field output is enabled but a div is allowed.');\n \n     $name_field->options['alter']['strip_tags'] = FALSE;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, $random_text, 'Find text without html if stripping of views field output is disabled.');\n@@ -560,15 +559,15 @@ public function testTextRendering() {\n     $views_test_data_name = $row->views_test_data_name;\n     $row->views_test_data_name = '  ' . $views_test_data_name . '     ';\n     $name_field->options['alter']['trim_whitespace'] = TRUE;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n \n     $this->assertSubString($output, $views_test_data_name, 'Make sure the trimmed text can be found if trimming is enabled.');\n     $this->assertNotSubString($output, $row->views_test_data_name, 'Make sure the untrimmed text can be found if trimming is enabled.');\n \n     $name_field->options['alter']['trim_whitespace'] = FALSE;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, $views_test_data_name, 'Make sure the trimmed text can be found if trimming is disabled.');\n@@ -583,14 +582,14 @@ public function testTextRendering() {\n     $name_field->options['alter']['max_length'] = 5;\n     $trimmed_name = mb_substr($row->views_test_data_name, 0, 5);\n \n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, $trimmed_name, \"Make sure the trimmed output ($trimmed_name) appears in the rendered output ($output).\");\n     $this->assertNotSubString($output, $row->views_test_data_name, \"Make sure the untrimmed value ($row->views_test_data_name) shouldn't appear in the rendered output ($output).\");\n \n     $name_field->options['alter']['max_length'] = 9;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, $trimmed_name, \"Make sure the untrimmed ($trimmed_name) output appears in the rendered output  ($output).\");\n@@ -632,15 +631,15 @@ public function testTextRendering() {\n \n     foreach ($tuples as $tuple) {\n       $row->views_test_data_name = $tuple['value'];\n-      $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+      $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n         return $name_field->advancedRender($row);\n       });\n \n       if ($tuple['trimmed']) {\n-        $this->assertNotSubString($output, $tuple['value'], new FormattableMarkup('The untrimmed value (@untrimmed) should not appear in the trimmed output (@output).', ['@untrimmed' => $tuple['value'], '@output' => $output]));\n+        $this->assertNotSubString($output, $tuple['value'], \"The untrimmed value ({$tuple['value']}) should not appear in the trimmed output ($output).\");\n       }\n       if (!empty($tuple['trimmed_value'])) {\n-        $this->assertSubString($output, $tuple['trimmed_value'], new FormattableMarkup('The trimmed value (@trimmed) should appear in the trimmed output (@output).', ['@trimmed' => $tuple['trimmed_value'], '@output' => $output]));\n+        $this->assertSubString($output, $tuple['trimmed_value'], \"The trimmed value ({$tuple['trimmed_value']}) should appear in the trimmed output ($output).\");\n       }\n     }\n \n@@ -651,14 +650,14 @@ public function testTextRendering() {\n     $name_field->options['alter']['more_link_text'] = $more_text = $this->randomMachineName();\n     $name_field->options['alter']['more_link_path'] = $more_path = $this->randomMachineName();\n \n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, $more_text, 'Make sure a read more text is displayed if the output got trimmed');\n     $this->assertNotEmpty($this->xpathContent($output, '//a[contains(@href, :path)]', [':path' => $more_path]), 'Make sure the read more link points to the right destination.');\n \n     $name_field->options['alter']['more_link'] = FALSE;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertNotSubString($output, $more_text, 'Make sure no read more text appears.');\n@@ -667,12 +666,12 @@ public function testTextRendering() {\n     // Check for the ellipses.\n     $row->views_test_data_name = $this->randomMachineName(8);\n     $name_field->options['alter']['max_length'] = 5;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertSubString($output, '…', 'An ellipsis should appear if the output is trimmed');\n     $name_field->options['alter']['max_length'] = 10;\n-    $output = $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n+    $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field, $row) {\n       return $name_field->advancedRender($row);\n     });\n     $this->assertNotSubString($output, '…', 'No ellipsis should appear if the output is not trimmed');"
                },
                {
                    "sha": "3ee85dc35f4cffe408dbf76cfc47d9164860c0f7",
                    "filename": "html/core/modules/views/tests/src/Functional/Plugin/ArgumentDefaultTest.php",
                    "status": "modified",
                    "additions": 30,
                    "deletions": 0,
                    "changes": 30,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FArgumentDefaultTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FArgumentDefaultTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FArgumentDefaultTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -28,6 +28,7 @@ class ArgumentDefaultTest extends ViewTestBase {\n     'test_argument_default_current_user',\n     'test_argument_default_node',\n     'test_argument_default_query_param',\n+    'test_argument_default_node_with_page',\n   ];\n \n   /**\n@@ -190,4 +191,33 @@ public function testArgumentDefaultQueryParameter() {\n     $this->assertEquals('page', $view->argument['type']->getDefaultArgument());\n   }\n \n+  /**\n+   * Tests the more line generation if a default argument is provided.\n+   */\n+  public function testArgumentDefaultUrlGeneration() {\n+    // Create a user that has permission to place a view block.\n+    $permissions = [\n+      'administer views',\n+      'administer blocks',\n+      'bypass node access',\n+      'access user profiles',\n+      'view all revisions',\n+    ];\n+    $views_admin = $this->drupalCreateUser($permissions);\n+    $this->drupalLogin($views_admin);\n+\n+    // Create nodes where should show themselves again as view block.\n+    $node_type = NodeType::create(['type' => 'page', 'name' => 'Page']);\n+    $node_type->save();\n+    $node = Node::create(['title' => 'Test node 1', 'type' => 'page']);\n+    $node->save();\n+\n+    // Place the block, visit the page that displays the block, and check that\n+    // the more link takes the node ID into account and does not ignore\n+    // the default argument.\n+    $this->drupalPlaceBlock(\"views_block:test_argument_default_node_with_page-block_1\", ['id' => 'view_block_id']);\n+    $this->drupalGet('node/' . $node->id());\n+    $this->assertSession()->linkByHrefExists('/test-argument-default/' . $node->id());\n+  }\n+\n }"
                },
                {
                    "sha": "e68cf66b7596618243afed639f51a6ba4642b592",
                    "filename": "html/core/modules/views/tests/src/Functional/Plugin/DisplayPageWebTest.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FDisplayPageWebTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FDisplayPageWebTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FDisplayPageWebTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -63,13 +63,13 @@ public function testArguments() {\n     $this->assertSession()->statusCodeEquals(200);\n     $this->assertCacheContexts(['languages:language_interface', 'route', 'theme', 'url']);\n     $this->assertSession()->elementsCount('xpath', $xpath, 1);\n-    $this->assertSession()->elementTextEquals('xpath', $xpath, 1);\n+    $this->assertSession()->elementTextEquals('xpath', $xpath, '1');\n \n     // Ensure that just the filtered entry is returned.\n     $this->drupalGet('test_route_with_suffix/1/suffix');\n     $this->assertSession()->statusCodeEquals(200);\n     $this->assertSession()->elementsCount('xpath', $xpath, 1);\n-    $this->assertSession()->elementTextEquals('xpath', $xpath, 1);\n+    $this->assertSession()->elementTextEquals('xpath', $xpath, '1');\n \n     // Ensure that no result is returned.\n     $this->drupalGet('test_route_with_suffix_and_argument/1/suffix/2');\n@@ -80,13 +80,13 @@ public function testArguments() {\n     $this->drupalGet('test_route_with_suffix_and_argument/1/suffix/1');\n     $this->assertSession()->statusCodeEquals(200);\n     $this->assertSession()->elementsCount('xpath', $xpath, 1);\n-    $this->assertSession()->elementTextEquals('xpath', $xpath, 1);\n+    $this->assertSession()->elementTextEquals('xpath', $xpath, '1');\n \n     // Ensure that just the filtered entry is returned.\n     $this->drupalGet('test_route_with_long_argument/1');\n     $this->assertSession()->statusCodeEquals(200);\n     $this->assertSession()->elementsCount('xpath', $xpath, 1);\n-    $this->assertSession()->elementTextEquals('xpath', $xpath, 1);\n+    $this->assertSession()->elementTextEquals('xpath', $xpath, '1');\n   }\n \n   /**"
                },
                {
                    "sha": "dd3e2286ba0a50f256f57ea452554493aefc8cda",
                    "filename": "html/core/modules/views/tests/src/Functional/Plugin/DisplayTest.php",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 11,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FDisplayTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FDisplayTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FDisplayTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -110,7 +110,7 @@ public function testDisplayPlugin() {\n     $view->style_plugin->setUsesRowPlugin(FALSE);\n \n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n \n     $this->assertStringContainsString('<h1></h1>', $output, 'An empty value for test_option found in output.');\n \n@@ -119,7 +119,7 @@ public function testDisplayPlugin() {\n     $view->save();\n \n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n \n     // Test we have our custom <h1> tag in the output of the view.\n     $this->assertStringContainsString('<h1>Test option title</h1>', $output, 'The test_option value found in display output title.');\n@@ -218,39 +218,39 @@ public function testReadMoreCustomURL() {\n     $view->display_handler->setOption('link_url', 'node');\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node', $output, 'The read more link with href \"/node\" was found.');\n \n     // Test more link with leading slash.\n     $view->display_handler->setOption('link_display', 'custom_url');\n     $view->display_handler->setOption('link_url', '/node');\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node', $output, 'The read more link with href \"/node\" was found.');\n \n     // Test more link with absolute URL.\n     $view->display_handler->setOption('link_display', 'custom_url');\n     $view->display_handler->setOption('link_url', 'http://example.com');\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('http://example.com', $output, 'The read more link with href \"http://example.com\" was found.');\n \n     // Test more link with query parameters in the URL.\n     $view->display_handler->setOption('link_display', 'custom_url');\n     $view->display_handler->setOption('link_url', 'node?page=1&foo=bar');\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node?page=1&amp;foo=bar', $output, 'The read more link with href \"/node?page=1&foo=bar\" was found.');\n \n     // Test more link with fragment in the URL.\n     $view->display_handler->setOption('link_display', 'custom_url');\n     $view->display_handler->setOption('link_url', 'node#target');\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node#target', $output, 'The read more link with href \"/node#target\" was found.');\n \n     // Test more link with arguments.\n@@ -263,7 +263,7 @@ public function testReadMoreCustomURL() {\n     $view->setArguments([22]);\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node?date=22&amp;foo=bar', $output, 'The read more link with href \"/node?date=22&foo=bar\" was found.');\n \n     // Test more link with 1 dimension array query parameters with arguments.\n@@ -276,23 +276,23 @@ public function testReadMoreCustomURL() {\n     $view->setArguments([22]);\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node?f%5B0%5D=foo%3Abar&amp;f%5B1%5D=foo%3A22', $output, 'The read more link with href \"/node?f[0]=foo:bar&f[1]=foo:22\" was found.');\n \n     // Test more link with arguments in path.\n     $view->display_handler->setOption('link_url', 'node/{{ raw_arguments.age }}?date={{ raw_arguments.age }}&foo=bar');\n     $view->setArguments([22]);\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node/22?date=22&amp;foo=bar', $output, 'The read more link with href \"/node/22?date=22&foo=bar\" was found.');\n \n     // Test more link with arguments in fragment.\n     $view->display_handler->setOption('link_url', 'node?date={{ raw_arguments.age }}&foo=bar#{{ raw_arguments.age }}');\n     $view->setArguments([22]);\n     $this->executeView($view);\n     $output = $view->preview();\n-    $output = $renderer->renderRoot($output);\n+    $output = (string) $renderer->renderRoot($output);\n     $this->assertStringContainsString('/node?date=22&amp;foo=bar#22', $output, 'The read more link with href \"/node?date=22&foo=bar#22\" was found.');\n   }\n "
                },
                {
                    "sha": "0d63cfd04e128ebd84093607a1162fa1c2de2b03",
                    "filename": "html/core/modules/views/tests/src/Functional/Plugin/PagerTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FPagerTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FPagerTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FFunctional%2FPlugin%2FPagerTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -386,7 +386,7 @@ public function testRenderNullPager() {\n     $view->setAjaxEnabled(TRUE);\n     $view->pager = NULL;\n     $output = $view->render();\n-    $output = \\Drupal::service('renderer')->renderRoot($output);\n+    $output = (string) \\Drupal::service('renderer')->renderRoot($output);\n     $this->assertEquals(0, preg_match('/<ul class=\"pager\">/', $output), 'The pager is not rendered.');\n   }\n "
                },
                {
                    "sha": "4dce202cd15b786fead8892c5da24f7c6bc3faf7",
                    "filename": "html/core/modules/views/tests/src/Kernel/Handler/FieldKernelTest.php",
                    "status": "modified",
                    "additions": 14,
                    "deletions": 17,
                    "changes": 31,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FKernel%2FHandler%2FFieldKernelTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FKernel%2FHandler%2FFieldKernelTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FKernel%2FHandler%2FFieldKernelTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -2,7 +2,6 @@\n \n namespace Drupal\\Tests\\views\\Kernel\\Handler;\n \n-use Drupal\\Component\\Render\\FormattableMarkup;\n use Drupal\\Core\\Render\\RenderContext;\n use Drupal\\Tests\\views\\Kernel\\ViewsKernelTestBase;\n use Drupal\\views\\Plugin\\views\\field\\FieldPluginBase;\n@@ -102,9 +101,8 @@ public function testQuery() {\n    *   The value to search for.\n    * @param string $message\n    *   (optional) A message to display with the assertion. Do not translate\n-   *   messages: use \\Drupal\\Component\\Render\\FormattableMarkup to embed\n-   *   variables in the message text, not t(). If left blank, a default message\n-   *   will be displayed.\n+   *   messages: use string interpolation to embed variables in the message\n+   *   text, not t(). If left blank, a default message will be displayed.\n    *\n    * @internal\n    */\n@@ -121,9 +119,8 @@ protected function assertSubString(string $haystack, string $needle, string $mes\n    *   The value to search for.\n    * @param string $message\n    *   (optional) A message to display with the assertion. Do not translate\n-   *   messages: use \\Drupal\\Component\\Render\\FormattableMarkup to embed\n-   *   variables in the message text, not t(). If left blank, a default message\n-   *   will be displayed.\n+   *   messages: use string interpolation to embed variables in the message\n+   *   text, not t(). If left blank, a default message will be displayed.\n    *\n    * @internal\n    */\n@@ -288,17 +285,17 @@ public function testFieldTokens() {\n       $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field_0, $row) {\n         return $name_field_0->advancedRender($row);\n       });\n-      $this->assertEquals($expected_output_0, $output, new FormattableMarkup('Test token replacement: \"@token\" gave \"@output\"', ['@token' => $name_field_0->options['alter']['text'], '@output' => $output]));\n+      $this->assertEquals($expected_output_0, $output, sprintf('Test token replacement: \"%s\" gave \"%s\"', $name_field_0->options['alter']['text'], $output));\n \n       $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field_1, $row) {\n         return $name_field_1->advancedRender($row);\n       });\n-      $this->assertEquals($expected_output_1, $output, new FormattableMarkup('Test token replacement: \"@token\" gave \"@output\"', ['@token' => $name_field_1->options['alter']['text'], '@output' => $output]));\n+      $this->assertEquals($expected_output_1, $output, sprintf('Test token replacement: \"%s\" gave \"%s\"', $name_field_1->options['alter']['text'], $output));\n \n       $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($name_field_2, $row) {\n         return $name_field_2->advancedRender($row);\n       });\n-      $this->assertEquals($expected_output_2, $output, new FormattableMarkup('Test token replacement: \"@token\" gave \"@output\"', ['@token' => $name_field_2->options['alter']['text'], '@output' => $output]));\n+      $this->assertEquals($expected_output_2, $output, sprintf('Test token replacement: \"%s\" gave %s\"', $name_field_2->options['alter']['text'], $output));\n     }\n \n     $job_field = $view->field['job'];\n@@ -310,11 +307,11 @@ public function testFieldTokens() {\n     $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($job_field, $row) {\n       return $job_field->advancedRender($row);\n     });\n-    $this->assertSubString($output, $random_text, new FormattableMarkup('Make sure the self token (@token => @value) appears in the output (@output)', [\n-      '@value' => $random_text,\n-      '@output' => $output,\n-      '@token' => $job_field->options['alter']['text'],\n-    ]));\n+    $this->assertSubString($output, $random_text, sprintf('Make sure the self token (%s => %s) appears in the output (%s)',\n+      $job_field->options['alter']['text'],\n+      $random_text,\n+      $output,\n+    ));\n \n     // Verify the token format used in D7 and earlier does not get substituted.\n     $old_token = '[job]';\n@@ -324,7 +321,7 @@ public function testFieldTokens() {\n     $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($job_field, $row) {\n       return $job_field->advancedRender($row);\n     });\n-    $this->assertEquals($old_token, $output, new FormattableMarkup('Make sure the old token style (@token => @value) is not changed in the output (@output)', ['@value' => $random_text, '@output' => $output, '@token' => $job_field->options['alter']['text']]));\n+    $this->assertEquals($old_token, $output, sprintf('Make sure the old token style (%s => %s) is not changed in the output (%s)', $job_field->options['alter']['text'], $random_text, $output));\n \n     // Verify HTML tags are allowed in rewrite templates while token\n     // replacements are escaped.\n@@ -353,7 +350,7 @@ public function testFieldTokens() {\n     $output = (string) $renderer->executeInRenderContext(new RenderContext(), function () use ($job_field, $row) {\n       return $job_field->advancedRender($row);\n     });\n-    $this->assertEquals($random_text, $output, new FormattableMarkup('Make sure a script tag in the template (@template) is removed, leaving only the replaced token in the output (@output)', ['@output' => $output, '@template' => $rewrite_template]));\n+    $this->assertEquals($random_text, $output, \"Make sure a script tag in the template ($rewrite_template) is removed, leaving only the replaced token in the output ($output)\");\n   }\n \n   /**"
                },
                {
                    "sha": "57a6d6d71d8a0eeca1f81c24dc5bd810607df8fd",
                    "filename": "html/core/modules/views/tests/src/Kernel/Handler/FilterCombineTest.php",
                    "status": "modified",
                    "additions": 59,
                    "deletions": 0,
                    "changes": 59,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FKernel%2FHandler%2FFilterCombineTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FKernel%2FHandler%2FFilterCombineTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FKernel%2FHandler%2FFilterCombineTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -98,6 +98,65 @@ public function testFilterCombineContains() {\n     $this->assertIdenticalResultset($view, $resultset, $this->columnMap);\n   }\n \n+  /**\n+   * Tests the Combine field filter with the 'regular_expression' operator.\n+   */\n+  public function testFilterCombineRegEx() {\n+    $view = Views::getView('test_view');\n+    $view->setDisplay();\n+\n+    $fields = $view->displayHandlers->get('default')->getOption('fields');\n+    $view->displayHandlers->get('default')->overrideOption('fields', $fields + [\n+      'job' => [\n+        'id' => 'job',\n+        'table' => 'views_test_data',\n+        'field' => 'job',\n+        'relationship' => 'none',\n+      ],\n+    ]);\n+\n+    // Change the filtering.\n+    $view->displayHandlers->get('default')->overrideOption('filters', [\n+      'age' => [\n+        'id' => 'combine',\n+        'table' => 'views',\n+        'field' => 'combine',\n+        'relationship' => 'none',\n+        'operator' => 'regular_expression',\n+        'fields' => [\n+          'name',\n+          'job',\n+        ],\n+        'value' => '(ing|write)',\n+      ],\n+    ]);\n+\n+    $this->executeView($view);\n+    $resultset = [\n+      [\n+        'name' => 'John',\n+        'job' => 'Singer',\n+      ],\n+      [\n+        'name' => 'George',\n+        'job' => 'Singer',\n+      ],\n+      [\n+        'name' => 'Ringo',\n+        'job' => 'Drummer',\n+      ],\n+      [\n+        'name' => 'Paul',\n+        'job' => 'Songwriter',\n+      ],\n+      [\n+        'name' => 'Ginger',\n+        'job' => NULL,\n+      ],\n+    ];\n+    $this->assertIdenticalResultset($view, $resultset, $this->columnMap);\n+  }\n+\n   /**\n    * Tests the Combine field filter with the 'word' operator.\n    */"
                },
                {
                    "sha": "aff3dc6696daa9ee5d82dded1023d2fa8518ed5b",
                    "filename": "html/core/modules/views/tests/src/Unit/Controller/ViewAjaxControllerTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FController%2FViewAjaxControllerTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FController%2FViewAjaxControllerTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FController%2FViewAjaxControllerTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -336,7 +336,7 @@ public function testAjaxViewWithPager() {\n       ->disableOriginalConstructor()\n       ->getMock();\n     $display_handler->expects($this->once())\n-      ->method('setOption', '0')\n+      ->method('setOption')\n       ->with($this->equalTo('pager_element'));\n \n     $display_collection = $this->getMockBuilder('Drupal\\views\\DisplayPluginCollection')"
                },
                {
                    "sha": "df4c653103aa82e8fc7ef1e48138d7da8a6b96b2",
                    "filename": "html/core/modules/views/tests/src/Unit/Plugin/field/FieldPluginBaseTest.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 9,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FPlugin%2Ffield%2FFieldPluginBaseTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FPlugin%2Ffield%2FFieldPluginBaseTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FPlugin%2Ffield%2FFieldPluginBaseTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -4,8 +4,8 @@\n \n namespace Drupal\\Tests\\views\\Unit\\Plugin\\field;\n \n-use Drupal\\Core\\GeneratedUrl;\n use Drupal\\Core\\Entity\\EntityInterface;\n+use Drupal\\Core\\GeneratedUrl;\n use Drupal\\Core\\Language\\Language;\n use Drupal\\Core\\Render\\Markup;\n use Drupal\\Core\\Url;\n@@ -15,11 +15,11 @@\n use Drupal\\Tests\\UnitTestCase;\n use Drupal\\views\\Plugin\\views\\field\\FieldPluginBase;\n use Drupal\\views\\ResultRow;\n+use Prophecy\\Prophet;\n use Symfony\\Component\\DependencyInjection\\ContainerBuilder;\n use Symfony\\Component\\HttpFoundation\\Request;\n use Symfony\\Component\\HttpFoundation\\RequestStack;\n use Symfony\\Component\\Routing\\Route;\n-use Prophecy\\Prophet;\n \n /**\n  * @coversDefaultClass \\Drupal\\views\\Plugin\\views\\field\\FieldPluginBase\n@@ -640,18 +640,13 @@ public function providerTestRenderAsExternalLinkWithPathAndTokens() {\n   /**\n    * Sets up a test field.\n    *\n-   * @return \\Drupal\\Tests\\views\\Unit\\Plugin\\field\\FieldPluginBaseTestField|\\PHPUnit\\Framework\\MockObject\\MockObject\n+   * @return \\Drupal\\Tests\\views\\Unit\\Plugin\\field\\FieldPluginBaseTestField\n    *   The test field.\n    */\n   protected function setupTestField(array $options = []) {\n-    /** @var \\Drupal\\Tests\\views\\Unit\\Plugin\\field\\FieldPluginBaseTestField $field */\n-    $field = $this->getMockBuilder('Drupal\\Tests\\views\\Unit\\Plugin\\field\\FieldPluginBaseTestField')\n-      ->addMethods(['l'])\n-      ->setConstructorArgs([$this->configuration, $this->pluginId, $this->pluginDefinition])\n-      ->getMock();\n+    $field = new FieldPluginBaseTestField($this->configuration, $this->pluginId, $this->pluginDefinition);\n     $field->init($this->executable, $this->display, $options);\n     $field->setLinkGenerator($this->linkGenerator);\n-\n     return $field;\n   }\n "
                },
                {
                    "sha": "6752f91065804878312c93a079a36e3d25f1be81",
                    "filename": "html/core/modules/views/tests/src/Unit/Plugin/views/filter/NumericFilterTest.php",
                    "status": "added",
                    "additions": 118,
                    "deletions": 0,
                    "changes": 118,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FPlugin%2Fviews%2Ffilter%2FNumericFilterTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FPlugin%2Fviews%2Ffilter%2FNumericFilterTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews%2Ftests%2Fsrc%2FUnit%2FPlugin%2Fviews%2Ffilter%2FNumericFilterTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,118 @@\n+<?php\n+\n+declare(strict_types=1);\n+\n+namespace Drupal\\Tests\\views\\Unit\\Plugin\\views\\filter;\n+\n+use Drupal\\Tests\\UnitTestCase;\n+use Drupal\\views\\Plugin\\views\\display\\DisplayPluginBase;\n+use Drupal\\views\\Plugin\\views\\filter\\NumericFilter;\n+use Drupal\\views\\ViewExecutable;\n+\n+/**\n+ * @coversDefaultClass \\Drupal\\views\\Plugin\\views\\filter\\NumericFilter\n+ * @group Views\n+ */\n+class NumericFilterTest extends UnitTestCase {\n+\n+  /**\n+   * Tests the acceptExposedInput method.\n+   *\n+   * @covers ::acceptExposedInput\n+   * @dataProvider provideAcceptExposedInput\n+   */\n+  public function testAcceptExposedInput($options, $value, $expected): void {\n+    $plugin_definition = [\n+      'title' => $this->randomMachineName(),\n+    ];\n+\n+    $plugin = new NumericFilter([], 'numeric', $plugin_definition);\n+    $translation_stub = $this->getStringTranslationStub();\n+    $plugin->setStringTranslation($translation_stub);\n+\n+    $view = $this->prophesize(ViewExecutable::class)->reveal();\n+    $display = $this->prophesize(DisplayPluginBase::class)->reveal();\n+    $view->display_handler = $display;\n+    $plugin->init($view, $view->display_handler, $options);\n+\n+    $this->assertSame($expected, $plugin->acceptExposedInput($value));\n+  }\n+\n+  /**\n+   * Data provider for testAcceptExposedInput test.\n+   *\n+   * @return array[]\n+   *   The test cases.\n+   */\n+  public function provideAcceptExposedInput(): array {\n+    // [$options, $value, $expected]\n+    return [\n+      // Not exposed by default. Bypass parsing and return true.\n+      'defaults' => [[], [], TRUE],\n+      'exposed but not configured' => [\n+        [\n+          'exposed' => TRUE,\n+          'expose' => [],\n+          'group_info' => [],\n+        ],\n+        [],\n+        FALSE,\n+      ],\n+      // Exposed but not grouped.\n+      'exposed not grouped - missing value' => [\n+        [\n+          'exposed' => TRUE,\n+          'expose' => ['identifier' => 'test_id'],\n+        ],\n+        [],\n+        TRUE,\n+      ],\n+      'exposed not grouped - wrong group config' => [\n+        [\n+          'exposed' => TRUE,\n+          'group_info' => ['identifier' => 'test_id'],\n+        ],\n+        ['test_id' => ['value' => 1]],\n+        // Wrong identifier configured.\n+        FALSE,\n+      ],\n+      'exposed not grouped' => [\n+        [\n+          'exposed' => TRUE,\n+          'expose' => ['identifier' => 'test_id'],\n+        ],\n+        ['test_id' => ['value' => 1]],\n+        TRUE,\n+      ],\n+      // Exposed and grouped.\n+      'exposed grouped - missing value' => [\n+        [\n+          'exposed' => TRUE,\n+          'is_grouped' => TRUE,\n+          'group_info' => ['identifier' => 'test_id'],\n+        ],\n+        [],\n+        TRUE,\n+      ],\n+      'exposed grouped - wrong group config' => [\n+        [\n+          'exposed' => TRUE,\n+          'is_grouped' => TRUE,\n+          'expose' => ['identifier' => 'test_id'],\n+        ],\n+        ['test_id' => ['value' => 1]],\n+        FALSE,\n+      ],\n+      'exposed grouped' => [\n+        [\n+          'exposed' => TRUE,\n+          'is_grouped' => TRUE,\n+          'group_info' => ['identifier' => 'test_id'],\n+        ],\n+        ['test_id' => ['value' => 1]],\n+        TRUE,\n+      ],\n+    ];\n+  }\n+\n+}"
                },
                {
                    "sha": "2d8fe5081f9b9a296499530230fc0a4777f4a4f8",
                    "filename": "html/core/modules/views_ui/css/views_ui.admin.theme.css",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 1,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fcss%2Fviews_ui.admin.theme.css",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fcss%2Fviews_ui.admin.theme.css",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews_ui%2Fcss%2Fviews_ui.admin.theme.css?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -568,7 +568,12 @@ td.group-title {\n .views-edit-view {\n   margin-bottom: 15px;\n }\n-\n+.views-edit-view.disabled .views-displays {\n+  background-color: #fff4f4;\n+}\n+.views-edit-view.disabled .views-display-column {\n+  background: white;\n+}\n /* The contents of the popup dialog on the views edit form. */\n .views-filterable-options .form-type-checkbox {\n   padding: 5px 8px;"
                },
                {
                    "sha": "f534cd6ff93921a6a8a27e9a1a1fd2e7e31a8d53",
                    "filename": "html/core/modules/views_ui/js/ajax.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fjs%2Fajax.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fjs%2Fajax.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews_ui%2Fjs%2Fajax.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -194,7 +194,7 @@\n       $(once('views-ajax', '#views-tabset a')).on('click', function () {\n         const href = $(this).attr('href');\n         // Cut of #views-tabset.\n-        const displayId = href.substr(11);\n+        const displayId = href.substring(11);\n         const viewsPreviewId = document.querySelector(\n           '#views-live-preview #preview-display-id',\n         );"
                },
                {
                    "sha": "4cadec6186b91d61f6745ba5327ee783d4101f74",
                    "filename": "html/core/modules/views_ui/js/views-admin.js",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fjs%2Fviews-admin.js",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fjs%2Fviews-admin.js",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews_ui%2Fjs%2Fviews-admin.js?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -221,7 +221,7 @@\n         this.target.each(function (i) {\n           // Ensure that the maxlength is not exceeded by prepopulating the field.\n           const maxlength = $(this).attr('maxlength') - suffix.length;\n-          this.value = transliterated.substr(0, maxlength) + suffix;\n+          this.value = transliterated.substring(0, maxlength) + suffix;\n         });\n       },\n "
                },
                {
                    "sha": "93dc5c88984d6cfa4a9210cf33b7dda450208cf5",
                    "filename": "html/core/modules/views_ui/src/ViewEditForm.php",
                    "status": "modified",
                    "additions": 12,
                    "deletions": 0,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fsrc%2FViewEditForm.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Fsrc%2FViewEditForm.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews_ui%2Fsrc%2FViewEditForm.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -300,6 +300,8 @@ public function save(array $form, FormStateInterface $form_state) {\n     foreach ($executable->displayHandlers as $id => $display) {\n       if (!empty($display->display['new_id']) && $display->display['new_id'] !== $display->display['id'] && empty($display->display['deleted'])) {\n         $new_id = $display->display['new_id'];\n+        $attachments = $display->getAttachedDisplays();\n+        $old_id = $display->display['id'];\n         $display->display['id'] = $new_id;\n         unset($display->display['new_id']);\n         $executable->displayHandlers->set($new_id, $display);\n@@ -312,6 +314,16 @@ public function save(array $form, FormStateInterface $form_state) {\n           'view' => $view->id(),\n           'display_id' => $new_id,\n         ]);\n+\n+        // Find attachments attached to old display id and attach them with new id.\n+        if ($attachments) {\n+          foreach ($attachments as $attachment) {\n+            $attached_options = $executable->displayHandlers->get($attachment)->getOption('displays');\n+            unset($attached_options[$old_id]);\n+            $attached_options[$new_id] = $new_id;\n+            $executable->displayHandlers->get($attachment)->setOption('displays', $attached_options);\n+          }\n+        }\n       }\n       elseif (isset($display->display['new_id'])) {\n         unset($display->display['new_id']);"
                },
                {
                    "sha": "01c52443939135caf8100167d97a65ff0dc25ae2",
                    "filename": "html/core/modules/views_ui/tests/src/Functional/DisplayAttachmentTest.php",
                    "status": "modified",
                    "additions": 31,
                    "deletions": 0,
                    "changes": 31,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Ftests%2Fsrc%2FFunctional%2FDisplayAttachmentTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Ftests%2Fsrc%2FFunctional%2FDisplayAttachmentTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews_ui%2Ftests%2Fsrc%2FFunctional%2FDisplayAttachmentTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -103,4 +103,35 @@ public function testRemoveAttachedDisplay() {\n \n   }\n \n+  /**\n+   * Tests the attachment after changing machine name.\n+   */\n+  public function testAttachmentOnAttachedMachineNameChange(): void {\n+\n+    $view = $this->randomView();\n+    $path_prefix = 'admin/structure/views/view/' . $view['id'] . '/edit';\n+    $attachment_display_url = 'admin/structure/views/nojs/display/' . $view['id'] . '/attachment_1/displays';\n+\n+    // Open the Page display and create the attachment display.\n+    $this->drupalGet($path_prefix . '/page_1');\n+    $this->submitForm([], 'Add Attachment');\n+    $this->assertSession()->pageTextContains('Not defined');\n+\n+    // Attach the Attachment to the Default and   Page display.\n+    $this->drupalGet($attachment_display_url);\n+    $this->submitForm(['displays[default]' => 1, 'displays[page_1]' => 1], 'Apply');\n+    $this->submitForm([], 'Save');\n+\n+    // Change the machine name of the page.\n+    $this->drupalGet('admin/structure/views/nojs/display/' . $view['id'] . '/page_1/display_id');\n+    $this->submitForm(['display_id' => 'page_new_id'], 'Apply');\n+    $this->submitForm([], 'Save');\n+\n+    // Check that the attachment is still attached to the page.\n+    $this->drupalGet($attachment_display_url);\n+    $this->assertSession()->checkboxChecked(\"edit-displays-default\");\n+    $this->assertSession()->checkboxChecked(\"edit-displays-page-new-id\");\n+\n+  }\n+\n }"
                },
                {
                    "sha": "8208210e051a6553eb6150e5788e4d01857ef576",
                    "filename": "html/core/modules/views_ui/tests/src/Functional/OverrideDisplaysTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Ftests%2Fsrc%2FFunctional%2FOverrideDisplaysTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fviews_ui%2Ftests%2Fsrc%2FFunctional%2FOverrideDisplaysTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fviews_ui%2Ftests%2Fsrc%2FFunctional%2FOverrideDisplaysTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -6,6 +6,7 @@\n  * Tests that displays can be correctly overridden via the user interface.\n  *\n  * @group views_ui\n+ * @group #slow\n  */\n class OverrideDisplaysTest extends UITestBase {\n "
                },
                {
                    "sha": "152ed043f71e4b7473a18774264abdb2cb346027",
                    "filename": "html/core/modules/workspaces/css/workspaces.off-canvas.css",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Fcss%2Fworkspaces.off-canvas.css",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Fcss%2Fworkspaces.off-canvas.css",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fworkspaces%2Fcss%2Fworkspaces.off-canvas.css?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -23,6 +23,12 @@\n   }\n }\n \n+@media (max-width: 47.9375rem) {\n+  #drupal-off-canvas-wrapper.workspaces-dialog + .ui-dialog .ui-dialog-content {\n+    max-height: unset !important; /* Override the max-height added by JS. */\n+  }\n+}\n+\n /**\n    * The Workspace UI hides the titlebar, but we need to show and correctly\n    * position the close button that is nested within it."
                },
                {
                    "sha": "fe43b71d6dd60bdb02178c90af9a443fc1b51b41",
                    "filename": "html/core/modules/workspaces/css/workspaces.off-canvas.pcss.css",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Fcss%2Fworkspaces.off-canvas.pcss.css",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Fcss%2Fworkspaces.off-canvas.pcss.css",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fworkspaces%2Fcss%2Fworkspaces.off-canvas.pcss.css?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -18,6 +18,12 @@\n     }\n   }\n \n+  & + .ui-dialog .ui-dialog-content {\n+    @media (--workspace-layout-small) {\n+      max-height: unset !important; /* Override the max-height added by JS. */\n+    }\n+  }\n+\n   /**\n    * The Workspace UI hides the titlebar, but we need to show and correctly\n    * position the close button that is nested within it."
                },
                {
                    "sha": "958f6f60d7c16b1ff8abe187a463e1d8bf109ba2",
                    "filename": "html/core/modules/workspaces/src/WorkspaceListBuilder.php",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 1,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Fsrc%2FWorkspaceListBuilder.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Fsrc%2FWorkspaceListBuilder.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fworkspaces%2Fsrc%2FWorkspaceListBuilder.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -10,6 +10,7 @@\n use Drupal\\Core\\Entity\\EntityTypeInterface;\n use Drupal\\Core\\Render\\RendererInterface;\n use Drupal\\Core\\Url;\n+use Drupal\\user\\UserInterface;\n use Symfony\\Component\\DependencyInjection\\ContainerInterface;\n \n /**\n@@ -121,7 +122,9 @@ public function buildRow(EntityInterface $entity) {\n           '#url' => $entity->toUrl(),\n         ],\n       ],\n-      'owner' => $entity->getOwner()->getDisplayName(),\n+      'owner' => (($owner = $entity->getOwner()) && $owner instanceof UserInterface)\n+        ? $owner->getDisplayName()\n+        : $this->t('N/A'),\n     ];\n     $row['data'] = $row['data'] + parent::buildRow($entity);\n "
                },
                {
                    "sha": "72931bbccf39e615e55d3671a190ae03b6b941e1",
                    "filename": "html/core/modules/workspaces/tests/src/Functional/WorkspaceTest.php",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 0,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Ftests%2Fsrc%2FFunctional%2FWorkspaceTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fmodules%2Fworkspaces%2Ftests%2Fsrc%2FFunctional%2FWorkspaceTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fmodules%2Fworkspaces%2Ftests%2Fsrc%2FFunctional%2FWorkspaceTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -297,6 +297,16 @@ public function testWorkspaceList() {\n     // 'Live' is no longer the active workspace, so it's 'Switch to Live'\n     // operation should be visible now.\n     $assert_session->linkExists('Switch to Live');\n+\n+    // Delete any of the workspace owners and visit workspaces listing.\n+    $this->drupalLogin($this->editor2);\n+    user_cancel([], $this->editor1->id(), 'user_cancel_reassign');\n+    $user = \\Drupal::service('entity_type.manager')->getStorage('user')->load($this->editor1->id());\n+    $user->delete();\n+    $this->drupalGet('/admin/config/workflow/workspaces');\n+    $this->assertSession()->pageTextContains('Summer event');\n+    $summer_event_workspace_row = $page->find('css', 'table tbody tr:nth-of-type(3)');\n+    $this->assertEquals('N/A', $summer_event_workspace_row->find('css', 'td:nth-of-type(2)')->getText());\n   }\n \n   /**"
                },
                {
                    "sha": "fd3392674702900c7a718b5ba994d817365632d2",
                    "filename": "html/core/package.json",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fpackage.json",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fpackage.json",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fpackage.json?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -118,5 +118,6 @@\n     \"last 1 ChromeAndroid version\",\n     \"last 1 Samsung version\",\n     \"Firefox ESR\"\n-  ]\n+  ],\n+  \"packageManager\": \"yarn@1.22.22\"\n }"
                },
                {
                    "sha": "2a03880002d7bca22dbbe23fca92bea0b58bbab3",
                    "filename": "html/core/phpcs.xml.dist",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fphpcs.xml.dist",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fphpcs.xml.dist",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fphpcs.xml.dist?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -8,6 +8,8 @@\n   <exclude-pattern>*/node_modules/*</exclude-pattern>\n   <!--Exclude third party code.-->\n   <exclude-pattern>./assets/vendor/*</exclude-pattern>\n+  <!--Exclude the PHPStan baseline from coding standards.-->\n+  <exclude-pattern>./core/.phpstan-baseline.php</exclude-pattern>\n   <!-- Exclude third-party code maintained within core that does not follow our standards. -->\n   <!-- @todo This rule may be removed when https://www.drupal.org/node/1848264 is resolved. -->\n   <exclude-pattern>./core/lib/Drupal/Component/Diff/</exclude-pattern>"
                },
                {
                    "sha": "845c209c0da661d6d0887794f234d4440ad718b5",
                    "filename": "html/core/phpstan-baseline.neon",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 3623,
                    "changes": 3623,
                    "blob_url": "https://github.com/open-data/opengov/blob/96456839d06678aaec74ce56e4942744baf30ce3/html%2Fcore%2Fphpstan-baseline.neon",
                    "raw_url": "https://github.com/open-data/opengov/raw/96456839d06678aaec74ce56e4942744baf30ce3/html%2Fcore%2Fphpstan-baseline.neon",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fphpstan-baseline.neon?ref=96456839d06678aaec74ce56e4942744baf30ce3"
                },
                {
                    "sha": "005b9ae84c87a8b77c5686569578abc851aeaca8",
                    "filename": "html/core/phpstan.neon.dist",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fphpstan.neon.dist",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fphpstan.neon.dist",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fphpstan.neon.dist?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,7 +1,7 @@\n # Configuration file for PHPStan static code checking, see https://phpstan.org .\n # PHPStan is triggered on Drupal CI in commit-code-check.sh.\n includes:\n-  - phpstan-baseline.neon\n+  - .phpstan-baseline.php\n   - phar://phpstan.phar/conf/bleedingEdge.neon\n \n parameters:"
                },
                {
                    "sha": "70f7e4e08ebb44537c364ad93d5aa012f034fc47",
                    "filename": "html/core/profiles/demo_umami/tests/src/Functional/DemoUmamiProfileTest.php",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 7,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Fdemo_umami%2Ftests%2Fsrc%2FFunctional%2FDemoUmamiProfileTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Fdemo_umami%2Ftests%2Fsrc%2FFunctional%2FDemoUmamiProfileTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fprofiles%2Fdemo_umami%2Ftests%2Fsrc%2FFunctional%2FDemoUmamiProfileTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -174,10 +174,10 @@ public function testEditNodesByAdmin() {\n       ->loadByProperties(['title' => 'Deep mediterranean quiche']);\n     $node = reset($nodes);\n     $this->drupalGet($node->toUrl('edit-form'));\n-    $webassert->statusCodeEquals('200');\n+    $webassert->statusCodeEquals(200);\n \n     $this->submitForm([], 'Preview');\n-    $webassert->statusCodeEquals('200');\n+    $webassert->statusCodeEquals(200);\n     $this->assertSession()->elementsCount('css', 'h1', 1);\n     $this->clickLink('Back to content editing');\n \n@@ -221,27 +221,27 @@ protected function testDemonstrationWarningMessage() {\n \n     // Check when editing a node, the warning is visible.\n     $this->drupalGet($recipe_node->toUrl('edit-form'));\n-    $web_assert->statusCodeEquals('200');\n+    $web_assert->statusCodeEquals(200);\n     $web_assert->pageTextContains('This site is intended for demonstration purposes.');\n \n     // Check when adding a node, the warning is visible.\n     $this->drupalGet('node/add/recipe');\n-    $web_assert->statusCodeEquals('200');\n+    $web_assert->statusCodeEquals(200);\n     $web_assert->pageTextContains('This site is intended for demonstration purposes.');\n \n     // Check when looking at admin/content, the warning is visible.\n     $this->drupalGet('admin/content');\n-    $web_assert->statusCodeEquals('200');\n+    $web_assert->statusCodeEquals(200);\n     $web_assert->pageTextContains('This site is intended for demonstration purposes.');\n \n     // Check when viewing a node, the warning is not visible.\n     $this->drupalGet($recipe_node->toUrl());\n-    $web_assert->statusCodeEquals('200');\n+    $web_assert->statusCodeEquals(200);\n     $web_assert->pageTextNotContains('This site is intended for demonstration purposes.');\n \n     // Check when viewing the homepage, the warning is not visible.\n     $this->drupalGet('<front>');\n-    $web_assert->statusCodeEquals('200');\n+    $web_assert->statusCodeEquals(200);\n     $web_assert->pageTextNotContains('This site is intended for demonstration purposes.');\n   }\n "
                },
                {
                    "sha": "d1f0d8cef05d703e097d6f31d3076d36a08e32d7",
                    "filename": "html/core/profiles/standard/config/install/core.entity_view_display.node.article.teaser.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Fstandard%2Fconfig%2Finstall%2Fcore.entity_view_display.node.article.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Fstandard%2Fconfig%2Finstall%2Fcore.entity_view_display.node.article.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fprofiles%2Fstandard%2Fconfig%2Finstall%2Fcore.entity_view_display.node.article.teaser.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -50,5 +50,3 @@ content:\n     region: content\n hidden:\n   comment: true\n-  field_image: true\n-  field_tags: true"
                },
                {
                    "sha": "9e411ba2c495538c5def06656685c3b1de3aa2d1",
                    "filename": "html/core/profiles/test_language_negotiation/config/install/language.types.yml",
                    "status": "added",
                    "additions": 39,
                    "deletions": 0,
                    "changes": 39,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Ftest_language_negotiation%2Fconfig%2Finstall%2Flanguage.types.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Ftest_language_negotiation%2Fconfig%2Finstall%2Flanguage.types.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fprofiles%2Ftest_language_negotiation%2Fconfig%2Finstall%2Flanguage.types.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,39 @@\n+all:\n+  - language_interface\n+  - language_content\n+  - language_url\n+configurable:\n+  - language_interface\n+  - language_content\n+negotiation:\n+  language_content:\n+    enabled:\n+      test_language_negotiation_method: -10\n+      language-url: -8\n+      language-selected: 12\n+    method_weights:\n+      test_language_negotiation_method: -10\n+      language-content-entity: -9\n+      language-url: -8\n+      language-session: -6\n+      language-user: -4\n+      language-browser: -2\n+      language-interface: 9\n+      language-selected: 12\n+  language_url:\n+    enabled:\n+      language-url: 0\n+      language-url-fallback: 1\n+  language_interface:\n+    enabled:\n+      language-user-admin: -20\n+      language-user: -19\n+      language-url: -18\n+      language-selected: -15\n+    method_weights:\n+      language-user-admin: -20\n+      language-user: -19\n+      language-url: -18\n+      language-session: -17\n+      language-browser: -16\n+      language-selected: -15"
                },
                {
                    "sha": "a83b1cfb4347828417d8e6fb5ca7730a102211a3",
                    "filename": "html/core/profiles/test_language_negotiation/test_language_negotiation.info.yml",
                    "status": "added",
                    "additions": 7,
                    "deletions": 0,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Ftest_language_negotiation%2Ftest_language_negotiation.info.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fprofiles%2Ftest_language_negotiation%2Ftest_language_negotiation.info.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fprofiles%2Ftest_language_negotiation%2Ftest_language_negotiation.info.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -0,0 +1,7 @@\n+name: Testing language negotiation\n+type: profile\n+description: 'Minimal profile for running tests related the language negotiation.'\n+version: VERSION\n+hidden: true\n+install:\n+  - drupal:language"
                },
                {
                    "sha": "0a1672b9c7405a54425aa56949a8d41871fea70c",
                    "filename": "html/core/scripts/dev/commit-code-check.sh",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fscripts%2Fdev%2Fcommit-code-check.sh",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Fscripts%2Fdev%2Fcommit-code-check.sh",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Fscripts%2Fdev%2Fcommit-code-check.sh?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -112,7 +112,7 @@ TOP_LEVEL=$($GIT rev-parse --show-toplevel)\n # This variable will be set to one when the file core/phpcs.xml.dist is changed.\n PHPCS_XML_DIST_FILE_CHANGED=0\n \n-# This variable will be set to one when the files core/phpstan-baseline.neon or\n+# This variable will be set to one when the files core/.phpstan-baseline.php or\n # core/phpstan.neon.dist are changed.\n PHPSTAN_DIST_FILE_CHANGED=0\n \n@@ -153,7 +153,7 @@ for FILE in $FILES; do\n     PHPCS_XML_DIST_FILE_CHANGED=1;\n   fi;\n \n-  if [[ $FILE == \"core/phpstan-baseline.neon\" || $FILE == \"core/phpstan.neon.dist\" ]]; then\n+  if [[ $FILE == \"core/.phpstan-baseline.php\" || $FILE == \"core/phpstan.neon.dist\" ]]; then\n     PHPSTAN_DIST_FILE_CHANGED=1;\n   fi;\n "
                },
                {
                    "sha": "57f139442ed3a3cf58f899648d123589279c5744",
                    "filename": "html/core/tests/Drupal/FunctionalJavascriptTests/Core/Form/FormGroupingElementsTest.php",
                    "status": "modified",
                    "additions": 49,
                    "deletions": 1,
                    "changes": 50,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FCore%2FForm%2FFormGroupingElementsTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FCore%2FForm%2FFormGroupingElementsTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FCore%2FForm%2FFormGroupingElementsTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -134,7 +134,6 @@ public function testDetailsChildVisibility() {\n \n     // Assert that both aria-expanded and aria-pressed are true.\n     $this->assertEquals('true', $summary->getAttribute('aria-expanded'));\n-    $this->assertEquals('true', $summary->getAttribute('aria-pressed'));\n   }\n \n   /**\n@@ -166,4 +165,53 @@ public function testVerticalTabValidationVisibility() {\n     $this->assertNotNull($assert_session->waitForElementVisible('css', '[name=\"element_2\"].error'));\n   }\n \n+  /**\n+   * Tests form submit with a required field in closed details element.\n+   */\n+  public function testDetailsContainsRequiredTextfield(): void {\n+    $this->drupalGet('form_test/details-contains-required-textfield');\n+    $details = $this->assertSession()->elementExists('css', 'details[data-drupal-selector=\"edit-meta\"]');\n+\n+    // Make sure details element is not open at the beginning.\n+    $this->assertFalse($details->hasAttribute('open'));\n+\n+    $textfield = $this->assertSession()->elementExists('css', 'input[name=\"required_textfield_in_details\"]');\n+\n+    // The text field inside the details element is not visible too.\n+    $this->assertFalse($textfield->isVisible(), 'Text field is not visible');\n+\n+    // Submit the form with invalid data in the required fields.\n+    $this->assertSession()\n+      ->elementExists('css', 'input[data-drupal-selector=\"edit-submit\"]')\n+      ->click();\n+    // Confirm the required field is visible.\n+    $this->assertTrue($textfield->isVisible(), 'Text field is visible');\n+  }\n+\n+  /**\n+   * Tests required field in closed details element with ajax form.\n+   */\n+  public function testDetailsContainsRequiredTextfieldAjaxForm(): void {\n+    $this->drupalGet('form_test/details-contains-required-textfield/true');\n+    $assert_session = $this->assertSession();\n+    $textfield = $assert_session->elementExists('css', 'input[name=\"required_textfield_in_details\"]');\n+\n+    // Submit the ajax form to open the details element at the first time.\n+    $assert_session->elementExists('css', 'input[value=\"Submit Ajax\"]')\n+      ->click();\n+\n+    $assert_session->waitForElementVisible('css', 'input[name=\"required_textfield_in_details\"]');\n+\n+    // Close the details element.\n+    $assert_session->elementExists('css', 'form summary')\n+      ->click();\n+\n+    // Submit the form with invalid data in the required fields without ajax.\n+    $assert_session->elementExists('css', 'input[data-drupal-selector=\"edit-submit\"]')\n+      ->click();\n+\n+    // Confirm the required field is visible.\n+    $this->assertTrue($textfield->isVisible(), 'Text field is visible');\n+  }\n+\n }"
                },
                {
                    "sha": "b5c0d9178906e38fc19aa3f067d3c9d6ae4325f7",
                    "filename": "html/core/tests/Drupal/FunctionalJavascriptTests/Core/Form/JavascriptStatesTest.php",
                    "status": "modified",
                    "additions": 102,
                    "deletions": 0,
                    "changes": 102,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FCore%2FForm%2FJavascriptStatesTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FCore%2FForm%2FJavascriptStatesTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FCore%2FForm%2FJavascriptStatesTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -69,8 +69,10 @@ public function testJavascriptStates() {\n     $this->doTextfieldTriggerTests();\n     $this->doRadiosTriggerTests();\n     $this->doSelectTriggerTests();\n+    $this->doMultipleSelectTriggerTests();\n     $this->doMultipleTriggerTests();\n     $this->doNestedTriggerTests();\n+    $this->doElementsDisabledStateTests();\n   }\n \n   /**\n@@ -443,6 +445,63 @@ protected function doSelectTriggerTests() {\n     $this->assertTrue($textfield_visible_value2_or_value3->isVisible());\n   }\n \n+  /**\n+   * Tests states of elements triggered by a multiple select element.\n+   */\n+  protected function doMultipleSelectTriggerTests() {\n+    $this->drupalGet('form-test/javascript-states-form');\n+    $page = $this->getSession()->getPage();\n+    // Find trigger and target elements.\n+    $trigger = $page->findField('multiple_select_trigger[]');\n+    $this->assertNotEmpty($trigger);\n+    $item_visible_value2 = $this->assertSession()->elementExists('css', '#edit-item-visible-when-multiple-select-trigger-has-value2');\n+    $item_visible_no_value = $this->assertSession()->elementExists('css', '#edit-item-visible-when-multiple-select-trigger-has-no-value');\n+    $textfield_visible_value3 = $page->findField('textfield_visible_when_multiple_select_trigger_has_value3');\n+    $this->assertNotEmpty($textfield_visible_value3);\n+    $textfield_visible_value2_or_value3 = $page->findField('textfield_visible_when_multiple_select_trigger_has_value2_or_value3');\n+    $this->assertNotEmpty($textfield_visible_value2_or_value3);\n+    $textfield_visible_value2_and_value3 = $page->findField('textfield_visible_when_multiple_select_trigger_has_value2_and_value3');\n+    $this->assertNotEmpty($textfield_visible_value2_and_value3);\n+\n+    // Verify initial state.\n+    $this->assertFalse($item_visible_value2->isVisible());\n+    $this->assertTrue($item_visible_no_value->isVisible());\n+    $this->assertFalse($textfield_visible_value3->isVisible());\n+    $this->assertFalse($textfield_visible_value2_or_value3->isVisible());\n+    $this->assertFalse($textfield_visible_value2_and_value3->isVisible());\n+    // Change state: select the 'Value 2' option.\n+    $trigger->setValue('value2');\n+    $this->assertTrue($item_visible_value2->isVisible());\n+    $this->assertFalse($item_visible_no_value->isVisible());\n+    $this->assertFalse($textfield_visible_value3->isVisible());\n+    $this->assertTrue($textfield_visible_value2_or_value3->isVisible());\n+    $this->assertFalse($textfield_visible_value2_and_value3->isVisible());\n+    // Change state: select the 'Value 3' option.\n+    $trigger->setValue('value3');\n+    $this->assertFalse($item_visible_value2->isVisible());\n+    $this->assertFalse($item_visible_no_value->isVisible());\n+    $this->assertTrue($textfield_visible_value3->isVisible());\n+    $this->assertTrue($textfield_visible_value2_or_value3->isVisible());\n+    $this->assertFalse($textfield_visible_value2_and_value3->isVisible());\n+    // Change state: select 'Value2' and 'Value 3' options.\n+    $trigger->setValue(['value2', 'value3']);\n+    $this->assertFalse($item_visible_value2->isVisible());\n+    $this->assertFalse($item_visible_no_value->isVisible());\n+    $this->assertFalse($textfield_visible_value3->isVisible());\n+    $this->assertFalse($textfield_visible_value2_or_value3->isVisible());\n+    $this->assertTrue($textfield_visible_value2_and_value3->isVisible());\n+    // Restore initial trigger state (clear the values).\n+    $trigger->setValue([]);\n+    // Make sure the initial element states are restored.\n+    $this->assertFalse($item_visible_value2->isVisible());\n+    $this->assertFalse($textfield_visible_value3->isVisible());\n+    $this->assertFalse($textfield_visible_value2_or_value3->isVisible());\n+    // @todo These last two look to be correct, but the assertion is failing.\n+    // @see https://www.drupal.org/project/drupal/issues/3367310\n+    // $this->assertTrue($item_visible_no_value->isVisible());\n+    // $this->assertFalse($textfield_visible_value2_and_value3->isVisible());\n+  }\n+\n   /**\n    * Tests states of elements triggered by multiple elements.\n    */\n@@ -493,4 +552,47 @@ protected function doNestedTriggerTests() {\n     $this->assertEquals('1', $radios_opposite2->getValue());\n   }\n \n+  /**\n+   * Tests the submit button, select and textarea disabled states.\n+   *\n+   * The element should be disabled when visit the form\n+   * then they should enable when trigger by a checkbox.\n+   */\n+  public function doElementsDisabledStateTests(): void {\n+    $this->drupalGet('form-test/javascript-states-form');\n+    $session = $this->assertSession();\n+\n+    // The submit button should be disabled when visit the form.\n+    $button = $session->elementExists('css', 'input[value=\"Submit button disabled when checkbox not checked\"]');\n+    $this->assertTrue($button->hasAttribute('disabled'));\n+\n+    // The submit button should be enabled when the checkbox is checked.\n+    $session->elementExists('css', 'input[name=\"checkbox_enable_submit_button\"]')->check();\n+    $this->assertFalse($button->hasAttribute('disabled'));\n+\n+    // The text field should be disabled when visit the form.\n+    $textfield = $session->elementExists('css', 'input[name=\"input_textfield\"]');\n+    $this->assertTrue($textfield->hasAttribute('disabled'));\n+\n+    // The text field should be enabled when the checkbox is checked.\n+    $session->elementExists('css', 'input[name=\"checkbox_enable_input_textfield\"]')->check();\n+    $this->assertFalse($textfield->hasAttribute('disabled'));\n+\n+    // The select should be disabled when visit the form.\n+    $select = $session->elementExists('css', 'select[name=\"test_select_disabled\"]');\n+    $this->assertTrue($select->hasAttribute('disabled'));\n+\n+    // The select should be enabled when the checkbox is checked.\n+    $session->elementExists('css', 'input[name=\"checkbox_enable_select\"]')->check();\n+    $this->assertFalse($select->hasAttribute('disabled'));\n+\n+    // The textarea should be disabled when visit the form.\n+    $textarea = $session->elementExists('css', 'textarea[name=\"test_textarea_disabled\"]');\n+    $this->assertTrue($textarea->hasAttribute('disabled'));\n+\n+    // The textarea should be enabled when the checkbox is checked.\n+    $session->elementExists('css', 'input[name=\"checkbox_enable_textarea\"]')->check();\n+    $this->assertFalse($textarea->hasAttribute('disabled'));\n+  }\n+\n }"
                },
                {
                    "sha": "d223feab7b5a8d377314f771068e95794f73f2e6",
                    "filename": "html/core/tests/Drupal/FunctionalJavascriptTests/MachineName/MachineNameTransliterationTest.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FMachineName%2FMachineNameTransliterationTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FMachineName%2FMachineNameTransliterationTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Ftests%2FDrupal%2FFunctionalJavascriptTests%2FMachineName%2FMachineNameTransliterationTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -12,6 +12,7 @@\n  * Tests the machine name transliteration functionality.\n  *\n  * @group javascript\n+ * @group #slow\n  */\n class MachineNameTransliterationTest extends WebDriverTestBase {\n "
                },
                {
                    "sha": "e151df9926f00a6c429c57a6e48007aec109ec09",
                    "filename": "html/core/tests/Drupal/FunctionalTests/BrowserTestBaseTest.php",
                    "status": "modified",
                    "additions": 13,
                    "deletions": 13,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalTests%2FBrowserTestBaseTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalTests%2FBrowserTestBaseTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Ftests%2FDrupal%2FFunctionalTests%2FBrowserTestBaseTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -359,21 +359,21 @@ public function testFieldAssertsForCheckbox() {\n \n     // Part 1 - Test by name.\n     // Test that checkboxes are found/not found correctly by name, when using\n-    // TRUE or FALSE to match their 'checked' state.\n+    // '1' or '' to match their 'checked' state.\n     $this->assertSession()->fieldExists('checkbox_enabled');\n     $this->assertSession()->fieldExists('checkbox_disabled');\n-    $this->assertSession()->fieldValueEquals('checkbox_enabled', TRUE);\n-    $this->assertSession()->fieldValueEquals('checkbox_disabled', FALSE);\n-    $this->assertSession()->fieldValueNotEquals('checkbox_enabled', FALSE);\n-    $this->assertSession()->fieldValueNotEquals('checkbox_disabled', TRUE);\n+    $this->assertSession()->fieldValueEquals('checkbox_enabled', '1');\n+    $this->assertSession()->fieldValueEquals('checkbox_disabled', '');\n+    $this->assertSession()->fieldValueNotEquals('checkbox_enabled', '');\n+    $this->assertSession()->fieldValueNotEquals('checkbox_disabled', '1');\n \n     // Test that we have legacy support.\n     $this->assertSession()->fieldValueEquals('checkbox_enabled', '1');\n     $this->assertSession()->fieldValueEquals('checkbox_disabled', '');\n \n     // Test that the assertion fails correctly if given the right value.\n     try {\n-      $this->assertSession()->fieldValueNotEquals('checkbox_enabled', TRUE);\n+      $this->assertSession()->fieldValueNotEquals('checkbox_enabled', '1');\n       $this->fail('fieldValueNotEquals failed to throw an exception.');\n     }\n     catch (ExpectationException $e) {\n@@ -382,11 +382,11 @@ public function testFieldAssertsForCheckbox() {\n \n     // Part 2 - Test by ID.\n     // Test that checkboxes are found/not found correctly by ID, when using\n-    // TRUE or FALSE to match their 'checked' state.\n-    $this->assertSession()->fieldValueEquals('edit-checkbox-enabled', TRUE);\n-    $this->assertSession()->fieldValueEquals('edit-checkbox-disabled', FALSE);\n-    $this->assertSession()->fieldValueNotEquals('edit-checkbox-enabled', FALSE);\n-    $this->assertSession()->fieldValueNotEquals('edit-checkbox-disabled', TRUE);\n+    // '1' or '' to match their 'checked' state.\n+    $this->assertSession()->fieldValueEquals('edit-checkbox-enabled', '1');\n+    $this->assertSession()->fieldValueEquals('edit-checkbox-disabled', '');\n+    $this->assertSession()->fieldValueNotEquals('edit-checkbox-enabled', '');\n+    $this->assertSession()->fieldValueNotEquals('edit-checkbox-disabled', '1');\n \n     // Test that checkboxes are found by ID, when using NULL to ignore the\n     // 'checked' state.\n@@ -572,11 +572,11 @@ public function testDeprecationHeaders() {\n    * Tests the dump() function provided by the var-dumper Symfony component.\n    */\n   public function testVarDump() {\n-    // Append the stream capturer to the STDOUT stream, so that we can test the\n+    // Append the stream capturer to the STDERR stream, so that we can test the\n     // dump() output and also prevent it from actually outputting in this\n     // particular test.\n     stream_filter_register(\"capture\", StreamCapturer::class);\n-    stream_filter_append(STDOUT, \"capture\");\n+    stream_filter_append(STDERR, \"capture\");\n \n     // Dump some variables to check that dump() in test code produces output\n     // on the command line that is running the test."
                },
                {
                    "sha": "e25448d6a181170777939a6ab5fc18d060af1ebb",
                    "filename": "html/core/tests/Drupal/FunctionalTests/Datetime/TimestampTest.php",
                    "status": "modified",
                    "additions": 19,
                    "deletions": 0,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalTests%2FDatetime%2FTimestampTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FFunctionalTests%2FDatetime%2FTimestampTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Ftests%2FDrupal%2FFunctionalTests%2FDatetime%2FTimestampTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -152,6 +152,25 @@ public function testWidget() {\n     $medium = DateFormat::load('medium')->getPattern();\n     $this->drupalGet('entity_test/' . $id);\n     $this->assertSession()->pageTextContains($date->format($medium));\n+\n+    // Build up a date in the UTC timezone.\n+    $value = '2024-01-16 00:00:00';\n+    $date = new DrupalDateTime($value, 'UTC');\n+\n+    // Set a default value for the field.\n+    $this->field->setDefaultValue($date->getTimestamp())->save();\n+\n+    // Update the timezone to the system default.\n+    $date->setTimezone(timezone_open(date_default_timezone_get()));\n+\n+    $this->drupalGet('entity_test/add');\n+    $date_format = DateFormat::load('html_date')->getPattern();\n+    $time_format = DateFormat::load('html_time')->getPattern();\n+    // Make sure the default field value is set as the default value in the widget.\n+    $this->assertSession()->fieldExists('field_timestamp[0][value][date]');\n+    $this->assertSession()->fieldValueEquals('field_timestamp[0][value][date]', $date->format($date_format));\n+    $this->assertSession()->fieldExists('field_timestamp[0][value][time]');\n+    $this->assertSession()->fieldValueEquals('field_timestamp[0][value][time]', $date->format($time_format));\n   }\n \n }"
                },
                {
                    "sha": "2f35f8b7d08b8d509f0a71bf82f9a7e8fe85aed4",
                    "filename": "html/core/tests/Drupal/KernelTests/Config/DefaultConfigTest.php",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FKernelTests%2FConfig%2FDefaultConfigTest.php",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/html%2Fcore%2Ftests%2FDrupal%2FKernelTests%2FConfig%2FDefaultConfigTest.php",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/html%2Fcore%2Ftests%2FDrupal%2FKernelTests%2FConfig%2FDefaultConfigTest.php?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -49,7 +49,7 @@ class DefaultConfigTest extends KernelTestBase {\n    *\n    * @dataProvider moduleListDataProvider\n    */\n-  public function testModuleConfig($module) {\n+  public function testModuleConfig(string $module): void {\n     $this->assertExtensionConfig($module, 'module');\n   }\n \n@@ -171,8 +171,8 @@ public function themeListDataProvider() {\n    *   An array of module names to test, with both key and value being the name\n    *   of the module.\n    */\n-  public function moduleListDataProvider() {\n-    $modules_keyed = $this->coreModuleListDataProvider();\n+  public static function moduleListDataProvider(): array {\n+    $modules_keyed = self::coreModuleListDataProvider();\n \n     // Add a deprecated module with config.\n     $modules_keyed['deprecated_module'] = ['deprecated_module'];"
                }
            ]
        },
        "og": {
            "url": "https://api.github.com/repos/open-data/og/compare/799cfb02bf4d45d71e405d3f1802ee1c83d2f235...c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
            "html_url": "https://github.com/open-data/og/compare/799cfb02bf4d45d71e405d3f1802ee1c83d2f235...c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
            "permalink_url": "https://github.com/open-data/og/compare/open-data:799cfb0...open-data:c6e6f8c",
            "diff_url": "https://github.com/open-data/og/compare/799cfb02bf4d45d71e405d3f1802ee1c83d2f235...c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5.diff",
            "patch_url": "https://github.com/open-data/og/compare/799cfb02bf4d45d71e405d3f1802ee1c83d2f235...c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5.patch",
            "base_commit": {
                "sha": "799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                "node_id": "C_kwDODLi6CdoAKDc5OWNmYjAyYmY0ZDQ1ZDcxZTQwNWQzZjE4MDJlZTFjODNkMmYyMzU",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-08-13T15:35:18Z"
                    },
                    "committer": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-08-13T15:35:18Z"
                    },
                    "message": "add changelog for survey pop-up",
                    "tree": {
                        "sha": "20b3b0d400616567f89b82c0b9bc72ef58e3250e",
                        "url": "https://api.github.com/repos/open-data/og/git/trees/20b3b0d400616567f89b82c0b9bc72ef58e3250e"
                    },
                    "url": "https://api.github.com/repos/open-data/og/git/commits/799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/og/commits/799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                "html_url": "https://github.com/open-data/og/commit/799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                "comments_url": "https://api.github.com/repos/open-data/og/commits/799cfb02bf4d45d71e405d3f1802ee1c83d2f235/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "8eab0df28acc0e1f06f9f9e882c43775e0ef2371",
                        "url": "https://api.github.com/repos/open-data/og/commits/8eab0df28acc0e1f06f9f9e882c43775e0ef2371",
                        "html_url": "https://github.com/open-data/og/commit/8eab0df28acc0e1f06f9f9e882c43775e0ef2371"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                "node_id": "C_kwDODLi6CdoAKDc5OWNmYjAyYmY0ZDQ1ZDcxZTQwNWQzZjE4MDJlZTFjODNkMmYyMzU",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-08-13T15:35:18Z"
                    },
                    "committer": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-08-13T15:35:18Z"
                    },
                    "message": "add changelog for survey pop-up",
                    "tree": {
                        "sha": "20b3b0d400616567f89b82c0b9bc72ef58e3250e",
                        "url": "https://api.github.com/repos/open-data/og/git/trees/20b3b0d400616567f89b82c0b9bc72ef58e3250e"
                    },
                    "url": "https://api.github.com/repos/open-data/og/git/commits/799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/og/commits/799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                "html_url": "https://github.com/open-data/og/commit/799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                "comments_url": "https://api.github.com/repos/open-data/og/commits/799cfb02bf4d45d71e405d3f1802ee1c83d2f235/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "8eab0df28acc0e1f06f9f9e882c43775e0ef2371",
                        "url": "https://api.github.com/repos/open-data/og/commits/8eab0df28acc0e1f06f9f9e882c43775e0ef2371",
                        "html_url": "https://github.com/open-data/og/commit/8eab0df28acc0e1f06f9f9e882c43775e0ef2371"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 4,
            "behind_by": 0,
            "total_commits": 4,
            "commits": [
                {
                    "sha": "03d23339941210bedccd00e95c85bcc5aa300287",
                    "node_id": "C_kwDODLi6CdoAKDAzZDIzMzM5OTQxMjEwYmVkY2NkMDBlOTVjODViY2M1YWEzMDAyODc",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:29:11Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:29:11Z"
                        },
                        "message": "update drupal/core to 10.2.10",
                        "tree": {
                            "sha": "970003ab0c8b1f0f762f721a916c2b6e8cfb50be",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/970003ab0c8b1f0f762f721a916c2b6e8cfb50be"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/03d23339941210bedccd00e95c85bcc5aa300287",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/03d23339941210bedccd00e95c85bcc5aa300287",
                    "html_url": "https://github.com/open-data/og/commit/03d23339941210bedccd00e95c85bcc5aa300287",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/03d23339941210bedccd00e95c85bcc5aa300287/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                            "url": "https://api.github.com/repos/open-data/og/commits/799cfb02bf4d45d71e405d3f1802ee1c83d2f235",
                            "html_url": "https://github.com/open-data/og/commit/799cfb02bf4d45d71e405d3f1802ee1c83d2f235"
                        }
                    ]
                },
                {
                    "sha": "7c45e6945b22368a70d138b0ea34771c5bef4530",
                    "node_id": "C_kwDODLi6CdoAKDdjNDVlNjk0NWIyMjM2OGE3MGQxMzhiMGVhMzQ3NzFjNWJlZjQ1MzA",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:49:10Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:49:10Z"
                        },
                        "message": "add changelog for drupal/core 10.2.10",
                        "tree": {
                            "sha": "6d7f2df067ea5abd68c3a1fc10f9b785c92d60f7",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/6d7f2df067ea5abd68c3a1fc10f9b785c92d60f7"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/7c45e6945b22368a70d138b0ea34771c5bef4530",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/7c45e6945b22368a70d138b0ea34771c5bef4530",
                    "html_url": "https://github.com/open-data/og/commit/7c45e6945b22368a70d138b0ea34771c5bef4530",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/7c45e6945b22368a70d138b0ea34771c5bef4530/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "03d23339941210bedccd00e95c85bcc5aa300287",
                            "url": "https://api.github.com/repos/open-data/og/commits/03d23339941210bedccd00e95c85bcc5aa300287",
                            "html_url": "https://github.com/open-data/og/commit/03d23339941210bedccd00e95c85bcc5aa300287"
                        }
                    ]
                },
                {
                    "sha": "2221914e64d25dbb37ec7fadb4f1756b173cb2e9",
                    "node_id": "C_kwDODLi6CdoAKDIyMjE5MTRlNjRkMjVkYmIzN2VjN2ZhZGI0ZjE3NTZiMTczY2IyZTk",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:59:49Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T14:59:49Z"
                        },
                        "message": "bugfix for voting_webform custom module",
                        "tree": {
                            "sha": "354112fc20bf2b2052e155c434b62d7baec8b0e7",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/354112fc20bf2b2052e155c434b62d7baec8b0e7"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/2221914e64d25dbb37ec7fadb4f1756b173cb2e9",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/2221914e64d25dbb37ec7fadb4f1756b173cb2e9",
                    "html_url": "https://github.com/open-data/og/commit/2221914e64d25dbb37ec7fadb4f1756b173cb2e9",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/2221914e64d25dbb37ec7fadb4f1756b173cb2e9/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7c45e6945b22368a70d138b0ea34771c5bef4530",
                            "url": "https://api.github.com/repos/open-data/og/commits/7c45e6945b22368a70d138b0ea34771c5bef4530",
                            "html_url": "https://github.com/open-data/og/commit/7c45e6945b22368a70d138b0ea34771c5bef4530"
                        }
                    ]
                },
                {
                    "sha": "c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                    "node_id": "C_kwDODLi6CdoAKGM2ZTZmOGMzZTQ2N2I3N2YzZWE1M2MwNzY0YTc1YjVkOWJhYmJhZTU",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T15:09:21Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T15:09:21Z"
                        },
                        "message": "update drupal/facet to 2.0.9",
                        "tree": {
                            "sha": "a03b9a10a9bff75c5a0af1355a514efee6fd2b12",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/a03b9a10a9bff75c5a0af1355a514efee6fd2b12"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                    "html_url": "https://github.com/open-data/og/commit/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "2221914e64d25dbb37ec7fadb4f1756b173cb2e9",
                            "url": "https://api.github.com/repos/open-data/og/commits/2221914e64d25dbb37ec7fadb4f1756b173cb2e9",
                            "html_url": "https://github.com/open-data/og/commit/2221914e64d25dbb37ec7fadb4f1756b173cb2e9"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "a8df0f9d686163f1b3c9b6c130692b28a78ffa95",
                    "filename": "changes/004.feature",
                    "status": "added",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/og/blob/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/changes%2F004.feature",
                    "raw_url": "https://github.com/open-data/og/raw/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/changes%2F004.feature",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/changes%2F004.feature?ref=c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                    "patch": "@@ -0,0 +1,2 @@\n+Update Drupal core to version 10.2.10 to apply security updates for SA-CORE-2024-002.\n+Update Drupal Facet contributed module to apply security updates for SA-CONTRIB-2024-047.\n\\ No newline at end of file"
                },
                {
                    "sha": "b2fd0ed59fbe1bd923bdca862dbc38a4a29629d8",
                    "filename": "changes/005.bugfix",
                    "status": "added",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/og/blob/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/changes%2F005.bugfix",
                    "raw_url": "https://github.com/open-data/og/raw/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/changes%2F005.bugfix",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/changes%2F005.bugfix?ref=c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                    "patch": "@@ -0,0 +1,2 @@\n+Pass empty string for referer_url to avoid exception in the PHP explode function. \n+This behaviour is new in PHP8. \n\\ No newline at end of file"
                },
                {
                    "sha": "3bd7116830a40b703aa42bc17f0eaa6ee6891571",
                    "filename": "composer.json",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/og/blob/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/composer.json",
                    "raw_url": "https://github.com/open-data/og/raw/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/composer.json",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/composer.json?ref=c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                    "patch": "@@ -56,9 +56,9 @@\n         \"drupal/admin_toolbar\": \"3.4.2\",\n         \"drupal/autologout\": \"1.4.0\",\n         \"drupal/bootstrap_layouts\": \"5.3.0\",\n-        \"drupal/core\": \"10.2.3\",\n+        \"drupal/core\": \"10.2.10\",\n         \"drupal/csv_serialization\": \"4.0.0\",\n-        \"drupal/facets\": \"2.0.6\",\n+        \"drupal/facets\": \"2.0.9\",\n         \"drupal/fontawesome\": \"2.26.0\",\n         \"drupal/google_analytics\": \"4.0.2\",\n         \"drupal/google_tag\": \"2.0.2\","
                },
                {
                    "sha": "a66d0de76ee1c74ce740b9ce12d7c6b21cb63101",
                    "filename": "modules/custom/voting_webform/src/Controller/VotingWebformController.php",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/og/blob/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/modules%2Fcustom%2Fvoting_webform%2Fsrc%2FController%2FVotingWebformController.php",
                    "raw_url": "https://github.com/open-data/og/raw/c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5/modules%2Fcustom%2Fvoting_webform%2Fsrc%2FController%2FVotingWebformController.php",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/modules%2Fcustom%2Fvoting_webform%2Fsrc%2FController%2FVotingWebformController.php?ref=c6e6f8c3e467b77f3ea53c0764a75b5d9babbae5",
                    "patch": "@@ -86,9 +86,9 @@ public function validate(Request $request, $id, $type)\n         // get url, id and domain of request object\n         $host_domain = $request->getHttpHost();\n         $referer_url = $request->headers->get('referer');\n-        $url_explode = explode(\"/\", $referer_url);\n+        $url_explode = explode(\"/\", $referer_url ?? \"\");\n         $referer_id = end($url_explode);\n-        $referer_id = explode('?', $referer_id);\n+        $referer_id = explode('?', $referer_id ?? \"\");\n         $referer_id = $referer_id[0];\n \n         if ($referer_url) {"
                }
            ]
        },
        "gcweb_bootstrap": {
            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/compare/534a9cbabf194d7ad2280c854038cc7fb1e3e775...0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
            "html_url": "https://github.com/open-data/gcweb_bootstrap/compare/534a9cbabf194d7ad2280c854038cc7fb1e3e775...0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
            "permalink_url": "https://github.com/open-data/gcweb_bootstrap/compare/open-data:534a9cb...open-data:0e4d58d",
            "diff_url": "https://github.com/open-data/gcweb_bootstrap/compare/534a9cbabf194d7ad2280c854038cc7fb1e3e775...0e4d58d69912fea7b6b2fd465f32f53a7676a90e.diff",
            "patch_url": "https://github.com/open-data/gcweb_bootstrap/compare/534a9cbabf194d7ad2280c854038cc7fb1e3e775...0e4d58d69912fea7b6b2fd465f32f53a7676a90e.patch",
            "base_commit": {
                "sha": "534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                "node_id": "C_kwDOChTdWdoAKDUzNGE5Y2JhYmYxOTRkN2FkMjI4MGM4NTQwMzhjYzdmYjFlM2U3NzU",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-06-10T14:06:05Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-06-10T14:06:05Z"
                    },
                    "message": "add changelog for removing obsolute ie8 libraries",
                    "tree": {
                        "sha": "b76e103abec9616662bb140b6b2d0567eb863a41",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/b76e103abec9616662bb140b6b2d0567eb863a41"
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmZwhNCRC1aQ7uu5UhlAAAy0cQADe1354S6czlHIOAEDTE6+zL\ncRbTTDislyqnstZ6+HhgpF9QOZOIhijTRUnWGnOSRb7x67uydBsKZ+zSmo2sbiCu\nU1kxw0QzaDLviG7+KGZxmjR4Jr9KCPZ+BF1HdQDuDk2uUuQFTZ+jFsZEamtivw62\nVj84yj1xRiKinTLgltEarxtVyQCW1wCynlMJUn1YiuSZbHnZymOLsOBc5KUfPxku\nIVpgjpG59FJ3OxO8nn0aZpehgIvgrrLYAMQ57v6+wWdnTC1QvlxbaDYF4SQBfui1\nWzPpMM9Z3mLdCvPIkelA0OTfaIi4CiqHRpzxdIv4w5oGaKzfiKj5P+wQoJ00Rf55\nazWMOCsiv/CekLjOoVP/O05lQNgTD4SaPEhaPsyiCFbrOJt3fmje9p+dsR6lvnIr\noF3gRS5Ad2DC98tW9Zcv2FzZt2T7TIKuS4v8fY4evaVp4fyuAXTjoZ/bxEB9a2xc\nF4Y4oerdzdTjuKeWy6A3qK5jymcWU3xac69ctu6A8o0c/2fVLnyTdEyxHKeFUGQg\ndAnPwa15/BLqipXW0A3yck4p19j9QJmuc5LYy8ZZlljirsayW6TA3ssramSicMuM\ng/SaNcns2ZkzRWHDpVHqKnUA3vYxtxr6nsEihDdLDoKJENHUsrbXVSp76beQyweF\nkLNUF7UsQFCD3jqaKQt6\n=Trg3\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree b76e103abec9616662bb140b6b2d0567eb863a41\nparent 43fea1718ea7baa1d542830f645d9ab321750e4a\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1718028365 -0400\ncommitter GitHub <noreply@github.com> 1718028365 -0400\n\nadd changelog for removing obsolute ie8 libraries",
                        "verified_at": "2024-11-10T14:58:23Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/534a9cbabf194d7ad2280c854038cc7fb1e3e775/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "43fea1718ea7baa1d542830f645d9ab321750e4a",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/43fea1718ea7baa1d542830f645d9ab321750e4a",
                        "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/43fea1718ea7baa1d542830f645d9ab321750e4a"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                "node_id": "C_kwDOChTdWdoAKDUzNGE5Y2JhYmYxOTRkN2FkMjI4MGM4NTQwMzhjYzdmYjFlM2U3NzU",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-06-10T14:06:05Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-06-10T14:06:05Z"
                    },
                    "message": "add changelog for removing obsolute ie8 libraries",
                    "tree": {
                        "sha": "b76e103abec9616662bb140b6b2d0567eb863a41",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/b76e103abec9616662bb140b6b2d0567eb863a41"
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJmZwhNCRC1aQ7uu5UhlAAAy0cQADe1354S6czlHIOAEDTE6+zL\ncRbTTDislyqnstZ6+HhgpF9QOZOIhijTRUnWGnOSRb7x67uydBsKZ+zSmo2sbiCu\nU1kxw0QzaDLviG7+KGZxmjR4Jr9KCPZ+BF1HdQDuDk2uUuQFTZ+jFsZEamtivw62\nVj84yj1xRiKinTLgltEarxtVyQCW1wCynlMJUn1YiuSZbHnZymOLsOBc5KUfPxku\nIVpgjpG59FJ3OxO8nn0aZpehgIvgrrLYAMQ57v6+wWdnTC1QvlxbaDYF4SQBfui1\nWzPpMM9Z3mLdCvPIkelA0OTfaIi4CiqHRpzxdIv4w5oGaKzfiKj5P+wQoJ00Rf55\nazWMOCsiv/CekLjOoVP/O05lQNgTD4SaPEhaPsyiCFbrOJt3fmje9p+dsR6lvnIr\noF3gRS5Ad2DC98tW9Zcv2FzZt2T7TIKuS4v8fY4evaVp4fyuAXTjoZ/bxEB9a2xc\nF4Y4oerdzdTjuKeWy6A3qK5jymcWU3xac69ctu6A8o0c/2fVLnyTdEyxHKeFUGQg\ndAnPwa15/BLqipXW0A3yck4p19j9QJmuc5LYy8ZZlljirsayW6TA3ssramSicMuM\ng/SaNcns2ZkzRWHDpVHqKnUA3vYxtxr6nsEihDdLDoKJENHUsrbXVSp76beQyweF\nkLNUF7UsQFCD3jqaKQt6\n=Trg3\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree b76e103abec9616662bb140b6b2d0567eb863a41\nparent 43fea1718ea7baa1d542830f645d9ab321750e4a\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1718028365 -0400\ncommitter GitHub <noreply@github.com> 1718028365 -0400\n\nadd changelog for removing obsolute ie8 libraries",
                        "verified_at": "2024-11-10T14:58:23Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/534a9cbabf194d7ad2280c854038cc7fb1e3e775/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "43fea1718ea7baa1d542830f645d9ab321750e4a",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/43fea1718ea7baa1d542830f645d9ab321750e4a",
                        "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/43fea1718ea7baa1d542830f645d9ab321750e4a"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 3,
            "behind_by": 0,
            "total_commits": 3,
            "commits": [
                {
                    "sha": "51c446a5f322dd839718910b922b13fa02eb5428",
                    "node_id": "C_kwDOChTdWdoAKDUxYzQ0NmE1ZjMyMmRkODM5NzE4OTEwYjkyMmIxM2ZhMDJlYjU0Mjg",
                    "commit": {
                        "author": {
                            "name": "Rabia Sajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T15:25:07Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T15:25:07Z"
                        },
                        "message": "Fix version for theme-gcweb to 15.0.0",
                        "tree": {
                            "sha": "4606ceaecd174e7264c190ca123928124e025f56",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/4606ceaecd174e7264c190ca123928124e025f56"
                        },
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/51c446a5f322dd839718910b922b13fa02eb5428",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM3NUCRC1aQ7uu5UhlAAAG3kQAEUab1A6D6WLQqiR+zxqkiw+\nHAEqnm53ulbRf+PvS1PCI1BL9cwq/nVA+p7hQicz/KmQYk7YJlhqIbo3eOK3xKMH\nY44EN7cHu4YGnpSIVSyRxgsKggBid+/+kl7CaAhxdxRiHnc3js8jGJwxLM/F81oC\nMk6cVnBXEfpSjQ1vmLEAHfF1iSVKA5hLAqz+dp0xQGx4BScviDVptPYHam05tH20\n0bLAihYpTyaQgTBr6CqNYg3+BtTOHpgbGl6V4ggJeyHltkM6eEV7rlUodh8PZNzR\n8PEPqyG5oarXFpfcd9MnWiqiYTMBkZQdOyjzufitHzRPN3y+bB2ARoWtv2m2g34U\n6P5VmHXwUhDCLESl38i5le3CGiNreyez2uyNHLFW2hcUWfbwUdBsWa4Tfejqn4Pe\nTMutyDyeJhg0XWZxX5HsEyQjPuYnr9OqA9+pGi6vbp3Iugm96xEgDmlXTJoJP6lN\ngHnqJD6YId/v0CEXZHLs/VV60jhgELhgHXDXNEZh3SqTgkRYUimlw/hhW66iK18g\nRE5ne+qt1ydykfmJ4pwvtIED0D57/dWrLhUP74vHEcowF6aeSUgZo2eTQu5ca4a3\nrvllD5Vfp1cF2hwRXypbu3sV7i6W++49bZ+yEm9y5phIHcnUQcqBrB4SwGasi4eC\n7SJJAjIzcJzx9Soso2eF\n=EZXv\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 4606ceaecd174e7264c190ca123928124e025f56\nparent 534a9cbabf194d7ad2280c854038cc7fb1e3e775\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1731425107 -0500\ncommitter GitHub <noreply@github.com> 1731425107 -0500\n\nFix version for theme-gcweb to 15.0.0",
                            "verified_at": "2024-11-12T15:25:10Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/51c446a5f322dd839718910b922b13fa02eb5428",
                    "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/51c446a5f322dd839718910b922b13fa02eb5428",
                    "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/51c446a5f322dd839718910b922b13fa02eb5428/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/534a9cbabf194d7ad2280c854038cc7fb1e3e775",
                            "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/534a9cbabf194d7ad2280c854038cc7fb1e3e775"
                        }
                    ]
                },
                {
                    "sha": "dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09",
                    "node_id": "C_kwDOChTdWdoAKGRkMzdkZDQzY2YwYjFjNjhjMTQ4Y2ExNTFiNzQ3ZjJjYjNhOWNjMDk",
                    "commit": {
                        "author": {
                            "name": "Rabia Sajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T15:26:49Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2024-11-12T15:26:49Z"
                        },
                        "message": "Fix wet-boew version to 4.0.79",
                        "tree": {
                            "sha": "51380c71b42e376e965f1191559f9da1aca47f34",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/51380c71b42e376e965f1191559f9da1aca47f34"
                        },
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM3O5CRC1aQ7uu5UhlAAAtEAQAFmRpH2NEG1T2hlAIu5rbPIn\nzcgonaww8SLKWlW4/PAdqU1UmYRpn6EchZqOOb/6v6zS0CCLIeB2XZ24AUB2F3gu\nHRr9DzOE9FfgKNVFDl9mSsTBzpYyGUlXepJpB/PRPg4SPEH5aqLD3U5NLpnkbulG\nBp05QFOeuOismMpVl7+jMUufnMnh2FARBr46BLDsyejzj990g2AkXPS6vPnr7DOE\nx4Fp05fVe7ROhv9plBchs6LrZK8LbQvGKkrZe4e4UE/2bCHFx1R88BETKJYkuxzr\nHYdBOblWWfe51EbLm9FkihcjUyW95KGH0tkfF+nWw1qHk5gHewl2apcaQMAEKH7D\n98iuDa7bdixMSBqrTjJDiUf9ethJpAxEE5mO4bkWXnwNkFpjByNdkJeN8XBARnHS\n4mWGduPVLCElXZgBA77eIy4yM/KGeY3BfyBGXe0kA8nVUxoMUuY84xUV6IQ5g+fi\nFJSHR5LHPzz9eoN8H5p03rhSQRP2+qtCu0Q6NgRRgffXU0KqZiL5EnD3p2fmGW73\nUA+FvO9MKuVbsS7HMOSY63L1P9lfvO5FQp+vUxkLqa3GNr9lKsOQ7ebH6jogux84\nXfJGpvIWeAUF53yqeL6q447XKEPrTTd/QS5m1YzyOkEwlUIv5uQxstzJEAdDA8a4\nXs0AoVQ42vHqKeaufUCh\n=4pgU\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 51380c71b42e376e965f1191559f9da1aca47f34\nparent 51c446a5f322dd839718910b922b13fa02eb5428\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1731425209 -0500\ncommitter GitHub <noreply@github.com> 1731425209 -0500\n\nFix wet-boew version to 4.0.79",
                            "verified_at": "2024-11-12T15:26:51Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09",
                    "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09",
                    "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "51c446a5f322dd839718910b922b13fa02eb5428",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/51c446a5f322dd839718910b922b13fa02eb5428",
                            "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/51c446a5f322dd839718910b922b13fa02eb5428"
                        }
                    ]
                },
                {
                    "sha": "0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
                    "node_id": "C_kwDOChTdWdoAKDBlNGQ1OGQ2OTkxMmZlYTdiNmIyZmQ0NjVmMzJmNTNhNzY3NmE5MGU",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T16:39:47Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2024-11-12T16:39:47Z"
                        },
                        "message": "add changelog for version number fixes in composer.json",
                        "tree": {
                            "sha": "9c3d2acd1143a83bdeb7cbf13100fd7a12a11d75",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/9c3d2acd1143a83bdeb7cbf13100fd7a12a11d75"
                        },
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
                    "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
                    "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/0e4d58d69912fea7b6b2fd465f32f53a7676a90e/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09",
                            "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/dd37dd43cf0b1c68c148ca151b747f2cb3a9cc09"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "420c5a0786d19a3d144875f22295da56e67f545f",
                    "filename": "changes/003.bugfix",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0e4d58d69912fea7b6b2fd465f32f53a7676a90e/changes%2F003.bugfix",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0e4d58d69912fea7b6b2fd465f32f53a7676a90e/changes%2F003.bugfix",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/changes%2F003.bugfix?ref=0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
                    "patch": "@@ -0,0 +1 @@\n+Fix version numbers in composer.json for wet to v4.0.79 and gcweb to v15.0.0"
                },
                {
                    "sha": "62ab402b36135b77af1ee6c0de4bb1c610528825",
                    "filename": "composer.json",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0e4d58d69912fea7b6b2fd465f32f53a7676a90e/composer.json",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0e4d58d69912fea7b6b2fd465f32f53a7676a90e/composer.json",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/composer.json?ref=0e4d58d69912fea7b6b2fd465f32f53a7676a90e",
                    "patch": "@@ -48,8 +48,8 @@\n         \"cweagans/composer-patches\": \"^1.7.0\",\n         \"drupal/bootstrap\": \"3.29.0\",\n         \"drupal/core\": \"^8 || ^9 || ^10\",\n-        \"wet-boew/theme-gcweb\": \"13.3.0\",\n-        \"wet-boew/wet-boew\": \"v4.0.63\"\n+        \"wet-boew/theme-gcweb\": \"15.0.0\",\n+        \"wet-boew/wet-boew\": \"v4.0.79\"\n     },\n     \"minimum-stability\": \"dev\",\n     \"prefer-stable\": true,"
                }
            ]
        }
    }
}