{
    "ckan": {
        "ckan": {
            "url": "https://api.github.com/repos/open-data/ckan/compare/2888dce06b50c003a33f647167fdffe49c693105...c7e89f588584638ff6981ea082ec22d3cfecdc32",
            "html_url": "https://github.com/open-data/ckan/compare/2888dce06b50c003a33f647167fdffe49c693105...c7e89f588584638ff6981ea082ec22d3cfecdc32",
            "permalink_url": "https://github.com/open-data/ckan/compare/open-data:2888dce...open-data:c7e89f5",
            "diff_url": "https://github.com/open-data/ckan/compare/2888dce06b50c003a33f647167fdffe49c693105...c7e89f588584638ff6981ea082ec22d3cfecdc32.diff",
            "patch_url": "https://github.com/open-data/ckan/compare/2888dce06b50c003a33f647167fdffe49c693105...c7e89f588584638ff6981ea082ec22d3cfecdc32.patch",
            "base_commit": {
                "sha": "2888dce06b50c003a33f647167fdffe49c693105",
                "node_id": "C_kwDOAHlEatoAKDI4ODhkY2UwNmI1MGMwMDNhMzNmNjQ3MTY3ZmRmZmU0OWM2OTMxMDU",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:49:41Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:49:41Z"
                    },
                    "message": "feat(dev): max fts only for types;\n\n- Limit DataTables FTS search max to only links and uploads.",
                    "tree": {
                        "sha": "eceedc02d3bc75d75122cd351c0c553cccbec1ab",
                        "url": "https://api.github.com/repos/open-data/ckan/git/trees/eceedc02d3bc75d75122cd351c0c553cccbec1ab"
                    },
                    "url": "https://api.github.com/repos/open-data/ckan/git/commits/2888dce06b50c003a33f647167fdffe49c693105",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckan/commits/2888dce06b50c003a33f647167fdffe49c693105",
                "html_url": "https://github.com/open-data/ckan/commit/2888dce06b50c003a33f647167fdffe49c693105",
                "comments_url": "https://api.github.com/repos/open-data/ckan/commits/2888dce06b50c003a33f647167fdffe49c693105/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "31edb54dba04b554cf41a4bc2e16f589b4f4f377",
                        "url": "https://api.github.com/repos/open-data/ckan/commits/31edb54dba04b554cf41a4bc2e16f589b4f4f377",
                        "html_url": "https://github.com/open-data/ckan/commit/31edb54dba04b554cf41a4bc2e16f589b4f4f377"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "2888dce06b50c003a33f647167fdffe49c693105",
                "node_id": "C_kwDOAHlEatoAKDI4ODhkY2UwNmI1MGMwMDNhMzNmNjQ3MTY3ZmRmZmU0OWM2OTMxMDU",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:49:41Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:49:41Z"
                    },
                    "message": "feat(dev): max fts only for types;\n\n- Limit DataTables FTS search max to only links and uploads.",
                    "tree": {
                        "sha": "eceedc02d3bc75d75122cd351c0c553cccbec1ab",
                        "url": "https://api.github.com/repos/open-data/ckan/git/trees/eceedc02d3bc75d75122cd351c0c553cccbec1ab"
                    },
                    "url": "https://api.github.com/repos/open-data/ckan/git/commits/2888dce06b50c003a33f647167fdffe49c693105",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckan/commits/2888dce06b50c003a33f647167fdffe49c693105",
                "html_url": "https://github.com/open-data/ckan/commit/2888dce06b50c003a33f647167fdffe49c693105",
                "comments_url": "https://api.github.com/repos/open-data/ckan/commits/2888dce06b50c003a33f647167fdffe49c693105/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "31edb54dba04b554cf41a4bc2e16f589b4f4f377",
                        "url": "https://api.github.com/repos/open-data/ckan/commits/31edb54dba04b554cf41a4bc2e16f589b4f4f377",
                        "html_url": "https://github.com/open-data/ckan/commit/31edb54dba04b554cf41a4bc2e16f589b4f4f377"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 1,
            "behind_by": 0,
            "total_commits": 1,
            "commits": [
                {
                    "sha": "c7e89f588584638ff6981ea082ec22d3cfecdc32",
                    "node_id": "C_kwDOAHlEatoAKGM3ZTg5ZjU4ODU4NDYzOGZmNjk4MWVhMDgyZWMyMmQzY2ZlY2RjMzI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:01:38Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:01:38Z"
                        },
                        "message": "fix(logic): syntax;\n\n- Org reindex bug.",
                        "tree": {
                            "sha": "15f02b6c7cf745a49a8280bce62cb62a8a94e22e",
                            "url": "https://api.github.com/repos/open-data/ckan/git/trees/15f02b6c7cf745a49a8280bce62cb62a8a94e22e"
                        },
                        "url": "https://api.github.com/repos/open-data/ckan/git/commits/c7e89f588584638ff6981ea082ec22d3cfecdc32",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckan/commits/c7e89f588584638ff6981ea082ec22d3cfecdc32",
                    "html_url": "https://github.com/open-data/ckan/commit/c7e89f588584638ff6981ea082ec22d3cfecdc32",
                    "comments_url": "https://api.github.com/repos/open-data/ckan/commits/c7e89f588584638ff6981ea082ec22d3cfecdc32/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "2888dce06b50c003a33f647167fdffe49c693105",
                            "url": "https://api.github.com/repos/open-data/ckan/commits/2888dce06b50c003a33f647167fdffe49c693105",
                            "html_url": "https://github.com/open-data/ckan/commit/2888dce06b50c003a33f647167fdffe49c693105"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "49e4da3350d1183f96a667d0ae4e32db9bcd3616",
                    "filename": "changes/0007.canada.bugfix",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckan/blob/c7e89f588584638ff6981ea082ec22d3cfecdc32/changes%2F0007.canada.bugfix",
                    "raw_url": "https://github.com/open-data/ckan/raw/c7e89f588584638ff6981ea082ec22d3cfecdc32/changes%2F0007.canada.bugfix",
                    "contents_url": "https://api.github.com/repos/open-data/ckan/contents/changes%2F0007.canada.bugfix?ref=c7e89f588584638ff6981ea082ec22d3cfecdc32",
                    "patch": "@@ -0,0 +1 @@\n+Fixed a bug with `organization_packages_background_reindex` raising an exception during `_group_or_org_update`"
                },
                {
                    "sha": "d0c1400e241919833cfe698d286ea3ecfd93899f",
                    "filename": "ckan/logic/action/update.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckan/blob/c7e89f588584638ff6981ea082ec22d3cfecdc32/ckan%2Flogic%2Faction%2Fupdate.py",
                    "raw_url": "https://github.com/open-data/ckan/raw/c7e89f588584638ff6981ea082ec22d3cfecdc32/ckan%2Flogic%2Faction%2Fupdate.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckan/contents/ckan%2Flogic%2Faction%2Fupdate.py?ref=c7e89f588584638ff6981ea082ec22d3cfecdc32",
                    "patch": "@@ -746,7 +746,7 @@ def _group_or_org_update(\n                 action = 'organization_packages_background_reindex'\n             reindex_context = {\n                 'model': model,\n-                'user': user,\n+                'user': context.get('user'),\n                 'ignore_auth': True,\n                 'session': session\n             }"
                }
            ]
        },
        "ckanext-canada": {
            "url": "https://api.github.com/repos/open-data/ckanext-canada/compare/b40473c7fdbde84396daddefd2473e16455539b0...19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
            "html_url": "https://github.com/open-data/ckanext-canada/compare/b40473c7fdbde84396daddefd2473e16455539b0...19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
            "permalink_url": "https://github.com/open-data/ckanext-canada/compare/open-data:b40473c...open-data:19ab9b0",
            "diff_url": "https://github.com/open-data/ckanext-canada/compare/b40473c7fdbde84396daddefd2473e16455539b0...19ab9b00ca8101f718c86a8c8aa82be5c38c6756.diff",
            "patch_url": "https://github.com/open-data/ckanext-canada/compare/b40473c7fdbde84396daddefd2473e16455539b0...19ab9b00ca8101f718c86a8c8aa82be5c38c6756.patch",
            "base_commit": {
                "sha": "b40473c7fdbde84396daddefd2473e16455539b0",
                "node_id": "C_kwDOAGzkrtoAKGI0MDQ3M2M3ZmRiZGU4NDM5NmRhZGRlZmQyNDczZTE2NDU1NTM5YjA",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:36:19Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:36:19Z"
                    },
                    "message": "feat(logic): max DS FTS rows;\n\n- Limit `datastore_search` FTS search based on max rows for FTS index.",
                    "tree": {
                        "sha": "7abfeff78f7fd75a0aa7b631a0d1163a0b182dba",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/7abfeff78f7fd75a0aa7b631a0d1163a0b182dba"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/b40473c7fdbde84396daddefd2473e16455539b0",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b40473c7fdbde84396daddefd2473e16455539b0",
                "html_url": "https://github.com/open-data/ckanext-canada/commit/b40473c7fdbde84396daddefd2473e16455539b0",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b40473c7fdbde84396daddefd2473e16455539b0/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "cac655e75136ed7da01797bf3ca864a4b64c525b",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/cac655e75136ed7da01797bf3ca864a4b64c525b",
                        "html_url": "https://github.com/open-data/ckanext-canada/commit/cac655e75136ed7da01797bf3ca864a4b64c525b"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "b40473c7fdbde84396daddefd2473e16455539b0",
                "node_id": "C_kwDOAGzkrtoAKGI0MDQ3M2M3ZmRiZGU4NDM5NmRhZGRlZmQyNDczZTE2NDU1NTM5YjA",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:36:19Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:36:19Z"
                    },
                    "message": "feat(logic): max DS FTS rows;\n\n- Limit `datastore_search` FTS search based on max rows for FTS index.",
                    "tree": {
                        "sha": "7abfeff78f7fd75a0aa7b631a0d1163a0b182dba",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/7abfeff78f7fd75a0aa7b631a0d1163a0b182dba"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/b40473c7fdbde84396daddefd2473e16455539b0",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b40473c7fdbde84396daddefd2473e16455539b0",
                "html_url": "https://github.com/open-data/ckanext-canada/commit/b40473c7fdbde84396daddefd2473e16455539b0",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b40473c7fdbde84396daddefd2473e16455539b0/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "cac655e75136ed7da01797bf3ca864a4b64c525b",
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/cac655e75136ed7da01797bf3ca864a4b64c525b",
                        "html_url": "https://github.com/open-data/ckanext-canada/commit/cac655e75136ed7da01797bf3ca864a4b64c525b"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 34,
            "behind_by": 0,
            "total_commits": 34,
            "commits": [
                {
                    "sha": "8c6dd025214822888c1d7fa44bc92ce7b2cd82de",
                    "node_id": "C_kwDOAGzkrtoAKDhjNmRkMDI1MjE0ODIyODg4YzFkN2ZhNDRiYzkyY2U3YjJjZDgyZGU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-17T18:38:45Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-17T18:38:45Z"
                        },
                        "message": "feat(dev): linting;\n\n- Started linting.",
                        "tree": {
                            "sha": "f13ff632aed001b491c124dd4f8784a492f3dc6f",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/f13ff632aed001b491c124dd4f8784a492f3dc6f"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/8c6dd025214822888c1d7fa44bc92ce7b2cd82de",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8c6dd025214822888c1d7fa44bc92ce7b2cd82de",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/8c6dd025214822888c1d7fa44bc92ce7b2cd82de",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8c6dd025214822888c1d7fa44bc92ce7b2cd82de/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "b20255504c21e7f9ac102d8ca3451be2892b10e1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b20255504c21e7f9ac102d8ca3451be2892b10e1",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/b20255504c21e7f9ac102d8ca3451be2892b10e1"
                        }
                    ]
                },
                {
                    "sha": "051cdfbd11f7719a3ac601fa9016a62375ae0556",
                    "node_id": "C_kwDOAGzkrtoAKDA1MWNkZmJkMTFmNzcxOWEzYWM2MDFmYTkwMTZhNjIzNzVhZTA1NTY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-18T14:07:37Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-18T14:07:37Z"
                        },
                        "message": "Merge branch 'canada-v2.10' into changes/linting",
                        "tree": {
                            "sha": "acc8d6c84e9970b77b283c4931981559d2af1be5",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/acc8d6c84e9970b77b283c4931981559d2af1be5"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/051cdfbd11f7719a3ac601fa9016a62375ae0556",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/051cdfbd11f7719a3ac601fa9016a62375ae0556",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/051cdfbd11f7719a3ac601fa9016a62375ae0556",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/051cdfbd11f7719a3ac601fa9016a62375ae0556/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "8c6dd025214822888c1d7fa44bc92ce7b2cd82de",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8c6dd025214822888c1d7fa44bc92ce7b2cd82de",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/8c6dd025214822888c1d7fa44bc92ce7b2cd82de"
                        },
                        {
                            "sha": "6a7e43fe31eff5add9457598a1af60f030fc67b1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/6a7e43fe31eff5add9457598a1af60f030fc67b1",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/6a7e43fe31eff5add9457598a1af60f030fc67b1"
                        }
                    ]
                },
                {
                    "sha": "f5bc6a3b57235bda53d2b0e9a755a5e8648ed954",
                    "node_id": "C_kwDOAGzkrtoAKGY1YmM2YTNiNTcyMzViZGE1M2QyYjBlOWE3NTVhNWU4NjQ4ZWQ5NTQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-18T18:24:40Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-18T18:24:40Z"
                        },
                        "message": "feat(lint): continued;\n\n- Continued linting.",
                        "tree": {
                            "sha": "35a32709a92e8314cfeeddab2ab60361f76d24d2",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/35a32709a92e8314cfeeddab2ab60361f76d24d2"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/f5bc6a3b57235bda53d2b0e9a755a5e8648ed954",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/f5bc6a3b57235bda53d2b0e9a755a5e8648ed954",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/f5bc6a3b57235bda53d2b0e9a755a5e8648ed954",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/f5bc6a3b57235bda53d2b0e9a755a5e8648ed954/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "051cdfbd11f7719a3ac601fa9016a62375ae0556",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/051cdfbd11f7719a3ac601fa9016a62375ae0556",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/051cdfbd11f7719a3ac601fa9016a62375ae0556"
                        }
                    ]
                },
                {
                    "sha": "ea7ce5e163abcee789948199af33a36b1df613e4",
                    "node_id": "C_kwDOAGzkrtoAKGVhN2NlNWUxNjNhYmNlZTc4OTk0ODE5OWFmMzNhMzZiMWRmNjEzZTQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T18:23:01Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T18:23:01Z"
                        },
                        "message": "feat(lint): continued;\n\n- Continued linting.",
                        "tree": {
                            "sha": "854c397be1b45f30efa7ca0ced70919c4322f152",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/854c397be1b45f30efa7ca0ced70919c4322f152"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/ea7ce5e163abcee789948199af33a36b1df613e4",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ea7ce5e163abcee789948199af33a36b1df613e4",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/ea7ce5e163abcee789948199af33a36b1df613e4",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ea7ce5e163abcee789948199af33a36b1df613e4/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "f5bc6a3b57235bda53d2b0e9a755a5e8648ed954",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/f5bc6a3b57235bda53d2b0e9a755a5e8648ed954",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/f5bc6a3b57235bda53d2b0e9a755a5e8648ed954"
                        }
                    ]
                },
                {
                    "sha": "06f8c32d21d998c13ee59dc7aa375b077232ce38",
                    "node_id": "C_kwDOAGzkrtoAKDA2ZjhjMzJkMjFkOTk4YzEzZWU1OWRjN2FhMzc1YjA3NzIzMmNlMzg",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:22:59Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:22:59Z"
                        },
                        "message": "feat(lint): continued;\n\n- Continued linting.",
                        "tree": {
                            "sha": "07ed3d410f08903e4772e8f31404c27ac8b48414",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/07ed3d410f08903e4772e8f31404c27ac8b48414"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/06f8c32d21d998c13ee59dc7aa375b077232ce38",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/06f8c32d21d998c13ee59dc7aa375b077232ce38",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/06f8c32d21d998c13ee59dc7aa375b077232ce38",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/06f8c32d21d998c13ee59dc7aa375b077232ce38/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "ea7ce5e163abcee789948199af33a36b1df613e4",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ea7ce5e163abcee789948199af33a36b1df613e4",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/ea7ce5e163abcee789948199af33a36b1df613e4"
                        }
                    ]
                },
                {
                    "sha": "5e1da07bc6423b68e5b5a38ddc65136a9fab74a9",
                    "node_id": "C_kwDOAGzkrtoAKDVlMWRhMDdiYzY0MjNiNjhlNWI1YTM4ZGRjNjUxMzZhOWZhYjc0YTk",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:26:35Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:26:35Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "a2ea5946b1d29c227d37fb57b99fd78f55d26b2b",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/a2ea5946b1d29c227d37fb57b99fd78f55d26b2b"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/5e1da07bc6423b68e5b5a38ddc65136a9fab74a9",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/5e1da07bc6423b68e5b5a38ddc65136a9fab74a9",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/5e1da07bc6423b68e5b5a38ddc65136a9fab74a9",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/5e1da07bc6423b68e5b5a38ddc65136a9fab74a9/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "06f8c32d21d998c13ee59dc7aa375b077232ce38",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/06f8c32d21d998c13ee59dc7aa375b077232ce38",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/06f8c32d21d998c13ee59dc7aa375b077232ce38"
                        }
                    ]
                },
                {
                    "sha": "117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd",
                    "node_id": "C_kwDOAGzkrtoAKDExN2YxM2IxYzQ2ZjAyMDBhNzliYzdkYmFmZmJiZDdlNDU1N2ZmY2Q",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:33:44Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:33:44Z"
                        },
                        "message": "fix(github): pyright workflow;\n\n- Removed dev requirements file.",
                        "tree": {
                            "sha": "f8af1b3b44cad89e2216b0f7d2231d3b7ae0a2b7",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/f8af1b3b44cad89e2216b0f7d2231d3b7ae0a2b7"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "5e1da07bc6423b68e5b5a38ddc65136a9fab74a9",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/5e1da07bc6423b68e5b5a38ddc65136a9fab74a9",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/5e1da07bc6423b68e5b5a38ddc65136a9fab74a9"
                        }
                    ]
                },
                {
                    "sha": "c8d8b0d473e583c1297905cb3c10ac5328617d73",
                    "node_id": "C_kwDOAGzkrtoAKGM4ZDhiMGQ0NzNlNTgzYzEyOTc5MDVjYjNjMTBhYzUzMjg2MTdkNzM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:38:21Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-19T22:38:21Z"
                        },
                        "message": "fix(syntax): import;\n\n- Circular import.",
                        "tree": {
                            "sha": "a81298fbc212dfc11a951bf193a3964382ff10fe",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/a81298fbc212dfc11a951bf193a3964382ff10fe"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/c8d8b0d473e583c1297905cb3c10ac5328617d73",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/c8d8b0d473e583c1297905cb3c10ac5328617d73",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/c8d8b0d473e583c1297905cb3c10ac5328617d73",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/c8d8b0d473e583c1297905cb3c10ac5328617d73/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/117f13b1c46f0200a79bc7dbaffbbd7e4557ffcd"
                        }
                    ]
                },
                {
                    "sha": "8cd6a102b1b95822dc1576b53f3e84b0097b7d73",
                    "node_id": "C_kwDOAGzkrtoAKDhjZDZhMTAyYjFiOTU4MjJkYzE1NzZiNTNmM2U4NGIwMDk3YjdkNzM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T02:56:01Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T02:56:01Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes,",
                        "tree": {
                            "sha": "906d3bd51cd97373471ca375d30b8140a9a5ab92",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/906d3bd51cd97373471ca375d30b8140a9a5ab92"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/8cd6a102b1b95822dc1576b53f3e84b0097b7d73",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8cd6a102b1b95822dc1576b53f3e84b0097b7d73",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/8cd6a102b1b95822dc1576b53f3e84b0097b7d73",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8cd6a102b1b95822dc1576b53f3e84b0097b7d73/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "c8d8b0d473e583c1297905cb3c10ac5328617d73",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/c8d8b0d473e583c1297905cb3c10ac5328617d73",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/c8d8b0d473e583c1297905cb3c10ac5328617d73"
                        }
                    ]
                },
                {
                    "sha": "8e57cca15290bf650b170a94a44c2bfd5cc6251d",
                    "node_id": "C_kwDOAGzkrtoAKDhlNTdjY2ExNTI5MGJmNjUwYjE3MGE5NGE0NGMyYmZkNWNjNjI1MWQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:13:36Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:13:36Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "33c252f69143595767eec1a40fc2ac8b90da082b",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/33c252f69143595767eec1a40fc2ac8b90da082b"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/8e57cca15290bf650b170a94a44c2bfd5cc6251d",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8e57cca15290bf650b170a94a44c2bfd5cc6251d",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/8e57cca15290bf650b170a94a44c2bfd5cc6251d",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8e57cca15290bf650b170a94a44c2bfd5cc6251d/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "8cd6a102b1b95822dc1576b53f3e84b0097b7d73",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8cd6a102b1b95822dc1576b53f3e84b0097b7d73",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/8cd6a102b1b95822dc1576b53f3e84b0097b7d73"
                        }
                    ]
                },
                {
                    "sha": "934537ce7d1ce01d82cef3f0c4f16475a53859b3",
                    "node_id": "C_kwDOAGzkrtoAKDkzNDUzN2NlN2QxY2UwMWQ4MmNlZjNmMGM0ZjE2NDc1YTUzODU5YjM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:14:48Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:14:48Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "05d565f64589fed62472e41655e05339eb85d8e7",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/05d565f64589fed62472e41655e05339eb85d8e7"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/934537ce7d1ce01d82cef3f0c4f16475a53859b3",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/934537ce7d1ce01d82cef3f0c4f16475a53859b3",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/934537ce7d1ce01d82cef3f0c4f16475a53859b3",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/934537ce7d1ce01d82cef3f0c4f16475a53859b3/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "8e57cca15290bf650b170a94a44c2bfd5cc6251d",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/8e57cca15290bf650b170a94a44c2bfd5cc6251d",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/8e57cca15290bf650b170a94a44c2bfd5cc6251d"
                        }
                    ]
                },
                {
                    "sha": "9c42b7c4371cfe45acbaedbb3a657c5319ded27c",
                    "node_id": "C_kwDOAGzkrtoAKDljNDJiN2M0MzcxY2ZlNDVhY2JhZWRiYjNhNjU3YzUzMTlkZWQyN2M",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:27:13Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:27:13Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "e23bae6f4a6898585a53975b5202bd46a7d0e22b",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/e23bae6f4a6898585a53975b5202bd46a7d0e22b"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/9c42b7c4371cfe45acbaedbb3a657c5319ded27c",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c42b7c4371cfe45acbaedbb3a657c5319ded27c",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/9c42b7c4371cfe45acbaedbb3a657c5319ded27c",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c42b7c4371cfe45acbaedbb3a657c5319ded27c/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "934537ce7d1ce01d82cef3f0c4f16475a53859b3",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/934537ce7d1ce01d82cef3f0c4f16475a53859b3",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/934537ce7d1ce01d82cef3f0c4f16475a53859b3"
                        }
                    ]
                },
                {
                    "sha": "9827e72753aab3c8e23a316b8d7f5b26c46a9630",
                    "node_id": "C_kwDOAGzkrtoAKDk4MjdlNzI3NTNhYWIzYzhlMjNhMzE2YjhkN2Y1YjI2YzQ2YTk2MzA",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:30:18Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:30:18Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "83ea84a222bec9b20ade3115e92ea9197e1d0d28",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/83ea84a222bec9b20ade3115e92ea9197e1d0d28"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/9827e72753aab3c8e23a316b8d7f5b26c46a9630",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9827e72753aab3c8e23a316b8d7f5b26c46a9630",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/9827e72753aab3c8e23a316b8d7f5b26c46a9630",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9827e72753aab3c8e23a316b8d7f5b26c46a9630/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9c42b7c4371cfe45acbaedbb3a657c5319ded27c",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9c42b7c4371cfe45acbaedbb3a657c5319ded27c",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9c42b7c4371cfe45acbaedbb3a657c5319ded27c"
                        }
                    ]
                },
                {
                    "sha": "1086f2b7a2ec704ffb33279663639ed4ff331f50",
                    "node_id": "C_kwDOAGzkrtoAKDEwODZmMmI3YTJlYzcwNGZmYjMzMjc5NjYzNjM5ZWQ0ZmYzMzFmNTA",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:35:21Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:35:21Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "a97fbd64a30124580fb53243020d5f759edc55e1",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/a97fbd64a30124580fb53243020d5f759edc55e1"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/1086f2b7a2ec704ffb33279663639ed4ff331f50",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1086f2b7a2ec704ffb33279663639ed4ff331f50",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/1086f2b7a2ec704ffb33279663639ed4ff331f50",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1086f2b7a2ec704ffb33279663639ed4ff331f50/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9827e72753aab3c8e23a316b8d7f5b26c46a9630",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9827e72753aab3c8e23a316b8d7f5b26c46a9630",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9827e72753aab3c8e23a316b8d7f5b26c46a9630"
                        }
                    ]
                },
                {
                    "sha": "1760da3284dfaf1fc246f702964cefd9a2c4a8f2",
                    "node_id": "C_kwDOAGzkrtoAKDE3NjBkYTMyODRkZmFmMWZjMjQ2ZjcwMjk2NGNlZmQ5YTJjNGE4ZjI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:36:29Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:36:29Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "4b785f171e45658e84831e2b2208513ef38a227d",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/4b785f171e45658e84831e2b2208513ef38a227d"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/1760da3284dfaf1fc246f702964cefd9a2c4a8f2",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1760da3284dfaf1fc246f702964cefd9a2c4a8f2",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/1760da3284dfaf1fc246f702964cefd9a2c4a8f2",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1760da3284dfaf1fc246f702964cefd9a2c4a8f2/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1086f2b7a2ec704ffb33279663639ed4ff331f50",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1086f2b7a2ec704ffb33279663639ed4ff331f50",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/1086f2b7a2ec704ffb33279663639ed4ff331f50"
                        }
                    ]
                },
                {
                    "sha": "24a5984cd2efcc55183097176600ff5485b5d36c",
                    "node_id": "C_kwDOAGzkrtoAKDI0YTU5ODRjZDJlZmNjNTUxODMwOTcxNzY2MDBmZjU0ODViNWQzNmM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:39:26Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-20T18:39:26Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "ed5996f13481d39880b949ab7fc3d24b9be39783",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/ed5996f13481d39880b949ab7fc3d24b9be39783"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/24a5984cd2efcc55183097176600ff5485b5d36c",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/24a5984cd2efcc55183097176600ff5485b5d36c",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/24a5984cd2efcc55183097176600ff5485b5d36c",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/24a5984cd2efcc55183097176600ff5485b5d36c/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1760da3284dfaf1fc246f702964cefd9a2c4a8f2",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/1760da3284dfaf1fc246f702964cefd9a2c4a8f2",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/1760da3284dfaf1fc246f702964cefd9a2c4a8f2"
                        }
                    ]
                },
                {
                    "sha": "31c79919c15aabe82827f9cacfaec9b838c1d08b",
                    "node_id": "C_kwDOAGzkrtoAKDMxYzc5OTE5YzE1YWFiZTgyODI3ZjljYWNmYWVjOWI4MzhjMWQwOGI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-27T20:44:52Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-27T20:44:52Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "d3e7c62439e19a4a27bd5a579b9212a8e9660196",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/d3e7c62439e19a4a27bd5a579b9212a8e9660196"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/31c79919c15aabe82827f9cacfaec9b838c1d08b",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/31c79919c15aabe82827f9cacfaec9b838c1d08b",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/31c79919c15aabe82827f9cacfaec9b838c1d08b",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/31c79919c15aabe82827f9cacfaec9b838c1d08b/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "24a5984cd2efcc55183097176600ff5485b5d36c",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/24a5984cd2efcc55183097176600ff5485b5d36c",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/24a5984cd2efcc55183097176600ff5485b5d36c"
                        }
                    ]
                },
                {
                    "sha": "2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6",
                    "node_id": "C_kwDOAGzkrtoAKDJlYmNiMWIzNTYwZDNiMDdlOGE5Zjc5MTRmZTEyYzgzNzE2YjI4YjY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-30T21:38:46Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-30T21:38:46Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "5d3e0fd0937813b9d423314a1548b63024bd0f78",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/5d3e0fd0937813b9d423314a1548b63024bd0f78"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "31c79919c15aabe82827f9cacfaec9b838c1d08b",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/31c79919c15aabe82827f9cacfaec9b838c1d08b",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/31c79919c15aabe82827f9cacfaec9b838c1d08b"
                        }
                    ]
                },
                {
                    "sha": "196a23e4784609500d0daca71054d4e065d5d463",
                    "node_id": "C_kwDOAGzkrtoAKDE5NmEyM2U0Nzg0NjA5NTAwZDBkYWNhNzEwNTRkNGUwNjVkNWQ0NjM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-31T17:11:00Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-31T17:11:00Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "8410ccb1332c4a5ba8d88d6da6324c25aede1f96",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/8410ccb1332c4a5ba8d88d6da6324c25aede1f96"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/196a23e4784609500d0daca71054d4e065d5d463",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/196a23e4784609500d0daca71054d4e065d5d463",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/196a23e4784609500d0daca71054d4e065d5d463",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/196a23e4784609500d0daca71054d4e065d5d463/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/2ebcb1b3560d3b07e8a9f7914fe12c83716b28b6"
                        }
                    ]
                },
                {
                    "sha": "70705b79991d17386aca6a88c72be8e9cecf615e",
                    "node_id": "C_kwDOAGzkrtoAKDcwNzA1Yjc5OTkxZDE3Mzg2YWNhNmE4OGM3MmJlOGU5Y2VjZjYxNWU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-31T20:07:48Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2024-12-31T20:07:48Z"
                        },
                        "message": "feat(dev): typing;\n\n- Pyright changes.",
                        "tree": {
                            "sha": "e8a0f9c51f3e5955e7b81556a1b1344298309433",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/e8a0f9c51f3e5955e7b81556a1b1344298309433"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/70705b79991d17386aca6a88c72be8e9cecf615e",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/70705b79991d17386aca6a88c72be8e9cecf615e",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/70705b79991d17386aca6a88c72be8e9cecf615e",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/70705b79991d17386aca6a88c72be8e9cecf615e/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "196a23e4784609500d0daca71054d4e065d5d463",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/196a23e4784609500d0daca71054d4e065d5d463",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/196a23e4784609500d0daca71054d4e065d5d463"
                        }
                    ]
                },
                {
                    "sha": "e78124032580aa58cac7bb7192a88e5384f50674",
                    "node_id": "C_kwDOAGzkrtoAKGU3ODEyNDAzMjU4MGFhNThjYWM3YmI3MTkyYTg4ZTUzODRmNTA2NzQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-09T15:55:16Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-09T15:55:16Z"
                        },
                        "message": "fix(syntax): various;\n\n- Various changes to update code to CKAN and python standards.",
                        "tree": {
                            "sha": "0a78daaf13cef45ad1f4bf6a5038ab4b46a9b9a2",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/0a78daaf13cef45ad1f4bf6a5038ab4b46a9b9a2"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/e78124032580aa58cac7bb7192a88e5384f50674",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/e78124032580aa58cac7bb7192a88e5384f50674",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/e78124032580aa58cac7bb7192a88e5384f50674",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/e78124032580aa58cac7bb7192a88e5384f50674/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "70705b79991d17386aca6a88c72be8e9cecf615e",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/70705b79991d17386aca6a88c72be8e9cecf615e",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/70705b79991d17386aca6a88c72be8e9cecf615e"
                        }
                    ]
                },
                {
                    "sha": "ad8ebba11f7d4a02b9b1d9e61464934be493789a",
                    "node_id": "C_kwDOAGzkrtoAKGFkOGViYmExMWY3ZDRhMDJiOWIxZDllNjE0NjQ5MzRiZTQ5Mzc4OWE",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-09T15:59:24Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-09T15:59:24Z"
                        },
                        "message": "fix(github): recombinante branch;\n\n- Updated recombinant branch to `master`",
                        "tree": {
                            "sha": "cae46006f98a28f144cb68e58a92ab41877e4e75",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/cae46006f98a28f144cb68e58a92ab41877e4e75"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/ad8ebba11f7d4a02b9b1d9e61464934be493789a",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ad8ebba11f7d4a02b9b1d9e61464934be493789a",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/ad8ebba11f7d4a02b9b1d9e61464934be493789a",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ad8ebba11f7d4a02b9b1d9e61464934be493789a/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "e78124032580aa58cac7bb7192a88e5384f50674",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/e78124032580aa58cac7bb7192a88e5384f50674",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/e78124032580aa58cac7bb7192a88e5384f50674"
                        }
                    ]
                },
                {
                    "sha": "995d6edac0cf8250809e19597fece957c9912cd6",
                    "node_id": "C_kwDOAGzkrtoAKDk5NWQ2ZWRhYzBjZjgyNTA4MDllMTk1OTdmZWNlOTU3Yzk5MTJjZDY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:07:59Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:07:59Z"
                        },
                        "message": "removal(dev): ckantoolkit;\n\n- Use `ckan.plugins.toolkit`",
                        "tree": {
                            "sha": "662592cfa830520e0213004737734deb58504e3b",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/662592cfa830520e0213004737734deb58504e3b"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/995d6edac0cf8250809e19597fece957c9912cd6",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/995d6edac0cf8250809e19597fece957c9912cd6",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/995d6edac0cf8250809e19597fece957c9912cd6",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/995d6edac0cf8250809e19597fece957c9912cd6/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "b40473c7fdbde84396daddefd2473e16455539b0",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b40473c7fdbde84396daddefd2473e16455539b0",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/b40473c7fdbde84396daddefd2473e16455539b0"
                        }
                    ]
                },
                {
                    "sha": "721dd9c6990bb162402690ff14b8e58b91e07365",
                    "node_id": "C_kwDOAGzkrtoAKDcyMWRkOWM2OTkwYmIxNjI0MDI2OTBmZjE0YjhlNThiOTFlMDczNjU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:09:25Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:09:25Z"
                        },
                        "message": "feat(misc): change log;\n\n- Added change log file.",
                        "tree": {
                            "sha": "478ca6dbcd1d71e201f3269642911b4f08d56913",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/478ca6dbcd1d71e201f3269642911b4f08d56913"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/721dd9c6990bb162402690ff14b8e58b91e07365",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/721dd9c6990bb162402690ff14b8e58b91e07365",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/721dd9c6990bb162402690ff14b8e58b91e07365",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/721dd9c6990bb162402690ff14b8e58b91e07365/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "995d6edac0cf8250809e19597fece957c9912cd6",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/995d6edac0cf8250809e19597fece957c9912cd6",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/995d6edac0cf8250809e19597fece957c9912cd6"
                        }
                    ]
                },
                {
                    "sha": "9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                    "node_id": "C_kwDOAGzkrtoAKDlkNDNlY2Q4MjRiMjBjYjVmN2M4YmI5ZWZjM2JhYjE3NWMzYzIzOGE",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2025-01-24T16:01:15Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-24T16:01:15Z"
                        },
                        "message": "Merge pull request #1552 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                        "tree": {
                            "sha": "478ca6dbcd1d71e201f3269642911b4f08d56913",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/478ca6dbcd1d71e201f3269642911b4f08d56913"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnk7lLCRC1aQ7uu5UhlAAA5GwQAJIba3W0kySKSK+eG6NbRYRx\n0g1R0bntBMqktX6LQWOwqeQeZsFjkRKMo8raHvN7g82l5NgecDIY2L5cjgFvuX1T\nmhrL+t1QJLZDlE1zbz4QGa+auy3jMIGRA2t/P+4C3WEs5WvzaogHiO6KCqkM3TuW\nVzxBjgEdrO007TEj6HvfZunZeebMLVOzF7AWquDSeMJwJc3cCFRQIiEXygnlM2TH\nY3yMsUdltZDPkCqVb5fxR5Lq37F8GUZy2SrVOwlqqtNJwJxjb6hlsgdpnU1dVxuy\nkT4/dBKoUu4/oKnPtgS4v2KEOzn+gdH0i0U1qDAta1RuRXVcJqJ2FNo46QO+S/QT\nyIYXbZ5KG3Ic6LiKHWOzUwxn1WGtPBJXZE85t8n7dB6cA0v2kMcVKYnPwDAMosZL\n2NLw3HPiRRiQ9Xs3NoZ58JS+ki71xvlP5ub7pJs7iNmfwQNFVNh0Lxa7OPKVizsL\nmVxwoU3CuVpvBzr8TEz8pZjKxpxgWDiSMoCevQYs5aEMgNNzihSOvgpbSOQ6D+Uk\n8AriNcx6SXcny2FUl+BF7trkchJjN3bFK4o6yRUDaHxriy2pry1Hx/qoAviqi7+I\nDUC7K1Gq26SDeB703CnzPUoML0X5EwzgxZA4GMRl70Ml+CQujzcJSAQe0I9NnkE8\nS6yCk5Vk2TS/QZw9CNSg\n=NxoR\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 478ca6dbcd1d71e201f3269642911b4f08d56913\nparent b40473c7fdbde84396daddefd2473e16455539b0\nparent 721dd9c6990bb162402690ff14b8e58b91e07365\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737734475 -0500\ncommitter GitHub <noreply@github.com> 1737734475 -0500\n\nMerge pull request #1552 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                            "verified_at": "2025-01-24T16:01:18Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "b40473c7fdbde84396daddefd2473e16455539b0",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/b40473c7fdbde84396daddefd2473e16455539b0",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/b40473c7fdbde84396daddefd2473e16455539b0"
                        },
                        {
                            "sha": "721dd9c6990bb162402690ff14b8e58b91e07365",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/721dd9c6990bb162402690ff14b8e58b91e07365",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/721dd9c6990bb162402690ff14b8e58b91e07365"
                        }
                    ]
                },
                {
                    "sha": "eb3c13b4af0ff07ab111164704497796c16c2480",
                    "node_id": "C_kwDOAGzkrtoAKGViM2MxM2I0YWYwZmYwN2FiMTExMTY0NzA0NDk3Nzk2YzE2YzI0ODA",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:10:12Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:10:12Z"
                        },
                        "message": "Merge branch 'master' into changes/linting\n\n# Conflicts:\n#\tbin/travis-install\n#\tckanext/canada/helpers.py\n#\tckanext/canada/plugins.py\n#\tckanext/canada/validators.py\n### RESOLVED.",
                        "tree": {
                            "sha": "d56e7f92f241d215b1f688c6fbf359d20b7d2f34",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/d56e7f92f241d215b1f688c6fbf359d20b7d2f34"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/eb3c13b4af0ff07ab111164704497796c16c2480",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/eb3c13b4af0ff07ab111164704497796c16c2480",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/eb3c13b4af0ff07ab111164704497796c16c2480",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/eb3c13b4af0ff07ab111164704497796c16c2480/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "ad8ebba11f7d4a02b9b1d9e61464934be493789a",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/ad8ebba11f7d4a02b9b1d9e61464934be493789a",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/ad8ebba11f7d4a02b9b1d9e61464934be493789a"
                        },
                        {
                            "sha": "9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a"
                        }
                    ]
                },
                {
                    "sha": "3a9b6d2792ce5c09386126b53f9139e8eb83e101",
                    "node_id": "C_kwDOAGzkrtoAKDNhOWI2ZDI3OTJjZTVjMDkzODYxMjZiNTNmOTEzOWU4ZWI4M2UxMDE",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:14:15Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:14:15Z"
                        },
                        "message": "fix(syntax): linting;\n\n- Flae8 fixes.\n- Pyright fixes.",
                        "tree": {
                            "sha": "b21c5dc3fa59b216da86f9485167cc0b74fea791",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/b21c5dc3fa59b216da86f9485167cc0b74fea791"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/3a9b6d2792ce5c09386126b53f9139e8eb83e101",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3a9b6d2792ce5c09386126b53f9139e8eb83e101",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/3a9b6d2792ce5c09386126b53f9139e8eb83e101",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3a9b6d2792ce5c09386126b53f9139e8eb83e101/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "eb3c13b4af0ff07ab111164704497796c16c2480",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/eb3c13b4af0ff07ab111164704497796c16c2480",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/eb3c13b4af0ff07ab111164704497796c16c2480"
                        }
                    ]
                },
                {
                    "sha": "7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2",
                    "node_id": "C_kwDOAGzkrtoAKDdmMTM0YzVjNDJkNmZhNWQ3NmNlYTIyYWNjNTlmODJhN2IzZGE1YTI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:19:38Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-24T16:19:38Z"
                        },
                        "message": "fix(syntax): linting;\n\n- Pyright fixes.",
                        "tree": {
                            "sha": "3182f5f61900e588f5cc182a5c1490716d672fdb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/3182f5f61900e588f5cc182a5c1490716d672fdb"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "3a9b6d2792ce5c09386126b53f9139e8eb83e101",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3a9b6d2792ce5c09386126b53f9139e8eb83e101",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/3a9b6d2792ce5c09386126b53f9139e8eb83e101"
                        }
                    ]
                },
                {
                    "sha": "3b57af08a2f7a35addaf2e23262c0c425ca97c6d",
                    "node_id": "C_kwDOAGzkrtoAKDNiNTdhZjA4YTJmN2EzNWFkZGFmMmUyMzI2MmMwYzQyNWNhOTdjNmQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2025-01-27T14:28:14Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-27T14:28:14Z"
                        },
                        "message": "Merge pull request #1547 from open-data/changes/linting\n\nCKAN Coding Standards",
                        "tree": {
                            "sha": "3182f5f61900e588f5cc182a5c1490716d672fdb",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/3182f5f61900e588f5cc182a5c1490716d672fdb"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/3b57af08a2f7a35addaf2e23262c0c425ca97c6d",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnl5f+CRC1aQ7uu5UhlAAADMgQAK3IS4SoLig3EbP9VIZmaZsO\nnhBIvsWsNDlfGO6QUwlpYxJq+E+19YCB5x5ByIRcGx7n5mPkbXL16BXsGBLH83L/\nbG0XBlWKM3XntFtCktlxLaQCDDCBS4GPqOQCQu5XKMzdeKvcQ/DA181fpEsqUMSL\nq73HSaxdYyDbumuID6QJcJH/PpGtZWpohOXsG5F1HAmoqnIw6YAtJvCGFfxjy1Ce\n+yk2NORqXSpv+2tfbFRbylAu5eGIzeK2QMibbPx3cbZ0/iOulSQkv89BnSnrCBnX\nXYAddow8uVU4KPy0dokU98AVcOGbw2+MD0FCC2Hyv1F6sB4HAO4AUvjbuq1ignNF\nS3DtPCTfMlqB44Ns9HahS9jSIIqXC8KuBt51ahAxcyF89lhKMdT+nzbtA/brnI2o\nOn/T3Q2J6V/flgzVu0r0CAPEciUOfN+HoJmd2WMs+UNuQOEXW2OAIrkdTvndS+5w\nwYcaKYhEO6y05x5f3OqqFiFK6P21hV7R0FhgNRN5ncJDuDcvqfgQ99s85RTjlkNH\n5TQiOkEZYDJMdmuM5JHQb9IJyf06thO+4mH4TnRuzOb1AaEJaNXKJocQxOkwTwJY\nvDwT1APihkM9fN6+OJELA6DTk8Ujv3EaPnACukPSLc67bTFokT0kxl6PuF4KgfhC\nhFIBkxdmda1YdUqqLVEY\n=BCn2\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 3182f5f61900e588f5cc182a5c1490716d672fdb\nparent 9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a\nparent 7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737988094 -0500\ncommitter GitHub <noreply@github.com> 1737988094 -0500\n\nMerge pull request #1547 from open-data/changes/linting\n\nCKAN Coding Standards",
                            "verified_at": "2025-01-27T14:28:17Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3b57af08a2f7a35addaf2e23262c0c425ca97c6d",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/3b57af08a2f7a35addaf2e23262c0c425ca97c6d",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3b57af08a2f7a35addaf2e23262c0c425ca97c6d/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/9d43ecd824b20cb5f7c8bb9efc3bab175c3c238a"
                        },
                        {
                            "sha": "7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7f134c5c42d6fa5d76cea22acc59f82a7b3da5a2"
                        }
                    ]
                },
                {
                    "sha": "55be5564b937fa2c1df2f0f43a7d87a68b0c7c16",
                    "node_id": "C_kwDOAGzkrtoAKDU1YmU1NTY0YjkzN2ZhMmMxZGYyZjBmNDNhN2Q4N2E2OGIwYzdjMTY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-27T17:06:41Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-27T17:06:41Z"
                        },
                        "message": "bump(depends): typing extensions;\n\n- Bump version.",
                        "tree": {
                            "sha": "735d478e2123dfd2d72eeafd8829d1245f3d16b2",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/735d478e2123dfd2d72eeafd8829d1245f3d16b2"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/55be5564b937fa2c1df2f0f43a7d87a68b0c7c16",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/55be5564b937fa2c1df2f0f43a7d87a68b0c7c16",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/55be5564b937fa2c1df2f0f43a7d87a68b0c7c16",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/55be5564b937fa2c1df2f0f43a7d87a68b0c7c16/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "3b57af08a2f7a35addaf2e23262c0c425ca97c6d",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/3b57af08a2f7a35addaf2e23262c0c425ca97c6d",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/3b57af08a2f7a35addaf2e23262c0c425ca97c6d"
                        }
                    ]
                },
                {
                    "sha": "2d50b2ec165315192bd6969ccfdac32f77d0ab52",
                    "node_id": "C_kwDOAGzkrtoAKDJkNTBiMmVjMTY1MzE1MTkyYmQ2OTY5Y2NmZGFjMzJmNzdkMGFiNTI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T14:54:32Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T14:54:32Z"
                        },
                        "message": "fix(templates): global;\n\n- Fix `is_registry` global.",
                        "tree": {
                            "sha": "6dac2d2c1c0f4e1aa31b4a4f65894ad56fc600b4",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/6dac2d2c1c0f4e1aa31b4a4f65894ad56fc600b4"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/2d50b2ec165315192bd6969ccfdac32f77d0ab52",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2d50b2ec165315192bd6969ccfdac32f77d0ab52",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/2d50b2ec165315192bd6969ccfdac32f77d0ab52",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2d50b2ec165315192bd6969ccfdac32f77d0ab52/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "55be5564b937fa2c1df2f0f43a7d87a68b0c7c16",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/55be5564b937fa2c1df2f0f43a7d87a68b0c7c16",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/55be5564b937fa2c1df2f0f43a7d87a68b0c7c16"
                        }
                    ]
                },
                {
                    "sha": "db6ac55f68e67febb1f3ab87385126c8ce6ebb50",
                    "node_id": "C_kwDOAGzkrtoAKGRiNmFjNTVmNjhlNjdmZWJiMWYzYWI4NzM4NTEyNmM4Y2U2ZWJiNTA",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T14:55:31Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T14:55:31Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "40bd5a2bde41b67688396bdf88a50c558f952cb5",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/40bd5a2bde41b67688396bdf88a50c558f952cb5"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/db6ac55f68e67febb1f3ab87385126c8ce6ebb50",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/db6ac55f68e67febb1f3ab87385126c8ce6ebb50",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/db6ac55f68e67febb1f3ab87385126c8ce6ebb50",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/db6ac55f68e67febb1f3ab87385126c8ce6ebb50/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "2d50b2ec165315192bd6969ccfdac32f77d0ab52",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/2d50b2ec165315192bd6969ccfdac32f77d0ab52",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/2d50b2ec165315192bd6969ccfdac32f77d0ab52"
                        }
                    ]
                },
                {
                    "sha": "7da8744f492bd39c6c5f17ada9855e1e6de9a78b",
                    "node_id": "C_kwDOAGzkrtoAKDdkYTg3NDRmNDkyYmQzOWM2YzVmMTdhZGE5ODU1ZTFlNmRlOWE3OGI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T19:11:37Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T19:11:37Z"
                        },
                        "message": "fix(cli): syntax;\n\n- Fixed major syntax issue.",
                        "tree": {
                            "sha": "e442622e1a14a77391c1d2e406edd2f7f59551ff",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/e442622e1a14a77391c1d2e406edd2f7f59551ff"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/7da8744f492bd39c6c5f17ada9855e1e6de9a78b",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7da8744f492bd39c6c5f17ada9855e1e6de9a78b",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/7da8744f492bd39c6c5f17ada9855e1e6de9a78b",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7da8744f492bd39c6c5f17ada9855e1e6de9a78b/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "db6ac55f68e67febb1f3ab87385126c8ce6ebb50",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/db6ac55f68e67febb1f3ab87385126c8ce6ebb50",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/db6ac55f68e67febb1f3ab87385126c8ce6ebb50"
                        }
                    ]
                },
                {
                    "sha": "19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "node_id": "C_kwDOAGzkrtoAKDE5YWI5YjAwY2E4MTAxZjcxOGM4NmE4YzhhYTgyYmU1YzM4YzY3NTY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T19:53:50Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-28T19:53:50Z"
                        },
                        "message": "fix(logic): syntax;\n\n- Sqlalchemy syntax for `None`.",
                        "tree": {
                            "sha": "4b30a7b1fddf0fd9c296bf73ab4d903c73d0cce7",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/git/trees/4b30a7b1fddf0fd9c296bf73ab4d903c73d0cce7"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-canada/git/commits/19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "html_url": "https://github.com/open-data/ckanext-canada/commit/19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-canada/commits/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "7da8744f492bd39c6c5f17ada9855e1e6de9a78b",
                            "url": "https://api.github.com/repos/open-data/ckanext-canada/commits/7da8744f492bd39c6c5f17ada9855e1e6de9a78b",
                            "html_url": "https://github.com/open-data/ckanext-canada/commit/7da8744f492bd39c6c5f17ada9855e1e6de9a78b"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "c64bf9d7cb597564595ce997ceab27ecad9e2a2e",
                    "filename": ".circleci/config.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.circleci%2Fconfig.yml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.circleci%2Fconfig.yml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/.circleci%2Fconfig.yml?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -83,7 +83,6 @@ jobs:\n             pip install -e 'git+https://github.com/ckan/ckanext-scheming.git#egg=ckanext-scheming'\n             pip install -e 'git+https://github.com/open-data/ckanext-validation.git@canada-v2.10#egg=ckanext-validation' -r 'https://raw.githubusercontent.com/open-data/ckanext-validation/canada-v2.10/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckanext-validation/canada-v2.10/dev-requirements.txt'\n             pip install -e 'git+https://github.com/open-data/ckanext-xloader.git@canada-v2.10#egg=ckanext-xloader' -r 'https://raw.githubusercontent.com/open-data/ckanext-xloader/canada-v2.10/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckanext-xloader/canada-v2.10/dev-requirements.txt'\n-            pip install -e 'git+https://github.com/ckan/ckantoolkit.git#egg=ckantoolkit' -r 'https://raw.githubusercontent.com/ckan/ckantoolkit/master/requirements.txt'\n             pip install -e 'git+https://github.com/open-data/frictionless-py.git@canada-v2.10#egg=frictionless' -r 'https://raw.githubusercontent.com/open-data/frictionless-py/canada-v2.10/requirements.txt'\n             pip install -e 'git+https://github.com/open-data/ckanext-security.git@canada-v2.10#egg=ckanext-security' -r 'https://raw.githubusercontent.com/open-data/ckanext-security/canada-v2.10/requirements.txt'\n             find \\/srv\\/app\\/ -name '*.pyc' -delete"
                },
                {
                    "sha": "cc04dc146575d1719705248838f04503cb3a6bb8",
                    "filename": ".github/workflows/flake8.yml",
                    "status": "added",
                    "additions": 22,
                    "deletions": 0,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.github%2Fworkflows%2Fflake8.yml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.github%2Fworkflows%2Fflake8.yml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/.github%2Fworkflows%2Fflake8.yml?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,22 @@\n+name: Lint\n+on: [pull_request]\n+\n+permissions:\n+  contents: read\n+\n+jobs:\n+  lint:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/setup-python@v2\n+        with:\n+          python-version: '3.9'\n+      - name: Install requirements\n+        run: pip install flake8 pycodestyle\n+      - name: Check syntax\n+        # Stop the build if there are Python syntax errors or undefined names\n+        run: flake8 --show-source\n+\n+      - name: Warnings\n+        run: flake8"
                },
                {
                    "sha": "0f4514096f19f8e57e039760126ab61be6d6ab6c",
                    "filename": ".github/workflows/pyright.yml",
                    "status": "added",
                    "additions": 54,
                    "deletions": 0,
                    "changes": 54,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.github%2Fworkflows%2Fpyright.yml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.github%2Fworkflows%2Fpyright.yml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/.github%2Fworkflows%2Fpyright.yml?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,54 @@\n+name: Check types\n+on: [pull_request]\n+env:\n+  NODE_VERSION: '18'\n+  PYTHON_VERSION: '3.9'\n+\n+permissions:\n+  contents: read\n+\n+jobs:\n+  typecheck:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        id: gitcheckout\n+      - uses: actions/setup-python@v2\n+        with:\n+          python-version: ${{ env.PYTHON_VERSION }}\n+      - uses: actions/setup-node@v3\n+        with:\n+          node-version: ${{ env.NODE_VERSION }}\n+      - name: Install python deps\n+        id: pydepends\n+        if: steps.gitcheckout.outcome == 'success'\n+        run: |\n+            python3 -m venv /home/runner/work/app\n+            mkdir -p /home/runner/work/app/src/ckanext-canada\n+            cp -R . /home/runner/work/app/src/ckanext-canada\n+            source /home/runner/work/app/bin/activate\n+            pip install --upgrade setuptools==70.0.0\n+            pip install --upgrade pip==23.2.1\n+            pip install -e 'git+https://github.com/open-data/ckan@canada-v2.10#egg=ckan' -r 'https://raw.githubusercontent.com/open-data/ckan/canada-v2.10/requirement-setuptools.txt' -r 'https://raw.githubusercontent.com/open-data/ckan/canada-v2.10/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckan/canada-v2.10/dev-requirements.txt'\n+            pip install -e 'git+https://github.com/ckan/ckanapi.git#egg=ckanapi' -r 'https://raw.githubusercontent.com/ckan/ckanapi/master/requirements.txt'\n+            pip install -e /home/runner/work/app/src/ckanext-canada/. -r /home/runner/work/app/src/ckanext-canada/requirements.txt -r /home/runner/work/app/src/ckanext-canada/test-requirements.txt\n+            pip install -e 'git+https://github.com/open-data/ckanext-cloudstorage.git@canada-v2.10#egg=ckanext-cloudstorage' -r 'https://raw.githubusercontent.com/open-data/ckanext-cloudstorage/canada-v2.10/requirements.txt'\n+            pip install -e 'git+https://github.com/ckan/ckanext-fluent.git#egg=ckanext-fluent' -r 'https://raw.githubusercontent.com/ckan/ckanext-fluent/master/requirements.txt'\n+            pip install -e 'git+https://github.com/open-data/ckanext-recombinant.git@master#egg=ckanext-recombinant' -r 'https://raw.githubusercontent.com/open-data/ckanext-recombinant/master/requirements.txt'\n+            pip install -e 'git+https://github.com/ckan/ckanext-scheming.git#egg=ckanext-scheming'\n+            pip install -e 'git+https://github.com/open-data/ckanext-validation.git@canada-v2.10#egg=ckanext-validation' -r 'https://raw.githubusercontent.com/open-data/ckanext-validation/canada-v2.10/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckanext-validation/canada-v2.10/dev-requirements.txt'\n+            pip install -e 'git+https://github.com/open-data/ckanext-xloader.git@canada-v2.10#egg=ckanext-xloader' -r 'https://raw.githubusercontent.com/open-data/ckanext-xloader/canada-v2.10/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckanext-xloader/canada-v2.10/dev-requirements.txt'\n+            pip install -e 'git+https://github.com/ckan/ckantoolkit.git#egg=ckantoolkit' -r 'https://raw.githubusercontent.com/ckan/ckantoolkit/master/requirements.txt'\n+            pip install -e 'git+https://github.com/open-data/frictionless-py.git@canada-v2.10#egg=frictionless' -r 'https://raw.githubusercontent.com/open-data/frictionless-py/canada-v2.10/requirements.txt'\n+            pip install -e 'git+https://github.com/open-data/ckanext-security.git@canada-v2.10#egg=ckanext-security' -r 'https://raw.githubusercontent.com/open-data/ckanext-security/canada-v2.10/requirements.txt'\n+            find /home/runner/work/app -name '*.pyc' -delete\n+      - name: Install node deps\n+        if: steps.pydepends.outcome == 'success'\n+        run: |\n+          cd /home/runner/work/app/src/ckanext-canada\n+          npm ci\n+      - name: Check types\n+        if: steps.pydepends.outcome == 'success'\n+        run: |\n+          cd /home/runner/work/app/src/ckanext-canada\n+          npx pyright"
                },
                {
                    "sha": "aa0dc5a0675fdd25db6613a70f47ca2689fe1e5c",
                    "filename": ".gitignore",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.gitignore",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/.gitignore",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/.gitignore?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -20,3 +20,4 @@ ckanext/canada/templates/public/snippets/site_message_*\n ckanext/canada/download/*.jsonl\n **.mo\n *.xcf\n+node_modules/**"
                },
                {
                    "sha": "43ec4d83a52a206012134d6bbad04627a83216cd",
                    "filename": "bin/ati_to_datastore_create.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 88,
                    "changes": 88,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fati_to_datastore_create.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fati_to_datastore_create.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fati_to_datastore_create.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,88 +0,0 @@\n-#!/usr/bin/env python3\n-r'''\n-Example usage:\n-\n-ckan recombinant combine ati | ./ati_to_datastore_create.py \\\n- | ckanapi action datastore_create -i -r http://open.canada.ca/data -a ...\n-'''\n-\n-import unicodecsv\n-import json\n-import sys\n-import os\n-import time\n-\n-import ckanapi\n-import ckan\n-from ckanapi.errors import CKANAPIError\n-\n-proxy= os.environ['http_proxy']\n-\n-def org_info():\n-    site = ckanapi.RemoteCKAN('http://registry.open.canada.ca')\n-    count = 0\n-    while count <=5:\n-        try:\n-            sys.stderr.write('reading organizations...\\n')\n-            orgs = site.action.organization_list(all_fields=True)\n-            break\n-        except ckanapi.errors.CKANAPIError:\n-            count += 1\n-            print('Error read org list from open.canada.ca', file=sys.stderr)\n-            time.sleep(2)\n-    res = {}\n-    for rec in orgs:\n-        count = 0\n-        while count <=50:\n-            try:\n-                print('read org ' + rec['name'], file=sys.stderr)\n-                org = site.action.organization_show(id=rec['id'])\n-                break\n-            except ckanapi.errors.CKANAPIError:\n-                count += 1\n-                org = None\n-                print('Error read org ' + rec['name'], file=sys.stderr)\n-                time.sleep(2)\n-        if not org:\n-            print('Network error', file=sys.stderr)\n-            sys.exit(-1)\n-        extras = org['extras']\n-        ati_email = None\n-        for ei in extras:\n-            if ei['key'] == 'ati_email':\n-                ati_email = ei['value']\n-                break\n-        res[rec['name']] = ati_email\n-    return res\n-\n-org_dict = org_info()\n-\n-sys.stdin.read(3)\n-csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-csv = list(csv)\n-for rec in csv:\n-    title = rec.pop('owner_org_title').split(' | ')\n-    rec['org_title_en'] = title[0]\n-    rec['org_title_fr'] = title[1]\n-    rec['ati_email'] = org_dict.get(rec['owner_org'], '')\n-\n-print(json.dumps({\n-    'resource_id': '19383ca2-b01a-487d-88f7-e1ffbc7d39c2',\n-    'fields': [\n-        {'id':'year', 'type':'int'},\n-        {'id':'month', 'type':'int'},\n-        {'id':'request_number', 'type':'text'},\n-        {'id':'summary_en', 'type':'text'},\n-        {'id':'summary_fr', 'type':'text'},\n-        {'id':'disposition', 'type':'text'},\n-        {'id':'pages', 'type':'int'},\n-        {'id':'owner_org', 'type':'text'},\n-        {'id':'ati_email', 'type':'text'},\n-        {'id':'org_title_en', 'type':'text'},\n-        {'id':'org_title_fr', 'type':'text'},\n-    ],\n-    'primary_key': ['owner_org', 'request_number'],\n-    'indexes': ['year', 'month'],\n-    'force': True,\n-    'records': list(csv),\n-}))"
                },
                {
                    "sha": "2a64432ab7a79ec431a7e2efafe29581e2698c5c",
                    "filename": "bin/csv2solr.sh",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 102,
                    "changes": 102,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fcsv2solr.sh",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fcsv2solr.sh",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fcsv2solr.sh?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,102 +0,0 @@\n-#!/bin/bash\n-\n-set -e\n-\n-function usage() {\n-    echo \"Usage: ${0} CKAN-INI-FILE SOURCE_CKAN_URL \\\\\"\n-    echo \"    TARGET-DATASET:PACKAGE-ID ... [VIRTUAL-ENV-HOME]\"\n-    echo\n-    echo \"This script:\"\n-    echo \"- pushes datasets from .csv files to the solr core\"\n-    echo\n-    echo \"e.g., ${0} ../development.ini http://open.canada.ca/vl \\\\\"\n-    echo \"    ati:ati_id pd:pd_id\"\n-\n-    exit -1\n-}\n-\n-function log() {\n-    DT=$(date +'%F %T')\n-    LEVEL=${1}\n-    MSG=${2}\n-    echo ${DT} ${LEVEL} [$(basename \"${0}\")] ${MSG}\n-}\n-\n-LAST_TARG_ARG_IDX=$#\n-if [ \"$#\" -lt 3 ]\n-then\n-    usage\n-fi\n-\n-# Establish bin directory\n-cd \"$(dirname ${0})\"\n-BIN_HOME=$(pwd)\n-\n-# Set .ini file, get port of operation from [server:main] section\n-cd \"$(dirname ${1})\"\n-INI_FILE=$(basename ${1})\n-INI_PATH=\"$(pwd)/${INI_FILE}\"\n-\n-# Where we download csv files\n-SOURCE_CKAN_URL=${2}\n-\n-# Associate target datasets with ids\n-declare -A TARG_DS_MAP\n-for TARG_ARG in $(seq 3 ${LAST_TARG_ARG_IDX})\n-do\n-    TARG_DS_MAP[\"${!TARG_ARG%:*}\"]=\"${!TARG_ARG#*:}\"\n-done\n-\n-TMPDIR=$(mktemp -t -d)\n-\n-# Record ckanext-canada home\n-cd \"${BIN_HOME}/..\"\n-CXC_HOME=$(pwd)\n-\n-# Go to ckanext-recombinant, identify bona fide target datasets\n-cd \"${BIN_HOME}/../../ckanext-recombinant\"\n-CXR_HOME=\"$(pwd)\"\n-TARGET_DATASETS=$(ckan -c \"${INI_PATH}\" recombinant target-datasets)\n-\n-# Fetch resources per target dataset\n-cd \"${BIN_HOME}\"\n-for TARG_DS in $(echo ${TARGET_DATASETS} | tr ' ' '\\n')\n-do\n-    # Get resource URLs for those datasets specified on command line\n-    if [ -z \"${TARG_DS_MAP[${TARG_DS}]}\" ]\n-    then\n-        continue\n-    fi\n-\n-    CSV_URLS=$(./resource_urls.py $SOURCE_CKAN_URL \"${TARG_DS_MAP[${TARG_DS}]}\")\n-\n-    CSV_FILES=\"\"\n-    for CSV_URL in $(echo ${CSV_URLS} | tr ' ' '\\n')\n-    do\n-        # Sometimes http://host:port/ is there and sometimes not\n-        if [[ \"${CSV_URL}\" =~ :///.* ]]\n-        then\n-            CSV_URL=${CSV_URL#*///}\n-            CSV_URL=\"http://localhost:${INI_PORT}/${CSV_URL}\"\n-        fi\n-\n-        # Strip off everything but file name and extension\n-\techo \"CSV_URL $CSV_URL\"\n-\tCSV_TAIL=\"${CSV_URL##*/}\"\n-        FPATH=\"${TMPDIR}/${CSV_TAIL#*.*.}\"\n-\techo \"FPATH $FPATH\"\n-        CSV_FILES=\"${CSV_FILES} ${FPATH}\"\n-\techo \"CSV_FILES $CSV_FILES\"\n-        ./wget.sh --connect-timeout=10 --read-timeout=30 --dns-timeout=10 -t 20 -w 15 -q ${CSV_URL} -O \"${FPATH}\"\n-        log 'INFO' \"Downloaded $(wc -c ${FPATH} | cut -d ' ' -f1) bytes: [${CSV_URL}]\"\n-    done\n-    CSV_FILES=${CSV_FILES/ /}\n-\n-    # Rebuild solr core from downloaded .csv files\n-    ckan -c \"${INI_PATH}\" pd clear \"${TARG_DS}\"\n-    ckan -c \"${INI_PATH}\" pd rebuild \"${TARG_DS}\" -f ${CSV_FILES}\n-    log 'INFO' \"Cleared and rebuilt [${TARG_DS}] solr core\"\n-done\n-\n-# Clean up\n-/bin/rm -rf \"${TMPDIR}\""
                },
                {
                    "sha": "1c47189fcb4040c75856755b46d31a9bb62988f9",
                    "filename": "bin/csv2xlsx.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 26,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fcsv2xlsx.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fcsv2xlsx.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fcsv2xlsx.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env python3\n-\n-\"\"\"\n-Script that takes csv on stdin and writes an xlsx file on stdout\n-\"\"\"\n-\n-import csv\n-import codecs\n-import sys\n-import openpyxl\n-\n-def main():\n-    reader = csv.reader(sys.stdin)\n-    book = openpyxl.Workbook(write_only=True)\n-    sheet = book.create_sheet()\n-\n-    firstrow = next(reader)\n-    firstrow[0] = firstrow[0].lstrip(codecs.BOM_UTF8)\n-    sheet.append(firstrow)\n-\n-    for row in reader:\n-        sheet.append(row)\n-\n-    book.save(sys.stdout)\n-\n-main()"
                },
                {
                    "sha": "cf1ed4e5d91c7e46c052fe797e0a38e7321d9360",
                    "filename": "bin/datasets_by_orgs_report.py",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 7,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdatasets_by_orgs_report.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdatasets_by_orgs_report.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fdatasets_by_orgs_report.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -21,9 +21,11 @@ def main():\n     opts = docopt(__doc__)\n \n     num_months = int(opts['MONTHS'])\n-    portal = ckanapi.RemoteCKAN(opts['PORTAL_URL'],\n+    portal = ckanapi.RemoteCKAN(\n+        opts['PORTAL_URL'],\n         user_agent='datasets_by_orgs_report.py (ckanext-canada)')\n-    registry = ckanapi.RemoteCKAN(opts['REGISTRY_URL'],\n+    registry = ckanapi.RemoteCKAN(\n+        opts['REGISTRY_URL'],\n         user_agent='datasets_by_orgs_report.py (ckanext-canada)')\n \n     sys.stderr.write('getting org list...\\n')\n@@ -34,7 +36,6 @@ def main():\n     sys.stderr.write('getting published datasets...\\n')\n     published_datasets = set(portal.action.package_list())\n \n-    orgs = {o['id']: o for o in org_list}\n     now = datetime.utcnow()\n     months = [(now.year, now.month)]\n     counts = {o['id']: [0] for o in org_list}\n@@ -51,7 +52,7 @@ def main():\n                 for c in counts:\n                     counts[c].append(0)\n                 sys.stderr.write(str(processed) + u'\\n'\n-                    + ym_head(months[-1]) + u':')\n+                                 + ym_head(months[-1]) + u':')\n                 processed = 0\n                 if months[-1] == act_ym:\n                     break\n@@ -88,10 +89,9 @@ def main():\n             o['id'],\n             o['title'].split(' | ')[0],\n             o['title'].split(' | ')[-1],\n-            opts['PORTAL_URL'].rstrip('/')\n-                + u'/organization/' + o['name'],\n+            opts['PORTAL_URL'].rstrip('/') + u'/organization/' + o['name'],\n             o['package_count']\n-            ] + counts[o['id']])\n+        ] + counts[o['id']])\n \n \n def prior_month(ym):\n@@ -118,4 +118,5 @@ def activities(registry):\n         offset += len(batch)\n     sys.stderr.write(u'activity list ended at %d\\n' % offset)\n \n+\n main()"
                },
                {
                    "sha": "dfc95710109a369f505399cbec77b6fc077c94b8",
                    "filename": "bin/download_country.py",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 3,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_country.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_country.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fdownload_country.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -6,13 +6,16 @@\n import sys\n import os.path\n \n-OUTPUT_FILE = os.path.join(os.path.split(__file__)[0],\n-    '../ckanext/canada/tables/choices/country.json')\n+OUTPUT_FILE = os.path.join(\n+                os.path.split(__file__)[0],\n+                '../ckanext/canada/tables/choices/country.json')\n \n-DATA_URL = 'https://raw.githubusercontent.com/datasets/country-codes/master/data/country-codes.csv'\n+DATA_URL = 'https://raw.githubusercontent.com/datasets/'\\\n+           'country-codes/master/data/country-codes.csv'\n \n choices = {}\n \n+\n def download_csv_filter_output(url):\n     \"\"\"\n     Download CSV and print the columns we need"
                },
                {
                    "sha": "32d4d35a479708acbfba9d4704f9ea89dfc6f772",
                    "filename": "bin/download_currency.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 3,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_currency.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_currency.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fdownload_currency.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -3,17 +3,18 @@\n import requests\n from lxml import etree\n import json\n-import sys\n import os.path\n \n-OUTPUT_FILE = os.path.join(os.path.split(__file__)[0],\n-    '../ckanext/canada/tables/choices/currency.json')\n+OUTPUT_FILE = os.path.join(\n+                os.path.split(__file__)[0],\n+                '../ckanext/canada/tables/choices/currency.json')\n \n DATA_FR_URL = 'https://fr.iban.com/currency-codes.html'\n DATA_EN_URL = 'https://iban.com/currency-codes.html'\n \n choices = {}\n \n+\n def extract_currency_name_dict(url):\n     \"\"\"\n     return a {symbol: full name} dict from a table at url passed\n@@ -30,6 +31,7 @@ def extract_currency_name_dict(url):\n         out[symbol.strip()] = full_name.strip()\n     return out\n \n+\n fr_data = extract_currency_name_dict(DATA_FR_URL)\n en_data = extract_currency_name_dict(DATA_EN_URL)\n "
                },
                {
                    "sha": "01e04561a28700c5506462f0694b69b7edb741e8",
                    "filename": "bin/download_dac.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 2,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_dac.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_dac.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fdownload_dac.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -34,7 +34,8 @@ def main(argv):\n             raise ValueError\n \n     except (ValueError, getopt.GetoptError):\n-        print(\"USAGE: python download_dac.py -o/--output outfile.yaml [-v/--verify 1|0]\")\n+        print(\"USAGE: python download_dac.py \"\n+              \"-o/--output outfile.yaml [-v/--verify 1|0]\")\n         sys.exit(1)\n \n     # Extract member names from API endpoint and publish as yaml\n@@ -56,7 +57,9 @@ def main(argv):\n                      key=lambda k: k['CONTACT_NAME'].lower())\n     for record in records:\n         contact = {record['CONTACT_NAME']: record['CONTACT_NAME']}\n-        output.write(yaml.safe_dump(contact, encoding='utf-8', allow_unicode=True).decode('utf-8'))\n+        output.write(yaml.safe_dump(contact,\n+                                    encoding='utf-8',\n+                                    allow_unicode=True).decode('utf-8'))\n     output.close()\n \n "
                },
                {
                    "sha": "2f338c45c865149976caf589603f95460edec80c",
                    "filename": "bin/download_minister.py",
                    "status": "modified",
                    "additions": 46,
                    "deletions": 25,
                    "changes": 71,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_minister.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fdownload_minister.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fdownload_minister.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -9,8 +9,9 @@\n from bs4 import BeautifulSoup\n import re\n \n-OUTPUT_FILE = os.path.join(os.path.split(__file__)[0],\n-                           '../ckanext/canada/tables/choices/minister.json')\n+OUTPUT_FILE = os.path.join(\n+                os.path.split(__file__)[0],\n+                '../ckanext/canada/tables/choices/minister.json')\n lang_codes = [\"en\", \"fr\"]\n all_mp_urls = []\n \n@@ -46,24 +47,39 @@ def get_filter_output():\n                 if existing_choices[row]['en'] == choices[row]['en']:\n                     # position found in both\n                     if existing_choices[row] != choices[row]:\n-                        # case: same position with new minister in choices, then add new minister to existing position\n+                        # case: same position with new minister in choices,\n+                        # then add new minister to existing position\n                         # and update end date for existing ministers\n                         for minister in existing_choices[row]['ministers']:\n-                            if minister['name'] != choices[row]['ministers'][0]['name'] and not minister['end_date']:\n-                                minister['end_date'] = get_end_date(minister['name'], existing_choices[row]['en'])\n+                            if (\n+                              minister['name'] != choices[row]['ministers'][0]['name']\n+                              and not minister['end_date']):\n+\n+                                minister['end_date'] = get_end_date(\n+                                                        minister['name'],\n+                                                        existing_choices[row]['en'])\n                         else:\n-                            if existing_choices[row]['ministers'][0] != choices[row]['ministers'][0]:\n-                                existing_choices[row]['ministers'].insert(0, choices[row]['ministers'][0])\n+                            if (\n+                              existing_choices[row]['ministers'][0] !=\n+                              choices[row]['ministers'][0]):\n+\n+                                existing_choices[row]['ministers'].insert(\n+                                    0,\n+                                    choices[row]['ministers'][0])\n             else:\n-                # case: position found in existing choices but not in choices,\n+                # case: position found in existing\n+                # choices but not in choices,\n                 # update end date for all ministers\n                 for minister in existing_choices[row]['ministers']:\n                     if not minister['end_date']:\n-                        minister['end_date'] = get_end_date(minister['name'], existing_choices[row]['en'])\n+                        minister['end_date'] = get_end_date(minister['name'],\n+                                                            existing_choices[row]['en'])\n \n         for row in choices:\n-            if not [d for d in existing_choices if existing_choices[d]['en'] == choices[row]['en']]:\n-                # case: new position in choices, add new position to existing choices\n+            if not [d for d in existing_choices\n+                    if existing_choices[d]['en'] == choices[row]['en']]:\n+                # case: new position in choices,\n+                # add new position to existing choices\n                 # and resolve duplicate codes, if required\n                 position_code = row\n                 i = 0\n@@ -125,7 +141,9 @@ def get_ministries_list():\n         for position in positions:\n             minister_positions.append(position.text)\n         minister_positions = filter(None, minister_positions)\n-        current_positions = get_parliamentary_position_roles('https://www.ourcommons.ca' + minister_url + '/roles/xml', minister_positions)\n+        current_positions = get_parliamentary_position_roles(\n+            'https://www.ourcommons.ca' + minister_url + '/roles/xml',\n+            minister_positions)\n         cabinet_ministers_list.extend(current_positions)\n     return cabinet_ministers_list\n \n@@ -162,7 +180,8 @@ def get_parliamentary_position_roles(url, positions=None):\n         i += 1\n \n     if positions:\n-        current_positions = [p for p in member_roles if p['title_en'] in positions and not p['end_date']]\n+        current_positions = [p for p in member_roles\n+                             if p['title_en'] in positions and not p['end_date']]\n         return current_positions\n \n     return member_roles\n@@ -173,14 +192,16 @@ def get_end_date(name, position):\n     if not len(all_mp_urls):\n         # get url for all mps\n         all_mps_page = urlopen(\n-            'https://www.ourcommons.ca/Members/en/search?parliament=all&caucusId=all&province=all&gender=all')\n+            'https://www.ourcommons.ca/Members/en/search'\n+            '?parliament=all&caucusId=all&province=all&gender=all')\n         all_mps_html = all_mps_page.read().decode('utf-8')\n         all_mps_soup = BeautifulSoup(all_mps_html, 'html.parser')\n         all_mp_urls = all_mps_soup.find_all(class_='ce-mip-mp-tile')\n \n     for m in all_mp_urls:\n         if m.find(class_='ce-mip-mp-name', text=name):\n-            roles = get_parliamentary_position_roles('https://www.ourcommons.ca' + m['href'] + '/roles/xml')\n+            roles = get_parliamentary_position_roles(\n+                'https://www.ourcommons.ca' + m['href'] + '/roles/xml')\n             for r in roles:\n                 if r['title_en'] == position:\n                     return r['end_date']\n@@ -193,18 +214,18 @@ def get_end_date(name, position):\n # add Governor General to the list to make a combined\n # list for admin_aircraft and qpnotes\n minister_choices['GG'] = {\n-    \"en\":\"The Governor General of Canada\",\n-    \"fr\":\"La gouverneure générale du Canada\",\n-    \"ministers\":[\n+    \"en\": \"The Governor General of Canada\",\n+    \"fr\": \"La gouverneure générale du Canada\",\n+    \"ministers\": [\n         {\n-            \"end_date\":\"\",\n-            \"name\":\"Mary Simon\",\n-            \"name_en\":\"Simon, Mary (Right Hon.)\",\n-            \"name_fr\":\"Simon, Mary (Le très hon.)\",\n-            \"start_date\":\"2021-07-26T08:00:00\"\n+            \"end_date\": \"\",\n+            \"name\": \"Mary Simon\",\n+            \"name_en\": \"Simon, Mary (Right Hon.)\",\n+            \"name_fr\": \"Simon, Mary (Le très hon.)\",\n+            \"start_date\": \"2021-07-26T08:00:00\"\n         }\n-        ]\n-    }\n+    ]\n+}\n \n if minister_choices:\n     open(OUTPUT_FILE, 'wb').write(json.dumps("
                },
                {
                    "sha": "6834088942d8b9bf703b130f3023e54f87da434b",
                    "filename": "bin/fill-in_top_100_csv.py",
                    "status": "modified",
                    "additions": 12,
                    "deletions": 8,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffill-in_top_100_csv.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffill-in_top_100_csv.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffill-in_top_100_csv.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,21 +1,25 @@\n \n import argparse\n from ckanapi import RemoteCKAN, NotFound\n-from ConfigParser import ConfigParser\n-from sys import stdout\n+from configparser import ConfigParser\n import unicodecsv\n \n \n argparser = argparse.ArgumentParser(\n     description='Populate the top 100 datasets csv with dataset and organization name'\n )\n-argparser.add_argument('-f', '--file', action='store', default='', dest='csvfile',\n+argparser.add_argument('-f', '--file', action='store',\n+                       default='', dest='csvfile',\n                        help='Empty CSV file from TBS')\n-argparser.add_argument('-c', '--config', action='store', default='development.ini', dest='configfile',\n+argparser.add_argument('-c', '--config', action='store',\n+                       default='development.ini',\n+                       dest='configfile',\n                        help='Config file')\n-argparser.add_argument('-o', '--outfile', action='store', default='output.csv', dest='outfile',\n+argparser.add_argument('-o', '--outfile', action='store',\n+                       default='output.csv', dest='outfile',\n                        help='CSV file to write out to')\n-argparser.add_argument('-l', '--lang', action='store', default='en', dest='lang',\n+argparser.add_argument('-l', '--lang', action='store',\n+                       default='en', dest='lang',\n                        help='language [en|fr]')\n args = argparser.parse_args()\n \n@@ -42,8 +46,8 @@ def main():\n             row[2] = pkg['org_title_at_publication'][args.lang]\n             row[1] = pkg['title_translated'][args.lang]\n             csv_out.writerow(row)\n-        except NotFound, e:\n+        except NotFound:\n             pass\n \n-main()\n \n+main()"
                },
                {
                    "sha": "fc06e57ba00c52570219575c0b1fbb2d8b68e472",
                    "filename": "bin/filter/amendment_delta_records.py",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 5,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Famendment_delta_records.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Famendment_delta_records.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Famendment_delta_records.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -8,11 +8,13 @@\n \n from codecs import BOM_UTF8\n \n-assert sys.argv[1] and sys.argv[2], 'usage: amendment_delta_records.py input.csv output.csv'\n+assert sys.argv[1] and sys.argv[2], \\\n+       'usage: amendment_delta_records.py input.csv output.csv'\n AMENDMENT_COLUMN = 'amendment_number'\n OWNER_ORG = 'owner_org'\n OWNER_ORG_TITLE = 'owner_org_title'\n \n+\n def batch_owner_org_pk(c):\n     'yield groups of records with the same owner_org and pk values'\n     records = c.execute(\n@@ -54,7 +56,7 @@ def batch_owner_org_pk(c):\n             original = json.dumps(line)\n \n             c.execute('INSERT INTO records VALUES (?,?,?,?)',\n-                (owner_org, pk, amendment, original))\n+                      (owner_org, pk, amendment, original))\n \n     with open(sys.argv[2], 'wb') as outfile:\n         outfile.write(BOM_UTF8)  # we are in write,bytes mode\n@@ -77,9 +79,11 @@ def batch_owner_org_pk(c):\n             for i, row in iterator:\n                 row[AMENDMENT_COLUMN] = \"%02d\" % i\n                 out_csv.writerow({\n-                    k: v for (k, v) in row.items()\n-                    if k in (f0, AMENDMENT_COLUMN, OWNER_ORG, OWNER_ORG_TITLE)\n-                        or v != prev[k]})\n+                    k:\n+                        v for (k, v) in row.items() if\n+                        k in (f0, AMENDMENT_COLUMN, OWNER_ORG, OWNER_ORG_TITLE) or\n+                        v != prev[k]\n+                })\n                 prev = row\n \n             row[AMENDMENT_COLUMN] = 'current'"
                },
                {
                    "sha": "7ebf4273daa344470c701ed990862928c66247b7",
                    "filename": "bin/filter/filter_adminaircraft.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_adminaircraft.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_adminaircraft.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_adminaircraft.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -12,6 +12,7 @@\n     'owner_org_title'\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -25,4 +26,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "4b30937498d20b33b52979ce955c9d673295ef0c",
                    "filename": "bin/filter/filter_ati.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_ati.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_ati.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_ati.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -18,6 +18,7 @@\n \n BOM = \"\\N{bom}\"\n \n+\n def main():\n     bom = sys.stdin.read(1)  # first code point\n     if not bom:\n@@ -26,7 +27,6 @@ def main():\n     assert bom == BOM\n     sys.stdout.write(BOM)\n \n-\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n     writer = csv.DictWriter(sys.stdout, outnames)\n@@ -41,4 +41,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "0f486c129886dd9d9496177f934104442ff2507e",
                    "filename": "bin/filter/filter_consultations.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_consultations.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_consultations.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_consultations.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -25,6 +25,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -41,4 +42,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "28011ffe0c401fcefaba6f7222a6a211bffb2ee8",
                    "filename": "bin/filter/filter_contracts.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_contracts.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_contracts.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_contracts.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -23,4 +24,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "e446dc5ef87d5a4b01d7d9b784a272600dce92d1",
                    "filename": "bin/filter/filter_contracts_nil.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_contracts_nil.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_contracts_nil.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_contracts_nil.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -23,4 +24,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "ca89b147fbea3b0d0f8d8a32f8a53f7e53a220de",
                    "filename": "bin/filter/filter_contractsa.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_contractsa.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_contractsa.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_contractsa.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -23,4 +24,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "b877b58c4ad52d2468a37286c2b03ccb9d0f4100",
                    "filename": "bin/filter/filter_current_consultations.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_current_consultations.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_current_consultations.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_current_consultations.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -9,6 +9,7 @@\n import csv\n import sys\n \n+\n def main():\n     current = datetime.today() - timedelta(365 * 2)\n \n@@ -19,4 +20,5 @@ def main():\n         if datetime.strptime(row['end_date'], '%Y-%m-%d') > current:\n             writer.writerow(row)\n \n+\n main()"
                },
                {
                    "sha": "3ec6589e1d348426adbcdb5c9bf954004f5af127",
                    "filename": "bin/filter/filter_dac.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_dac.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_dac.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_dac.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -23,4 +24,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "8a5ba749f0eb7f0a176884e98fefdf980b613021",
                    "filename": "bin/filter/filter_disclosure_group.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_disclosure_group.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_disclosure_group.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_disclosure_group.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -11,6 +11,7 @@\n \n FILTER_COLUMN = \"disclosure_group\"\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     writer = csv.DictWriter(sys.stdout, reader.fieldnames)\n@@ -22,4 +23,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "4a8ea57acacb897e702ba1f9e4600d7a38cd1785",
                    "filename": "bin/filter/filter_experiment.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_experiment.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_experiment.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_experiment.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -23,4 +24,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "e848789c30e099397f8e826c7032a8ac3d4879c0",
                    "filename": "bin/filter/filter_grants.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_grants.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_grants.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_grants.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -23,4 +24,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "c379c01a367ff4da8bc979b0198ee56434ae3cf1",
                    "filename": "bin/filter/filter_inventory.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_inventory.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_inventory.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_inventory.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n \n FILTER_COLUMN = \"eligible_for_release\"\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     writer = csv.DictWriter(sys.stdout, reader.fieldnames)"
                },
                {
                    "sha": "93011f6a40c03434989669beb34a3efd7242b2e4",
                    "filename": "bin/filter/filter_modified_created.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_modified_created.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_modified_created.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_modified_created.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,6 +10,7 @@\n     'user_modified',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     if not reader.fieldnames:\n@@ -30,4 +31,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "e1cd7fd0ce1c1bc05dbe270a0ab4e9d482403f5a",
                    "filename": "bin/filter/filter_nap5.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 1,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_nap5.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_nap5.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_nap5.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -27,6 +27,7 @@\n     's4d',\n ]\n \n+\n def main():\n     with open(TABLE_YAML, 'r') as f:\n         table = yaml.load(f, yaml.Loader)\n@@ -53,12 +54,14 @@ def main():\n         for ind in COPY_INDICATORS:\n             if ind.startswith('deadline_'):\n                 # special case, this one has an en/fr sub-dict\n-                row['indicator_' + ind] = ind_src.get('deadline', {}).get(ind.split('_')[1], '').encode('utf-8')\n+                row['indicator_' + ind] = ind_src.get('deadline', {}).\\\n+                    get(ind.split('_')[1], '').encode('utf-8')\n             elif isinstance(ind_src.get(ind), bool):\n                 row['indicator_' + ind] = 'true' if ind_src.get(ind) else 'false'\n             else:\n                 row['indicator_' + ind] = ind_src.get(ind, '').encode('utf-8')\n \n         writer.writerow(row)\n \n+\n main()"
                },
                {
                    "sha": "926d0f0bba8af4c6d17231c37cec0947f9d20481",
                    "filename": "bin/filter/filter_service.py",
                    "status": "modified",
                    "additions": 12,
                    "deletions": 10,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_service.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_service.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_service.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -13,8 +13,10 @@\n ]\n \n BOM = \"\\N{bom}\"\n-PROGRAM_NAMES_FILE = os.path.join(os.path.split(__file__)[0],\n-                           '../../ckanext/canada/tables/choices/service_program_names.yaml')\n+PROGRAM_NAMES_FILE = os.path.join(\n+                        os.path.split(__file__)[0],\n+                        '../../ckanext/canada/tables/choices'\n+                        '/service_program_names.yaml')\n \n COLUMNS = [\n     'fiscal_yr', 'service_id', 'service_name_en', 'service_name_fr',\n@@ -56,14 +58,13 @@ def main():\n \n         # calculate total number of applications\n         row['num_applications_total'] = 0\n-        num_fields = [ 'num_applications_by_phone',\n-                       'num_applications_online',\n-                       'num_applications_in_person',\n-                       'num_applications_by_mail',\n-                       'num_applications_by_email',\n-                       'num_applications_by_fax',\n-                       'num_applications_by_other',\n-                       ]\n+        num_fields = ['num_applications_by_phone',\n+                      'num_applications_online',\n+                      'num_applications_in_person',\n+                      'num_applications_by_mail',\n+                      'num_applications_by_email',\n+                      'num_applications_by_fax',\n+                      'num_applications_by_other',]\n         for field in num_fields:\n             if row[field] in ['NA', 'ND']:\n                 count = 0\n@@ -88,4 +89,5 @@ def main():\n \n         writer.writerow(row)\n \n+\n main()"
                },
                {
                    "sha": "07ed00d90f85e74444515cf0a067b324f0d4ad8e",
                    "filename": "bin/filter/filter_service_std.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 3,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_service_std.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_service_std.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_service_std.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -43,16 +43,17 @@ def main():\n         den = int(row['total_volume']) if row['total_volume'] else 0\n \n         # performance = volume_meeting_target / total_volume\n-        if num <= 0 or den <=0:\n+        if num <= 0 or den <= 0:\n             row['performance'] = None\n         else:\n-            row['performance'] = max( round(num / den, 4), 0)\n+            row['performance'] = max(round(num / den, 4), 0)\n \n         # calculate target_met\n         if row['target']:\n             target = float(row['target'])\n \n-            # if no performance(volume_meeting_target/total_volume) then target_met is not possible\n+            # if no performance(volume_meeting_target/total_volume)\n+            # then target_met is not possible\n             if row['performance'] is None:\n                 row['target_met'] = 'NA'\n \n@@ -68,4 +69,5 @@ def main():\n \n         writer.writerow(row)\n \n+\n main()"
                },
                {
                    "sha": "4bba360619d2471a633c712bbdd8101dc7b0221c",
                    "filename": "bin/filter/filter_travela.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_travela.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ffilter%2Ffilter_travela.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ffilter%2Ffilter_travela.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -20,6 +20,7 @@\n     'internal_governance_kdollars',\n ]\n \n+\n def main():\n     reader = csv.DictReader(sys.stdin)\n     outnames = [f for f in reader.fieldnames if f not in REMOVE_COLUMNS]\n@@ -40,4 +41,5 @@ def main():\n         except ValueError:\n             pass\n \n+\n main()"
                },
                {
                    "sha": "f4924dac9c2344911ab5ec1ba9c7487b9bfb9eb4",
                    "filename": "bin/ga_script.sh",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 154,
                    "changes": 154,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fga_script.sh",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fga_script.sh",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fga_script.sh?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,154 +0,0 @@\n-#!/bin/bash\n-\n-### REQUIRED ENVIRONMENT VARIABLES\n-#\n-# Note: Before running this script, the shell following Environment  variables need to be set\n-#\n-# GA_CLIENT_SECRET path to GA secrets file\n-# GA_PORTAL_INI path to the CKAN portal ini file\n-# GA_REGISTRY_INI path to the CKAN registry ini file\n-# GA_ARCHIVE_ROOT path to base archive driectory\n-# GA_STATIC_DIR path to the directory where static files as stored for the web server\n-# GA_VENV_SCRIPT path to script to activate the python virtual environment for this script\n-# GA_PORTAL_CKANAPI path to ckanapi within portal environment\n-# GA_OG_ANALYTICS path to the analytics scripts in the CKAN Canada extension\n-# GA_TMP_DIR temporary directory used by this script and og_analytics.py\n-# GA_DELETE_DS path to the get_deleted_datasets.py script in the CKAN Canada extension\n-# GA_LOG_DIR Directory for the og files produced by this script\n-#\n-###\n-\n-GA_LOG_FILE=$GA_LOG_DIR/og_analytics.log\n-\n-set `date +%m\" \"%Y`\n-CURMTH=$1\n-CURYR=$2\n-\n-if [ $CURMTH -eq 1 ]\n-then PRVMTH=12\n-     PRVYR=`expr $CURYR - 1`\n-     STARTYR=$PRVYR\n-else PRVMTH=`expr $CURMTH - 1`\n-     PRVYR=$CURYR\n-     STARTYR=`expr $CURYR - 1`\n-fi\n-\n-if [ $PRVMTH -lt 10 ]\n-then PRVMTH=\"0\"$PRVMTH\n-fi\n-\n-LASTDY=$(cal $PRVMTH $PRVYR | egrep \"28|29|30|31\" |tail -1 |awk '{print $NF}')\n-\n-echo First Day: 01-$PRVMTH-$PRVYR > $GA_LOG_FILE\n-echo Last Day: $LASTDY-$PRVMTH-$PRVYR >> $GA_LOG_FILE\n-echo Start Day: 01-$CURMTH-$STARTYR >> $GA_LOG_FILE\n-\n-set -e\n-\n-CATAFILE=$GA_STATIC_DIR/od-do-canada.$PRVYR$PRVMTH$LASTDY.jl.gz\n-if [ -f $CATAFILE ]\n-then\n-  echo found: $CATAFILE >> \"$GA_LOG_FILE\"\n-else\n-  cp $GA_STATIC_DIR/od-do-canada.jl.gz \"$CATAFILE\"\n-fi\n-\n-# backup the file from previous month\n-GA_ARCHIVE_DIR=$GA_ARCHIVE_ROOT/$PRVYR-$PRVMTH-$LASTDY\n-mkdir -p $GA_ARCHIVE_DIR\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.top20Info.xls ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.top20Info.xls $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.top20Info.xls\n-fi\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrgByMonth.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrgByMonth.bilingual.csv $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.datasetsByOrgByMonth.bilingual.csv\n-fi\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.totalMonthlyUsage.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.totalMonthlyUsage.bilingual.csv $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.totalMonthlyUsage.bilingual.csv\n-fi\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrg.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrg.bilingual.csv $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.datasetsByOrg.bilingual.csv\n-fi\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.internationalUsageBreakdown.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.internationalUsageBreakdown.bilingual.csv $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.internationalUsageBreakdown.bilingual.csv\n-fi\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.provincialUsageBreakdown.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.provincialUsageBreakdown.bilingual.csv $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.provincialUsageBreakdown.bilingual.csv\n-fi\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.top100Datasets.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.top100Datasets.bilingual.csv $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.top100Datasets.bilingual.csv\n-fi\n-\n-# shellcheck source=venv/bin/activate\n-source $GA_VENV_SCRIPT\n-\n-cd $GA_TMP_DIR\n-rm -f $GA_TMP_DIR/downloads_info.xls\n-python $GA_OG_ANALYTICS \\\n-    $GA_CLIENT_SECRET 68455797 $GA_PORTAL_INI \\\n-    $STARTYR-$CURMTH-01 $PRVYR-$PRVMTH-$LASTDY info #\\\n-#    >> $GA_LOG_FILE 2>&1\n-cp -f $GA_TMP_DIR/downloads_info.xls $GA_STATIC_DIR/openDataPortal.siteAnalytics.top20Info.xls\n-\n-# Note, this script will actually fail if these csv files are not present\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrgByMonth.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrgByMonth.bilingual.csv $GA_TMP_DIR/od_ga_by_org_month.csv\n-else\n-  echo \"Cannot find openDataPortal.siteAnalytics.datasetsByOrgByMonth.bilingual.csv\"\n-  exit\n-fi\n-if [ -f $GA_STATIC_DIR/openDataPortal.siteAnalytics.totalMonthlyUsage.bilingual.csv ]; then\n-  cp $GA_STATIC_DIR/openDataPortal.siteAnalytics.totalMonthlyUsage.bilingual.csv $GA_TMP_DIR/od_ga_month.csv\n-else\n-  echo \"Cannot find openDataPortal.siteAnalytics.totalMonthlyUsage.bilingual.csv\"\n-  exit\n-fi\n-\n-python $GA_OG_ANALYTICS \\\n-    $GA_CLIENT_SECRET 68455797 $GA_PORTAL_INI \\\n-    $PRVYR-$PRVMTH-01 $PRVYR-$PRVMTH-$LASTDY dataset \\\n-    >> $GA_LOG_FILE 2>&1\n-cp -f $GA_TMP_DIR/od_ga_by_org_month.csv $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrgByMonth.bilingual.csv\n-cp -f $GA_TMP_DIR/od_ga_month.csv $GA_STATIC_DIR/openDataPortal.siteAnalytics.totalMonthlyUsage.bilingual.csv\n-cp -f $GA_TMP_DIR/od_ga_by_org.csv $GA_STATIC_DIR/openDataPortal.siteAnalytics.datasetsByOrg.bilingual.csv\n-cp -f $GA_TMP_DIR/od_ga_by_country.csv $GA_STATIC_DIR/openDataPortal.siteAnalytics.internationalUsageBreakdown.bilingual.csv\n-cp -f $GA_TMP_DIR/od_ga_by_region.csv $GA_STATIC_DIR/openDataPortal.siteAnalytics.provincialUsageBreakdown.bilingual.csv\n-cp -f $GA_TMP_DIR/od_ga_top100.csv $GA_STATIC_DIR/openDataPortal.siteAnalytics.top100Datasets.bilingual.csv\n-echo 'static Done' >> $GA_LOG_FILE\n-\n-rm -f $GA_TMP_DIR/od_ga_downloads.xls\n-python $GA_OG_ANALYTICS \\\n-    $GA_CLIENT_SECRET 68455797 $GA_PORTAL_INI \\\n-    $STARTYR-$CURMTH-01 $PRVYR-$PRVMTH-$LASTDY visit \\\n-    >> $GA_LOG_FILE 2>&1\n-mv $GA_TMP_DIR/od_ga_downloads.xls $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.visits-$PRVMTH$STARTYR-$PRVMTH$PRVYR.xls\n-UPLOADFILE=$GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.visits-$PRVMTH$STARTYR-$PRVMTH$PRVYR.xls\n-$GA_PORTAL_CKANAPI action resource_patch -c $GA_REGISTRY_INI \\\n-\tid=c14ba36b-0af5-4c59-a5fd-26ca6a1ef6db upload@\"${UPLOADFILE}\"\n-\n-rm -f $GA_TMP_DIR/od_ga_downloads.xls\n-python $GA_OG_ANALYTICS \\\n-    $GA_CLIENT_SECRET 68455797 $GA_PORTAL_INI \\\n-    $STARTYR-$CURMTH-01 $PRVYR-$PRVMTH-$LASTDY download \\\n-    >> $GA_LOG_FILE 2>&1\n-mv $GA_TMP_DIR/od_ga_downloads.xls $GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.downloads-$PRVMTH$STARTYR-$PRVMTH$PRVYR.xls\n-UPLOADFILE=$GA_ARCHIVE_DIR/openDataPortal.siteAnalytics.downloads-$PRVMTH$STARTYR-$PRVMTH$PRVYR.xls\n-$GA_PORTAL_CKANAPI action resource_patch -c $GA_REGISTRY_INI \\\n-\tid=4ebc050f-6c3c-4dfd-817e-875b2caf3ec6 upload@\"${UPLOADFILE}\"\n-echo 'visits downloads done' >> \"$GA_LOG_FILE\"\n-\n-#delete datasets\n-UPLOADFILE=$GA_TMP_DIR/deletedportalds-$PRVMTH$PRVYR.csv\n-python $GA_DELETE_DS $GA_PORTAL_INI $UPLOADFILE\n-$GA_PORTAL_CKANAPI action resource_patch -c $GA_REGISTRY_INI \\\n-\tid=d22d2aca-155b-4978-b5c1-1d39837e1993 upload@\"${UPLOADFILE}\"\n-echo 'deleted datasets done' >> \"$GA_LOG_FILE\"\n-\n-#upload archive\n-cd $GA_ARCHIVE_ROOT\n-cd ..\n-zip -r $GA_TMP_DIR/archive.zip analytics/????-??-??/openDataPortal.siteAnalytics.*.{csv,xls}\n-UPLOADFILE=$GA_TMP_DIR/archive.zip\n-$GA_PORTAL_CKANAPI action resource_patch -c $GA_REGISTRY_INI \\\n-\tid=8debb421-e9cb-49de-98b0-6ce0f421597b upload@\"${UPLOADFILE}\"\n-echo 'archived updates done' >> \"$GA_LOG_FILE\"\n-"
                },
                {
                    "sha": "46e182f5aae01d42da7b96ff8e50b0f7edc4a622",
                    "filename": "bin/gen_service_program_code_yaml.py",
                    "status": "modified",
                    "additions": 15,
                    "deletions": 8,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fgen_service_program_code_yaml.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fgen_service_program_code_yaml.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fgen_service_program_code_yaml.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -2,13 +2,13 @@\n \"\"\"\n Converts supplied EN/FR CSV files into a Recombinant YAML choice file.\n \n-See resources: https://open.canada.ca/data/en/dataset/3c371e57-d487-49fa-bb0d-352ae8dd6e4e\n+See resources:\n+https://open.canada.ca/data/en/dataset/3c371e57-d487-49fa-bb0d-352ae8dd6e4e\n \n CSV inputs should contain 2 columns:\n Program ID, Program Name\n \"\"\"\n \n-import os\n import click\n import csv\n import yaml\n@@ -24,16 +24,22 @@ def success_message(message):\n     click.echo(\"\\n\\033[0;36m\\033[1m%s\\033[0;0m\\n\\n\" % message)\n \n \n-@click.command(short_help=\"Generates a YAML choices file from a CSV file of Service Inventory Program Codes and Names.\")\n+@click.command(short_help=\"Generates a YAML choices file from a CSV \"\n+                          \"file of Service Inventory Program Codes and Names.\")\n @click.option('-e', '--input-english', required=True, type=click.File('r'),\n               help='The English input CSV file.')\n @click.option('-f', '--input-french', required=True, type=click.File('r'),\n               help='The French input CSV file.')\n @click.option('-o', '--output', required=True, type=click.File('w'),\n               help='The output YAML file.')\n-@click.option('-c', '--codes-only', is_flag=True, type=click.BOOL, help='Only generate a choice file of the codes, excluding the Program Names.')\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def generate_program_code_yaml(input_english, input_french, output, codes_only=False, verbose=False):\n+@click.option('-c', '--codes-only', is_flag=True, type=click.BOOL,\n+              help='Only generate a choice file of the '\n+                   'codes, excluding the Program Names.')\n+@click.option('-v', '--verbose', is_flag=True, type=click.BOOL,\n+              help='Increase verbosity.')\n+def generate_program_code_yaml(input_english, input_french,\n+                               output, codes_only=False, verbose=False):\n+\n     choices = {}\n \n     with open(input_english.name, 'r') as f:\n@@ -62,10 +68,11 @@ def generate_program_code_yaml(input_english, input_french, output, codes_only=F\n                 continue\n             choices[row[0]]['fr'] = row[1]\n \n-    choices = dict(sorted(choices.items(), key=lambda x:x[0].lower()))\n+    choices = dict(sorted(choices.items(), key=lambda x: x[0].lower()))\n \n     with open(output.name, 'w') as f:\n-        output.write(yaml.safe_dump(choices, encoding='utf-8', allow_unicode=True).decode('utf-8'))\n+        output.write(yaml.safe_dump(choices, encoding='utf-8',\n+                                    allow_unicode=True).decode('utf-8'))\n \n     success_message('DONE!')\n "
                },
                {
                    "sha": "9bd07696f3a185abe7963752acab726b3b02107b",
                    "filename": "bin/get_deleted_datasets.py",
                    "status": "modified",
                    "additions": 24,
                    "deletions": 19,
                    "changes": 43,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fget_deleted_datasets.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fget_deleted_datasets.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fget_deleted_datasets.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -5,10 +5,9 @@\n     get_deleted_datasets.py <ckan ini file> <xxx.csv>\n '''\n import json\n-import os\n import sys\n import unicodecsv\n-from unicodecsv import DictReader\n+import traceback\n import codecs\n \n import configparser\n@@ -39,17 +38,21 @@ def get_deleted_dataset(conf_file):\n         conn = psycopg2.connect(\n             database=db, user=user,\n             password=passwd, host=host, port=\"5432\")\n-    except:\n-        import traceback\n+    except Exception:\n         traceback.print_exce()\n         print(\"Opened database failed\")\n         sys.exit(-1)\n     cur = conn.cursor()\n-    cur.execute('''SELECT a.id, b.timestamp,c.value, d.title from package a,\n-                activity b, package_extra c, public.group d\n-                where a.state='deleted' and a.id=b.object_id and b.activity_type='deleted package'\n-                    and a.owner_org=d.id\n-                    and a.id=c.package_id and c.key='title_translated'; ''')\n+    cur.execute('''\n+        SELECT a.id, b.timestamp,c.value, d.title from package a,\n+        activity b, package_extra c, public.group d\n+        where a.state='deleted'\n+            and a.id=b.object_id\n+            and b.activity_type='deleted package'\n+            and a.owner_org=d.id\n+            and a.id=c.package_id\n+            and c.key='title_translated';\n+    ''')\n     rows = cur.fetchall()\n     ds = {}\n     for row in rows:\n@@ -68,11 +71,13 @@ def dump_dataset(headers, ds, csvfile):\n     for id, [ts, title, org] in ds:\n         try:\n             title = json.loads(title)\n-        except:\n+        except Exception:\n             title = None\n         if title:\n-            title_en = ([title[k] for k in sorted(title) if k.startswith('en')] + [''])[0]\n-            title_fr = ([title[k] for k in sorted(title) if k.startswith('fr')] + [''])[0]\n+            title_en = ([title[k] for k in sorted(title)\n+                         if k.startswith('en')] + [''])[0]\n+            title_fr = ([title[k] for k in sorted(title)\n+                         if k.startswith('fr')] + [''])[0]\n             rows.append([title_en, title_fr, org, id, ts])\n         else:\n             rows.append(['n/a', 'n/a', org, id, ts])\n@@ -82,13 +87,13 @@ def dump_dataset(headers, ds, csvfile):\n def main():\n     ds = get_deleted_dataset(sys.argv[1])\n     csvfile = sys.argv[2]\n-    headers= [u'Title (English) / Titre (anglais)',\n-              u'Title (French) / Titre (français)',\n-              u'Organization / Organisation',\n-              u'Record ID / Identificateur du dossier',\n-              u'Date and Time Deleted/ Date et heure de suppression'\n-              ]\n+    headers = ['Title (English) / Titre (anglais)',\n+               'Title (French) / Titre (français)',\n+               'Organization / Organisation',\n+               'Record ID / Identificateur du dossier',\n+               'Date and Time Deleted/ Date et heure de suppression']\n     dump_dataset(headers, ds, csvfile)\n \n-if __name__=='__main__':\n+\n+if __name__ == '__main__':\n     main()"
                },
                {
                    "sha": "a6d7108f60756a88005d7f0500d9c3b4791f53dd",
                    "filename": "bin/harvest/README.md",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 14,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2FREADME.md",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2FREADME.md",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fharvest%2FREADME.md?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,14 +0,0 @@\n-# Harvesting data from Open.alberta.ca\r\n-\r\n-The Province of Alberta operates a CKAN-based [open data portal](https://open.alberta.ca/opendata). As part of an agreement with the Province of Alberta, their meta-data catalogue's entries have been added to the Government of Canada's open data catalog. \r\n-\r\n-The following scripts were used to perform the meta data harvest.\r\n-1.\tA script is run to import the data from  Alberta to a local file: [ab.sh](https://github.com/open-data/ckanext-canada/blob/master/bin/harvest/ab.sh)\r\n-2.\tEnglish strings are then extracted from the harvested data to another file: [ab_strings.py](https://github.com/open-data/ckanext-canada/blob/master/bin/harvest/ab_strings.py)\r\n-3.\tTranslation is then done using a separate script that uses the DeepL API to translate and write the translated text to a CSV file:  [deepl.py](https://github.com/open-data/ckanext-canada/blob/master/bin/harvest/deepl.py)\r\n-4.\tA final script merges the translated text with the harvested data and does the necessary transformations to create an Open Data bulk upload JSON lines file: [ab_transform.py](https://github.com/open-data/ckanext-canada/blob/master/bin/harvest/ab_transform.py)\r\n-\r\n-_Note:_ Because it is machine translated, and may not have been reviewed by a human translator, it's important to set a different language code for text that was translated by an AI program. \r\n-\r\n- - `en-t-fr`: English text machine translated from French\r\n- - `fr-t-en`: French text machine translated from English \r"
                },
                {
                    "sha": "5a927a2d5acd41528a0618d59eff6ca2c89b6ae2",
                    "filename": "bin/harvest/ab.sh",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 29,
                    "changes": 29,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fab.sh",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fab.sh",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fharvest%2Fab.sh?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,29 +0,0 @@\n-# some simple import steps\n-\n-set -e\n-\n-ckanapi dump datasets -r https://open.alberta.ca --all -O alberta.jsonl\n-# 87036365 Jun 12 14:04 alberta.jsonl\n-# 92103434 Sep 17 17:50 alberta.jsonl\n-\n-jq -c 'select(.type==\"opendata\")' < alberta.jsonl > opendata_ab.jsonl\n-# 15711286 Jun 12 15:35 opendata_ab.jsonl\n-# 15785749 Sep 17 14:39 opendata_ab.jsonl\n-\n-\n-jq -c '.id' < opendata_ab.jsonl | sort > opendata_ab_ids.jsonl\n-# 95355 Sep 17 14:42 opendata_ab_ids.jsonl\n-\n-\n-:>results.jsonl\n-for a in `seq 0 1000 2000`; do\n-    ckanapi -r https://open.canada.ca/data action package_search q=organization:ab fl=id rows=1000 start=$a -j | jq -c '.results[].id' >> results.jsonl\n-done\n-sort < results.jsonl | uniq > existing_ab_ids.jsonl\n-# 78858 Sep 19 12:29 existing_ab_ids.jsonl\n-\n-\n-comm -23 existing_ab_ids.jsonl opendata_ab_ids.jsonl > delete_ids.jsonl\n-# 39 Sep 19 12:34 delete_ids.jsonl\n-\n-ckanapi delete datasets -I delete_ids.json"
                },
                {
                    "sha": "6319792d920fae8cde11c0664c22a9e00a944c46",
                    "filename": "bin/harvest/ab_strings.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 31,
                    "changes": 31,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fab_strings.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fab_strings.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fharvest%2Fab_strings.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,31 +0,0 @@\n-#!/usr/bin/env python3\n-\n-\"\"\"\n-read json lines alberta metadata on stdin, output strings for translation on stdout\n-as csv with no header\n-\n-Strings are taken from fields we translate: title, notes, tags, resource.name\n-\"\"\"\n-\n-\n-import unicodecsv\n-import sys\n-import json\n-\n-out = unicodecsv.writer(sys.stdout)\n-\n-seen = set()\n-def w(t):\n-    t = t.strip()\n-    if t and t.lower() not in seen:\n-        out.writerow([t])\n-        seen.add(t.lower())\n-\n-for l in sys.stdin:\n-    o = json.loads(l)\n-    w(o['title'])\n-    w(o['notes'])\n-    for t in o['tags']:\n-        w(t['name'])\n-    for r in o['resources']:\n-        w(r['name'])"
                },
                {
                    "sha": "e2a37f291ba5382c5e87f623576f40b3b6ddb82e",
                    "filename": "bin/harvest/ab_transform.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 255,
                    "changes": 255,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fab_transform.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fab_transform.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fharvest%2Fab_transform.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,255 +0,0 @@\n-#!/usr/bin/env python3\n-# coding: UTF-8\n-\n-\"\"\"\n-Usage: ab_transform.py opendata_ab.jsonl deepldb.csv canada_ab.jsonl\n-\n-read json lines alberta metadata on from opendata_ab.jsonl, use translations\n-from deepldb.csv to transform to overwrite canada_ab.jsonl in canada metadata\n-schema\n-\"\"\"\n-\n-import codecs\n-import unicodecsv\n-import sys\n-import json\n-\n-try:\n-    opendata_ab, deepldb, canada_ab = sys.argv[1:]\n-except ValueError:\n-    sys.stderr.write(__doc__)\n-    sys.exit(1)\n-\n-header = (\n-    codecs.BOM_UTF8 + 'source',\n-    'text',\n-    'timestamp',\n-    'detected_source_language',\n-    'source_lang',\n-    'target_lang')\n-\n-\n-xlat = {}\n-def x(t):\n-    return xlat[t.lower().strip()]\n-\n-with open(deepldb) as f:\n-    reader = unicodecsv.reader(f)\n-    h = next(reader)\n-    h = tuple(c.encode('utf-8') for c in h)\n-    assert h == header, ('wrong header', h, header)\n-    for src, txt, ts, dsl, sl, tl in reader:\n-        xlat[src.lower().strip()] = txt\n-\n-ORG_FR = {\n-    u\"Advanced Education\": u\"Ministère de l'Enseignement postsecondaire\",\n-    u\"Agriculture and Forestry\": u\"Ministère de l'Agriculture et des Forêts\",\n-    u\"Alberta Energy Regulator\": u\"Régulateur de l'énergie de l'Alberta\",\n-    u\"Children's Services\": u\"Ministère des Services à l'enfance\",\n-    u\"Communications and Public Engagement\": u\"Ministères des Communications et de la Mobilisation du public\",\n-    u\"Community and Social Services\": u\"Ministère des Services sociaux et communautaires\",\n-    u\"Culture and Tourism\": u\"Ministère de la Culture et du Tourisme\",\n-    u\"Economic Development and Trade\": u\"Ministère du Développement économique et du Commerce\",\n-    u\"Education\": u\"Ministère de l'Éducation\",\n-    u\"Energy\": u\"Ministère de l'Énergie\",\n-    u\"Environment and Parks\": u\"Ministère de l'Environnement et des Parcs\",\n-    u\"Executive Council\": u\"Conseil exécutif\",\n-    u\"Health\": u\"Ministère de la Santé\",\n-    u\"Indigenous Relations\": u\"Ministère des Relations autochtones\",\n-    u\"Infrastructure\": u\"Ministère de l'Infrastructure\",\n-    u\"Justice and Solicitor General\": u\"Ministère de la Justice et du Solliciteur général\",\n-    u\"Labour\": u\"Ministère du Travail\",\n-    u\"Municipal Affairs\": u\"Ministère des Affaires municipales\",\n-    u\"Public Service Commission\": u\"Commission de la fonction publique\",\n-    u\"Seniors and Housing\": u\"Ministère des Personnes âgées et du Logement\",\n-    u\"Service Alberta\": u\"Ministère de Service Alberta OR Service Alberta\",\n-    u\"Status of Women\": u\"Ministère de la Condition féminine\",\n-    u\"Transportation\": u\"Ministère des Transports\",\n-    u\"Treasury Board and Finance\": u\"Conseil du Trésor et Finances\",\n-}\n-\n-SUBJECT = {\n-    u\"arts, Culture and History\": u\"arts_music_literature\",\n-    u\"agriculture\": u\"agriculture\",\n-    u\"economy and finance\": u\"economics_and_industry\",\n-    u\"business and industry\": u\"economics_and_industry\",\n-    u\"education - early childhood to grade 12\": u\"education_and_training\",\n-    u\"education - post - secondary and skills training\": u\"education_and_training\",\n-    u\"education - adult and continuing\": u\"education_and_training\",\n-    u\"government\": u\"government_and_politics\",\n-    u\"interprovincial and international affairs\": u\"government_and_politics\",\n-    u\"health and wellness\": u\"health_and_safety\",\n-    u\"safety and emergency services\": u\"health_and_safety\",\n-    u\"employment and labour\": u\"labour\",\n-    u\"laws and justice\": u\"law\",\n-    u\"environment\": u\"nature_and_environment\",\n-    u\"tourism and parks\": u\"nature_and_environment\",\n-    u\"energy and natural resources\": u\"nature_and_environment\",\n-    u\"persons with disabilities\": u\"persons\",\n-    u\"Aboriginal Peoples\": u\"persons\",\n-    u\"families and children\": u\"persons\",\n-    u\"immigration and migration\": u\"persons\",\n-    u\"seniors\": u\"persons\",\n-    u\"society and communities\": u\"society_and_culture\",\n-    u\"housing and utilities\": u\"society_and_culture\",\n-    u\"population and demography\": u\"society_and_culture\",\n-    u\"sports and recreation\": u\"society_and_culture\",\n-    u\"science, technology and innovation\": u\"science_and_technology\",\n-    u\"roads, driving and transport\": u\"transport\",\n-}\n-\n-AUDIENCE = {\n-    u'aboriginal peoples': u'aboriginal_peoples',\n-    u'entrepreneur/self-employed': u'business',\n-    u'children': u'children',\n-    u'educators': u'educators',\n-    u'employers': u'employers',\n-    u'funding applicants': u'funding_applicants',\n-    u'general public': u'general_public',\n-    u'artists': u'general_public',\n-    u'caregivers': u'general_public',\n-    u'consumers': u'general_public',\n-    u'employees': u'general_public',\n-    u'health care professionals': u'general_public',\n-    u'legal and law enforcement professionals': u'general_public',\n-    u'lower-income earners': u'general_public',\n-    u'government': u'government',\n-    u'immigrants': u'immigrants',\n-    u'job seekers': u'job_seekers',\n-    u'media': u'media',\n-    u'nonprofit/ voluntary organization': u'nongovernmental_organizations',\n-    u'parents': u'parents',\n-    u'persons with disabilities': u'persons_with_disabilities',\n-    u'rural residents': u'rural_community',\n-    u'farmers': u'rural_community',\n-    u'seniors': u'seniors',\n-    u'scientists': u'scientists',\n-    u'researchers': u'scientists',\n-    u'students': u'students',\n-    u'travellers': u'travellers',\n-    u'visitors to alberta': u'visitors_to_canada',\n-    u'women': u'women',\n-    u'youth': u'youth',\n-}\n-\n-FREQUENCY = {\n-    u'Annual': u'P1Y',\n-    u'Biennial': u'P2Y',\n-    u'Daily': u'P1D',\n-    u'Every 2 weeks': u'P2W',\n-    u'Every 5 years': u'P5Y',\n-    u'Every 5 Years': u'P5Y',\n-    u'Irregular': u'irregular',\n-    u'Monthly': u'P1M',\n-    u'Once': u'not_planned',\n-    u'Other': u'unknown',\n-    u'Quarterly': u'P3M',\n-    u'Semi-annual': u'P6M',\n-    u'Weekly': u'P1W',\n-}\n-\n-LICENSE_ID = {\n-    'OGLA': 'ab-ogla',\n-    'QPTU': 'ab-qptu',\n-}\n-\n-RESOURCE_TYPE = {\n-    None: 'dataset',\n-    'url': 'dataset',\n-}\n-\n-FORMAT = {\n-    '': 'other',\n-    '6GB zipped Esri file geodatabase (FGDB)': 'FGDB/GDB',\n-    'application/vnd.ms-excel (xlsx)': 'XLSX',\n-    'CSV': 'CSV',\n-    'DOCX': 'DOCX',\n-    'ftp': 'other',\n-    'FTP': 'other',\n-    'GDB': 'FGDB/GDB',\n-    'GIF': 'GIF',\n-    'GML': 'GML',\n-    'Gridded Data': 'ASCII Grid',\n-    'HTML': 'HTML',\n-    'HTTP': 'other',\n-    'https': 'other',\n-    'HTTPS': 'other',\n-    'JSON': 'JSON',\n-    'KML': 'KML',\n-    'link': 'other',\n-    'LINK': 'other',\n-    'MS Word': 'DOCX',\n-    'Non-GIS Data': 'other',\n-    'OData': 'JSON',\n-    'PDF': 'PDF',\n-    'SHP': 'SHP',\n-    'Tabular Data': 'other',\n-    'TIFF': 'TIFF',\n-    'WMS': 'WMS',\n-    '.xls': 'XLS',\n-    'XLS': 'XLS',\n-    'XLSX': 'XLSX',\n-    'XML': 'XML',\n-    'ZIP': 'ZIP',\n-}\n-\n-out = open(canada_ab, 'wb')\n-\n-for l in open(opendata_ab):\n-    i = json.loads(l)\n-    try:\n-        if any(t['name'].lower() == 'statcan product' for t in i['tags']):\n-            continue\n-        out.write((json.dumps({\n-            'type': 'dataset',\n-            'collection': 'federated',\n-            'id': i['id'],\n-            'name': i['id'],\n-            'metadata_created': i['metadata_created'],\n-            'portal_release_date': i['metadata_created'],\n-            'title_translated': {\n-                'en': i['title'],\n-                'fr-t-en': x(i['title'])},\n-            'org_title_at_publication': {\n-                'en': i['organization']['title'],\n-                'fr': ORG_FR[i['organization']['title']]},\n-            'owner_org': 'ab',\n-            'maintainer_email': i.get('contact_email') or u'open@gov.ab.ca',\n-            'notes_translated': {\n-                'en': i['notes'],\n-                'fr-t-en': x(i['notes'])},\n-            'keywords': {\n-                'en': [tag['name'] for tag in i['tags']],\n-                'fr-t-en': [x(tag['name']) for tag in i['tags']]},\n-            'subject': [SUBJECT[t.lower()] for t in i['topic']],\n-            'audience': [AUDIENCE[a.lower()] for a in i['audience']],\n-            'jurisdiction': 'provincial',\n-            'created': i['date_created'],\n-            'date_modified': i['date_modified'],\n-            'date_published': i['date_created'],\n-            'frequency': FREQUENCY[i['updatefrequency']],\n-            'private': False,\n-            'program_page_url': {\n-                'en': 'https://open.alberta.ca/' + i['type'] + '/' + i['name']},\n-            'license_id': LICENSE_ID[i['license_id']],\n-            'restrictions': 'unrestricted',\n-            'ready_to_publish': 'true',\n-            'imso_approval': 'true',\n-            'resources': [\n-                {\n-                    'id': r['id'],\n-                    'name_translated': {\n-                        'en': r['name'],\n-                        'fr-t-en': x(r['name'])},\n-                    'date_published': r['created'],\n-                    'resource_type': RESOURCE_TYPE[r['resource_type']],\n-                    'format': FORMAT[r['format']],\n-                    'size': r['size'],\n-                    'language': ['en'],\n-                    'url': r['url'],\n-                } for r in i['resources']\n-            ]\n-        }, sort_keys=True, ensure_ascii=False, separators=(',', ':')) + u'\\n')\n-            .encode('utf-8'))\n-    except KeyError as e:\n-        sys.stderr.write('not found: ' + e.args[0] + '\\n')"
                },
                {
                    "sha": "ed99f0c884f306b592a8ed4c7f7bc8723a7ab69f",
                    "filename": "bin/harvest/deepl.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 92,
                    "changes": 92,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fdeepl.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fharvest%2Fdeepl.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fharvest%2Fdeepl.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,92 +0,0 @@\n-#!/usr/bin/env python3\n-\n-\"\"\"\n-Usage: deepl.py strings.csv deepldb.csv SOURCE_LANG TARGET_LANG AUTH_KEY\n-\n-Use api.deepl.com to update db.csv with translations of strings.csv\n-\n-strings.csv is a headerless one-column csv containing text in SOURCE_LANG\n-deepldb.csv is the saved translation database, will be created if it doesn't exist\n-\n-strings that exist in deepldb.csv won't be re-translated. New translations are\n-appended to deepldb.csv\n-\"\"\"\n-\n-import unicodecsv\n-import sys\n-import codecs\n-from datetime import datetime\n-import requests\n-\n-BATCH_SIZE = 1000\n-\n-try:\n-    strings, deepldb, source_lang, target_lang, auth_key = sys.argv[1:]\n-except ValueError:\n-    sys.stderr.write(__doc__)\n-    sys.exit(1)\n-\n-header = (\n-    codecs.BOM_UTF8 + 'source',\n-    'text',\n-    'timestamp',\n-    'detected_source_language',\n-    'source_lang',\n-    'target_lang')\n-\n-def deepl_query(b):\n-    resp = requests.post('https://api.deepl.com/v1/translate', {\n-        'auth_key': auth_key,\n-        'source_lang': source_lang,\n-        'target_lang': target_lang,\n-        'text': b}).json()['translations']\n-    return [(\n-        s,\n-        r['text'],\n-        str(datetime.utcnow()),\n-        r['detected_source_language'],\n-        source_lang,\n-        target_lang) for r, s in zip(resp, b)]\n-\n-seen = set()\n-try:\n-    with open(deepldb) as f:\n-        reader = unicodecsv.reader(f)\n-        h = next(reader)\n-        h = tuple(c.encode('utf-8') for c in h)\n-        assert h == header, ('wrong header', h, header)\n-        for src, txt, ts, dsl, sl, tl in reader:\n-            seen.add(src.lower())\n-except IOError:\n-    with open(deepldb, 'w') as f:\n-        unicodecsv.writer(f).writerow(header)\n-\n-stats = (0, 0)\n-def update_stats(found, added):\n-    global stats\n-    f, a = stats\n-    stats = f + found, a + added\n-    sys.stderr.write('\\rExisting: %d  Found: %d  Added: %d' % ((len(seen),) + stats))\n-\n-update_stats(0, 0)\n-\n-batch = []\n-with open(deepldb, 'a') as out_f:\n-    out = unicodecsv.writer(out_f)\n-    with open(strings) as in_f:\n-        reader = unicodecsv.reader(in_f)\n-        for s, in reader:\n-            if s.lower() in seen:\n-                update_stats(1, 0)\n-                continue\n-            batch.append(s)\n-\n-            if len(batch) >= BATCH_SIZE:\n-                out.writerows(deepl_query(batch))\n-                update_stats(0, len(batch))\n-                del batch[:]\n-        if batch:\n-            out.writerows(deepl_query(batch))\n-            update_stats(0, len(batch))\n-\n-sys.stderr.write('\\n')"
                },
                {
                    "sha": "fe9ce264bf7a38d4647d406f1d42565701a92606",
                    "filename": "bin/import_xml2obd.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 770,
                    "changes": 770,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fimport_xml2obd.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fimport_xml2obd.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fimport_xml2obd.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,770 +0,0 @@\n-#!/usr/bin/env python3\n-'''\n-Usage:\n-    import_xml2_obd.py <xml file or directory> <site_url> > <jsonl file>\n-    import_xml2obd.py upload <site_url> <api_key> <jsonl file> <doc directory>\n-    import_xml2obd.py pull <conf file> <output directory>\n-    import_xml2obd.py de-dup <output directory> <site_url>\n-\n-    sample conf file:\n-    [storage]\n-    source = azure://user:key@container\n-    dest = azure://user:key@container\n-'''\n-import re\n-import argparse\n-import configparser\n-import hashlib\n-import base64\n-import binascii\n-import os\n-import glob\n-import time\n-from datetime import datetime\n-import sys\n-import json\n-from collections import defaultdict, OrderedDict\n-from lxml import etree\n-import yaml\n-import uuid\n-\n-import csv\n-\n-from azure.storage.blob import BlobServiceClient\n-from azure.common import AzureMissingResourceHttpError\n-from azure.storage.blob import ContentSettings\n-\n-import urllib\n-import ckanapi\n-import ckan\n-from ckanapi.errors import CKANAPIError\n-from ckan.logic import (NotAuthorized, NotFound)\n-import traceback\n-\n-audience = None\n-canada_resource_type = None\n-canada_subject = None\n-canada_resource_language = None\n-canada_resource_format = None\n-\n-\n-def md5str(fname, md5_hexdigest=None):\n-    def _save_md5(filename,digest):\n-        with open(filename + '.md5', 'wb') as f:\n-            f.write(digest)\n-\n-    def _read_md5(filename):\n-        try:\n-            with open(filename + '.md5', 'rb') as f:\n-                return f.read()\n-        except IOError:\n-            return None\n-\n-    def _checksum_file(filename):\n-        m = hashlib.md5()\n-        sha = hashlib.sha384()\n-        try:\n-            with open(filename, 'rb') as f:\n-                while True:\n-                    data = f.read(4 * 1014 * 1024)\n-                    if not data:\n-                        break\n-                    m.update(data)\n-                    sha.update(data)\n-        except IOError:\n-            return None\n-        return m.hexdigest().strip() + ' ' + sha.hexdigest().strip()\n-\n-    # write to fname.md5\n-    if md5_hexdigest:\n-        md5_sha384 = _checksum_file(fname)\n-        assert(md5_hexdigest in md5_sha384)\n-        return _save_md5(fname, md5_sha384)\n-\n-    # try to read fname.md5 file\n-    digest = _read_md5(fname)\n-    if digest and len(digest.split(' ')) == 2:\n-        return digest\n-\n-    # calculate and save fname.md5\n-    digest = _checksum_file(fname)\n-    if not digest:\n-        return None\n-\n-    _save_md5(fname, digest)\n-    return digest\n-\n-\n-def base64md5str(val):\n-    if not val:\n-        return None\n-    try:\n-        return binascii.hexlify(base64.b64decode(val))\n-    except TypeError:\n-        return None\n-\n-\n-def read_presets(filename):\n-    with open(filename, 'r') as f:\n-        _presets = yaml.load(f, yaml.Loader)\n-    return _presets\n-\n-\n-def read_json(filename):\n-    content=[]\n-    with open(filename) as f:\n-        for line in f:\n-            rec = json.loads(line)\n-            content.append(rec)\n-    return content\n-\n-\n-def read_xml(filename):\n-    root = etree.parse(filename).getroot()\n-    i = 0\n-    refs, extras = {}, {}\n-    assert(root.tag==\"enterpriseLibrary\")\n-\n-\n-    variant = root.find('application').find('parent').find('item').find(\n-                    'variants').find('variant')\n-    start = variant.find('properties')\n-\n-    for l in start.findall('property'):\n-        if l.find('value').text:\n-            refs[l.attrib['name']] = l.find('value').text\n-    for c in start.findall('propertyGroup'):\n-        assert(c.attrib['name'] == 'customMetadata')\n-        for row in c.findall('propertyRow'):\n-            r = {}\n-            for l in row.findall('property'):\n-                r[l.attrib['name']] = l.find('value').text\n-            if r['metadata']:\n-                extras.update(r)\n-\n-    return refs, extras\n-\n-def _strip_newline(s):\n-    return s.replace('\\n', ' ').replace('\\r', '')\n-\n-def desc(k,v):\n-    if 'English' in k:\n-        sub_key='en'\n-    elif 'French' in k:\n-        sub_key='fr'\n-    else:\n-        raise Exception('no such desc')\n-\n-    # hack\n-    vs = v.split(' | ')\n-    if len(vs) == 2:\n-        return 'notes_translated', {'en':_strip_newline(vs[0]), 'fr':_strip_newline(vs[1])}\n-    else:\n-        return 'notes_translated', {sub_key:v}\n-\n-\n-def title(k,v):\n-    if 'English' in k:\n-        sub_key='en'\n-    elif 'French' in k:\n-        sub_key='fr'\n-    else:\n-        raise Exception('no such desc')\n-\n-    # guess: remove file extension and underscores\n-    titles = v.split('.')\n-    if len(titles[-1]) <=4:\n-        v = '.'.join(titles[:-1])\n-    v = v.replace('_', ' ')\n-\n-    # hack\n-    vs = v.split(' | ')\n-    if len(vs) == 2:\n-        return 'title_translated', {'en':_strip_newline(vs[0]), 'fr':_strip_newline(vs[1])}\n-    else:\n-        return 'title_translated', {sub_key:v}\n-\n-\n-def keywords(k,v):\n-    # first try presets, another hack\n-    name, res = _get_choices_value(canada_subject, v)\n-\n-    if res:\n-        return name, res\n-\n-    #now try as keywords\n-    vs = v.split(' | ')\n-    def _to_list(val):\n-        r = val.replace('\\n',',').replace(u'\\u00a0',',').split(',')\n-        r = [x.strip() for x in r]\n-        return [x for x in r if len(x)>=2]\n-    if len(vs) == 2:\n-        return 'keywords', {'en':_to_list(vs[0]), 'fr':_to_list(vs[1])}\n-    else:\n-        return 'keywords', {'en':_to_list(v)}\n-\n-organizations = {}\n-\n-\n-def owner_org(k,v):\n-    v = v.split('|')[0].strip()\n-    if v =='Public Works and Government Services Canada':\n-        v='Public Services and Procurement Canada'\n-    if v =='Environment Canada':\n-        v='Environment and Climate Change Canada'\n-    id = organizations.get(v, None)\n-    if not id:\n-        raise Exception('No such organiztion ' + v)\n-    return 'owner_org', id\n-\n-\n-def _get_choices_value(preset, val):\n-    name = preset['field_name']\n-    res = []\n-    val = val.lower()\n-    for item in preset['choices']:\n-        for label in item['label'].values():\n-            if label.lower() in val:\n-                res.append(item['value'])\n-                break\n-    return name, list(set(res))\n-\n-\n-def _get_single_choices_value(preset, val):\n-    name = preset['field_name']\n-    res = []\n-    val = val.lower().split(' | ')[0]\n-    for item in preset['choices']:\n-        for label in item['label'].values():\n-            if val in label.lower():\n-                res.append(item['value'])\n-                break\n-    if not res:\n-        print('not found', name, val)\n-        raise Exception(name)\n-\n-    return name, res[0]\n-\n-xml2obd=OrderedDict([\n-    ('Description French', desc),\n-    ('Description English', desc),\n-    ('Title French', title),\n-    ('Title English', title),\n-    ('Audience', lambda k,v: _get_choices_value(audience, v),),\n-#    ('Subject', lambda k,v: _get_choices_value(canada_subject, v),),\n-    ('Subject', keywords),\n-    ('Publisher Organization', owner_org),\n-\n-    ('Date Created', lambda k, v: ('metadata_created',v)),\n-    ('Date Modified', lambda k, v: ('metadata_modified',v)),\n-    ('Classification Code', lambda k, v: ('doc_classification_code',v)),\n-    ('Creator', lambda k, v: ('author',v)),\n-    ('retentionTrigger', None),\n-    ('retentionPeriod', None),\n-    ('Status Date', None),\n-])\n-\n-xml2resource={\n-    'Resource Type': lambda k,v: _get_single_choices_value(canada_resource_type, v),\n-    'Record Date': lambda k,v: ('created', v),\n-    'Unique ID': lambda k,v: ('unique_identifier', v),\n-    'Language': lambda k,v: _get_choices_value(canada_resource_language, v),\n-}\n-\n-\n-def xml_obd_mapping(dict_data, map_dict):\n-    res = {}\n-    for k,f in map_dict.items():\n-        if k in dict_data:\n-            v = dict_data[k]\n-            dict_data.pop(k)\n-            if not f:\n-                continue\n-            new_key, new_val = f(k,v)\n-            val = res.get(new_key, None)\n-            if isinstance(val,dict):\n-                val.update(new_val)\n-            elif isinstance(val, list):\n-                for _val in new_val:\n-                    val.append(_val)\n-            elif not new_val:\n-                pass\n-            else:\n-                res[new_key] = new_val\n-    return res\n-\n-\n-def get_preset(fields, name):\n-    for it in fields:\n-        if it.get('preset', None)==name:\n-            return it\n-    return None\n-\n-\n-class RemoteStorage():\n-    def __init__(self, user, key, container):\n-        self.bs = BlockBlobService(account_name=user, account_key=key)\n-        self.container = container\n-\n-    def get_obj(self, blob_name):\n-        try:\n-            return self.bs.get_blob_properties(self.container, blob_name)\n-        except AzureMissingResourceHttpError:\n-            return None\n-\n-    def download_blob(self, blob_name, localf):\n-        self.bs.get_blob_to_path(self.container, blob_name, localf)\n-\n-    def del_blob(self, blob_name):\n-        try:\n-            self.bs.delete_blob(self.container, blob_name)\n-        except:\n-            pass\n-\n-    def upload(self, blob_name, localf):\n-        self.bs.create_blob_from_path(\n-                self.container, blob_name, localf,\n-                content_settings=ContentSettings(content_type='text/xml'))\n-\n-    def new_docs(self):\n-        res = []\n-        for blob in self.bs.list_blobs(self.container):\n-            res.append(blob.name)\n-        return res\n-\n-\n-def read_conf(filename):\n-    config = configparser.ConfigParser()\n-    config.read(filename)\n-    src_str = config.get('storage', 'source')\n-    dest_str = config.get('storage', 'dest')\n-    import re\n-    r = re.match(r'^azure://(.*):(.*)@(.*)', src_str)\n-    r2 = re.match(r'^azure://(.*):(.*)@(.*)', dest_str)\n-    return (r.group(1), r.group(2), r.group(3),\n-            r2.group(1), r2.group(2), r2.group(3),)\n-\n-\n-def _compare_pkgs(rec, pkg):\n-    for k,v in rec.items():\n-        if k in ['date_published', 'metadata_modified', 'metadata_created', 'resources']:\n-            continue\n-        if v != pkg.get(k, None):\n-            return False\n-    for k,v in rec['resources'][0].items():\n-        if k in ['created']:\n-            if v in pkg['resources'][0].get(k, None):\n-                continue\n-        if k in ['url']:\n-            if v.split('/')[-1].lower() == pkg['resources'][0].get(k, None).split('/')[-1]:\n-                continue\n-        if v != pkg['resources'][0].get(k, None):\n-            return False\n-    return True\n-\n-\n-def upload_resources(remote_site, api_key, jsonfile, resource_directory):\n-    #remote site\n-    site = ckanapi.RemoteCKAN(\n-        remote_site,\n-        apikey=api_key,\n-        user_agent='ckanapi-uploader/1.0')\n-\n-    #load dataset and resource file to cloud\n-    ds = read_json(jsonfile)\n-    for rec in ds:\n-        retries = 5\n-        while True:\n-            try:\n-                target_pkg = site.action.package_show(id=rec['id'])\n-            except (NotFound, NotAuthorized):\n-                target_pkg = None\n-            except (CKANAPIError, urllib2.URLError) as e:\n-                retries -= 1\n-                if retries > 0:\n-                    time.sleep(1)\n-                    continue\n-                sys.stdout.write(\n-                    json.dumps([\n-                        rec['id'],\n-                        'target error',\n-                        str(e.args)\n-                    ]) + '\\n'\n-                )\n-                #raise\n-            break\n-        if retries <=0:\n-                continue\n-\n-        retries = 5\n-        while True:\n-            try:\n-                #site.action.package_delete(id=rec['id'])\n-                #return\n-                #site.action.package_create(**rec)\n-                if target_pkg:\n-                    skip = _compare_pkgs(rec, target_pkg)\n-                    if not skip:\n-                        site.action.package_update(**rec)\n-                    else:\n-                        print(\"\\tskip package update for \" + rec['resources'][0]['url'].split('/')[-1])\n-                else:\n-                    site.action.package_create(**rec)\n-            except (ckan.logic.NotFound, ckanapi.errors.CKANAPIError,\n-                    ckan.logic.ValidationError):\n-                retries -= 1\n-                if retries > 0:\n-                    time.sleep(1)\n-                    continue\n-                traceback.print_exc()\n-                print(rec)\n-            break\n-        if retries <=0:\n-                continue\n-        res = rec['resources'][0]\n-        source = resource_directory + '/' + res['url'].split('/')[-1]\n-        fname='/'.join(['resources', res['id'], res['url'].split('/')[-1]])\n-\n-        skip = False\n-        digests = md5str(source)\n-        if not digests:\n-            raise Exception('not found ' + source)\n-        digests = digests.split(' ')\n-        srcmd5 = digests[0]\n-        md5 = binascii.unhexlify(srcmd5)\n-        sha384 = binascii.unhexlify(digests[1])\n-        if target_pkg:\n-            def _get_md5_hash(s):\n-                if not s:\n-                    return None\n-                for s in s.split(' '):\n-                    if s[:4] == 'md5-':\n-                        return base64md5str(s[4:])\n-                return None\n-            for res in target_pkg['resources']:\n-                rmd5 = _get_md5_hash(res.get('hash', None))\n-                if not rmd5:\n-                    continue\n-                if srcmd5 in rmd5:\n-                    skip = True\n-                    break\n-        if skip:\n-            print('\\tsame remote file exists ' + os.path.basename(source))\n-        else:\n-            with open(source) as f:\n-                try:\n-                    rc = site.action.resource_patch(\n-                        id=res['id'],\n-                        hash='md5-%s sha384-%s' %(\n-                            base64.b64encode(md5),base64.b64encode(sha384)),\n-                        upload=(os.path.basename(source), f))\n-                except ckanapi.errors.CKANAPIError:\n-                    traceback.print_exc()\n-                    print(rec)\n-                    print(\"failed upload \" + os.path.basename(source))\n-                    continue\n-            print('\\tresource uploaded ' + os.path.basename(source))\n-\n-        print(\"updated for \" + os.path.basename(source))\n-\n-\n-def convert(refs, filename):\n-    ds = xml_obd_mapping(refs, xml2obd)\n-    ds['collection'] = 'publication'\n-    release_date = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n-    if not ds.get('date_published'):\n-        ds['date_published'] = release_date\n-    ds['id'] = str(uuid.uuid5(uuid.NAMESPACE_URL,\n-                   'http://obd.open.canada.ca/' + filename))\n-    ds['state'] = 'active'\n-    ds['type'] = 'doc'\n-    ds['license_id'] = \"ca-ogl-lgo\"\n-    if not ds.get('owner_org', None):\n-        raise('no owner org ' + filename)\n-        #ds['owner_org'] = \"A0F0FCFC-BC3B-4696-8B6D-E7E411D55BAC\"\n-    if not ds.get('keywords', None):\n-        ds['keywords']={}\n-    if not ds.get('subject', None):\n-        ds['subject'] = [\"information_and_communications\"]\n-    if not ds['title_translated'].get('fr', None):\n-        ds['title_translated']['fr'] = ds['title_translated']['en']\n-    if not ds['title_translated'].get('en', None):\n-        ds['title_translated']['en'] = ds['title_translated']['fr']\n-\n-    res = xml_obd_mapping(refs, xml2resource)\n-    res_name = filename[:-4]\n-    res['name_translated']={'en':res_name, 'fr':res_name}\n-    res['id'] = str(uuid.uuid5(uuid.NAMESPACE_URL,\n-                    'http://obd.open.canada.ca/resources/' + filename))\n-    res['url'] = 'http://obd.open.canada.ca/' + filename[:-4]\n-    res['format'] = filename.split('.')[-2].upper()\n-    if res['format'] not in canada_resource_format:\n-        res['format'] = 'other'\n-    if not res.get('language'):\n-        res['language'] = ['en']\n-    if not res.get('resource_type'):\n-        res['resource_type']='guide'\n-    ds['resources'] = [res]\n-    print(json.dumps(ds))\n-\n-\n-def pull_docs(conf_file, local_dir):\n-    ''' Iterate src container for *.xml *(doc) and download/(remove after) them to local\n-        directory. Upload *.xml to dest container for history tracking.\n-        Rename on uploading if name conflicts (name, name-timestring).\n-    '''\n-    src_user, src_key, src_container, dest_user, dest_key, dest_container = read_conf(conf_file)\n-    src = RemoteStorage(src_user, src_key, src_container)\n-\n-    all_docs = src.new_docs()\n-    print('total source files ', len(all_docs))\n-    xmls = [x for x in all_docs if x[-4:]=='.xml' and x[:-4] in all_docs and\n-            x[:-4] + '.ind' in all_docs]\n-    docs = [x[:-4] for x in xmls]\n-    inds = [x + '.ind' for x in docs]\n-    files = xmls + docs\n-    files_info= {}\n-\n-    print('Scanning...')\n-    for fname in files:\n-        f_basename = fname.split('/')[-1]\n-        obj = src.get_obj(fname)\n-        ts = time.mktime(obj.properties.last_modified.timetuple())\n-        details = files_info.get(f_basename, None)\n-        if (not details) or details['ts'] < ts:\n-            objmd5 = base64md5str(obj.properties.content_settings.content_md5)\n-            files_info[f_basename] = {'ts':ts,\n-                                      'fname':fname,\n-                                      'objmd5':objmd5}\n-        else:\n-            print('\\t same file name, but older %s', fname)\n-\n-    for f_basename, details in files_info.items():\n-        fname = details['fname']\n-        objmd5 = details['objmd5']\n-        print('Downloading %s', fname)\n-\n-        localname = local_dir + '/' + f_basename\n-        if os.path.isfile(localname) and objmd5 in md5str(localname):\n-            print('\\tsame local file exists')\n-        else:\n-            print('\\t' + fname + ' --> ' + localname)\n-            src.download_blob(fname, localname)\n-            md5str(localname, objmd5)\n-\n-    dest = RemoteStorage(dest_user, dest_key, dest_container)\n-    for fname in xmls:\n-        filename = fname.split('/')[-1]\n-        localname = local_dir + '/' + filename\n-        print('Uploading %s', filename)\n-        remote_name = 'archived-doc-xmls/' + filename\n-        obj = dest.get_obj(remote_name)\n-        if obj:\n-           objmd5 = base64md5str(obj.properties.content_settings.content_md5)\n-           if objmd5 in md5str(localname):\n-               print('\\tsame remote file exists')\n-               continue\n-        dest.upload(remote_name,\n-                    local_dir + '/' + filename)\n-\n-    files += inds\n-    for fname in files:\n-        pass  # src.delete_blob(fname)\n-\n-def read_csv(filename):\n-    content=[]\n-    with open(filename) as f:\n-        reader = csv.reader(f)\n-        for x in reader:\n-            if x:\n-                content.append(x[0].strip())\n-    return content[1:]\n-\n-def delete_docs(csv_file, file_dir, site_url, api_key):\n-    ids = read_csv(csv_file)\n-    print(len(ids), ids[:5])\n-    files = glob.glob(file_dir + '/*.xml')\n-    all_files = []\n-    for filename in files:\n-        fbasename = os.path.basename(filename)\n-        all_files.append([fbasename, filename])\n-    to_del = []\n-    for id in ids:\n-        s = ''.join(['-', id, '.'])\n-        for [fbase, full] in all_files:\n-            if s in fbase:\n-                to_del.append([fbase, full])\n-    print(len(to_del), to_del[:5])\n-    assert( len(to_del)==len(ids))\n-\n-    datasets = []\n-    for [fbase, filename] in to_del:\n-        id = str(uuid.uuid5(uuid.NAMESPACE_URL,\n-                   'http://obd.open.canada.ca/' + fbase))\n-        datasets.append(id)\n-    print(datasets[:5])\n-\n-    #remote site\n-    site = ckanapi.RemoteCKAN(\n-        site_url,\n-        apikey=api_key,\n-        user_agent='ckanapi-uploader/1.0')\n-    for id in datasets:\n-        try:\n-            site.action.package_delete(id=id)\n-        except ckan.logic.NotAuthorized as e:\n-            raise Exception('API key error')\n-        except:\n-            print(id, 'delete failed')\n-        else:\n-            print(id, 'deleted')\n-\n-def duplicate_docs(file_dir, site_url):\n-    raw_files = glob.glob(file_dir + '/*.md5')\n-    files = []\n-    for filename in raw_files:\n-        fbasename = os.path.basename(filename)\n-        fname = fbasename[:-4]\n-        if fname[-4:] == '.xml':\n-            continue\n-        with open(filename) as f:\n-            md5 = f.readline().split(' ')[0].strip()\n-        files.append([md5, fname])\n-    md5dict = defaultdict(list)\n-    for [md5, fname] in files:\n-        md5dict[md5].append(fname)\n-    #remote site\n-    site = ckanapi.RemoteCKAN(\n-        site_url,\n-        apikey=None,\n-        user_agent='ckanapi-uploader/1.0')\n-\n-    for md5, flist in md5dict.items():\n-        if len(flist) > 1:\n-            ids = [ str(uuid.uuid5(uuid.NAMESPACE_URL,\n-                   'http://obd.open.canada.ca/' + fbase + '.xml')) for fbase in flist]\n-            out = [str(uuid.uuid5(uuid.NAMESPACE_URL,\n-                   'http://obd.open.canada.ca/' + fbase + '.xml'))+':'+fbase for fbase in flist]\n-            count = 0\n-            for id in ids:\n-                try:\n-                    target_pkg = site.action.package_show(id=id)\n-                    count += 1\n-                except (NotFound, NotAuthorized):\n-                    target_pkg = None\n-                except (CKANAPIError, urllib2.URLError) as e:\n-                    sys.stdout.write(\n-                        json.dumps([\n-                            rec['id'],\n-                            'target error',\n-                            str(e.args)\n-                        ]) + '\\n'\n-                    )\n-                    raise\n-            if count > 1:\n-                print(out)\n-\n-def de_dup2(site_url):\n-    count =0\n-    start = 0\n-    rows = 50\n-    #remote site\n-    site = ckanapi.RemoteCKAN(\n-        site_url,\n-        apikey=None,\n-        user_agent='ckanapi-uploader/1.0')\n-    records = defaultdict(list)\n-    while True:\n-        # a list with a hard upper limit 1000, need to loop\n-        p_records = site.action.package_search(q='',\n-                use_default_schema=True, start=start, rows=rows)\n-        if count == 0:\n-            count =  p_records['count']\n-        for v in p_records['results']:\n-            res = v['resources'][0]\n-            name = json.loads(res['name_translated'])['en']\n-            url = res['url']\n-            md5 = res['hash']\n-            records[md5].append([name, url])\n-        start += len( p_records['results'] )\n-        if start >= count:\n-            break\n-    print('Total records %s', count)\n-\n-    for k, vl in records.items():\n-        if len(vl) <=1: continue\n-        print(vl)\n-\n-def main():\n-    sys.exit(\"This script has been deprecated. Use ckanapi load instead.\")\n-\n-    global audience, canada_resource_type,canada_subject\n-    global canada_resource_language, organizations\n-    global canada_resource_format\n-\n-    # upload the generated json to remote site and upload the file\n-    if sys.argv[1] =='upload':\n-        return upload_resources(*sys.argv[2:])\n-    elif sys.argv[1] =='pull':\n-        return pull_docs(*sys.argv[2:])\n-    elif sys.argv[1] == 'delete':\n-        return delete_docs(*sys.argv[2:])\n-    elif sys.argv[1] == 'de-dup':\n-        if len(sys.argv[2:])==1:\n-            return de_dup2(*sys.argv[2:])\n-        else:\n-            return duplicate_docs(*sys.argv[2:])\n-\n-    site = ckanapi.RemoteCKAN(sys.argv[2])\n-\n-    doc = site.action.scheming_dataset_schema_show(type='doc')\n-    orgs = site.action.organization_list(all_fields=True)\n-    for rec in orgs:\n-        title = rec['title'].split('|')[0].strip()\n-        organizations[title] = rec['id']\n-    assert(len(organizations)>100)\n-\n-    fields = doc['dataset_fields']\n-    res_fields = doc['resource_fields']\n-\n-    audience = get_preset(fields, 'canada_audience')\n-    canada_resource_type = get_preset(res_fields, 'canada_resource_type')\n-    canada_subject = get_preset(fields, 'canada_subject')\n-    canada_resource_language = get_preset(res_fields, 'canada_resource_language')\n-    canada_resource_format = get_preset(res_fields, 'canada_resource_format')\n-\n-    assert(audience and canada_resource_type and canada_resource_language\n-           and canada_subject and canada_resource_format)\n-    canada_resource_format = [x['value'] for x in canada_resource_format['choices']]\n-\n-    filename = sys.argv[1]\n-    files = []\n-    if os.path.isfile(filename):\n-        files.append(filename)\n-    elif os.path.isdir(filename):\n-        files = glob.glob(filename + '/*.xml')\n-    assert(files)\n-\n-    if len(sys.argv) >=4: # only update the files in this list\n-        with open(sys.argv[3]) as f:\n-            flist = f.read()\n-        flist=flist.split()\n-        files = []\n-        assert(os.path.isdir(sys.argv[1]))\n-        for fname in flist:\n-            if fname[-4:] == '.md5':\n-                continue\n-            fname = os.path.basename(fname)\n-            fname = sys.argv[1] + '/' + fname\n-            if fname[-4:] != '.xml':\n-                fname += '.xml'\n-                if fname in files:\n-                    continue\n-            files.append(fname)\n-\n-    for filename in files:\n-        refs, extras = read_xml(filename)\n-        convert(refs, os.path.basename(filename))\n-\n-if __name__=='__main__':\n-    main()"
                },
                {
                    "sha": "306183184f499638f7f16f9978472981fb15a67f",
                    "filename": "bin/jsonlerrors2csv.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 2,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fjsonlerrors2csv.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fjsonlerrors2csv.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fjsonlerrors2csv.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -9,8 +9,7 @@\n     infile = sys.argv[1]\n     outfile = sys.argv[2]\n     colnames = sys.argv[3]\n-\n-except:\n+except Exception:\n     sys.stderr.write('''Usage:\n     jsonlerrors2csv input.jsonl output.csv 'col1,col2,...'\n "
                },
                {
                    "sha": "055f57a97aab412f06de6962b386a36f7fea5d3b",
                    "filename": "bin/link_check.py",
                    "status": "modified",
                    "additions": 103,
                    "deletions": 87,
                    "changes": 190,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Flink_check.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Flink_check.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Flink_check.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -3,9 +3,7 @@\n import argparse\n import os\n import time\n-import datetime\n import sys\n-import logging\n import tempfile\n import gzip\n import json\n@@ -26,10 +24,11 @@\n import unicodecsv\n import codecs\n \n-proxy= os.environ['http_proxy']\n+proxy = os.environ['http_proxy']\n temp_db = '/tmp/od_linkcheker2.db'\n-USER_AGENT=\"open.canada.ca dataset link checker; abuse report open-ouvert@tbs-sct.gc.ca\"\n-URL_TIMEOUT=20\n+USER_AGENT = \"open.canada.ca dataset link checker; \"\\\n+             \"abuse report open-ouvert@tbs-sct.gc.ca\"\n+URL_TIMEOUT = 20\n \n ''' Check the resource links of datasets on open.canada.ca\n dataset http://open.canada.ca/data/en/dataset/c4c5c7f1-bfa6-4ff6-b4a0-c164cb2060f7\n@@ -70,33 +69,37 @@ def get_a_byte(response, *args, **kwargs):\n @asyncio.coroutine\n def test_urls(urls, results):\n     loop = asyncio.get_event_loop()\n-    futures =[]\n+    futures = []\n     with concurrent.futures.ThreadPoolExecutor(max_workers=50) as e:\n         for url in urls:\n-            if url[:6].lower() =='ftp://':\n-                future = loop.run_in_executor(e, test_ftp,url)\n+            if url[:6].lower() == 'ftp://':\n+                future = loop.run_in_executor(e, test_ftp, url)\n             else:\n-                future = loop.run_in_executor(e, partial(requests.get, headers={\"user-agent\":USER_AGENT},\n-                                              hooks={'response': get_a_byte}, verify=False,\n-                                              timeout=URL_TIMEOUT, stream=True), url)\n+                future = loop.run_in_executor(\n+                    e, partial(requests.get, headers={\"user-agent\": USER_AGENT},\n+                               hooks={'response': get_a_byte}, verify=False,\n+                               timeout=URL_TIMEOUT, stream=True),\n+                    url)\n             futures.append(future)\n     for future in futures:\n         try:\n             res = yield from future\n         except requests.exceptions.ProxyError:\n             print('proxy error', urls[futures.index(future)])\n             res = Exception()\n-        except (requests.exceptions.ReadTimeout, requests.packages.urllib3.exceptions.MaxRetryError,\n-                requests.exceptions.ConnectTimeout, requests.packages.urllib3.exceptions.ConnectTimeoutError,\n+        except (requests.exceptions.ReadTimeout,\n+                requests.packages.urllib3.exceptions.MaxRetryError,\n+                requests.exceptions.ConnectTimeout,\n+                requests.packages.urllib3.exceptions.ConnectTimeoutError,\n                 socket.timeout):\n             print('timeout', urls[futures.index(future)])\n             res = Exception()\n-        except (requests.exceptions.InvalidSchema, requests.exceptions.InvalidURL):\n+        except (requests.exceptions.InvalidSchema,\n+                requests.exceptions.InvalidURL):\n             print('invalidURL', urls[futures.index(future)])\n             res = Response()\n             res.status_code = 404\n-        except:\n-            import traceback\n+        except Exception:\n             traceback.print_exc()\n             res = Exception()\n         results.append(res)\n@@ -121,13 +124,14 @@ def __delete__(self):\n \n     def download(self):\n         if not self.file:\n-            # dataset http://open.canada.ca/data/en/dataset/c4c5c7f1-bfa6-4ff6-b4a0-c164cb2060f7\n-            url='http://open.canada.ca/static/od-do-canada.jl.gz'\n+            # dataset\n+            # /data/en/dataset/c4c5c7f1-bfa6-4ff6-b4a0-c164cb2060f7\n+            url = 'http://open.canada.ca/static/od-do-canada.jl.gz'\n             r = requests.get(url, stream=True)\n \n             f = tempfile.NamedTemporaryFile(delete=False)\n             for chunk in r.iter_content(1024 * 64):\n-                    f.write(chunk)\n+                f.write(chunk)\n             f.close()\n             self.download_file = f.name\n \n@@ -140,19 +144,18 @@ def download(self):\n                     if len(records) >= 50:\n                         yield (records)\n                         records = []\n-            if len(records) >0:\n+            if len(records) > 0:\n                 yield (records)\n         except GeneratorExit:\n             pass\n-        except:\n-            import traceback\n+        except Exception:\n             traceback.print_exc()\n             print('error reading downloaded file')\n \n     def test_links(self, new_url, urls):\n         links = []\n         results = []\n-        for k,v in new_url.items():\n+        for k, v in new_url.items():\n             links.append(k)\n         loop = asyncio.get_event_loop()\n         loop.run_until_complete(test_urls(links, results))\n@@ -161,20 +164,20 @@ def test_links(self, new_url, urls):\n             results = zip(links, results)\n             for url, response in results:\n                 if type(response) is Exception:\n-                    res={'timestamp': now,\n-                         'status': -1,\n-                         'resources': new_url[url]}\n+                    res = {'timestamp': now,\n+                           'status': -1,\n+                           'resources': new_url[url]}\n                 else:\n                     try:\n-                        res={'timestamp': now,\n-                             'status':response.status_code}\n+                        res = {'timestamp': now,\n+                               'status': response.status_code}\n                         if response.status_code != requests.codes.ok:\n                             res['resources'] = new_url[url]\n                             res['org'] = urls.get(url, None)\n                     except AttributeError:\n-                        res={'timestamp': now,\n-                             'status': -1,\n-                             'resources': new_url[url]}\n+                        res = {'timestamp': now,\n+                               'status': -1,\n+                               'resources': new_url[url]}\n \n                 txn.put(url.encode('utf-8'), json.dumps(res).encode('utf-8'))\n         if links:\n@@ -192,19 +195,23 @@ def get_resources(self):\n                     id = record['id']\n                     for res in record['resources']:\n                         if (not res['url_type']) and res.get('url'):\n-                            url= res['url']\n-                            details =txn.get(url.encode('utf-8'))\n+                            url = res['url']\n+                            details = txn.get(url.encode('utf-8'))\n                             if details:\n                                 details = json.loads(details.decode('utf-8'))\n-                                if self.quick and now - details.get('timestamp', 0) < 34 * 3600:  # short re-run test\n-                                    if  details['status'] == requests.codes.ok or (\n-                                        details['status'] == 404):\n+                                # short re-run test\n+                                if (\n+                                  self.quick and\n+                                  now - details.get('timestamp', 0) < 34 * 3600):\n+                                    if (\n+                                      details['status'] == requests.codes.ok or\n+                                      details['status'] == 404):\n                                         continue\n                             new_url[url].append('/'.join([id, res['id']]))\n                             if record.get('organization'):\n-                                urls[url]={'name': record['organization']['name'],\n-                                           'title': record['organization']['title']}\n-            if len(new_url) >=5000:\n+                                urls[url] = {'name': record['organization']['name'],\n+                                             'title': record['organization']['title']}\n+            if len(new_url) >= 5000:\n                 self.test_links(new_url, urls)\n                 new_url = defaultdict(list)\n                 urls = {}\n@@ -213,73 +220,83 @@ def get_resources(self):\n         print('total record count: ', count)\n \n     def dumpBrokenLink(self, csvfile):\n-        outf=open(csvfile, 'wb')\n+        outf = open(csvfile, 'wb')\n         outf.write(codecs.BOM_UTF8)\n         out = unicodecsv.writer(outf)\n-        #Header\n+        # Header\n         out.writerow([\n-                      'English URL / URL en anglais',\n-                      'French URL / URL en français',\n-                      'Metadata Record Portal Type / Type de portail de la record de métadonnées',\n-                      'Metadata Record Name English / Nom de la record de la métadonnées anglais',\n-                      'Metadata Record Name French / Nom de la record de la métadonnées français',\n-                      \"Department Name English / Nom du ministère en anglais\",\n-                      \"Department Name French / Nom du ministère en français\",\n-                      \"Resource Name English/ Nom de la resource en angalis\",\n-                      \"Resource Name French/ Nom de la resource en français\",\n-                      \"Broken Link / Lien brisé\",\n-                      \"Status / Statut\",\n-                    ])\n+            'English URL / URL en anglais',\n+            'French URL / URL en français',\n+            'Metadata Record Portal Type / '\n+            'Type de portail de la record de métadonnées',\n+            'Metadata Record Name English / '\n+            'Nom de la record de la métadonnées anglais',\n+            'Metadata Record Name French / '\n+            'Nom de la record de la métadonnées français',\n+            \"Department Name English / Nom du ministère en anglais\",\n+            \"Department Name French / Nom du ministère en français\",\n+            \"Resource Name English/ Nom de la resource en angalis\",\n+            \"Resource Name French/ Nom de la resource en français\",\n+            \"Broken Link / Lien brisé\",\n+            \"Status / Statut\",\n+        ])\n         data = {}\n         with self.env.begin() as txn:\n             for url, value in txn.cursor():\n                 details = json.loads(value.decode('utf-8'))\n                 if details['status'] != requests.codes.ok:\n                     for res_id in details['resources']:\n-                        data[res_id] = {'status':details['status']}\n+                        data[res_id] = {'status': details['status']}\n \n         for records in self.download():\n             for record in records:\n                 id = record['id']\n                 for res in record['resources']:\n-                    if (not res['url_type']) and res.get('url'):\n-                        #print(res)\n-                        url= res['url']\n+                    if not res['url_type'] and res.get('url'):\n+                        url = res['url']\n                         full_id = '/'.join([id, res['id']])\n                         detail = data.get(full_id, None)\n                         if not detail:\n                             continue\n                         time_str = res.get('last_modified')\n                         if not time_str:\n                             time_str = res.get('created')\n-                        try:\n-                            timestamp = datetime.datetime.strptime(time_str, \"%Y-%m-%dT%H:%M:%S.%f\")\n-                        except:\n-                            timestamp = None\n                         detail.update({\n-                                       'url_en':'/'.join(['http://open.canada.ca/data/en/dataset',id,'resource',res['id']]),\n-                                       'url_fr':'/'.join(['http://open.canada.ca/data/fr/dataset',id,'resource',res['id']]),\n-                                       'portal_type': record['type'],  # record['collection'],\n-                                       'record_name_en': record['title_translated']['en'],\n-                                       'record_name_fr': record['title_translated']['fr'],\n-                                       'org_name_en': record['organization']['title'].split('|')[0],\n-                                       'org_name_fr': record['organization']['title'].split('|')[-1],\n-                                       'name_en': res['name_translated']['en'],\n-                                       'name_fr': res['name_translated']['fr'],\n-                                       'link': url,\n-                                     })\n-\n-        #write to csv\n+                            'url_en': '/'.join(\n+                                ['http://open.canada.ca/data/en/dataset',\n+                                 id,\n+                                 'resource',\n+                                 res['id']]),\n+                            'url_fr': '/'.join(\n+                                ['http://open.canada.ca/data/fr/dataset',\n+                                 id,\n+                                 'resource',\n+                                 res['id']]),\n+                            'portal_type': record['type'],\n+                            'record_name_en': record['title_translated']['en'],\n+                            'record_name_fr': record['title_translated']['fr'],\n+                            'org_name_en':\n+                                record['organization']['title'].split('|')[0],\n+                            'org_name_fr':\n+                                record['organization']['title'].split('|')[-1],\n+                            'name_en': res['name_translated']['en'],\n+                            'name_fr': res['name_translated']['fr'],\n+                            'link': url})\n+\n+        # write to csv\n         count, count2 = 0, 0\n-        portal_type_dict = {'dataset': \"Open Data / Données ouvertes\",\n-                            'info': \"Open Information / Information ouverte\",\n-                            }\n+        portal_type_dict = {\n+            'dataset': \"Open Data / Données ouvertes\",\n+            'info': \"Open Information / Information ouverte\",\n+        }\n         for id, res in data.items():\n-            status = res['status'] if res['status']!= -1 else 'timeout / temps libre'\n+            status = res['status'] if \\\n+                res['status'] != -1 else 'timeout / temps libre'\n             portal_type = portal_type_dict.get(res['portal_type'], None)\n-            line=[res['url_en'], res['url_fr'], portal_type, res['record_name_en'], res['record_name_fr'],\n-                  res['org_name_en'], res['org_name_fr'], res['name_en'], res['name_fr'],\n-                  res['link'], status]\n+            line = [res['url_en'], res['url_fr'],\n+                    portal_type, res['record_name_en'], res['record_name_fr'],\n+                    res['org_name_en'], res['org_name_fr'], res['name_en'],\n+                    res['name_fr'],  res['link'], status]\n             out.writerow(line)\n             count += 1\n             if status == 'timeout / temps libre':\n@@ -290,19 +307,18 @@ def dumpBrokenLink(self, csvfile):\n         print('total {0} dumped, timeout_count {1}'.format(count, count2))\n \n \n-\n def main():\n-    parser = argparse.ArgumentParser(description='''Search portal records broken resource link''')\n-    parser.add_argument(\"--file\", dest=\"file\", required=True, help='''site gz file contains links.\n-                         download from http://open.canada.ca/static/od-do-canada.jl.gz.''')\n+    parser = argparse.ArgumentParser(\n+        description='''Search portal records broken resource link''')\n+    parser.add_argument(\"--file\", dest=\"file\", required=True,\n+                        help='''site gz file contains links. download from\n+                                http://open.canada.ca/static/od-do-canada.jl.gz.''')\n     parser.add_argument(\"--quick\", dest=\"quick\", action='store_true',\n                         help=\"skip testing recent failed links\", default=False)\n     parser.add_argument(\"--dump\", dest=\"dump\", help=\"dump to csv file\")\n \n     options = parser.parse_args()\n \n-    user_agent = None\n-\n     site = Records(options.file, options.quick)\n     if options.dump:\n         site.dumpBrokenLink(options.dump)"
                },
                {
                    "sha": "247ff12f010cc92bed9f58b1dac5f6362a5229db",
                    "filename": "bin/migrate-org-to-scheming.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fmigrate-org-to-scheming.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fmigrate-org-to-scheming.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate-org-to-scheming.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -23,8 +23,8 @@ def main(argv):\n                 outfile = arg\n \n     except Exception:\n-        print('Usage: ckanapi dump organizations --all -c $CONFIG_INI | ' \\\n-              'python bin/migrate-org-to-scheming.py -o/--output ' \\\n+        print('Usage: ckanapi dump organizations --all -c $CONFIG_INI | '\n+              'python bin/migrate-org-to-scheming.py -o/--output '\n               'outfile.jsonl ')\n         sys.exit(1)\n "
                },
                {
                    "sha": "36d418c708c13966be3e2b61ffbda963394f34ce",
                    "filename": "bin/migrate/count_date_formats_hospitalityq.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 53,
                    "changes": 53,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fcount_date_formats_hospitalityq.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fcount_date_formats_hospitalityq.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fcount_date_formats_hospitalityq.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,53 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-from datetime import datetime\n-from collections import Counter\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-def date_format(d):\n-    \"handle some creative thinking about what constitutes a date\"\n-    d = d.replace('.', '-').strip()\n-    try:\n-        datetime.strptime(d, '%m/%d/%Y')\n-        datetime.strptime(d, '%d/%m/%Y')\n-    except ValueError:\n-        pass\n-    else:\n-        raise ValueError\n-\n-    for fmt in ['%Y-%m-%d', '%b-%d-%Y', '%m/%d/%Y', '%d/%m/%Y', '%B %d %Y', '%B %d %y']:\n-        try:\n-            datetime.strptime(d, fmt)\n-            return fmt\n-        except ValueError:\n-            pass\n-    from_excel(int(d))\n-    return 'excel'\n-\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-\n-org_counts = Counter()\n-\n-for line in in_csv:\n-    try:\n-        fmt = date_format(line['start_date'])\n-        org_counts[line['owner_org'], fmt] += 1\n-    except ValueError:\n-        pass\n-\n-    try:\n-        fmt = date_format(line['end_date'])\n-        org_counts[line['owner_org'], fmt] += 1\n-    except ValueError:\n-        pass\n-\n-for org, fmt in sorted(org_counts):\n-    print(org, fmt, org_counts[org, fmt])"
                },
                {
                    "sha": "df16743e43c06a3827c3f3acd0e25ec73d3b204e",
                    "filename": "bin/migrate/migrate_ati_2019_11.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 28,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_ati_2019_11.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_ati_2019_11.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_ati_2019_11.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,28 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-\n-FIELDNAMES = 'year,month,request_number,summary_en,summary_fr,disposition,pages,record_created,record_modified,user_modified,umd_number,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-sys.stdout.write(codecs.BOM_UTF8)\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "0ebb302de14888535bf1ffeb034c45f839a51aa3",
                    "filename": "bin/migrate/migrate_ati_2020_12.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 80,
                    "changes": 80,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_ati_2020_12.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_ati_2020_12.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_ati_2020_12.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,80 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-if 'report' in sys.argv:\n-    out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=['old_disposition', 'new_disposition'])\n-    seen = set()\n-else:\n-    out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=[\n-        u'year', u'month', u'request_number', u'summary_en', u'summary_fr',\n-        u'disposition', u'pages', u'comments_en', u'comments_fr', u'record_created',\n-        u'record_modified', u'user_modified', u'umd_number', u'owner_org', u'owner_org_title'], encoding='utf-8')\n-out_csv.writeheader()\n-\n-DISP_MATCH = [\n-    ('DA', ['all disclos', 'full', 'disclosed entirely', #'fully disclosed',\n-            'disclosed all', 'communication totale', #'full disclosure',\n-            'complete', 'publicly available', 'public information', 'all released',\n-            'disclosed / publi', #'full release',\n-            'disclosed / divulgu',\n-            'entirely disclosed', 'all dislcose', 'all disclso', 'all diclos',\n-            #'full/complet', 'full /plein',\n-            'all records disclosed',\n-            'all material public', 'all dislosed', 'documents in public',\n-            'divulgation compl', 'all records releas',\n-            'all dosclosed', 'divulgation totale']),\n-    ('DP', ['in part', 'partial', 'partly', 'partielle', 'en partie']),\n-    ('EX', ['exempt', 'exemption', 'exempted']),\n-    ('EC', ['excluded', 'exclusion', 'excluted', 'exclued', 'tous exclus']),\n-    ('NE', ['no record', 'not exist', 'not exsist', 'aucun document',\n-            'no such record', 'no record exist', 'no information',\n-            'no record located', 'non record exist', 'no related record',\n-            'no responsive record', 'inexistant']),\n-]\n-\n-skipped = 0\n-written = 0\n-skipped_new = 0\n-\n-for line in in_csv:\n-    try:\n-        line['month'] = '%d' % int(line['month'])\n-    except ValueError:\n-        pass\n-\n-    if not line['pages']:\n-        line['pages'] = '0'\n-\n-    disp = ' '.join(line['disposition'].lower().split())\n-    for d, search in DISP_MATCH:\n-        if any(s in disp for s in search):\n-            disp = d\n-            break\n-\n-    disp = disp.upper()\n-\n-    if 'report' in sys.argv:\n-        if disp != line['disposition'] and (disp, line['disposition']) not in seen:\n-            out_csv.writerow({\n-                    'old_disposition': line['disposition'],\n-                    'new_disposition': disp,\n-                }\n-            )\n-            seen.add((disp, line['disposition']))\n-        continue\n-\n-    line['disposition'] = disp\n-\n-    if not 'warehouse' in sys.argv and not line['user_modified']:\n-        line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-    line['comments_en'] = ''\n-    line['comments_fr'] = ''\n-    out_csv.writerow(line)"
                },
                {
                    "sha": "97454d57bd35b674ee13579aebc7a9ed9c5e5f2f",
                    "filename": "bin/migrate/migrate_ati_nil_2019_11.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 27,
                    "changes": 27,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_ati_nil_2019_11.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_ati_nil_2019_11.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_ati_nil_2019_11.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,27 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-\n-FIELDNAMES = 'year,month,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "c7c7d551c308e67e63eab6ec33152bd0d598d450",
                    "filename": "bin/migrate/migrate_cansim_export.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 132,
                    "changes": 132,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_cansim_export.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_cansim_export.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_cansim_export.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,132 +0,0 @@\n-#!/usr/bin/env python3\n-from datetime import datetime\n-import simplejson\n-import sys\n-\n-# Quick script to transform the CANSIM and Summary Table JSON data from CKAN 2.0 to 2.3\n-#  -  Replace subject UUID with the list\n-#  -  Add a portal_release_date field\n-#  -  Change ready_to_publish value from 1 to \"true\"\n-#  -  Change \"catalog_type\": \"Data | Donn\\u00e9es\" to \"type\": \"dataset\"\n-#\n-# The script reads from stdin and prints the modified stirng to stdout\n-\n-subject_replacements = {\n-    '86EB6B9F-344C-4C3E-982D-53164994516A': [\"arts_music_literature\"],\n-    '04D07B59-8D90-455C-9C84-7C1DF833473B': [\"agriculture\"],\n-    '3AC17C98-F356-4CC8-BAEB-886037E5C2EE': [\"economics_and_industry\"],\n-    '0AA56AD7-4CB3-4F7E-A741-9503231BC697': [\"education_and_training\"],\n-    '1BEB670E-8A73-4217-BCD2-6189F92053E2': [\"government_and_politics\"],\n-    '7D5846DC-74D0-415A-A853-318DCD89E731': [\"health_and_safety\"],\n-    '704B3281-511F-4FFB-85C7-D437892CECE2': [\"history_and_archaeology\"],\n-    '70B236D3-B7CE-443C-89C2-FEE7277F41C9': [\"information_and_communications\"],\n-    'F97F8830-B980-4A20-9B13-D572F1C094F0': [\"labour\"],\n-    '43BB3E2A-DA38-4005-9A57-8CBEB60F5FE0': [\"language_and_linguistics\"],\n-    'BBBDFE5C-9EC2-4393-A801-5866D176CF08': [\"law\"],\n-    '8ACBA39A-BD70-4113-98F8-8A8A11E095C1': [\"military\"],\n-    '9E3985CD-58EC-4DBA-AF73-5711AF379DE4': [\"nature_and_environment\"],\n-    'BEF4D60C-E2D1-46B9-96C0-B55902F076F1': [\"persons\"],\n-    'D1EFA3C1-FC9D-4E53-9BD4-90434626D213': [\"processes\"],\n-    '8C3A29E9-292D-47E3-8163-51FF8AB4E6D3': [\"society_and_culture\"],\n-    'FB6B00F0-6271-42D6-ACB7-FFE664843698': [\"science_and_technology\"],\n-    '949D4BF7-0AF0-49BD-8C76-AF0B82E72CC2': [\"transport\"]\n-}\n-\n-freq_dict={\n-    \"Annually | Annuel\": \"P1Y\",\n-    \"As Needed | Au besoin\": \"as_needed\",\n-    \"Quarterly | Trimestriel\": \"P3M\",\n-    \"Monthly | Mensuel\": \"P1M\",\n-}\n-\n-lang_dict={\n-    \"eng; CAN | fra; CAN\": ['en', 'fr'],\n-    \"fra; CAN\": ['fr'],\n-    \"eng; CAN\": ['en'],\n-}\n-\n-\n-def main():\n-    try:\n-        release_date = datetime.now().strftime(\"%Y-%m-%d\")\n-        try:\n-            for line in sys.stdin:\n-                rec = simplejson.loads(line)\n-                rec = rec.get('record', rec)\n-                rec[\"portal_release_date\"] = release_date\n-                if not rec.get('date_published'):\n-                    rec['date_published'] = release_date\n-\n-                rec[\"ready_to_publish\"] = \"true\"\n-                rec[\"imso_approval\"] = \"true\"\n-                if \"catalog_type\" in rec:\n-                    del rec[\"catalog_type\"]\n-                rec[\"type\"] = \"dataset\"\n-                if \"subject\" in rec:\n-                    if rec[\"subject\"] in subject_replacements:\n-                        rec[\"subject\"] = subject_replacements[rec[\"subject\"]]\n-                    else:\n-                        print('Invalid subject \"{0}\" for {1}'.format(rec[\"subject\"], rec[\"id\"]), file=sys.stderr)\n-                        continue\n-                rec['author_email'] = 'statcan.infostats-infostats.statcan@canada.ca'\n-                rec['maintainer_email'] = 'statcan.infostats-infostats.statcan@canada.ca'\n-\n-                url_en, url_fr = rec.pop('url', None), rec.pop('url_fra', None)\n-                rec['program_url'] = {'en':url_en, 'fr':url_fr}\n-\n-                notes_en = rec.pop('notes','')\n-                notes_fr = rec.pop('notes_fra','')\n-                rec['notes_translated'] = {'en':notes_en, 'fr':notes_fr}\n-\n-                data_series_name_en = rec.pop('data_series_name', '')\n-                data_series_name_fr = rec.pop('data_series_name_fra', '')\n-                rec['data_series_name'] = {'en':data_series_name_en, 'fr':data_series_name_en}\n-\n-                title_en = rec.get('title', '')\n-                title_fr = rec.pop('title_fra', '')\n-                rec['title_translated']={'en':title_en, 'fr':title_fr}\n-\n-                data_series_issue_identification = rec.pop(\"data_series_issue_identification\", \"\")\n-                data_series_issue_identification_fra = rec.pop(\"data_series_issue_identification_fra\", \"\")\n-                rec[\"data_series_issue_identification\"]={\n-                        'en':data_series_issue_identification,\n-                        'fr':data_series_issue_identification_fra\n-                }\n-\n-                freq = rec.pop('maintenance_and_update_frequency', '')\n-                if freq:\n-                    rec['frequency'] = freq_dict.get(freq, 'as_needed')\n-\n-                keywords = rec.pop('keywords','')\n-                keywords_fr = rec.pop('keywords_fra','')\n-                rec['keywords'] = {'en':[keywords], 'fr':[keywords_fr]}\n-\n-                rec['collection'] = 'primary'\n-                rec['jurisdiction'] = 'federal'\n-                rec['geographic_region']= []\n-                rec['restrictions'] = 'unrestricted'\n-\n-                for res in rec['resources']:\n-                    name = res.pop('name','')\n-                    name_fr = res.pop('name_fra','')\n-                    res['name_translated'] = {'en':name, 'fr':name_fr}\n-                    lang = res.pop('language', '')\n-                    res['language'] = lang_dict.get(lang, [])\n-\n-                    rformat = res.get('format', '')\n-                    if rformat =='HTML':\n-                        res['resource_type']='guide'\n-                    else:\n-                        res['resource_type']='dataset'\n-\n-                print(simplejson.dumps(rec))\n-\n-        except IOError:\n-            print('Error while reading line.', file=sys.stderr)\n-\n-    except KeyError:\n-        if 'warehouse' in sys.argv:\n-            sys.exit(85)\n-        else:\n-            raise\n-main()"
                },
                {
                    "sha": "d5b23d04e55d36beaf62d376ed3ae9abebfd5396",
                    "filename": "bin/migrate/migrate_consultations_2018_07.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 46,
                    "changes": 46,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_consultations_2018_07.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_consultations_2018_07.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_consultations_2018_07.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,46 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-\n-FIELDNAMES = 'registration_number,publishable,partner_departments,subjects,title_en,title_fr,description_en,description_fr,target_participants_and_audience,start_date,end_date,status,profile_page_en,profile_page_fr,report_available_online,report_link_en,report_link_fr,contact_email,policy_program_lead_email,remarks_en,remarks_fr,high_profile,rationale,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-sys.stdout.write(codecs.BOM_UTF8)\n-out_csv.writeheader()\n-\n-RATIONALE = {\n-    'B16': 'BG',\n-    'B17': 'BG',\n-    'B18': 'BG',\n-}\n-\n-try:\n-    for line in in_csv:\n-        del line['sector']\n-        del line['goals']\n-        del line['public_opinion_research']\n-        del line['public_opinion_research_standing_offer']\n-        line['start_date'] = line.pop('planned_start_date')\n-        line['end_date'] = line.pop('planned_end_date')\n-        line['profile_page_en'] = line.pop('further_information_en')\n-        line['profile_page_fr'] = line.pop('further_information_fr')\n-        line['partner_departments'] = ','.join(\n-            'D' + d for d in line['partner_departments'].split(',') if d)\n-        line['high_profile'] = 'N' if 'NH' in line['rationale'].split(',') else 'Y'\n-        line['rationale'] = ','.join(\n-            RATIONALE.get(r, r) for r in line['rationale'].split(',') if r != 'NH')\n-        line['subjects'] = ','.join(\n-            s for s in line['subjects'].split(',') if s != 'FP')\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "c1ff86b966ea165ca938306376d089b3863e3aff",
                    "filename": "bin/migrate/migrate_consultations_2019_04.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 31,
                    "changes": 31,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_consultations_2019_04.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_consultations_2019_04.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_consultations_2019_04.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,31 +0,0 @@\n-#!/usr/bin/env python3\n-\"\"\"\n-This is an \"update\" script not a migrate script because it only\n-outputs records to be updated in-place, not a complete migrated\n-copy of the data\n-\"\"\"\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=in_csv.fieldnames, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        val = line['subjects'].split(',')\n-        if 'AP' not in val:\n-            continue\n-        line['subjects'] = u','.join(\n-            'IP' if v == 'AP' else v for v in val)\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "5b7db27b0fca979fcb576d925bc52757e9367f91",
                    "filename": "bin/migrate/migrate_contracts_2016_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 26,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2016_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2016_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contracts_2016_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = 'unique_identifier,ref_number,vendor_name,contract_date,economic_object_code,description_en,description_fr,contract_period_start,delivery_date,contract_value,original_value,amendment_value,comments_en,comments_fr,additional_comments_en,additional_comments_fr,agreement_type_code,commodity_type_code,commodity_code,country_of_origin,solicitation_procedure_code,limited_tendering_reason_code,derogation_code,aboriginal_business,intellectual_property_code,potential_commercial_exploitation,former_public_servant,standing_offer,standing_offer_number,document_type_code,reporting_period,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-sys.stdout.write(codecs.BOM_UTF8)\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        if not line.get('unique_identifier') or line['unique_identifier'] == 'None':\n-            line['unique_identifier'] = line['ref_number']\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "4e66a65cbe901afdc2d353977f986f9ccd94305f",
                    "filename": "bin/migrate/migrate_contracts_2016_08.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 26,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2016_08.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2016_08.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contracts_2016_08.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = 'reference_number,procurement_id,vendor_name,contract_date,economic_object_code,description_en,description_fr,contract_period_start,delivery_date,contract_value,original_value,amendment_value,comments_en,comments_fr,additional_comments_en,additional_comments_fr,agreement_type_code,commodity_type_code,commodity_code,country_of_origin,solicitation_procedure_code,limited_tendering_reason_code,derogation_code,aboriginal_business,intellectual_property_code,potential_commercial_exploitation,former_public_servant,standing_offer,standing_offer_number,document_type_code,reporting_period,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-sys.stdout.write(codecs.BOM_UTF8)\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        line['procurement_id'] = line.pop('ref_number')\n-        line['reference_number'] = line.pop('unique_identifier')\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "8d26aab497c9da5a02a15afda1f2afdf66d0bab0",
                    "filename": "bin/migrate/migrate_contracts_2018_04.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 113,
                    "changes": 113,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2018_04.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2018_04.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contracts_2018_04.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,113 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-from datetime import datetime, timedelta\n-from decimal import Decimal, InvalidOperation\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-FIELDNAMES = 'reference_number,procurement_id,vendor_name,contract_date,economic_object_code,description_en,description_fr,contract_period_start,delivery_date,contract_value,original_value,amendment_value,comments_en,comments_fr,additional_comments_en,additional_comments_fr,agreement_type_code,commodity_type_code,commodity_code,country_of_origin,solicitation_procedure_code,limited_tendering_reason_code,exemption_code,aboriginal_business,intellectual_property_code,potential_commercial_exploitation,former_public_servant,standing_offer,standing_offer_number,document_type_code,reporting_period,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-sys.stdout.write(codecs.BOM_UTF8)\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-DATE_FORMATS = [\n-    '%Y-%m-%d',\n-    '%Y-%m-%d %H:%M:%S',\n-    '%b-%d-%Y',\n-    '%m-%d-%Y',\n-    '%y-%m-%d',\n-    '%d-%b-%y',\n-    '%Y/%m/%d',\n-    '%m/%d/%Y', # ambiguous 1\n-    '%d/%m/%Y', # ambiguous 2\n-    '%Y %m %d',\n-    ]\n-\n-def norm_date(d):\n-    \"handle some creative thinking about what constitutes a date\"\n-    d = d.replace('.', '-').strip()\n-    if ' [this contract' in d.lower():\n-        d = d.lower().split(' [this contract')[0]\n-    try:\n-        datetime.strptime(d, '%m/%d/%Y')\n-        datetime.strptime(d, '%d/%m/%Y')\n-    except ValueError:\n-        pass\n-    else:\n-        raise ValueError('ambiguous')\n-    for fmt in DATE_FORMATS:\n-        try:\n-            return datetime.strptime(d, fmt)\n-        except ValueError:\n-            pass\n-    return from_excel(int(d))\n-\n-\n-def norm_money(m):\n-    if len(m.split(',')) == 2:\n-        m = m.replace(',', '.')\n-    return str(Decimal(m))\n-\n-try:\n-    for line in in_csv:\n-        try:\n-            bad_field, bad_date = 'contract_date', line['contract_date']\n-            line['contract_date'] = norm_date(line['contract_date'])\n-            bad_field, bad_date = 'contract_period_start', line['contract_period_start']\n-            if bad_date:\n-                line['contract_period_start'] = norm_date(line['contract_period_start'])\n-            bad_field, bad_date = 'delivery_date', line['delivery_date']\n-            if bad_date:\n-                line['delivery_date'] = norm_date(line['delivery_date'])\n-        except ValueError:\n-            sys.stderr.write(u'{org} {pid} {field} \"{date}\"\\n'.format(\n-                field=bad_field,\n-                date=bad_date,\n-                pid=line['reference_number'],\n-                org=line['owner_org']).encode('utf-8'))\n-            continue\n-\n-        try:\n-            bad_field = 'contract_value'\n-            bad_value = line[bad_field]\n-            if bad_value:\n-                line[bad_field] = norm_money(bad_value)\n-            bad_field = 'original_value'\n-            bad_value = line[bad_field]\n-            if bad_value:\n-                line[bad_field] = norm_money(bad_value)\n-            bad_field = 'amendment_value'\n-            bad_value = line[bad_field]\n-            if bad_value:\n-                line[bad_field] = norm_money(bad_value)\n-        except InvalidOperation:\n-            sys.stderr.write(u'{org} {pid} {field} \"{value}\"\\n'.format(\n-                field=bad_field,\n-                value=bad_value,\n-                pid=line['reference_number'],\n-                org=line['owner_org']).encode('utf-8'))\n-            continue\n-\n-        line['reference_number'] = line['reference_number'].strip()\n-        if not line['reference_number']:\n-            sys.stderr.write(u'{org} {pid} reference_number \"\"\\n'.format(\n-                pid=line['reference_number'],\n-                org=line['owner_org']).encode('utf-8'))\n-            continue\n-\n-        line['exemption_code'] = line.pop('derogation_code')\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "dc2d8cba35040a317971a9813fa0f26afaf2b5dc",
                    "filename": "bin/migrate/migrate_contracts_2019_11.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 77,
                    "changes": 77,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2019_11.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2019_11.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contracts_2019_11.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,77 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-from datetime import datetime, timedelta\n-from decimal import Decimal, InvalidOperation\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-FIELDNAMES = 'reference_number,procurement_id,vendor_name,vendor_postal_code,buyer_name,contract_date,economic_object_code,description_en,description_fr,contract_period_start,delivery_date,contract_value,original_value,amendment_value,comments_en,comments_fr,additional_comments_en,additional_comments_fr,agreement_type_code,trade_agreement,land_claims,commodity_type,commodity_code,country_of_vendor,solicitation_procedure,limited_tendering_reason,trade_agreement_exceptions,aboriginal_business,aboriginal_business_incidental,intellectual_property,potential_commercial_exploitation,former_public_servant,contracting_entity,standing_offer_number,instrument_type,ministers_office,number_of_bids,article_6_exceptions,award_criteria,socioeconomic_indicator,reporting_period,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-sys.stdout.write(codecs.BOM_UTF8)\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-\n-for line in in_csv:\n-    line['vendor_postal_code'] = ''\n-    line['buyer_name'] = ''\n-    line['contract_value'] = line['contract_value'].replace('$','').replace(',','')\n-    line['original_value'] = line['original_value'].replace('$','').replace(',','')\n-    line['amendment_value'] = line['amendment_value'].replace('$','').replace(',','')\n-    line['trade_agreement'] = ''\n-    line['land_claims'] = ''\n-    line['commodity_type'] = line.pop('commodity_type_code')\n-    line['solicitation_procedure'] = line.pop('solicitation_procedure_code')\n-    line['limited_tendering_reason'] = line.pop('limited_tendering_reason_code')\n-    line['trade_agreement_exceptions'] = line.pop('exemption_code')\n-    line['aboriginal_business_incidental'] = line.pop('aboriginal_business')\n-    line['aboriginal_business'] = ''\n-    line['intellectual_property'] = line.pop('intellectual_property_code')\n-    line['contracting_entity'] = line.pop('standing_offer')\n-    line['instrument_type'] = line.pop('document_type_code')\n-    line['country_of_vendor'] = line.pop('country_of_origin')\n-    line['number_of_bids'] = ''\n-    line['article_6_exceptions'] = ''\n-    line['award_criteria'] = ''\n-    line['socioeconomic_indicator'] = ''\n-    line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-    # clean up some common mistakes\n-    if line['contracting_entity'] == 'PSPCSOSA':  # code changed in 2016!\n-        line['contracting_entity'] = 'PWSOSA'\n-    if line['contracting_entity'] in ('N/A', 'N', 'NUL'):\n-        line['contracting_entity'] = ''\n-    line['country_of_vendor'] = line['country_of_vendor'].upper().strip()\n-    if line['country_of_vendor'].startswith('CAN'):\n-        line['country_of_vendor'] = 'CA'\n-    if line['country_of_vendor'].startswith('USA'):\n-        line['country_of_vendor'] = 'US'\n-    line['instrument_type'] = line['instrument_type'].upper().strip()\n-    line['intellectual_property'] = line['intellectual_property'].upper().strip()\n-    if ':' in line['intellectual_property']:\n-        line['intellectual_property'] = line['intellectual_property'].split(':')[0]\n-    if line['intellectual_property'] == 'N/A':\n-        line['intellectual_property'] = 'NA'\n-    line['commodity_type'] = line['commodity_type'].upper().strip()\n-    if line['commodity_type'].startswith('GOOD'):\n-        line['commodity_type'] = 'G'\n-    if line['commodity_type'].startswith('SERVICE'):\n-        line['commodity_type'] = 'S'\n-    if ':' in line['commodity_type']:\n-        line['commodity_type'] = line['commodity_type'].split(':')[0]\n-    line['solicitation_procedure'] = line['solicitation_procedure'].upper().strip()\n-    if ':' in line['solicitation_procedure']:\n-        line['solicitation_procedure'] = line['solicitation_procedure'].split(':')[0]\n-    if line['solicitation_procedure'].startswith('NON-COMPET'):\n-        line['solicitation_procedure'] = 'TN'\n-    if ':' in line['limited_tendering_reason']:\n-        line['limited_tendering_reason'] = line['limited_tendering_reason'].split(':')[0]\n-\n-    out_csv.writerow(line)"
                },
                {
                    "sha": "d7da158fc6ea0f0200b730b4450d5d79da279c3d",
                    "filename": "bin/migrate/migrate_contracts_2022_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 32,
                    "changes": 32,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2022_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_2022_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contracts_2022_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,32 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import sys\n-import csv\n-import codecs\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-RENAME_COLUMNS = {\n-    'aboriginal_business': 'indigenous_business',\n-    'aboriginal_business_incidental': 'indigenous_business_excluding_psib',\n-}\n-\n-reader = csv.DictReader(sys.stdin)\n-writer = csv.DictWriter(\n-    sys.stdout,\n-    fieldnames=list(\n-        RENAME_COLUMNS.get(name, name) for name in reader.fieldnames),\n-)\n-writer.writeheader()\n-\n-try:\n-    for row in reader:\n-        for old, new in RENAME_COLUMNS.items():\n-            row[new] = row.pop(old)\n-        writer.writerow(row)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "163833f8779a97221419708e629be4c501fb7c92",
                    "filename": "bin/migrate/migrate_contracts_nil_2018_04.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 30,
                    "changes": 30,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_nil_2018_04.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_nil_2018_04.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contracts_nil_2018_04.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,30 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = ['reporting_period', 'owner_org', 'owner_org_title']\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-sys.stdout.write(codecs.BOM_UTF8)\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        year = int(line.pop('year'))\n-        quarter = line.pop('quarter')\n-        line['reporting_period'] = \"%04d-%04d-%s\" % (\n-            year,\n-            year + 1,\n-            quarter)\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "d14a142e602562a5dd060c8974c279254e2b243e",
                    "filename": "bin/migrate/migrate_contracts_nil_2019_11.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 19,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_nil_2019_11.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contracts_nil_2019_11.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contracts_nil_2019_11.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,19 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = 'reporting_period,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-sys.stdout.write(codecs.BOM_UTF8)\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-for line in in_csv:\n-    line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-    out_csv.writerow(line)"
                },
                {
                    "sha": "762fdb3631e8d4ba33b3a74fd8448ff2f5fa4e5f",
                    "filename": "bin/migrate/migrate_contractsa_2019_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 36,
                    "changes": 36,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contractsa_2019_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_contractsa_2019_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_contractsa_2019_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,36 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-from decimal import Decimal\n-\n-FIELDNAMES = 'year,contract_goods_number_of,contracts_goods_original_value,contracts_goods_amendment_value,contract_service_number_of,contracts_service_original_value,contracts_service_amendment_value,contract_construction_number_of,contracts_construction_original_value,contracts_construction_amendment_value,acquisition_card_transactions_number_of,acquisition_card_transactions_total_value,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-\n-def norm_money(m):\n-    if '.' not in m and m[-3:-2] == ',' and len(m.split(',')) == 2:\n-        m = m.replace(',', '.')\n-    return str(Decimal(m))\n-\n-\n-for line in in_csv:\n-    line['contract_goods_number_of'] = int(line['contract_goods_number_of'])\n-    line['contracts_goods_original_value'] = norm_money(line['contracts_goods_original_value'])\n-    line['contracts_goods_amendment_value'] = norm_money(line['contracts_goods_amendment_value'])\n-    line['contract_service_number_of'] = int(line['contract_service_number_of'])\n-    line['contracts_service_original_value'] = norm_money(line['contracts_service_original_value'])\n-    line['contracts_service_amendment_value'] = norm_money(line['contracts_service_amendment_value'])\n-    line['contract_construction_number_of'] = int(line['contract_construction_number_of'])\n-    line['contracts_construction_original_value'] = norm_money(line['contracts_construction_original_value'])\n-    line['contracts_construction_amendment_value'] = norm_money(line['contracts_construction_amendment_value'])\n-    line['acquisition_card_transactions_number_of'] = int(line['acquisition_card_transactions_number_of'])\n-    line['acquisition_card_transactions_total_value'] = norm_money(line['acquisition_card_transactions_total_value'])\n-    line['user_modified'] = '*'  # special \"we don't know\" value\n-    out_csv.writerow(line)"
                },
                {
                    "sha": "eade4a6da7fd720ae6123f693a21695888814893",
                    "filename": "bin/migrate/migrate_grants_2018_04.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 79,
                    "changes": 79,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_grants_2018_04.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_grants_2018_04.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_grants_2018_04.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,79 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-from datetime import datetime, timedelta\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-FIELDNAMES = 'ref_number,amendment_number,amendment_date,agreement_type,recipient_type,recipient_business_number,recipient_legal_name,recipient_operating_name,research_organization_name,recipient_country,recipient_province,recipient_city,recipient_postal_code,federal_riding_name_en,federal_riding_name_fr,federal_riding_number,prog_name_en,prog_name_fr,prog_purpose_en,prog_purpose_fr,agreement_title_en,agreement_title_fr,agreement_number,agreement_value,foreign_currency_type,foreign_currency_value,agreement_start_date,agreement_end_date,coverage,description_en,description_fr,naics_identifier,expected_results_en,expected_results_fr,additional_information_en,additional_information_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-sys.stdout.write(codecs.BOM_UTF8)\n-out_csv.writeheader()\n-\n-def norm_date(d):\n-    \"handle some creative thinking about what constitutes a date\"\n-    d = d.replace('.', '-').strip()\n-    for fmt in ['%Y-%m-%d', '%b-%d-%Y', '%m/%d/%Y']:\n-        try:\n-            return datetime.strptime(d, fmt)\n-        except ValueError:\n-            pass\n-    return from_excel(int(d))\n-\n-def en_bar_fr(en, fr):\n-    en = (en or fr).replace('|', '/').strip()\n-    fr = (fr or en).replace('|', '/').strip()\n-    if en == fr:\n-        return en\n-    return en + '|' + fr\n-\n-try:\n-    for line in in_csv:\n-        try:\n-            if norm_date(line['date']) >= datetime(2018, 4, 1):\n-                raise ValueError\n-            if not line['value'].strip():\n-                raise ValueError\n-        except ValueError:\n-            sys.stderr.write('{org} {pid} \"{date}\"\\n'.format(\n-                date=line['date'],\n-                pid=line['ref_number'],\n-                org=line['owner_org']))\n-            continue\n-\n-        line['agreement_type'] = line.pop('type').upper()\n-        line['recipient_legal_name'] = en_bar_fr(\n-            line.pop('recipient_name_en'),\n-            line.pop('recipient_name_fr'))\n-        line['recipient_city'] = en_bar_fr(\n-            line.pop('recipient_region_en'),\n-            line.pop('recipient_region_fr'))\n-        line['prog_purpose_en'] = line.pop('purpose_en')\n-        line['prog_purpose_fr'] = line.pop('purpose_fr')\n-        line['agreement_title_en'] = line.pop('proj_name_en')\n-        line['agreement_title_fr'] = line.pop('proj_name_fr')\n-        line['agreement_number'] = (\n-            line.pop('prog_number') + '\\t' + line.pop('proj_number')).strip()\n-        line['agreement_value'] = line.pop('value')\n-        line['agreement_start_date'] = norm_date(line.pop('date')).strftime('%Y-%m-%d')\n-        line['additional_information_en'] = (\n-            line.pop('comments_en') + '\\t' + line.pop('additional_info_en')).strip()\n-        line['additional_information_fr'] = (\n-            line.pop('comments_fr') + '\\t' + line.pop('additional_info_fr')).strip()\n-        line['amendment_number'] = '0'\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "9cab1d201ef6745b2b436626f45d9acd936dc0bd",
                    "filename": "bin/migrate/migrate_grants_2019_11.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_grants_2019_11.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_grants_2019_11.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_grants_2019_11.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,23 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import sys\n-import csv\n-import codecs\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-reader = csv.DictReader(sys.stdin)\n-writer = csv.DictWriter(sys.stdout, fieldnames=reader.fieldnames)\n-writer.writeheader()\n-\n-try:\n-    for row in reader:\n-        row['foreign_currency_value'] = row['foreign_currency_value'].replace('$', '').replace(',','')\n-        row['agreement_value'] = row['agreement_value'].replace('$', '').replace(',','')\n-        writer.writerow(row)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "ef8d75384cd3336bfec087b93f939fb9000a8fdf",
                    "filename": "bin/migrate/migrate_grants_nil_2018_04.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 31,
                    "changes": 31,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_grants_nil_2018_04.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_grants_nil_2018_04.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_grants_nil_2018_04.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,31 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-from datetime import datetime, timedelta\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-FIELDNAMES = 'fiscal_year,quarter,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        y = int(line.pop('year'))\n-        line['fiscal_year'] = str(y) + '-' + str(y+1)\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "5c1b70f5bef086e4b4c678b66482d3623550621d",
                    "filename": "bin/migrate/migrate_hospitalityq_2016_09.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 30,
                    "changes": 30,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_hospitalityq_2016_09.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_hospitalityq_2016_09.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_hospitalityq_2016_09.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,30 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = 'ref_number,name,title_en,title_fr,description_en,description_fr,start_date,end_date,employee_attendees,guest_attendees,location_en,location_fr,total,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-\n-sys.stdout.write(codecs.BOM_UTF8)\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        try:\n-            line['employee_attendees'] = str(int(line.pop('attendees')))\n-        except ValueError:\n-            line['employee_attendees'] = '0'\n-        line['guest_attendees'] = '0'\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "a945eccf2e2a242c13bf2688cfaf7ec7f58e7bcc",
                    "filename": "bin/migrate/migrate_hospitalityq_2019_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 118,
                    "changes": 118,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_hospitalityq_2019_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_hospitalityq_2019_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_hospitalityq_2019_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,118 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-from datetime import datetime\n-from decimal import Decimal\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-\n-FIELDNAMES = 'ref_number,disclosure_group,title_en,title_fr,name,description_en,description_fr,start_date,end_date,location_en,location_fr,vendor_en,vendor_fr,employee_attendees,guest_attendees,total,additional_comments_en,additional_comments_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-ORG_PREFER_FORMAT = {\n-    'jus': '%m/%d/%Y',\n-    'ndcfo-odnfc': '%d/%m/%Y',\n-    'swc-cfc': '%d/%m/%Y',\n-    'cic': '%d/%m/%Y',\n-}\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-\n-def norm_date(d, prefer_format):\n-    \"handle some creative thinking about what constitutes a date\"\n-    d = d.replace('.', '-').strip()\n-\n-    formats = ['%Y-%m-%d', '%b-%d-%Y', '%m/%d/%Y', '%d/%m/%Y', '%B %d %Y', '%B %d %y', '%d %b %y']\n-    if prefer_format:\n-        formats.insert(0, prefer_format)\n-\n-    if not prefer_format:\n-        try:\n-            datetime.strptime(d, '%m/%d/%Y')\n-            datetime.strptime(d, '%d/%m/%Y')\n-        except ValueError:\n-            pass\n-        else:\n-            raise ValueError\n-\n-    for fmt in formats:\n-        try:\n-            return datetime.strptime(d, fmt)\n-        except ValueError:\n-            pass\n-    return from_excel(int(d))\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-err_csv = None\n-original = None\n-line = None\n-if sys.argv[1:]:\n-    err_csv = unicodecsv.DictWriter(\n-        open(sys.argv[1], 'wb'),\n-        fieldnames=in_csv.fieldnames,\n-        encoding='utf-8')\n-    err_csv.writeheader()\n-\n-def error(msg, value=''):\n-    sys.stderr.write(\n-        line['owner_org'] + ' ' + line['ref_number'] + ' ' + msg\n-        + ' ' + str(value) + '\\n')\n-    if err_csv:\n-        err_csv.writerow(original)\n-\n-try:\n-    for line in in_csv:\n-        original = dict(line)\n-\n-        line['vendor_en'] = ''\n-        line['vendor_fr'] = ''\n-        try:\n-            line['start_date'] = norm_date(\n-                line['start_date'],\n-                ORG_PREFER_FORMAT.get(line['owner_org']))\n-            if line['start_date'] >= datetime(2019, 6, 21):\n-                error('start_date in the future', line['start_date'])\n-                continue\n-        except ValueError:\n-            error('invalid start_date', line['start_date'])\n-            continue\n-        try:\n-            if line['end_date']:\n-                line['end_date'] = norm_date(\n-                    line['end_date'],\n-                    ORG_PREFER_FORMAT.get(line['owner_org']))\n-        except ValueError:\n-            error('invalid end_date', line['end_date'])\n-            continue\n-        try:\n-            if line['guest_attendees']:\n-                line['guest_attendees'] = str(Decimal(line['guest_attendees']))\n-                if Decimal(line['guest_attendees']) > 2**31:\n-                    error('guest_attendees too large', line['guest_attendees'])\n-                    continue\n-        except ValueError:\n-            error('invalid guest_attendees', line['guest_attendees'])\n-            continue\n-        try:\n-            if line['total']:\n-                line['total'] = str(Decimal(line['total']))\n-        except ValueError:\n-            error('invalid total', line['total'])\n-            continue\n-\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "c76b6edf40f92483637a03f7f155e9e98cc3056c",
                    "filename": "bin/migrate/migrate_hospitalityq_nil_2019_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 56,
                    "changes": 56,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_hospitalityq_nil_2019_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_hospitalityq_nil_2019_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_hospitalityq_nil_2019_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,56 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = 'year,month,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-\n-        q = line.pop('quarter')\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-        if q == 'Q1':\n-            line['month'] = 'P01'\n-            out_csv.writerow(line)\n-            line['month'] = 'P02'\n-            out_csv.writerow(line)\n-            line['year'] = int(line['year']) - 1\n-            line['month'] = 'P12'\n-            out_csv.writerow(line)\n-        elif q == 'Q2':\n-            line['month'] = 'P03'\n-            out_csv.writerow(line)\n-            line['month'] = 'P04'\n-            out_csv.writerow(line)\n-            line['month'] = 'P05'\n-            out_csv.writerow(line)\n-        elif q == 'Q3':\n-            line['month'] = 'P06'\n-            out_csv.writerow(line)\n-            line['month'] = 'P07'\n-            out_csv.writerow(line)\n-            line['month'] = 'P08'\n-            out_csv.writerow(line)\n-        elif q == 'Q4':\n-            line['month'] = 'P09'\n-            out_csv.writerow(line)\n-            line['month'] = 'P10'\n-            out_csv.writerow(line)\n-            line['month'] = 'P11'\n-            out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "7d3d9951fb7731ed1e32e8dec89a4684e5484dd7",
                    "filename": "bin/migrate/migrate_inventory_2017_04.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 22,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_inventory_2017_04.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_inventory_2017_04.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_inventory_2017_04.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,22 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = ['ref_number', 'title_en', 'title_fr', 'description_en', 'description_fr', 'publisher_en', 'publisher_fr', 'date_published', 'language', 'size', 'eligible_for_release', 'program_alignment_architecture_en', 'program_alignment_architecture_fr', 'date_released', 'portal_url_en', 'portal_url_fr', 'user_votes', 'owner_org', 'owner_org_title']\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        out_csv.writerow(line)\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "37c70a4d1c40a07a1df58662973f22fed580e1c0",
                    "filename": "bin/migrate/migrate_legacy_consultations_2019_02.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 168,
                    "changes": 168,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_legacy_consultations_2019_02.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_legacy_consultations_2019_02.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_legacy_consultations_2019_02.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,168 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import os\n-from datetime import datetime\n-\n-import yaml\n-\n-FIELDNAMES = 'registration_number,publishable,partner_departments,subjects,title_en,title_fr,description_en,description_fr,target_participants_and_audience,start_date,end_date,status,profile_page_en,profile_page_fr,report_available_online,report_link_en,report_link_fr,contact_email,policy_program_lead_email,remarks_en,remarks_fr,high_profile,rationale,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-ORG_MAP = {\n-    'Agriculture and Agri-Food Canada': 'aafc-aac',\n-    'Atlantic Canada Opportunities Agency': 'acoa-apeca',\n-    'Canada Border Services Agency': 'cbsa-asfc',\n-    'Canada Economic Development': 'ced-dec',\n-    'Canada Mortgage and Housing Corporation': 'cmhc-schl',\n-    'Canada Revenue Agency': 'cra-arc',\n-    'Canadian Environmental Assessment Agency': 'ceaa-acee',\n-    'Canadian Food Inspection Agency': 'cfia-acia',\n-    'Canadian Grain Commission': 'cgc-ccg',\n-    'Canadian Heritage': 'pch',\n-    'Canadian Institutes of Health Research': 'cihr-irsc',\n-    'Canadian Northern Economic Development Agency': 'cannor',\n-    'Canadian Nuclear Safety Commission': 'cnsc-ccsn',\n-    'Canadian Radio-Television and Telecommunications Commission': 'crtc',\n-    'Canadian Transportation Agency': 'cta-otc',\n-    'Correctional Service Canada': 'csc-scc',\n-    'Employment and Social Development Canada': 'esdc-edsc',\n-    'Environment and Climate Change Canada': 'ec',\n-    'Finance Canada': 'fin',\n-    'Financial Consumer Agency of Canada': 'fcac-acfc',\n-    'Fisheries and Oceans Canada': 'dfo-mpo',\n-    'Global Affairs Canada': 'dfatd-maecd',\n-    'Health Canada': 'hc-sc',\n-    'House of Commons': 'hoc-cdc',\n-    'Immigration, Refugees and Citizenship Canada': 'cic',\n-    'Indigenous and Northern Affairs Canada': 'aandc-aadnc',\n-    'Infrastructure Canada': 'infc',\n-    'Innovation, Science and Economic Development Canada': 'ic',\n-    'Justice Canada, Department of': 'jus',\n-    'National Defence': 'dnd-mdn',\n-    'National Energy Board': 'neb-one',\n-    'National Parole Board': 'pbc-clcc',\n-    'Natural Resources Canada': 'nrcan-rncan',\n-    'Parks Canada Agency': 'pc',\n-    'Patented Medicine Prices Review Board': 'pmprb-cepmb',\n-    'Public Health Agency of Canada': 'phac-aspc',\n-    'Public Safety and Emergency Preparedness Canada': 'ps-sp',\n-    'Public Works and Government Services Canada': 'pwgsc-tpsgc',\n-    'Shared Services Canada': 'ssc-spc',\n-    'Standards Council of Canada': 'scc-ccn',\n-    'Statistics Canada': 'statcan',\n-    'Transport Canada': 'tc',\n-    'Treasury Board of Canada, Secretariat': 'tbs-sct',\n-    'Veterans Affairs Canada': 'vac-acc',\n-}\n-\n-SUBJ_MAP = {\n-    'Advertising / Marketing': 'AD',\n-    'Agriculture': 'AG',\n-    'Amendments': 'AM',\n-    'Animals': 'AN',\n-    'Arts': 'AA',\n-    'Children': 'CD',\n-    'Communication': 'CM',\n-    'Copyright / Trademarks / Patents': 'CR',\n-    'Culture': 'CU',\n-    'Development': 'DV',\n-    'Economic development': 'ED',\n-    'Economy': 'EC',\n-    'Education': 'EU',\n-    'Employment': 'EM',\n-    'Environment': 'EN',\n-    'Exporting/Importing': 'EX',\n-    'Finance': 'FI',\n-    'Financial assistance and entitlements': 'FA',\n-    'Fisheries': 'FS',\n-    'Food and drug': 'FD',\n-    'Foreign affairs': 'FO',\n-    'Foreign policy': 'FO',  # NB: merged with Foreign affairs\n-    'Government procurement': 'GP',\n-    'Health': 'HS',\n-    'Heritage': 'HP',\n-    'Housing': 'HL',\n-    'Human resources': 'HR',\n-    'Immigration': 'IM',\n-    'Indigenous Peoples': 'AP',\n-    'Industry': 'IN',\n-    'International': 'IT',\n-    'Justice and the Law': 'JL',\n-    'Labour': 'LT',\n-    'National defence': 'ND',\n-    'Natural resources': 'NR',\n-    'Persons with disabilities': 'PD',\n-    'Plants': 'PL',\n-    'Policy': 'PO',\n-    'Private sector': 'PR',\n-    'Public safety': 'PS',\n-    'Recreation': 'RL',\n-    'Regulations': 'RE',\n-    'Rural and remote services': 'RU',\n-    'Science and technology': 'ST',\n-    'Seniors': 'SA',\n-    'Service': 'SE',\n-    'Society': 'SO',\n-    'Sport': 'SP',\n-    'Taxes': 'TX',\n-    'Trade': 'TC',\n-    'Training and careers': 'TF',\n-    'Transportation': 'TR',\n-    'Youth': 'YJ',\n-}\n-\n-def dt(legacy_date):\n-    d = datetime.strptime(legacy_date, '%d-%m-%Y')\n-    assert d < datetime(2018,1,1), d\n-    return d.strftime('%Y-%m-%d')\n-\n-def main():\n-    try:\n-        in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-\n-        orgs = {}\n-        for line in in_csv:\n-            try:\n-                row = {\n-                    'registration_number': 'A-%06d' % int(line['ID']),\n-                    'title_en': line['title_en'],\n-                    'title_fr': line['title_fr'],\n-                    'description_en': line['description_en'],\n-                    'description_fr': line['description_fr'],\n-                    'start_date': dt(line['startdate']),\n-                    'end_date': dt(line['enddate']),\n-                    'profile_page_en': line['urladdress_en'],\n-                    'profile_page_fr': line['urladdress_fr'],\n-                    'owner_org': ORG_MAP[line['department_en']],\n-                    'owner_org_title': '',\n-                    'subjects':\n-                        ','.join(SUBJ_MAP[s] for s in line['subjects_en'].split(' | '))\n-                        if line['subjects_en'] else '',\n-                    'user_modified': '*',  # special \"we don't know\" value\n-                    'publishable': 'Y',\n-                    'report_available_online': 'N',\n-                    'high_profile': 'N',\n-                    'status': 'CN',\n-                }\n-                if not row['title_fr']:\n-                    sys.stderr.write(line['ID'] + ': missing title_fr\\n')\n-                else:\n-                    orgs.setdefault(row['owner_org'], []).append(row)\n-            except KeyError as err:\n-                sys.stderr.write(line['ID'] + ': ' + str(err) + '\\n')\n-\n-        sys.stdout.write(codecs.BOM_UTF8)\n-        out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-        out_csv.writeheader()\n-        for o in sorted(orgs):\n-            for row in orgs[o]:\n-                out_csv.writerow(row)\n-\n-    except KeyError:\n-        if 'warehouse' in sys.argv:\n-            sys.exit(85)\n-        else:\n-            raise\n-main()"
                },
                {
                    "sha": "e096f8812b942bfbc96ab5d2207ffd73430e9753",
                    "filename": "bin/migrate/migrate_nap_2021_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 20,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_nap_2021_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_nap_2021_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_nap_2021_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,20 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-\n-FIELDNAMES = 'reporting_period,commitments,milestones,indicators,status,progress_en,progress_fr,evidence_en,evidence_fr,challenges_en,challenges_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-sys.stdout.write(codecs.BOM_UTF8)\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-for line in in_csv:\n-    line['user_modified'] = '*'  # special \"we don't know\" value\n-\n-    out_csv.writerow(line) \n\\ No newline at end of file"
                },
                {
                    "sha": "441e882f8d2345c88b9528d587323bcb6348a05a",
                    "filename": "bin/migrate/migrate_reclassification_2020_01.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 26,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_reclassification_2020_01.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_reclassification_2020_01.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_reclassification_2020_01.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-\n-FIELDNAMES = 'ref_number,job_number,pos_number,date,pos_title_en,pos_title_fr,old_class_group_code,old_class_level,new_class_group_code,new_class_level,old_differential,new_differential,reason_en,reason_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "c3fa07df8e62c3292457a96c69bf2284687cef80",
                    "filename": "bin/migrate/migrate_reclassification_2023_05.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 48,
                    "changes": 48,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_reclassification_2023_05.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_reclassification_2023_05.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_reclassification_2023_05.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,48 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-from datetime import datetime\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-FIELDNAMES = 'ref_number,job_number,pos_number,date,pos_title_en,pos_title_fr,old_class_group_code,old_class_level,new_class_group_code,new_class_level,old_differential,new_differential,reason_en,reason_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        original = dict(line)\n-\n-        line['old_class_group_code'] = line['old_class_group_code'].strip()\n-        line['new_class_group_code'] = line['new_class_group_code'].strip()\n-\n-        if line['old_class_group_code'] == 'MG':\n-            line['old_class_group_code'] = 'MG-SPS'\n-        if line['new_class_group_code'] == 'MG':\n-            line['new_class_group_code'] = 'MG-SPS'\n-\n-        if not line['pos_title_en']:\n-            line['pos_title_en'] = 'NA'\n-        if not line['pos_title_fr']:\n-            line['pos_title_fr'] = 'S.O.'\n-        if not line['reason_en']:\n-            line['reason_en'] = 'NA'\n-        if not line['reason_fr']:\n-            line['reason_fr'] = 'S.O.'\n-\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "0552f602185b3715244132dbfb3fe7fb64d89c92",
                    "filename": "bin/migrate/migrate_reclassification_nil_2020_01.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 26,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_reclassification_nil_2020_01.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_reclassification_nil_2020_01.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_reclassification_nil_2020_01.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-\n-FIELDNAMES = 'year,quarter,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "f90496d43acf4b52710570d50b0125385d75c49e",
                    "filename": "bin/migrate/migrate_service_2018_12.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 54,
                    "changes": 54,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_service_2018_12.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_service_2018_12.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_service_2018_12.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,54 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-\n-FIELDNAMES = 'fiscal_yr,service_id,service_name_en,service_name_fr,external_internal,service_type,special_designations,service_description_en,service_description_fr,authority_en,authority_fr,service_url_en,service_url_fr,program_name_en,program_name_fr,program_id_code,client_target_groups,service_fee,cra_business_number,use_of_sin,online_applications,web_visits_info_service,calls_received,in_person_applications,email_applications,fax_applications,postal_mail_applications,e_registration,e_authentication,e_application,e_decision,e_issuance,e_feedback,client_feedback,special_remarks_en,special_remarks_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        service_id = line.pop('service_id_number')\n-        y1, y2, org, num = service_id.split('-')\n-        line['service_id'] = str(int(num))\n-        line['fiscal_yr'] = '2016-2017'  # all existing reports from this year\n-\n-        line['program_id_code'] = line.pop('program_id_number')\n-        line['service_fee'] = line.pop('user_fee')\n-        line['online_applications'] = line.pop('volumes_per_channel_online')\n-        line['calls_received'] = line.pop('volumes_per_channel_telephone')\n-        line['in_person_applications'] = line.pop('volumes_per_channel_in_person')\n-        line['postal_mail_applications'] = line.pop('volumes_per_channel_mail')\n-\n-        del line['responsibility_area_en']\n-        del line['responsibility_area_fr']\n-        del line['service_owner']\n-        del line['service_agreements']\n-        del line['targets_published_en']\n-        del line['targets_published_fr']\n-        del line['interaction_points_online']\n-        del line['interaction_points_total']\n-        del line['percentage_online']\n-\n-        line['service_url_en'] = ''\n-        line['service_url_fr'] = ''\n-        line['use_of_sin'] = ''\n-        line['web_visits_info_service'] = ''\n-        line['email_applications'] = ''\n-        line['fax_applications'] = ''\n-        line['client_feedback'] = ''\n-\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "202d1da3ce028668f16f1dca056d8af4b7633ed6",
                    "filename": "bin/migrate/migrate_service_std_2019_01.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 20,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_service_std_2019_01.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_service_std_2019_01.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_service_std_2019_01.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,20 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-from decimal import Decimal\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=in_csv.fieldnames, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        line['service_std_target'] = \"%0.2f\" % (Decimal(line['service_std_target']) / 100)\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "e6eff28aba5484f143efa3bd517a38cd0813554d",
                    "filename": "bin/migrate/migrate_travela_2018_10.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 84,
                    "changes": 84,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_travela_2018_10.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_travela_2018_10.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_travela_2018_10.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,84 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-import json\n-from decimal import Decimal, InvalidOperation\n-\n-FIELDNAMES = ['year', 'mandate_description_en', 'mandate_description_fr', 'operational_activities_kdollars', 'key_stakeholders_kdollars', 'training_kdollars', 'other_kdollars', 'internal_governance_kdollars', 'non_public_servants_kdollars', 'public_servants_kdollars', 'hospitality_kdollars', 'conference_fees_kdollars', 'minister_kdollars', 'travel_compared_fiscal_year_en', 'travel_compared_fiscal_year_fr', 'hospitality_compared_fiscal_year_en', 'hospitality_compared_fiscal_year_fr', 'conference_fees_compared_fiscal_year_en', 'conference_fees_compared_fiscal_year_fr', 'minister_compared_fiscal_year_en', 'minister_compared_fiscal_year_fr', 'record_created', 'record_modified', 'user_modified', 'owner_org', 'owner_org_title']\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-# collect all records so we can fill in missing mandate_description_en/fr on first years\n-org_year = {}\n-\n-try:\n-    for line in in_csv:\n-        org_year[line['owner_org'], line['year']] = line\n-\n-    def next_line(line):\n-        \"return line from same org following year\"\n-        return org_year[line['owner_org'], str(int(line['year'])+1)]\n-\n-    for oy in sorted(org_year):\n-        line = org_year[oy]\n-\n-        if int(line['year']) >= 2018:\n-            sys.stderr.write('discarding {0}\\n'.format(repr(oy)))\n-            continue\n-        try:\n-            if not line['mandate_description_en']:\n-                line['mandate_description_en'] = next_line(line)['mandate_description_en']\n-        except KeyError:\n-            line['mandate_description_en'] = ''\n-        try:\n-            if not line['mandate_description_fr']:\n-                line['mandate_description_fr'] = next_line(line)['mandate_description_fr']\n-        except KeyError:\n-            line['mandate_description_fr'] = ''\n-        line['operational_activities_kdollars'] = ''\n-        line['key_stakeholders_kdollars'] = ''\n-        line['training_kdollars'] = ''\n-        line['internal_governance_kdollars'] = ''\n-        ps = line.pop('public_servants')\n-        try:\n-            ps = Decimal(ps.replace(',', ''))\n-        except InvalidOperation:\n-            sys.stderr.write('discarding {0} {1}\\n'.format(repr(oy), repr(ps)))\n-            continue\n-        nps = Decimal(line.pop('non_public_servants').replace(',', ''))\n-        line['public_servants_kdollars'] = str(ps)\n-        line['non_public_servants_kdollars'] = str(nps)\n-        line['travel_compared_fiscal_year_en'] = \\\n-            u'Public Servants: {0} {1};\\nNon-Public Servants: {2} {3}'.format(\n-                str(ps),\n-                line.pop('public_servant_compared_fiscal_year_en'),\n-                str(nps),\n-                line.pop('non_public_servant_compared_fiscal_year_en'))\n-        line['travel_compared_fiscal_year_fr'] = \\\n-            u'Voyages des fonctionnaires: {0} {1};\\nVoyages des non-fonctionnaires: {2} {3}'.format(\n-                str(ps),\n-                line.pop('public_servant_compared_fiscal_year_fr'),\n-                str(nps),\n-                line.pop('non_public_servant_compared_fiscal_year_fr'))\n-        line['hospitality_kdollars'] = line.pop('hospitality').replace(',', '')\n-        line['conference_fees_kdollars'] = line.pop('conference_fees').replace(',', '')\n-        try:\n-            m = Decimal(line.pop('minister').replace(',', ''))\n-        except InvalidOperation:\n-            m = 0\n-        line['minister_kdollars'] = str(m)\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "165bd3b500e5b81cf483044816b277e07a31451b",
                    "filename": "bin/migrate/migrate_travelq_2019_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 154,
                    "changes": 154,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_travelq_2019_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_travelq_2019_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_travelq_2019_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,154 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-from datetime import datetime\n-from decimal import Decimal, InvalidOperation\n-\n-from openpyxl.utils.datetime import from_excel\n-\n-\n-FIELDNAMES = 'ref_number,disclosure_group,title_en,title_fr,name,purpose_en,purpose_fr,start_date,end_date,destination_en,destination_fr,airfare,other_transport,lodging,meals,other_expenses,total,additional_comments_en,additional_comments_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-ORG_PREFER_FORMAT = {\n-    'cic': '%d/%m/%Y',\n-    'jus': '%m/%d/%Y',\n-    'vrab-tacra': '%d/%m/%Y',\n-    'dnd-mdn': '%d/%m/%Y',\n-}\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-\n-def norm_date(d, prefer_format):\n-    \"handle some creative thinking about what constitutes a date\"\n-    d = d.replace('.', '-').strip()\n-\n-    formats = [\n-        '%Y-%m-%d', '%b-%d-%Y', '%m/%d/%Y', '%d/%m/%Y', '%B %d %Y', '%B %d %y', '%d %b %y', '%Y/%m/%d',\n-        '%d %B, %y', '%d %b-%y', '%d %B-%y', '%d %B, %Y', '%d-%b-%y', '%B %d %Y', '%d / %m / %Y', '%d//%m/%Y']\n-    if prefer_format:\n-        formats.insert(0, prefer_format)\n-\n-    if not prefer_format:\n-        try:\n-            datetime.strptime(d, '%m/%d/%Y')\n-            datetime.strptime(d, '%d/%m/%Y')\n-        except ValueError:\n-            pass\n-        else:\n-            raise ValueError\n-\n-    for fmt in formats:\n-        try:\n-            return datetime.strptime(d, fmt)\n-        except ValueError:\n-            pass\n-    return from_excel(int(d))\n-\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-err_csv = None\n-original = None\n-line = None\n-if sys.argv[1:]:\n-    err_csv = unicodecsv.DictWriter(\n-        open(sys.argv[1], 'wb'),\n-        fieldnames=in_csv.fieldnames,\n-        encoding='utf-8')\n-    err_csv.writeheader()\n-\n-def error(msg, value=None):\n-    sys.stderr.write(\n-        line['owner_org'] + ' ' + line['ref_number'] + ' ' + msg\n-        + ' ' + str(value) + '\\n')\n-    if err_csv:\n-        err_csv.writerow(original)\n-\n-try:\n-    for line in in_csv:\n-        original = dict(line)\n-\n-        if not line['ref_number'].strip():\n-            error('missing ref_number')\n-            continue\n-\n-        try:\n-            line['start_date'] = norm_date(\n-                line['start_date'],\n-                ORG_PREFER_FORMAT.get(line['owner_org']))\n-            if line['start_date'] >= datetime(2019, 6, 21):\n-                error('start_date in the future', line['start_date'])\n-                continue\n-        except ValueError:\n-            error('invalid start_date', line['start_date'])\n-            continue\n-        try:\n-            if line['end_date']:\n-                line['end_date'] = norm_date(\n-                    line['end_date'],\n-                    ORG_PREFER_FORMAT.get(line['owner_org']))\n-        except ValueError:\n-            error('invalid end_date', line['end_date'])\n-            continue\n-\n-        # fix cic shifted columns\n-        if line['owner_org'] == 'cic':\n-            try:\n-                Decimal(line['additional_comments_en'])\n-                Decimal(line['additional_comments_fr'])\n-                try:\n-                    Decimal(line['airfare'])\n-                except (ValueError, InvalidOperation):\n-                    pass\n-                else:\n-                    raise ValueError\n-                try:\n-                    Decimal(line['other_transport'])\n-                except (ValueError, InvalidOperation):\n-                    pass\n-                else:\n-                    raise ValueError\n-            except (ValueError, InvalidOperation):\n-                pass\n-            else:\n-                c1 = line['airfare']\n-                c2 = line['other_transport']\n-                c3 = line['accomodation']\n-                c4 = line['meals']\n-                c5 = line['other_expenses']\n-                c6 = line['total']\n-                c7 = line['additional_comments_en']\n-                c8 = line['additional_comments_fr']\n-                line['airfare'] = c3\n-                line['other_transport'] = c4\n-                line['accomodation'] = c5\n-                line['meals'] = c6\n-                line['other_expenses'] = c7\n-                line['total'] = c8\n-                line['additional_comments_en'] = c1\n-                line['additional_comments_fr'] = c2\n-\n-        line['lodging'] = line.pop('accomodation')\n-\n-        for f in 'airfare', 'other_transport', 'lodging', 'meals', 'other_expenses', 'total':\n-            try:\n-                if line[f]:\n-                    line[f] = str(Decimal(line[f]))\n-            except (ValueError, InvalidOperation):\n-                error(f, line[f])\n-                break\n-        else:\n-            if 'warehouse' not in sys.argv[1:]:\n-                line['user_modified'] = '*'  # special \"we don't know\" value\n-            out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "e9cf02b9a669ff5c222d14fb5ed042a1ed4033ea",
                    "filename": "bin/migrate/migrate_travelq_nil_2019_06.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 54,
                    "changes": 54,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_travelq_nil_2019_06.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_travelq_nil_2019_06.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_travelq_nil_2019_06.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,54 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-FIELDNAMES = 'year,month,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        q = line.pop('quarter')\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        if q == 'Q1':\n-            line['month'] = 'P01'\n-            out_csv.writerow(line)\n-            line['month'] = 'P02'\n-            out_csv.writerow(line)\n-            line['year'] = int(line['year']) - 1\n-            line['month'] = 'P12'\n-            out_csv.writerow(line)\n-        elif q == 'Q2':\n-            line['month'] = 'P03'\n-            out_csv.writerow(line)\n-            line['month'] = 'P04'\n-            out_csv.writerow(line)\n-            line['month'] = 'P05'\n-            out_csv.writerow(line)\n-        elif q == 'Q3':\n-            line['month'] = 'P06'\n-            out_csv.writerow(line)\n-            line['month'] = 'P07'\n-            out_csv.writerow(line)\n-            line['month'] = 'P08'\n-            out_csv.writerow(line)\n-        elif q == 'Q4':\n-            line['month'] = 'P09'\n-            out_csv.writerow(line)\n-            line['month'] = 'P10'\n-            out_csv.writerow(line)\n-            line['month'] = 'P11'\n-            out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "c391b9c4b15b00ebd8d331757cf207293a12cee6",
                    "filename": "bin/migrate/migrate_wrongdoing_2020_01.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 26,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_wrongdoing_2020_01.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fmigrate%2Fmigrate_wrongdoing_2020_01.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fmigrate%2Fmigrate_wrongdoing_2020_01.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,26 +0,0 @@\n-#!/usr/bin/env python3\n-\n-import unicodecsv\n-import sys\n-import codecs\n-\n-\n-FIELDNAMES = 'ref_number,file_id_number,file_id_date,case_description_en,case_description_fr,findings_conclusions,recommendations_corrective_measures_en,recommendations_corrective_measures_fr,record_created,record_modified,user_modified,owner_org,owner_org_title'.split(',')\n-\n-assert sys.stdin.read(3) == codecs.BOM_UTF8\n-\n-in_csv = unicodecsv.DictReader(sys.stdin, encoding='utf-8')\n-out_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=FIELDNAMES, encoding='utf-8')\n-out_csv.writeheader()\n-\n-try:\n-    for line in in_csv:\n-        if 'warehouse' not in sys.argv[1:]:\n-            line['user_modified'] = '*'  # special \"we don't know\" value\n-        out_csv.writerow(line)\n-\n-except KeyError:\n-    if 'warehouse' in sys.argv:\n-        sys.exit(85)\n-    else:\n-        raise"
                },
                {
                    "sha": "b120a1a0f7e619ab229342716937c1e07070dfb5",
                    "filename": "bin/og_analytics.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1132,
                    "changes": 1132,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fog_analytics.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fog_analytics.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fog_analytics.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,1132 +0,0 @@\n-# encoding: utf-8\n-\n-\"\"\"Hello Analytics Reporting API V4.\"\"\"\n-\n-import argparse\n-\n-from apiclient.discovery import build\n-import httplib2\n-#from oauth2client import client\n-#from oauth2client import file\n-#from oauth2client import tools\n-from google.oauth2 import service_account\n-\n-import os\n-import time\n-import gzip\n-import json\n-import urllib\n-import sys\n-import csv\n-import unicodecsv\n-import codecs\n-from collections import defaultdict\n-\n-import ckanapi\n-from ckanapi.errors import CKANAPIError\n-\n-import configparser\n-import psycopg2\n-import traceback\n-\n-import openpyxl\n-import heapq\n-import re\n-from openpyxl.utils.exceptions import IllegalCharacterError\n-\n-def cleanup_illegal_characters(rows):\n-    for row in rows:\n-        for cell in rows:\n-            if (isinstance(cell, str)):\n-                cell = re.sub(r'[\\000-\\010]|[\\013-\\014]|[\\016-\\037]', '', cell)\n-    return rows\n-\n-def write_xls(filename, sheets):\n-    book = openpyxl.Workbook()\n-\n-    for sheet in sheets:\n-        ws = book.create_sheet(title=sheet.get('name', 'sheet 1'))\n-        try:\n-            for row in sheet.get('data',[]):\n-                ws.append(row)\n-        except IllegalCharacterError as e:\n-            pass\n-\n-        cols =  [col for col in ws.columns]\n-        widths = sheet.get('col_width', {})\n-        for k,v in widths.items():\n-            ws.column_dimensions[cols[k][0].column_letter].width = v\n-    try:\n-        sheet1 = book.get_sheet_by_name(\"Sheet\")\n-        book.remove_sheet(sheet1)\n-    except:\n-        pass\n-    book.save(filename)\n-\n-def write_csv(filename, rows, header=None):\n-    outf=open(filename, 'wb')\n-    outf.write(codecs.BOM_UTF8)\n-    writer = unicodecsv.writer(outf)\n-\n-    if header:\n-        writer.writerow(header)\n-    for row in rows:\n-        writer.writerow(row)\n-\n-def read_csv(filename):\n-    content=[]\n-    with open(filename) as f:\n-        reader = csv.reader(f)\n-        firstrow = next(reader)\n-        firstrow[0] = firstrow[0].lstrip(codecs.BOM_UTF8)\n-        content.append(firstrow)\n-        for x in reader:\n-            content.append(x)\n-    return content\n-\n-def simplify_lang(titles):\n-    return {\n-        'en': titles.get('en', titles.get('en-t-fr', '')),\n-        'fr': titles.get('fr', titles.get('fr-t-en', '')),\n-    }\n-# https://developers.google.com/analytics/devguides/reporting/core/v4/quickstart/installed-py\n-# https://developers.google.com/analytics/devguides/reporting/core/v4/basics\n-#CLIENT_SECRETS_PATH = 'client_secrets.json' # Path to client_secrets.json file.\n-#VIEW_ID = '<REPLACE_WITH_VIEW_ID>'\n-\n-\n-def initialize_analyticsreporting(client_secrets_path):\n-  \"\"\"Initializes the analyticsreporting service object.\n-\n-  Returns:\n-    analytics an authorized analyticsreporting service object.\n-  \"\"\"\n-  SCOPES = ['https://www.googleapis.com/auth/analytics.readonly']\n-  DISCOVERY_URI = ('https://analyticsreporting.googleapis.com/$discovery/rest')\n-\n-  # Parse command-line arguments.\n-#  parser = argparse.ArgumentParser(\n-#      formatter_class=argparse.RawDescriptionHelpFormatter,\n-#      parents=[tools.argparser])\n-  # flags = parser.parse_args(['--noauth_local_webserver'])\n-#  flags = parser.parse_args([])\n-\n-  # Set up a Flow object to be used if we need to authenticate.\n-  credentials = service_account.Credentials.from_service_account_file(\n-      client_secrets_path, scopes=SCOPES)\n-#      message=tools.message_if_missing(client_secrets_path))\n-\n-  # Prepare credentials, and authorize HTTP object with them.\n-  # If the credentials don't exist or are invalid run through the native client\n-  # flow. The Storage object will ensure that if successful the good\n-  # credentials will get written back to a file.\n-#  storage = file.Storage('analyticsreporting.dat')\n-#  credentials = storage.get()\n-\n-#  if credentials is None or credentials.invalid:\n-#    credentials = tools.run_flow(flow, storage, flags, http=httplib2.Http())\n-\n-  # Build the service object.\n-  analytics = build('analyticsreporting', 'v4', credentials=credentials)\n-#http=http, discoveryServiceUrl=DISCOVERY_URI)\n-\n-  return analytics\n-\n-def parseReport(response, dimension_name, metric_name):\n-    data, nextPage = [], None\n-    for report in response.get('reports', []):\n-        columnHeader = report.get('columnHeader', {})\n-        dimensionHeaders = columnHeader.get('dimensions', [])\n-        metricHeaders = columnHeader.get('metricHeader', {}).get('metricHeaderEntries', [])\n-\n-        if dimension_name:\n-            id_idx = dimensionHeaders.index(dimension_name) # raise exception ValueError if not there\n-\n-        metricHeaders = [ v['name'] for v in metricHeaders]\n-        count_idx = metricHeaders.index(metric_name)\n-        rows = report.get('data', {}).get('rows', [])\n-\n-        for row in rows:\n-          dimensions = row.get('dimensions', [])\n-          dateRangeValues = row.get('metrics', [])\n-          if dimension_name:\n-            data.append([dimensions[id_idx], dateRangeValues[0]['values'][count_idx]])\n-          else:\n-            data.append([dateRangeValues[0]['values'][count_idx]])\n-        nextPage = report.get('nextPageToken', None)\n-        break\n-    return data, nextPage\n-\n-class DatasetDownload():\n-    def __init__(self, ga, view_id, conf_file):\n-        ga_tmp_dir = os.environ['GA_TMP_DIR']\n-        ga_rmote_ckan = os.environ['GA_REMOTE_CKAN']\n-        self.ga = ga\n-        self.view_id = view_id\n-        self.file = os.path.join(ga_tmp_dir, 'od-do-canada.jl.gz')\n-        self.site = ckanapi.RemoteCKAN(ga_rmote_ckan)\n-\n-        self.read_orgs()\n-\n-        user, passwd, host, db = self.read_conf(conf_file)\n-        db = db.split('?')[0]\n-        try:\n-            self.conn = psycopg2.connect(\n-                database=db, user=user,\n-                password=passwd, host=host, port=\"5432\")\n-        except:\n-            import traceback\n-            traceback.print_exc()\n-            print(\"Opened database failed\")\n-            sys.exit(-1)\n-\n-    def read_conf(self,filename):\n-        config = configparser.ConfigParser()\n-        config.read(filename)\n-        psql_conn_str = config.get('app:main', 'sqlalchemy.url')\n-        import re\n-        r = re.match(r'^postgresql://(.*):(.*)@(.*)/(.*)', psql_conn_str)\n-        return (r.group(1), r.group(2), r.group(3), r.group(4))\n-\n-    def get_deleted_dataset(self, id):\n-        cur = self.conn.cursor()\n-        cur.execute('''SELECT a.id, c.value, a.owner_org from package a,\n-                    package_extra c\n-                    where a.state='deleted'\n-                        and a.id=c.package_id and c.key='title_translated'; ''')\n-        rows = cur.fetchall()\n-        for row in rows[:1]:\n-            id, title, org = row[0], row[1], row[2]\n-            return (title, org)\n-\n-        return (None, None)\n-\n-    def __delete__(self):\n-        if not self.file:\n-            if self.download_file:\n-                os.unlink(self.download_file)\n-                print('temp file deleted', self.download_file)\n-\n-    def get_details(self, id):\n-        try:\n-            target_pkg = self.site.action.package_show(id=id)\n-        except:\n-            target_pkg = None\n-        return target_pkg\n-\n-    def read_orgs(self):\n-        count = 0\n-        while count <=5:\n-            try:\n-                print('reading organizations...')\n-                orgs = self.site.action.organization_list(all_fields=True)\n-                break\n-            except ckanapi.errors.CKANAPIError:\n-                count += 1\n-                print('Error read org list from open.canada.ca')\n-                time.sleep(2)\n-        self.orgs = {}\n-        self.org_name2id = {}\n-        self.org_id2name = {}\n-\n-        for rec in orgs:\n-            title = rec['title'].split('|')\n-            self.orgs[rec['id']] = title\n-            self.org_name2id[rec['name']] = rec['id']\n-            self.org_id2name[rec['id']] = [ rec['name'], rec['title'] ]\n-        assert(len(self.orgs)>100)\n-        print('total orgs %s', len(self.orgs))\n-\n-    def read_portal(self, stats):\n-        self.ds = {}\n-        self.org_count = defaultdict(int)\n-        count = 0\n-        for records in self.download():\n-            count += len(records)\n-            print('read records %s', count, ' %s',  len(self.ds))\n-            for rec in records:\n-                if not stats.get(rec['id']):\n-                    continue\n-                if self.og_type =='info':\n-                    if rec['type'] != 'info':\n-                        stats.pop(rec['id']) # not open info\n-                        continue\n-                self.ds[rec['id']] = {'title_translated':rec['title_translated'],\n-                                      'owner_org':rec['owner_org']}\n-                self.org_count[rec['owner_org']] += 1\n-\n-    def getVisitStats(self, start_date, end_date, og_type):\n-        self.set_catalogue_file(end_date)\n-\n-        self.start_date = start_date\n-        self.end_date = end_date\n-        self.og_type = og_type\n-\n-        start = '0'\n-        stats = defaultdict(int)\n-        while True:\n-            response = self.getRawVisitReport(start)\n-            data, start = parseReport(response, 'ga:pagePath', 'ga:pageViews')\n-            for [url, count] in data:\n-                id = url.split('/')[-1]\n-                if id[:8] == 'dataset?': continue\n-                id = id.split('&')[0]\n-                id = id.strip()\n-                if len(id)!=36: continue #make sure it is an UUID\n-                stats[id] += int(count)\n-            if len(data)==0 or not start:\n-                print('Done %s %s', start, len(stats))\n-                break\n-            else:\n-                print(start)\n-        stats = dict(stats)\n-        self.read_portal(stats)\n-\n-        self.dump(stats, True)\n-\n-    def getStats(self, start_date, end_date, og_type):\n-        self.set_catalogue_file(end_date)\n-\n-        self.start_date = start_date\n-        self.end_date = end_date\n-        self.og_type = og_type\n-\n-        start = '0'\n-        stats = defaultdict(int)\n-        while True:\n-            response = self.getRawReport(start)\n-            data, start = self.parseReport(response)\n-            for [url, count] in data:\n-                id = url.split('/dataset/')[-1]\n-                id = id.split('/')[0]\n-                if len(id)!=36: continue #make sure it is an UUID\n-                stats[id] += int(count)\n-            if len(data)==0 or not start:\n-                print('Done %s %s', start, len(stats))\n-                break\n-            else:\n-                print(start)\n-        stats = dict(stats)\n-        self.read_portal(stats)\n-\n-        if self.og_type == 'info':\n-            self.dump_info(stats)\n-        else:\n-            self.dump(stats)\n-\n-    def dump_info(self, data):\n-        sheets =[]\n-        top100 = [[id,c] for id,c in data.items()]\n-        top100 = heapq.nlargest(100, top100, key=lambda x:x[1])\n-        rows = [['ID / Identificateur',\n-                 'Title English / Titre en anglais',\n-                 'Title French / Titre en français',\n-                 \"Department Name English / Nom du ministère en anglais\",\n-                 \"Department Name French / Nom du ministère en français\",\n-                 \"number of downloads / nombre de téléchargements\"]]\n-        for rec_id,count in top100:\n-            #get top20\n-            if len(rows)>=21:\n-                break\n-            rec = self.ds.get(rec_id, None)\n-            if not rec:\n-                #deleted, skip it\n-                continue\n-            else:\n-                rec_title = simplify_lang(rec['title_translated'])\n-                org_id = rec['owner_org']\n-            [_, org_title] = self.org_id2name.get(org_id)\n-            org_title = org_title.split('|')\n-            org_title = [x.strip() for x in org_title]\n-            rows.append( [rec_id, rec_title['en'], rec_title['fr'],\n-                          org_title[0], org_title[1], count])\n-        rows.append([])\n-        rows.append([self.start_date, self.end_date])\n-        rows = cleanup_illegal_characters(rows)\n-        sheet1 = {'name':'Top 20 Information',\n-                  'data': rows,\n-                   'col_width':{0:40, 1:50, 2:50, 3:50, 4:50, 5:40}  # col:width\n-                   }\n-        sheets.insert(0, sheet1)\n-        ga_tmp_dir = os.environ['GA_TMP_DIR']\n-        write_xls(os.path.join(ga_tmp_dir, 'downloads_info.xls'), sheets)\n-\n-    def dump(self, data, ignore_deleted=False):\n-        #further reduce to departments\n-        ds = defaultdict(int)\n-        sheets = defaultdict(list)\n-        deleted_ds = {}\n-        for id,c in data.items():\n-            rec = self.ds.get(id, None)\n-            if (not rec) and ignore_deleted:\n-                deleted_ds[id] = True\n-                continue\n-            if not rec:\n-                print('%s deleted', id)\n-                rec_title, org_id = self.get_deleted_dataset(id)\n-                deleted_ds[id] = {'title_translated':rec_title,\n-                                  'org_id':org_id}\n-                print(rec_title, org_id)\n-            else:\n-                org_id = rec['owner_org']\n-            ds[org_id] += c\n-\n-            sheet = sheets[org_id]\n-            sheet.append(id)\n-        if ignore_deleted:\n-            for k,v in deleted_ds.items():\n-                data.pop(k)\n-            deleted_ds = {}\n-\n-        rows = []\n-        for k,v in ds.items():\n-            title = self.orgs.get(k, ['', ''])\n-            if len(title) ==1:\n-                title.append(title[0])\n-            rows.append([title[0].strip(), title[1].strip(),v])\n-        rows.sort(key=lambda x: -x[2])\n-        header = [\"Department Name English / Nom du ministère en anglais\",\n-                  \"Department Name French / Nom du ministère en français\",\n-                  \"number of downloads / nombre de téléchargements\"]\n-\n-        #write_csv('/tmp/a.csv', rows, header)\n-\n-        #now save to xls\n-        self.saveXls(sheets, data, ds, deleted_ds, ignore_deleted)\n-\n-    def saveXls(self, org_recs, data, org_stats, deleted_ds, isVisit=False):\n-        sheets =[]\n-        rows =[]\n-        for k, [name, title] in self.org_id2name.items():\n-            count = org_stats.get(k, 0)\n-            if count == 0:\n-                continue\n-            title = title.split('|')\n-            rows.append( [name, title[0].strip(), title[1].strip(), count])\n-        rows.sort(key=lambda x: -x[3])\n-        rows.insert(0, ['Abbreviation / Abréviation',\n-                        \"Department Name English / Nom du ministère en anglais\",\n-                        \"Department Name French / Nom du ministère en français\",\n-                        \"Number of downloads / Nombre de téléchargements\"])\n-        if isVisit:\n-            rows[0][3] = \"Number of visits / Nombre de visites\"\n-        rows = cleanup_illegal_characters(rows)\n-        sheet1 = {'name':'Summary by departments',\n-                  'data': rows,\n-                   'col_width':{0:26, 1:50, 2:50, 3:40}  # col:width\n-                   }\n-\n-        #get top100\n-        top100 = [[id,c] for id,c in data.items()]\n-        top100 = heapq.nlargest(100, top100, key=lambda x:x[1])\n-        rows = [['ID / Identificateur',\n-                 'Title English / Titre en anglais',\n-                 'Title French / Titre en français',\n-                 \"Department Name English / Nom du ministère en anglais\",\n-                 \"Department Name French / Nom du ministère en français\",\n-                 \"number of downloads / nombre de téléchargements\"]]\n-        if isVisit:\n-            rows[0][5] = \"Number of visits / Nombre de visites\"\n-        for rec_id,count in top100:\n-            rec = self.ds.get(rec_id, None)\n-            if not rec:\n-                rec_title = deleted_ds[rec_id]['title_translated']\n-                rec_title = simplify_lang(json.loads(rec_title))\n-                org_id = deleted_ds[rec_id]['org_id']\n-            else:\n-                rec_title = simplify_lang(rec['title_translated'])\n-                org_id = rec['owner_org']\n-            [_, org_title] = self.org_id2name.get(org_id)\n-            org_title = org_title.split('|')\n-            org_title = [x.strip() for x in org_title]\n-            rows.append( [rec_id, rec_title['en'], rec_title['fr'],\n-                          org_title[0], org_title[1], count])\n-        rows = cleanup_illegal_characters(rows)\n-        sheet2 = {'name':'Top 100 Datasets',\n-                  'data': rows,\n-                   'col_width':{0:40, 1:50, 2:50, 3:50, 4:50, 5:40}  # col:width\n-                   }\n-        ga_tmp_dir = os.environ['GA_TMP_DIR']\n-        write_csv(os.path.join(ga_tmp_dir, \"od_ga_top100.csv\"), rows)\n-\n-        for org_id, recs in org_recs.items():\n-            rows = []\n-            title = self.org_id2name.get(org_id, ['unknown'])[0]\n-            for rec_id in recs:\n-                rec = self.ds.get(rec_id, None)\n-                if not rec:\n-                    rec_title = deleted_ds[rec_id]['title_translated']\n-                    rec_title = simplify_lang(json.loads(rec_title))\n-                else:\n-                    rec_title = simplify_lang(rec['title_translated'])\n-                count = data.get(rec_id)\n-                rows.append( [rec_id, rec_title['en'], rec_title['fr'], count])\n-            rows.sort(key=lambda x:-x[3])\n-            rows.insert(0, ['ID / Identificateur',\n-                            'Title English / Titre en anglais',\n-                            'Title French / Titre en français',\n-                            'Number of downloads / Nombre de téléchargements'])\n-            if isVisit:\n-                rows[0][3] = \"Number of visits / Nombre de visites\"\n-            rows.append(['total','','', org_stats.get(org_id)])\n-            rows = cleanup_illegal_characters(rows)\n-            sheets.append({'name':title,\n-                           'data': rows,\n-                           'col_width':{0:40, 1:50, 2:50, 3:40}\n-                           }\n-                          )\n-        sheets.sort(key=lambda x: x['name'])\n-        sheets.insert(0, sheet2)\n-        sheets.insert(0, sheet1)\n-        write_xls(os.path.join(ga_tmp_dir, 'od_ga_downloads.xls'), sheets)\n-\n-    def getRawReport(self, start='0', size = '1000'):\n-          return self.ga.reports().batchGet(\n-              body={\n-                'reportRequests': [\n-                {\n-                  'viewId': self.view_id,\n-                  'dateRanges': [{'startDate': self.start_date, 'endDate': self.end_date}],\n-#                  'dateRanges': [{'startDate': '2017-06-01', 'endDate': '2017-06-30'}],\n-                  'metrics': [{'expression': 'ga:totalEvents'},\n-                              {'expression': 'ga:eventValue'},\n-                              {'expression': 'ga:uniqueEvents'} ],\n-                  'dimensions':[{'name':'ga:eventCategory'},\n-                                {'name':'ga:eventAction'},\n-                                {'name':'ga:pagePath'}\n-                                ],\n-                  'dimensionFilterClauses': [ {\n-                        'filters': [{\n-                            'dimensionName': 'ga:eventCategory',\n-                            'operator': \"BEGINS_WITH\",\n-                            'expressions': ['resource']\n-                            }]\n-                        }],\n-                  'orderBys':[\n-                    {'fieldName': 'ga:totalEvents',\n-                     'sortOrder': 'DESCENDING'\n-                    }],\n-                   'pageToken': start,\n-                   'pageSize': size,\n-\n-                }]\n-              }\n-          ).execute()\n-\n-    def parseReport(self, response):\n-        return parseReport(response, 'ga:pagePath', 'ga:totalEvents')\n-\n-    def getRawVisitReport(self, start='0', size = '1000'):\n-          return self.ga.reports().batchGet(\n-              body={\n-                'reportRequests': [\n-                {\n-                  'viewId': self.view_id,\n-                  'dateRanges': [{'startDate': self.start_date, 'endDate': self.end_date}],\n-#                  'dateRanges': [{'startDate': '2017-06-01', 'endDate': '2017-06-30'}],\n-                  'metrics': [{'expression': 'ga:sessions'},\n-                              {'expression': 'ga:pageViews'}],\n-                  'dimensions':[{'name':'ga:pagePath'}],\n-                  'dimensionFilterClauses': [ {\n-                        'operator': 'OR',\n-                        'filters': [{\n-                            'dimensionName': 'ga:pagePath',\n-                            'operator': \"BEGINS_WITH\",\n-                            'expressions': ['/data/en/dataset/']\n-                            },{\n-                             'dimensionName': 'ga:pagePath',\n-                             'operator': \"BEGINS_WITH\",\n-                            'expressions': ['/data/fr/dataset/']\n-                            }]\n-                        }],\n-                  'orderBys':[\n-                    {'fieldName': 'ga:pageViews',\n-                     'sortOrder': 'DESCENDING'\n-                    }],\n-                   'pageToken': start,\n-                   'pageSize': size,\n-                }]\n-              }\n-          ).execute()\n-\n-    def download(self):\n-        if not self.file:\n-            # dataset http://open.canada.ca/data/en/dataset/c4c5c7f1-bfa6-4ff6-b4a0-c164cb2060f7\n-            url='http://open.canada.ca/static/od-do-canada.jl.gz'\n-            r = requests.get(url, stream=True)\n-\n-            f = tempfile.NamedTemporaryFile(delete=False)\n-            for chunk in r.iter_content(1024 * 64):\n-                    f.write(chunk)\n-            f.close()\n-            self.download_file = f.name\n-\n-        records = []\n-        fname = self.file or f.name\n-        try:\n-            with gzip.open(fname, 'rb') as fd:\n-                for line in fd:\n-                    records.append(json.loads(line.decode('utf-8')))\n-                    if len(records) >= 500:\n-                        yield (records)\n-                        records = []\n-            if len(records) >0:\n-                yield (records)\n-                records = []\n-        except GeneratorExit:\n-            pass\n-        except:\n-            import traceback\n-            traceback.print_exc()\n-            print('error reading downloaded file')\n-            sys.exit(0)\n-    def monthly_usage(self, start, end, csv_file):\n-        total, downloads = 0, 0\n-        nextPage='0'\n-        body={\n-            'reportRequests': [\n-            {\n-              'viewId': self.view_id,\n-              'dateRanges': [{'startDate': start, 'endDate': end}],\n-          'metrics': [{'expression': 'ga:sessions'},\n-                      {'expression': 'ga:pageviews'} ],\n-#          'dimensions':[{'name':'ga:pagePath'}],\n-          'orderBys':[\n-            {'fieldName': 'ga:pageviews',\n-             'sortOrder': 'DESCENDING'\n-            }],\n-           'pageToken': nextPage,\n-           'pageSize': '100',\n-        }]\n-        }\n-        while True:\n-            body['reportRequests'][0]['pageToken'] = nextPage\n-            response = self.ga.reports().batchGet(body=body\n-            ).execute()\n-            data, nextPage = parseReport(response, None, 'ga:sessions')\n-            for [vcount] in data:\n-                total += int(vcount)\n-            if not nextPage or nextPage =='0':\n-                break\n-        body={\n-            'reportRequests': [\n-                {\n-                  'viewId': self.view_id,\n-                  'dateRanges': [{'startDate': start, 'endDate': end}],\n-                      'metrics': [{'expression': 'ga:totalEvents'},\n-                                  {'expression': 'ga:eventValue'},\n-                                  {'expression': 'ga:uniqueEvents'} ],\n-#                      'dimensionFilterClauses': [ {\n-#                            'filters': [{\n-#                                'dimensionName': 'ga:eventCategory',\n-#                                'operator': \"BEGINS_WITH\",\n-#                                'expressions': ['resource']\n-#                                }]\n-#                            }],\n-                      'dimensionFilterClauses': [ {\n-                            'filters': [{\n-                                'dimensionName': 'ga:eventAction',\n-                                'operator': \"PARTIAL\",\n-                                'expressions': ['download']\n-                                }]\n-                            }],\n-                      'orderBys':[\n-                        {'fieldName': 'ga:totalEvents',\n-                         'sortOrder': 'DESCENDING'\n-                        }],\n-                       'pageToken': '0',\n-                       'pageSize': '100',\n-                }]\n-            }\n-        response = self.ga.reports().batchGet(body=body\n-            ).execute()\n-        data, nextPage = parseReport(response, None, 'ga:totalEvents')\n-        downloads = int(data[0][0])\n-        print(total, downloads)\n-        [year, month, _] = start.split('-')\n-        data = read_csv(csv_file)\n-        if int(data[1][0]) == int(year) and int(data[1][1]) == int(month):\n-            print('entry exists, no overwriting')\n-            return\n-        row = [year, month, total, downloads]\n-        data[0] = ['year / année', 'month / mois', 'visits / visites', 'downloads / téléchargements']\n-        data.insert(1, row)\n-        write_csv(csv_file, data)\n-\n-    def by_country(self, end, csv_file):\n-        body={\n-            'reportRequests': [\n-                {\n-                  'viewId': self.view_id,\n-                  'dateRanges': [{'startDate': '2012-01-01', 'endDate': end}],\n-                      'metrics': [{'expression': 'ga:sessions'} ],\n-                  'dimensions':[{'name':'ga:country'}],\n-#                  'dimensionFilterClauses': [ {\n-#                        'operator': 'OR',\n-#                        'filters': [{\n-#                            'dimensionName': 'ga:pagePath',\n-#                            'operator': \"BEGINS_WITH\",\n-#                            'expressions': ['/data/en/dataset']\n-#                            },{\n-#                             'dimensionName': 'ga:pagePath',\n-#                             'operator': \"BEGINS_WITH\",\n-#                            'expressions': ['/data/fr/dataset']\n-#                            }]\n-#                        }],\n-                  'orderBys':[\n-                    {'fieldName': 'ga:sessions',\n-                     'sortOrder': 'DESCENDING'\n-                    }],\n-                   'pageToken': '0',\n-                   'pageSize': '1000',\n-                }]\n-            }\n-        response = self.ga.reports().batchGet(body=body\n-            ).execute()\n-        data, nextPage = parseReport(response, 'ga:country', 'ga:sessions')\n-        total = 0\n-        country_fr = u'''Canada\n-            États-Unis\n-            Inde\n-            France\n-            Royaume Unis\n-            Chine\n-            Allemagne\n-            Australie\n-            Brésil\n-            Inconnu\n-            Russie\n-            Pakistan\n-            Algérie\n-            Espagne\n-            Mexique\n-            Japon\n-            Philippines\n-            Corée du Sud\n-            Italie\n-            Émirats Arabe Unis\n-            Turquie\n-            Maroc\n-            Ukraine\n-            Hollande\n-            Arabie Saoudite\n-            Iran\n-            Taiwan\n-            Nigéria\n-            Hong Kong\n-            Vietnam\n-            Indonésie\n-            Belgique\n-            Singapour\n-            Bangladesh\n-            Suisse\n-            Malaysie\n-            Égypte\n-            Colombie\n-            Tunisie\n-            Thaïlande\n-            Afrique du Sud\n-            Pologne\n-            Irlande\n-            Roumanie\n-            Suède\n-            Kenya\n-            Israël\n-            Nouvelle-Zélande\n-            Argentine\n-            Grèce\n-            Portugal\n-            Liban\n-            Tchétchénie\n-            Côte d’Ivoire\n-            Danemark\n-            Autriche\n-            Norvège\n-            Cameroon\n-            Finlande\n-            Pérou\n-            Qatar\n-            Chili\n-            Hongrie\n-            Sri Lanka\n-            Jordanie\n-            Bulgarie\n-            Koweit\n-            Kazakhstan\n-            Iraq\n-            Jamaïque\n-            Serbie\n-            Sénégal\n-            Népal\n-            Vénézuela\n-            Ghana\n-            Croatie\n-            Syrie\n-            Slovaquie\n-            Costa Rica\n-            Équateur\n-            République Dominicaine\n-            Soudan\n-            Biélorussie\n-            Éthiopie\n-            Oman\n-            Haïti\n-            Moldavie\n-            Lithuanie\n-            Trinidad & Tobago\n-            Tanzanie\n-            Albanie\n-            Maurice\n-            Bénin\n-            Congo - Kinshasa\n-            Luxembourg\n-            Madagascar\n-            Togo\n-            Ouganda\n-            Géorgie\n-            Slovénie'''\n-        country_en = u'''Canada\n-            United States\n-            India\n-            France\n-            United Kingdom\n-            China\n-            Germany\n-            Australia\n-            Brazil\n-            Unknown\n-            Russia\n-            Pakistan\n-            Algeria\n-            Spain\n-            Mexico\n-            Japan\n-            Philippines\n-            South Korea\n-            Italy\n-            United Arab Emirates\n-            Turkey\n-            Morocco\n-            Ukraine\n-            Netherlands\n-            Saudi Arabia\n-            Iran\n-            Taiwan\n-            Nigeria\n-            Hong Kong\n-            Vietnam\n-            Indonesia\n-            Belgium\n-            Singapore\n-            Bangladesh\n-            Switzerland\n-            Malaysia\n-            Egypt\n-            Colombia\n-            Tunisia\n-            Thailand\n-            South Africa\n-            Poland\n-            Ireland\n-            Romania\n-            Sweden\n-            Kenya\n-            Israel\n-            New Zealand\n-            Argentina\n-            Greece\n-            Portugal\n-            Lebanon\n-            Czechia\n-            Côte d’Ivoire\n-            Denmark\n-            Austria\n-            Norway\n-            Cameroon\n-            Finland\n-            Peru\n-            Qatar\n-            Chile\n-            Hungary\n-            Sri Lanka\n-            Jordan\n-            Bulgaria\n-            Kuwait\n-            Kazakhstan\n-            Iraq\n-            Jamaica\n-            Serbia\n-            Senegal\n-            Nepal\n-            Venezuela\n-            Ghana\n-            Croatia\n-            Syria\n-            Slovakia\n-            Costa Rica\n-            Ecuador\n-            Dominican Republic\n-            Sudan\n-            Belarus\n-            Ethiopia\n-            Oman\n-            Haiti\n-            Moldova\n-            Lithuania\n-            Trinidad & Tobago\n-            Tanzania\n-            Albania\n-            Mauritius\n-            Benin\n-            Congo - Kinshasa\n-            Luxembourg\n-            Madagascar\n-            Togo\n-            Uganda\n-            Georgia\n-            Slovenia'''\n-        country_fr = [c.strip() for c in country_fr.split('\\n')]\n-        country_en = [c.strip() for c in country_en.split('\\n')]\n-        assert( len(country_en)==len(country_fr))\n-        country_dict = { country_en[i]:country_fr[i] for i in range(len(country_en)) }\n-\n-        for row in data:\n-            c = row[0]\n-            if c == '(not set)':\n-                row[0] = 'unknown / Inconnu'\n-            else:\n-                c_fr = country_dict.get(c, c)\n-                row[0] = c + u' | ' + c_fr\n-            row[1] = int(row[1])\n-\n-        for c, count in data:\n-            total += count\n-        data = [ [country, int(count), \"%.2f\"%((count*100.0)/total) + '%' ] for [country, count] in data ]\n-\n-        data.insert(0,['region / Région', 'visits / Visites', 'percentage of total visits / Pourcentage du nombre total de visites'])\n-        write_csv(csv_file, data)\n-\n-    def by_region(self, end, csv_file):\n-        body={\n-            'reportRequests': [\n-                {\n-                  'viewId': self.view_id,\n-                  'dateRanges': [{'startDate': '2012-01-01', 'endDate': end}],\n-                      'metrics': [{'expression': 'ga:sessions'} ],\n-                  'dimensions':[{'name':'ga:region'}],\n-                  'dimensionFilterClauses': [ {\n-                        'filters': [{\n-                                'dimensionName': 'ga:country',\n-                                'operator': \"BEGINS_WITH\",\n-                                'expressions': ['Canada']\n-                            }],\n-                       }\n-#                       , {\n-#                           'operator': 'OR',\n-#                            'filters': [{\n-#                                'dimensionName': 'ga:pagePath',\n-#                                'operator': \"BEGINS_WITH\",\n-#                                'expressions': ['/data/en/dataset']\n-#                                },{\n-#                                 'dimensionName': 'ga:pagePath',\n-#                                 'operator': \"BEGINS_WITH\",\n-#                                'expressions': ['/data/fr/dataset']\n-#                              }]\n-#                          }\n-                        ],\n-                  'orderBys':[\n-                    {'fieldName': 'ga:sessions',\n-                     'sortOrder': 'DESCENDING'\n-                    }],\n-                   'pageToken': '0',\n-                   'pageSize': '1000',\n-                }]\n-            }\n-        response = self.ga.reports().batchGet(body=body\n-            ).execute()\n-        data, nextPage = parseReport(response, 'ga:region', 'ga:sessions')\n-        total = 0\n-        data = [ [country, int(count)] for [country, count] in data ]\n-        for c, count in data:\n-            total += count\n-        region_dict = {\n-                    'Ontario': u'Ontario',\n-                    'Quebec': u'Québec',\n-                    'British Columbia': u'Colombie-Britannique',\n-                    'Alberta': u'Alberta',\n-                    'Nova Scotia': u'Nouvelle-Écosse',\n-                    'Manitoba': u'Manitoba',\n-                    'Saskatchewan': u'Saskatchewan',\n-                    'New Brunswick': u'Nouveau-Brunswick',\n-                    'Newfoundland and Labrador': u'Terre-Neuve-et-Labrador',\n-                    'Prince Edward Island': u'Île-du-Prince-Édouard',\n-                    'Northwest Territories':u'Territoires du Nord-Ouest',\n-                    'Yukon Territory':u'Yukon',\n-                    'Nunavut':u'Nunavut',\n-        }\n-        data = [ [country if country !='(not set)' else 'unknown / Inconnu', int(count), \"%.2f\"%((count*100.0)/total) + '%' ] for [country, count] in data ]\n-        for row in data:\n-            r = row[0]\n-            if r == '(not set)':\n-                row[0] = 'unknown / Inconnu'\n-            else:\n-                r_fr = region_dict.get(r, r)\n-                row[0] = r + u' | ' + r_fr\n-\n-        data.insert(0,['region / Région', 'visits / Visites', 'percentage of total visits / Pourcentage du nombre total de visites'])\n-        write_csv(csv_file, data)\n-    def set_catalogue_file(self, end):\n-        y,m,d = end.split('-')\n-        ga_static_dir = os.environ['GA_STATIC_DIR']\n-        self.file = ''.join([ga_static_dir,'/od-do-canada.',y,m,d,'.jl.gz'])\n-        if not os.path.exists(self.file):\n-            raise Exception('not found ' + self.file)\n-    def by_org(self, org_stats, csv_file):\n-        rows = []\n-        header = ['Department or Agency', 'Ministère ou organisme',\n-                     'Department or Agency datasets', 'Jeux de données du Ministère ou organisme' , 'Total']\n-        for org_id, count in org_stats.items():\n-            [title_en, title_fr] = self.orgs.get(org_id, ['', ''])\n-            name = self.org_id2name[org_id][0]\n-            link_en = 'http://open.canada.ca/data/en/dataset?organization=' + name\n-            link_fr = 'http://ouvert.canada.ca//data/fr/dataset?organization=' + name\n-            rows.append([title_en, title_fr, link_en, link_fr, count])\n-        rows.sort(key=lambda x: x[0])\n-        rows = cleanup_illegal_characters(rows)\n-        write_csv(csv_file, rows, header)\n-\n-    def by_org_month(self, end, csv_month_file, csv_file):\n-        self.set_catalogue_file(end)\n-        # need to use cataloge file downloaded at 1st day of each month (or last day of prev month), same for by_org\n-        # need to update the last column, insert before last column\n-        # insert row if new org is created\n-        org_stats = defaultdict(int)\n-        total_num = 0\n-        for records in self.download():\n-            total_num += len(records)\n-            for rec in records:\n-                org_stats[rec['owner_org']] += 1\n-        org_stats = dict(org_stats)\n-        self.by_org(org_stats, csv_file)\n-\n-        ds = read_csv(csv_month_file)\n-        header = ds[0]\n-        total = ds[-1]\n-\n-        ds = ds[1:-1]\n-        en_months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\n-        fr_months = ['janv.','févr.','mars','avril','mai','juin','juil.','août','sept.','oct.','nov.','déc.']\n-        [y,m,d] = end.split('-')\n-        en_header = en_months[int(m)-1]+'-'+y\n-        fr_header = fr_months[int(m)-1]+'-'+y\n-        new_header = en_header + ' / ' + fr_header\n-        if header[-2] == new_header:\n-            print('exists ', new_header)\n-            return\n-        header[0] = 'Government of Canada Department or Agency / Ministère ou organisme'\n-        header[1] = 'Department or Agency datasets / Jeux de données du Ministère ou organisme'\n-        header[-1] = 'Total number of datasets / Nombre de jeux de données'\n-        header.insert(-1, new_header)\n-\n-        #need to rotate, merge column 2, and 3, update the title\n-        del header[2]\n-        def prior_header(h):\n-            hs = h.split(' / ')\n-            if len(hs) ==2:  # new header\n-                return ' '.join(['prior to', hs[0], ' / Avant', hs[1]])\n-            else:  # old english header\n-                hs = h.split('-')\n-                mi = en_months.index(hs[0].strip())\n-                nh = fr_months[mi] + '-' + hs[1]\n-                return ' '.join(['prior to', h, ' / Avant', nh])\n-        header[2] = prior_header(header[3])\n-        for i in range(3, len(header)-2):\n-            h = header[i]\n-            if len(h.split(' / ')) == 1:  #translate\n-                hs = h.split('-')\n-                mi = en_months.index(hs[0].strip())\n-                nh = fr_months[mi] + '-' + hs[1]\n-                header[i] = h + ' / ' + nh\n-\n-        # update exists one\n-        exists = {}\n-        for row in ds:\n-            #get org shortname\n-            name = row[1].split('=')[-1]\n-            # some orgs got new shortforms\n-            name = {\n-                'ceaa-acee': 'iaac-aeic',\n-                'neb-one': 'cer-rec',\n-            }.get(name, name)\n-\n-            org_id = self.org_name2id[name]\n-            exists[org_id] = True\n-            titles =  self.orgs.get(org_id, ['', ''])\n-            title = titles[0] + ' | ' + titles[1]\n-            link_en = 'http://open.canada.ca/data/en/dataset?organization=' + name\n-            link_fr = 'http://ouvert.canada.ca//data/fr/dataset?organization=' + name\n-            link = link_en + ' | ' + link_fr\n-            row[0] = title\n-            row[1] = link\n-\n-            count = org_stats.get(org_id, 0)\n-            var = count - int(row[-1])\n-            row[-1] = count\n-            row.insert(-1, var)\n-\n-            pr, c = int(row[2]), int(row[3])\n-            del row[2]\n-            row[2] = pr + c\n-\n-        # New org\n-        for org_id, count in org_stats.items():\n-            if org_id in exists:\n-                continue\n-            titles =  self.orgs.get(org_id, ['', ''])\n-            title = titles[0] + ' | ' + titles[1]\n-            name = self.org_id2name[org_id][0]\n-            link_en = 'http://open.canada.ca/data/en/dataset?organization=' + name\n-            link_fr = 'http://ouvert.canada.ca//data/fr/dataset?organization=' + name\n-            link = link_en + ' | ' + link_fr\n-            row = [ 0 for i in range(len(header)) ]\n-            row[0] = title\n-            row[1] = link\n-            row[-2] = row[-1] = count\n-            ds.append(row)\n-        ds.sort(key=lambda x:x[0])\n-\n-        var = total_num - int(total[-1])\n-        total[-1] = total_num\n-        total.insert(-1, var)\n-        pr, c = int(total[2]), int(total[3].replace(',', ''))\n-        del total[2]\n-        total[2] = pr + c\n-\n-        ds.append(total)\n-        write_csv(csv_month_file, ds, header)\n-\n-def report(client_secret_path, view_id, og_config_file, start, end, va):\n-      og_type = va\n-      analytics = initialize_analyticsreporting(client_secret_path)\n-      ds = DatasetDownload(analytics, view_id, og_config_file)\n-      if og_type == 'info':\n-          return ds.getStats(start, end, og_type)\n-      elif og_type == 'visit':\n-          return ds.getVisitStats(start, end, og_type)\n-      elif og_type == 'download':\n-          return ds.getStats(start, end, og_type)\n-\n-      ga_tmp_dir = os.environ['GA_TMP_DIR']\n-      ds.getStats(start, end, og_type); time.sleep(2)\n-      ds.monthly_usage(start, end, os.path.join(ga_tmp_dir, 'od_ga_month.csv')); time.sleep(2)\n-      ds.by_country(end, os.path.join(ga_tmp_dir, 'od_ga_by_country.csv')); time.sleep(2)\n-      ds.by_region(end, os.path.join(ga_tmp_dir, 'od_ga_by_region.csv'))\n-      ds.by_org_month(end, os.path.join(ga_tmp_dir, 'od_ga_by_org_month.csv'),\n-                      os.path.join(ga_tmp_dir, 'od_ga_by_org.csv'))\n-\n-def main():\n-    report(*sys.argv[1:])\n-\n-if __name__ == '__main__':\n-  main()\n-"
                },
                {
                    "sha": "bf63a3b07455b99af9463a059ec31b7bdeb95be7",
                    "filename": "bin/pd_ati_monitor.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 76,
                    "changes": 76,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fpd_ati_monitor.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fpd_ati_monitor.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fpd_ati_monitor.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,76 +0,0 @@\n-import sys\n-import subprocess\n-import requests\n-import time\n-\n-'''\n-Usage: python pd_ati_monitor.py usr1@reg_host usr2@portal_host slack_url\n-'''\n-\n-\n-def send_slack(text, url):\n-    payload = {\"text\":text}\n-    count = 5\n-    while count >0:\n-        count -= 1\n-        try:\n-            r = requests.post(url, json=payload)\n-            if r.status_code == 200:\n-                break\n-        except (requests.exceptions.ProxyError,\n-                requests.exceptions.ReadTimeout):\n-            print('slack exception')\n-            pass\n-        time.sleep(5)\n-\n-\n-def get_csv_upload(usr):\n-    cmd = 'ssh ' + usr + ' stat -c %Y /home/odatsrv/run_log/upload_ati_csv_from_datastore_tables.log'\n-    cmd = cmd.split(' ')\n-    result = subprocess.Popen(cmd, stdout=subprocess.PIPE).communicate()[0]\n-    now = time.time()\n-    if now - int(result) > 3600 * 12:\n-        return -1\n-\n-    cmd = 'ssh ' + usr + ' grep download /home/odatsrv/run_log/upload_ati_csv_from_datastore_tables.log | wc'\n-    cmd = cmd.split(' ')\n-    result = subprocess.Popen(cmd, stdout=subprocess.PIPE).communicate()[0]\n-    return int(result.split()[0])\n-\n-\n-def get_pd_update(usr):\n-    cmd = 'ssh '+ usr +' stat -c %Y /home/odatsrv/run_log/rebuild_pd_solr_from_uploaded_csv.log'\n-    cmd = cmd.split(' ')\n-    result = subprocess.Popen(cmd, stdout=subprocess.PIPE).communicate()[0]\n-    now = time.time()\n-    if now - int(result) > 3600 * 12:\n-        return -1\n-\n-    cmd = 'ssh ' + usr + ' grep Cleared /home/odatsrv/run_log/rebuild_pd_solr_from_uploaded_csv.log | wc'\n-    cmd = cmd.split(' ')\n-    # Python3\n-    #result = subprocess.run(cmd, stdout=subprocess.PIPE)\n-    #result.stdout.decode('utf-8')\n-    result = subprocess.Popen(cmd, stdout=subprocess.PIPE).communicate()[0]\n-    return int(result.split()[0])\n-\n-\n-def main():\n-    usr_reg = sys.argv[1]\n-    usr_portal = sys.argv[2]\n-    slack_url = sys.argv[3]\n-    def reason(code, total):\n-        if code==total:\n-            return 'ok'\n-        return ('file not updated.' if code==-1 else\n-                '{0} transfered but {1} expected.'.format(code, total))\n-    ret_code1 = get_csv_upload(usr_reg)\n-    ret_code2 = get_pd_update(usr_portal)\n-\n-    text = ' '.join(['csv', reason(ret_code1, 15),\n-                     'solr', reason(ret_code2, 9)])\n-\n-    send_slack(text, slack_url)\n-\n-if __name__=='__main__':\n-    main()"
                },
                {
                    "sha": "5118ac2e701a19cd8ce0dc2656c7cce652528346",
                    "filename": "bin/rebuild_solr_from_uploaded_csv.sh",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Frebuild_solr_from_uploaded_csv.sh",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Frebuild_solr_from_uploaded_csv.sh",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Frebuild_solr_from_uploaded_csv.sh?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,23 +0,0 @@\n-#!/bin/bash\n-source $HOME/.bashrc\n-\n-set -e\n-\n-. /var/www/html/venv/staging-portal/bin/activate\n-\n-/var/www/html/open_gov/staging-portal/ckanext-canada/bin/csv2solr.sh \\\n-    /var/www/html/open_gov/staging-portal/ckan/production.ini \\\n-    http://open.canada.ca/data \\\n-    ati:0797e893-751e-4695-8229-a5066e4fe43c \\\n-    wrongdoing:6e75f19c-d19d-48aa-984e-609c8d9bc403 \\\n-    travelq:009f9a49-c2d9-4d29-a6d4-1a228da335ce \\\n-    reclassification:f132b8a6-abad-43d6-b6ad-2301e778b1b6 \\\n-    hospitalityq:b9f51ef4-4605-4ef2-8231-62a2edda1b54 \\\n-    grants:432527ab-7aac-45b5-81d6-7597107a7013 \\\n-    contracts:d8f85d91-7dec-4fd1-8055-483b77225d8b \\\n-    travela:4ae27978-0931-49ab-9c17-0b119c0ba92f \\\n-    inventory:4ed351cf-95d8-4c10-97ac-6b3511f359b7\n-\n-if [ $? -ne 0 ]; then\n-   /home/odatsrv/bin/sendsentry.sh -t 'rebuild_pd_solr_from_uploaded_csv.sh failed to complete, please investigate' -f /home/odatsrv/run_log/rebuild_pd_solr_from_uploaded_csv.log\n-fi"
                },
                {
                    "sha": "7165e6b0199a39f612913f3e95269ea7519dca88",
                    "filename": "bin/reg2portal.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 81,
                    "changes": 81,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Freg2portal.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Freg2portal.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Freg2portal.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,81 +0,0 @@\n-#!/usr/bin/env python3\n-\"\"\"\n-Script uploading input files from registry to portal via CKAN API.\n-\n-Usage:\n-    reg2portal.py CKAN_INI_FILE PORTAL_URL API_KEY PACKAGE_ID FILE ...\n-\"\"\"\n-\n-import ckanapi\n-from ckanapi.errors import CKANAPIError\n-import ConfigParser\n-from docopt import docopt\n-import os\n-import sys\n-import logging\n-\n-usage = __doc__\n-opts = docopt(__doc__)\n-\n-if len(opts) < 5:\n-    sys.stderr.write(opts + '\\n')\n-    sys.exit()\n-\n-ini_file = opts['CKAN_INI_FILE']\n-portal_url = opts['PORTAL_URL']\n-api_key = opts['API_KEY']\n-package_id = opts['PACKAGE_ID']\n-files = opts['FILE']\n-\n-cfg = ConfigParser.ConfigParser()\n-cfg.read(opts['CKAN_INI_FILE'])\n-\n-logging.config.fileConfig(opts['CKAN_INI_FILE'])\n-log = logging.getLogger('ckanext')\n-\n-user_agent = None\n-\n-# Set user-agent\n-try:\n-    reg_url = cfg.get('app:main', 'ckan.site_url')\n-    if reg_url:\n-        user_agent = 'ckanapi-uploader/1.0 (+{0:s})'.format(reg_url)\n-except ConfigParser.Error:\n-    log.warning('ckan.site_url not configured: specifying default user-agent')\n-    pass\n-\n-# Instantiate remote ckanapi\n-portal_site = ckanapi.RemoteCKAN(\n-    portal_url,\n-    apikey=api_key,\n-    user_agent=user_agent)\n-\n-def upload_resources():\n-    target = portal_site.action.package_show(id=package_id)\n-\n-    existing_resources = dict((r['name'], r) for r in target['resources'])\n-\n-    for source in files:\n-        resource_name = os.path.basename(source)\n-        with open(source) as f:\n-            if resource_name in existing_resources:\n-                rc = portal_site.action.resource_update(\n-                    id=existing_resources[resource_name]['id'],\n-                    url='',\n-                    upload=(resource_name, f))\n-            else:\n-                rc = portal_site.action.resource_create(\n-                    package_id=package_id,\n-                    url='',\n-                    name=resource_name,\n-                    upload=(resource_name, f))\n-\n-        log.info('Uploaded resource [{0:s}] to package_id [{1:s}]'.format(\n-            resource_name,\n-            package_id))\n-\n-# Patch package: add resources\n-try:\n-    upload_resources()\n-except (AttributeError, ValueError, CKANAPIError, Exception) as e:\n-    log.error('Encountered {0:s}'.format(str(e)))"
                },
                {
                    "sha": "5987a6c040c7b6f6d3dc6ccd4700ec2f23ec08cf",
                    "filename": "bin/report.py",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 4,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Freport.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Freport.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Freport.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -4,7 +4,7 @@\n import json\n import hashlib\n from pathlib import Path\n-from sys import stderr, stdout, argv\n+from sys import stderr, stdout\n from csv import DictReader\n from collections import Counter\n \n@@ -54,6 +54,7 @@\n     set(ROWS_PD_TYPE_COLUMNS.values())\n )\n \n+\n @click.command(help='''\n Generate report to stdout by comparing PREVIOUS_DIR and CURRENT_DIR data\n Each directory is expected to have filtered/*.csv data files and a single\n@@ -71,18 +72,18 @@ def cli(header, period_label, previous_dir, current_dir):\n         )\n \n     # active_count, total_count = counts[col]\n-    counts = {col:(Counter(), Counter()) for col in COLUMNS}\n+    counts = {col: (Counter(), Counter()) for col in COLUMNS}\n \n     stderr.write('[» ] metadata…\\r')\n     existing_metadata = collect_existing_metadata(previous_dir)\n-    stderr.write(f'[»»\\r\\n')\n+    stderr.write('[»»\\r\\n')\n     count_metadata(current_dir, existing_metadata, counts)\n     del existing_metadata\n \n     for csv_name, col in sorted(ROWS_PD_TYPE_COLUMNS.items()):\n         stderr.write(f'[» ] {csv_name} rows…\\r')\n         existing_rows = collect_existing_rows(previous_dir, csv_name)\n-        stderr.write(f'[»»\\r\\n')\n+        stderr.write('[»»\\r\\n')\n         count_rows(current_dir, csv_name, existing_rows, counts[col])\n \n     sum_active = Counter()\n@@ -215,4 +216,5 @@ def count_rows(current_dir, csv_name, existing_rows, col_counts):\n             if h not in existing_rows:\n                 active_count[org] += 1\n \n+\n cli()"
                },
                {
                    "sha": "3c85d0ea44769d75c286164361c597dbe8b354f4",
                    "filename": "bin/resource_management/update_resource_size.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_management%2Fupdate_resource_size.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_management%2Fupdate_resource_size.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fresource_management%2Fupdate_resource_size.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -14,7 +14,7 @@\n import ckanapi\n import ckan\n \n-source = ckanapi.RemoteCKAN(sys.argv[1],apikey=sys.argv[2])\n+source = ckanapi.RemoteCKAN(sys.argv[1], apikey=sys.argv[2])\n file_report = sys.argv[3]\n print(\"Updating resource file sizes\")\n with open(file_report) as csvfile:\n@@ -28,7 +28,7 @@\n                 continue\n             s = source.action.resource_show(id=resource_id)\n             s = source.action.resource_patch(id=resource_id, size=new_size)\n-            print(\"Updated: \",[uuid, resource_id,s.get(\"size\")])\n-        except ckan.logic.NotFound as e:\n+            print(\"Updated: \", [uuid, resource_id, s.get(\"size\")])\n+        except ckan.logic.NotFound:\n             print(\"{0} dataset not found\".format(uuid))\n print(\"done\")"
                },
                {
                    "sha": "fb75c826ef2d62ab85fa5f07031b99a55c59865a",
                    "filename": "bin/resource_management/url_database.py",
                    "status": "modified",
                    "additions": 24,
                    "deletions": 16,
                    "changes": 40,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_management%2Furl_database.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_management%2Furl_database.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fresource_management%2Furl_database.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -12,7 +12,6 @@\n import grequests\n import requests\n import requests_ftp\n-import fileinput\n from datetime import datetime\n import json\n import csv\n@@ -33,27 +32,30 @@\n responses = []\n date = []\n ftp_urls = []\n-headers = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\"}\n+headers = {\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) \"\n+           \"AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36\"}\n+\n \n def check_for_connection():\n     url = \"https://www.google.ca\"\n     timeout = 5\n     connected = False\n-    while(connected==False):\n+    while connected is False:\n         try:\n-            request = requests.get(url, timeout=timeout)\n-            connected=True\n-        except (requests.ConnectionError, requests.Timeout) as exception:\n+            requests.get(url, timeout=timeout)\n+            connected = True\n+        except (requests.ConnectionError, requests.Timeout):\n             print(\"No internet connection.\")\n \n+\n print(\"Starting...\")\n print(\"Reading and testing URL's\")\n \n for i, dataset in enumerate(gzip.open(file), 1):\n     line = json.loads(dataset)\n     resources = line[\"resources\"]\n-    for l in range(len(resources)):\n-        url = resources[l][\"url\"].encode('utf-8')\n+    for rline in range(len(resources)):\n+        url = resources[rline][\"url\"].encode('utf-8')\n         if url in urls:\n             continue\n         elif 'ftp://' in url:\n@@ -71,11 +73,14 @@ def check_for_connection():\n                 sys.stderr.write(\"Testing Datasets {0} - {1}\"\n                                  .format(prev_i, i))\n                 prev_i = i\n-                rs = (grequests.head(u, timeout=10, headers=headers, verify=False, allow_redirects=True, stream=False) for u in batch_urls)\n+                rs = (grequests.head(u, timeout=10,\n+                                     headers=headers,\n+                                     verify=False, allow_redirects=True,\n+                                     stream=False) for u in batch_urls)\n                 batch_response = grequests.map(rs)\n                 responses.append(batch_response)\n                 for r in batch_response:\n-                    if not r is None:\n+                    if r is not None:\n                         r.close()\n                 batch_urls = []\n                 check_for_connection()\n@@ -84,14 +89,16 @@ def check_for_connection():\n url_match.append(batch_urls)\n sys.stderr.write(\"\\r\")\n sys.stderr.write(\"Testing Datasets {0} - {1}\".format(prev_i, i))\n-rs = (grequests.head(u, timeout=10, headers=headers, verify=False, allow_redirects=True, stream=False) for u in batch_urls)\n+rs = (grequests.head(u, timeout=10, headers=headers,\n+                     verify=False, allow_redirects=True,\n+                     stream=False) for u in batch_urls)\n batch_response = grequests.map(rs)\n responses.append(batch_response)\n for r in batch_response:\n-    if not r is None:\n+    if r is not None:\n         r.close()\n \n-#Testing FTP urls\n+# Testing FTP urls\n ftp_batch = []\n ftp_response = []\n \n@@ -102,15 +109,16 @@ def check_for_connection():\n     sys.stderr.write(\"Testing FTP {0} of {1}\".format(i, len(ftp_urls)))\n     s = requests.Session()\n     try:\n-        resp = s.head(url,timeout=10, headers=headers, verify=False, allow_redirects=True, stream=False)\n+        resp = s.head(url, timeout=10, headers=headers, verify=False,\n+                      allow_redirects=True, stream=False)\n         now = datetime.now()\n         dt_string = now.strftime(\"%Y-%m-%d %H:%M:%S\")\n         date.append(dt_string.encode('utf-8'))\n         ftp_batch.append(url)\n         ftp_response.append(resp)\n-        if not resp is None:\n+        if resp is not None:\n             s.close()\n-        if i%batch_size == 0:\n+        if i % batch_size == 0:\n             check_for_connection()\n     except (requests.exceptions.RequestException, UnicodeEncodeError) as e:\n         print(str(e))"
                },
                {
                    "sha": "d003b3346e7eaa2a2508a024eab2f19186e59ca5",
                    "filename": "bin/resource_management/url_metadata_match.py",
                    "status": "modified",
                    "additions": 104,
                    "deletions": 101,
                    "changes": 205,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_management%2Furl_metadata_match.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_management%2Furl_metadata_match.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fresource_management%2Furl_metadata_match.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,101 +1,104 @@\n-#!/usr/bin/env python3\r\n-\"\"\"\r\n-Gets broken links from url_database.csv and fetches corresponding metadata from\r\n-od-do-canada.jsonl.\r\n-Gets content-type of active links and compares to format of metadata.\r\n-\r\n-Arguments:\r\n-fileinput - metadata file to be read ('od-do-canada.jsonl')\r\n-url_database - url_database report generated by url_database.py\r\n-\r\n-Output:\r\n-broken_links_report.csv\r\n-incorrect_file_types_report.csv\r\n-\"\"\"\r\n-import sys\r\n-import fileinput\r\n-import json\r\n-import csv\r\n-\r\n-metadata = sys.argv[1]\r\n-url_database = sys.argv[2]\r\n-\r\n-broken_links = {}\r\n-file_types = {}\r\n-file_sizes = {}\r\n-\r\n-with open(url_database) as csvfile:\r\n-    reader = csv.DictReader(csvfile)\r\n-    for row in reader:\r\n-        url = row[\"url\"]\r\n-        date = row[\"date\"]\r\n-        response = row[\"response\"]\r\n-        content_length = row[\"content-length\"].encode('utf-8')\r\n-        if 'N/A' in response:\r\n-            broken_links[url] = [date, response]\r\n-        else:\r\n-            response_int = int(response.split('[')[1].split(']')[0])\r\n-            if response_int == 404 or response_int > 405:\r\n-                broken_links[url] = [date, response]\r\n-        file_sizes[url] = [date, content_length]\r\n-\r\n-\r\n-# For each resource in each dataset\r\n-# check if url is in broken links of url_database\r\n-# Get metadata\r\n-print(\"Matching URLs with Metadata\")\r\n-broken_links_data = []\r\n-file_length_data = []\r\n-broken_links_flag = 0\r\n-file_length_flag = 0\r\n-\r\n-\r\n-for dataset in open(metadata):\r\n-    line = json.loads(dataset, 'utf-8')\r\n-    resources = line[\"resources\"]\r\n-    for l, x in enumerate(resources):\r\n-        file_url = resources[l][\"url\"].encode('utf-8')\r\n-        if file_url in broken_links:\r\n-            data = broken_links.pop(file_url)\r\n-            broken_links_data.append(\r\n-                [file_url.strip(), data[0].strip(), data[1].strip(),\r\n-                 line[\"organization\"][\"title\"].encode('utf-8').strip(),\r\n-                 line[\"organization\"][\"name\"].encode('utf-8').strip(),\r\n-                 line[\"title\"].encode('utf-8').strip(), line[\"id\"].strip(),\r\n-                 resources[l][\"name_translated\"][\"en\"].strip(), resources[l][\"id\"].strip()])\r\n-            if len(broken_links) == 0:\r\n-                broken_links_flag = 1\r\n-            continue\r\n-        if file_url in file_sizes:\r\n-            data = file_sizes.pop(file_url)\r\n-            if not resources[l].has_key(\"size\") or resources[l][\"size\"] != data[1]:\r\n-                file_length_data.append(\r\n-                    [file_url, data[0], line[\"organization\"][\"title\"].encode('utf-8'),\r\n-                    line[\"title\"].encode('utf-8'), line[\"id\"], resources[l][\"id\"],\r\n-                    data[1]])\r\n-                if len(file_sizes) == 0:\r\n-                    file_length_flag = 1\r\n-            continue\r\n-\r\n-    if broken_links_flag == 1 and file_length_flag == 1:\r\n-        # stop searching when all broken links and incorrect filetypes are found\r\n-        break\r\n-\r\n-\r\n-print(\"Exporting to csv...\")\r\n-# Export tp CSV\r\n-with open('broken_links_report.csv', \"w\") as f:\r\n-    writer = csv.writer(f)\r\n-    writer.writerow((\"url\", \"date\", \"response\", \"organization_name\", \"org_code\", \"title\", \"uuid\", \"resource_name\", \"resource_id\"))\r\n-    for row in broken_links_data:\r\n-        writer.writerow(row)\r\n-f.close()\r\n-\r\n-with open('incorrect_file_size_report.csv', \"w\") as f:\r\n-    writer = csv.writer(f)\r\n-    writer.writerow((\"url\", \"date\", \"organization\", \"title\", \"uuid\", \"resource_id\",\r\n-                     \"found_file_size\"))\r\n-    for row in file_length_data:\r\n-        writer.writerow(row)\r\n-f.close()\r\n-print(\"Done.\")\r\n+#!/usr/bin/env python3\n+\"\"\"\n+Gets broken links from url_database.csv and fetches corresponding metadata from\n+od-do-canada.jsonl.\n+Gets content-type of active links and compares to format of metadata.\n+\n+Arguments:\n+fileinput - metadata file to be read ('od-do-canada.jsonl')\n+url_database - url_database report generated by url_database.py\n+\n+Output:\n+broken_links_report.csv\n+incorrect_file_types_report.csv\n+\"\"\"\n+import sys\n+import json\n+import csv\n+\n+metadata = sys.argv[1]\n+url_database = sys.argv[2]\n+\n+broken_links = {}\n+file_types = {}\n+file_sizes = {}\n+\n+with open(url_database) as csvfile:\n+    reader = csv.DictReader(csvfile)\n+    for row in reader:\n+        url = row[\"url\"]\n+        date = row[\"date\"]\n+        response = row[\"response\"]\n+        content_length = row[\"content-length\"].encode('utf-8')\n+        if 'N/A' in response:\n+            broken_links[url] = [date, response]\n+        else:\n+            response_int = int(response.split('[')[1].split(']')[0])\n+            if response_int == 404 or response_int > 405:\n+                broken_links[url] = [date, response]\n+        file_sizes[url] = [date, content_length]\n+\n+\n+# For each resource in each dataset\n+# check if url is in broken links of url_database\n+# Get metadata\n+print(\"Matching URLs with Metadata\")\n+broken_links_data = []\n+file_length_data = []\n+broken_links_flag = 0\n+file_length_flag = 0\n+\n+\n+for dataset in open(metadata):\n+    line = json.loads(dataset, 'utf-8')\n+    resources = line[\"resources\"]\n+    for rline, x in enumerate(resources):\n+        file_url = resources[rline][\"url\"].encode('utf-8')\n+        if file_url in broken_links:\n+            data = broken_links.pop(file_url)\n+            broken_links_data.append(\n+                [file_url.strip(), data[0].strip(), data[1].strip(),\n+                 line[\"organization\"][\"title\"].encode('utf-8').strip(),\n+                 line[\"organization\"][\"name\"].encode('utf-8').strip(),\n+                 line[\"title\"].encode('utf-8').strip(), line[\"id\"].strip(),\n+                 resources[rline][\"name_translated\"][\"en\"].strip(),\n+                 resources[rline][\"id\"].strip()])\n+            if len(broken_links) == 0:\n+                broken_links_flag = 1\n+            continue\n+        if file_url in file_sizes:\n+            data = file_sizes.pop(file_url)\n+            if (\n+              not resources[rline].has_key(\"size\")\n+              or resources[rline][\"size\"] != data[1]):\n+                file_length_data.append(\n+                    [file_url, data[0], line[\"organization\"][\"title\"].encode('utf-8'),\n+                     line[\"title\"].encode('utf-8'), line[\"id\"], resources[rline][\"id\"],\n+                     data[1]])\n+                if len(file_sizes) == 0:\n+                    file_length_flag = 1\n+            continue\n+\n+    if broken_links_flag == 1 and file_length_flag == 1:\n+        # stop searching when all broken links and incorrect filetypes are found\n+        break\n+\n+\n+print(\"Exporting to csv...\")\n+# Export tp CSV\n+with open('broken_links_report.csv', \"w\") as f:\n+    writer = csv.writer(f)\n+    writer.writerow((\"url\", \"date\", \"response\", \"organization_name\",\n+                     \"org_code\", \"title\", \"uuid\", \"resource_name\", \"resource_id\"))\n+    for row in broken_links_data:\n+        writer.writerow(row)\n+f.close()\n+\n+with open('incorrect_file_size_report.csv', \"w\") as f:\n+    writer = csv.writer(f)\n+    writer.writerow((\"url\", \"date\", \"organization\", \"title\", \"uuid\", \"resource_id\",\n+                     \"found_file_size\"))\n+    for row in file_length_data:\n+        writer.writerow(row)\n+f.close()\n+print(\"Done.\")"
                },
                {
                    "sha": "0ed7d89987b860621ba7fef6eb513ccf07f23dd8",
                    "filename": "bin/resource_urls.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_urls.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fresource_urls.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fresource_urls.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -5,12 +5,12 @@\n import time\n \n retries = 0\n-while retries< 5:\n+while retries < 5:\n     try:\n         source = ckanapi.RemoteCKAN(sys.argv[1])\n         pkg = source.action.package_show(id=sys.argv[2])\n         print(' '.join([r['url'] for r in pkg.get('resources', [])\n-            if r['url'].endswith('.csv')]))\n+              if r['url'].endswith('.csv')]))\n         sys.exit(0)\n     except ckanapi.errors.CKANAPIError:\n         retries += 1"
                },
                {
                    "sha": "477869397e7bef9fe860b01e4b64c480d5e28d84",
                    "filename": "bin/restore_trade_agreement_exceptions.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 3,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Frestore_trade_agreement_exceptions.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Frestore_trade_agreement_exceptions.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Frestore_trade_agreement_exceptions.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -3,7 +3,6 @@\n import unicodecsv\n import sys\n import codecs\n-import json\n \n good = open(sys.argv[1], 'rb')\n now = open(sys.argv[2], 'rb')\n@@ -21,14 +20,17 @@\n for row in good_csv:\n     ltr[row['owner_org'], row['reference_number']] = row['trade_agreement_exceptions']\n \n-fix_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=good_csv.fieldnames, encoding='utf-8')\n+fix_csv = unicodecsv.DictWriter(sys.stdout, fieldnames=good_csv.fieldnames,\n+                                encoding='utf-8')\n fix_csv.writeheader()\n \n for row in now_csv:\n     try:\n         tae = ltr[row['owner_org'], row['reference_number']]\n     except KeyError:\n-        sys.stderr.write('missing: ' + repr((row['owner_org'], row['reference_number'])) + '\\n')\n+        sys.stderr.write('missing: ' +\n+                         repr((row['owner_org'],\n+                               row['reference_number'])) + '\\n')\n         continue\n     if tae == row['trade_agreement_exceptions']:\n         continue"
                },
                {
                    "sha": "66f8e0b218bc8bcf68be085f4de889ceddae3ec5",
                    "filename": "bin/transitional_orgs_filter.py",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 7,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ftransitional_orgs_filter.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Ftransitional_orgs_filter.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ftransitional_orgs_filter.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -7,7 +7,8 @@\n \n Usage:\n \n-ckanapi dump organizations --all -r http://registry.data.gc.ca | bin/transitional_orgs_filter.py > transitional_orgs.jsonl\n+ckanapi dump organizations --all -r http://registry.data.gc.ca |\n+    bin/transitional_orgs_filter.py > transitional_orgs.jsonl\n \"\"\"\n \n import sys\n@@ -17,15 +18,15 @@\n \n log = getLogger(__name__)\n \n-filtered_fields = {u'id', u'name', u'title', u'title_translated',\n-                   u'department_number', u'umd_number', u'shortform',\n-                   u'ati_email', u'opengov_email', u'faa_schedule',\n-                   u'registry_access',}\n+filtered_fields = {'id', 'name', 'title', 'title_translated',\n+                   'department_number', 'umd_number', 'shortform',\n+                   'ati_email', 'opengov_email', 'faa_schedule',\n+                   'registry_access'}\n \n users = '--users' in sys.argv\n \n-for l in sys.stdin:\n-    o = json.loads(l)\n+for stdline in sys.stdin:\n+    o = json.loads(stdline)\n     line = {}\n     for key in o:\n         if key in filtered_fields:"
                },
                {
                    "sha": "7f95d70e20219e4c78d709922e00e98006df5d35",
                    "filename": "bin/travis-install",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 57,
                    "changes": 57,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Ftravis-install",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Ftravis-install",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ftravis-install?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,57 +0,0 @@\n-#!/bin/sh\n-\n-set -e\n-\n-# Install postgres and solr\n-sudo apt-get update -qq\n-sudo apt-get purge postgresql-9.2\n-sudo apt-get install solr-jetty postgresql-$PGVERSION libgeos-c1\n-\n-mkdir dl\n-cd dl\n-git clone https://github.com/open-data/ckan\n-cd -\n-\n-cd dl/ckan\n-git checkout canada-v2.8\n-python setup.py develop\n-cd -\n-\n-ln -s ../dl/ckan links/ckan\n-pip install html5lib==0.999\n-pip install -r links/ckan/requirements.txt --allow-all-external\n-pip install -r links/ckan/dev-requirements.txt --allow-all-external\n-pip install -e git+https://github.com/open-data/ckanext-wet-boew#egg=ckanext-wet-boew\n-pip install -e git+https://github.com/open-data/ckanext-scheming#egg=ckanext-scheming\n-pip install -e git+https://github.com/open-data/ckanext-fluent#egg=ckanext-fluent\n-pip install -e git+https://github.com/open-data/ckanext-recombinant#egg=ckanext-recombinant\n-pip install -e git+https://github.com/open-data/ckanext-extendedactivity#egg=ckanext-extendedactivity\n-pip install -e git+https://github.com/ckan/ckantoolkit#egg=ckantoolkit\n-pip install -r requirements.txt\n-\n-python setup.py develop\n-\n-# Setup postgres' users and databases\n-sudo -E -u postgres links/ckan/bin/postgres_init/1_create_ckan_db.sh\n-sudo -E -u postgres links/ckan/bin/postgres_init/2_create_ckan_datastore_db.sh\n-\n-# Configure Solr\n-echo \"NO_START=0\\nJETTY_HOST=127.0.0.1\\nJETTY_PORT=8983\\nJAVA_HOME=$JAVA_HOME\" | sudo tee /etc/default/jetty\n-# FIXME the solr schema cannot be hardcoded as it is dependent on the ckan version\n-sudo cp conf/solr/schema.xml /etc/solr/conf/schema.xml\n-sudo service jetty restart\n-\n-CANADA_DIR=\"`pwd`\"\n-CKAN_DIR=\"`python -c'import ckan; print ckan.__file__.rsplit(\"/\",2)[0]'`\"\n-cd \"$CKAN_DIR\"\n-ln -s \"$CKAN_DIR\"/test-core.ini \"$CANADA_DIR\"/links/test-core.ini\n-ln -s \"$CKAN_DIR\"/who.ini \"$CANADA_DIR\"/links/who.ini\n-\n-cat test-core.ini\n-echo setting up databases\n-paster db init -c test-core.ini\n-paster datastore set-permissions -c test-core.ini | sudo -u postgres psql\n-\n-cd -\n-bin/download_country.py\n-paster canada update-triggers -c test-core.ini"
                },
                {
                    "sha": "495432d99a039da065f21ee1288e55a95a1db804",
                    "filename": "bin/travis-script",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Ftravis-script",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Ftravis-script",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Ftravis-script?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,4 +0,0 @@\n-#!/bin/sh\n-\n-nosetests --with-pylons=test-core.ini --nologcapture ckanext/canada/tests $@\n-"
                },
                {
                    "sha": "dc7a13defc7febfa807292b54add68a9c94f635e",
                    "filename": "bin/update_ati_analytics.py",
                    "status": "modified",
                    "additions": 36,
                    "deletions": 15,
                    "changes": 51,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fupdate_ati_analytics.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fupdate_ati_analytics.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fupdate_ati_analytics.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -35,20 +35,31 @@ def get_smb_file():\n     check_paths = [\n         '/opt/tbs/ckan/smb_portal/portal/public/ati-informal-requests-analytics.csv',\n         '/opt/tbs/ckan/smb/portal/public/ati-informal-requests-analytics.csv',\n-        '/opt/tbs/ckan/smb_portal/portal/public/static/ati-informal-requests-analytics.csv',\n-        '/opt/tbs/ckan/smb/portal/public/static/ati-informal-requests-analytics.csv',]\n+        '/opt/tbs/ckan/smb_portal/portal/public/static/'\n+        'ati-informal-requests-analytics.csv',\n+        '/opt/tbs/ckan/smb/portal/public/static/'\n+        'ati-informal-requests-analytics.csv',]\n     for file in check_paths:\n         if os.path.isfile(file):\n             return file\n-    error_message('/opt/tbs/ckan/[smb_portal|smb]/portal/public/[static/]ati-informal-requests-analytics.csv does not exist.')\n+    error_message(\n+        '/opt/tbs/ckan/[smb_portal|smb]/portal/public/[static/]'\n+        'ati-informal-requests-analytics.csv does not exist.')\n \n \n-@click.command(short_help=\"Filters ATI Informal Analytics CSV and uploads to Registry Resource.\")\n-@click.option('-c', '--config', required=True, envvar='REGISTRY_INI', type=click.File('r'),\n-              help='CKAN config INI file. Defaults to the $REGISTRY_INI environment variable.')\n-@click.option('-r', '--resource-id', required=False, type=click.STRING, default='e664cf3d-6cb7-4aaa-adfa-e459c2552e3e',\n-              help='Resource ID to patch the file to. Defaults to e664cf3d-6cb7-4aaa-adfa-e459c2552e3e.')\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n+@click.command(\n+        short_help=\"Filters ATI Informal Analytics CSV \"\n+                   \"and uploads to Registry Resource.\")\n+@click.option('-c', '--config', required=True,\n+              envvar='REGISTRY_INI', type=click.File('r'),\n+              help='CKAN config INI file. Defaults to the '\n+                   '$REGISTRY_INI environment variable.')\n+@click.option('-r', '--resource-id', required=False,\n+              type=click.STRING, default='e664cf3d-6cb7-4aaa-adfa-e459c2552e3e',\n+              help='Resource ID to patch the file to. '\n+                   'Defaults to e664cf3d-6cb7-4aaa-adfa-e459c2552e3e.')\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n def update(config, resource_id, verbose):\n     \"\"\"\n     Filters ATI Informal Analytics CSV and uploads to Registry Resource.\n@@ -65,6 +76,7 @@ def update(config, resource_id, verbose):\n     skipped_rows = 0\n     command = ['ckanapi', 'action', 'resource_patch', '--config=%s' % config.name,\n                'id=%s' % resource_id, 'upload@%s' % temp_file]\n+\n     try:\n         with open(generated_file, 'r') as df:\n             reader = csv.DictReader(df)\n@@ -81,27 +93,36 @@ def update(config, resource_id, verbose):\n                         elif '%sYear' % BOM in row:\n                             year_key = '%sYear' % BOM\n                         else:\n-                            errors.write('Failed to patch resource %s with errors:\\n\\nCannot find Year header.' % resource_id)\n+                            errors.write('Failed to patch resource %s '\n+                                         'with errors:\\n\\nCannot find Year header.'\n+                                         % resource_id)\n                             raise LookupError\n-                        if int(row[year_key]) == int(today.year) and int(row['Month']) == int(today.month):\n+                        if (\n+                          int(row[year_key]) == int(today.year) and\n+                          int(row['Month']) == int(today.month)):\n                             skipped_rows += 1\n                             if verbose:\n-                                click.echo('Skipping row %s, excluding Y,M: %s,%s' % (row_index, int(row[year_key]), int(row['Month'])))\n+                                click.echo('Skipping row %s, excluding Y,M: %s,%s' %\n+                                           (row_index, int(row[year_key]),\n+                                            int(row['Month'])))\n                             continue\n                         writer.writerow(row)\n                     except ValueError:\n                         pass\n                     row_index += 1\n         if skipped_rows:\n-            success_message('Filtered %s rows, excluded Y,M: %s,%s' % (skipped_rows, today.year, today.month))\n+            success_message('Filtered %s rows, excluded Y,M: %s,%s' %\n+                            (skipped_rows, today.year, today.month))\n         if verbose:\n-            success_message('Executing command:\\n\\n%s\\n' % subprocess.list2cmdline(command))\n+            success_message('Executing command:\\n\\n%s\\n' %\n+                            subprocess.list2cmdline(command))\n         p = subprocess.run(command)\n         p.check_returncode()\n     except LookupError:\n         pass\n     except Exception as e:\n-        errors.write('Failed to patch resource %s with errors:\\n\\n%s' % (resource_id, e))\n+        errors.write('Failed to patch resource %s with errors:\\n\\n%s' %\n+                     (resource_id, e))\n         if verbose:\n             errors.write('\\n')\n             traceback.print_exc(file=errors)"
                },
                {
                    "sha": "35dad012da4cbb57e12184cc8ef2e9b3831469ca",
                    "filename": "bin/update_broken_link.sh",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 22,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fupdate_broken_link.sh",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fupdate_broken_link.sh",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fupdate_broken_link.sh?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,22 +0,0 @@\n-#!/bin/bash\n-source $HOME/.bashrc\n-\n-set -e\n-\n-wget -O /tmp/od-do-canada.jl.gz http://open.canada.ca/static/od-do-canada.jl.gz\n-\n-rm -rf /tmp/od_linkcheker2.db\n-TMPDIR=\"/home/odatsrv/tmp\"\n-export LD_PRELOAD=/lib64/libgcc_s.so.1\n-(time /srv/python/bin/python3 /home/odatsrv/bin/link_check.py --file=/tmp/od-do-canada.jl.gz ) > \"${TMPDIR}/link_check.log\" 2>&1\n-sleep 30\n-(time /srv/python/bin/python3 /home/odatsrv/bin/link_check.py --file=/tmp/od-do-canada.jl.gz --quick ) > \"${TMPDIR}/link_check.log2\" 2>&1\n-sleep 30\n-(time /srv/python/bin/python3 /home/odatsrv/bin/link_check.py --file=/tmp/od-do-canada.jl.gz --quick ) > \"${TMPDIR}/link_check.log3\" 2>&1\n-sleep 30\n-(time /srv/python/bin/python3 /home/odatsrv/bin/link_check.py --file=/tmp/od-do-canada.jl.gz --quick ) > \"${TMPDIR}/link_check.log4\" 2>&1\n-\n-(time  /srv/python/bin/python3 /home/odatsrv/bin/link_check.py --file=/tmp/od-do-canada.jl.gz --dump=\"${TMPDIR}/brokenlink.csv\" )  > \"${TMPDIR}/link_dump.log\" 2>&1\n-. /var/www/html/venv/rc_reg/bin/activate\n-ckanapi action resource_patch -c /var/www/html/rc_reg/ckan/production-cli.ini \\\n-\tid=1f1b0e53-40cc-4900-a08a-e5595697aaea upload@\"${TMPDIR}/brokenlink.csv\""
                },
                {
                    "sha": "284c531eaf8bbf6cf7c56864eabfd69e468d4e9f",
                    "filename": "bin/user_import_filter.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 3,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fuser_import_filter.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fuser_import_filter.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fuser_import_filter.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -12,8 +12,8 @@\n import sys\n import json\n \n-for l in sys.stdin.readlines():\n-    o = json.loads(l)\n+for line in sys.stdin.readlines():\n+    o = json.loads(line)\n     if o[\"display_name\"] == 'visitor':\n         continue\n     print(json.dumps({\n@@ -26,4 +26,3 @@\n         \"password_hash\": o[\"password_hash\"],\n         \"sysadmin\": o[\"sysadmin\"],\n         }))\n-"
                },
                {
                    "sha": "8237c39149d8d12d4ac7aa551d9d42ef2db7da72",
                    "filename": "bin/user_list_filter.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 3,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fuser_list_filter.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fuser_list_filter.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fuser_list_filter.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -6,14 +6,15 @@\n \n Usage:\n \n-ckanapi dump users --all -r http://registry.data.gc.ca | bin/user_list_filter.py > users.jsonl\n+ckanapi dump users --all -r http://registry.data.gc.ca |\n+    bin/user_list_filter.py > users.jsonl\n \"\"\"\n \n import sys\n import json\n \n-for l in sys.stdin.readlines():\n-    o = json.loads(l)\n+for line in sys.stdin.readlines():\n+    o = json.loads(line)\n     if o[\"display_name\"] == 'visitor':\n         continue\n     print(json.dumps({"
                },
                {
                    "sha": "315b7b4d5c7fd6417bdc35acc619d87b7d458dc1",
                    "filename": "bin/warehouse/csv_diff.py",
                    "status": "modified",
                    "additions": 23,
                    "deletions": 16,
                    "changes": 39,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fwarehouse%2Fcsv_diff.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fwarehouse%2Fcsv_diff.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fwarehouse%2Fcsv_diff.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,37 +1,40 @@\n-import json\n import requests\n import sys\n import csv\n import os\n import codecs\n-from sys import stderr, stdout, argv\n from requests.packages.urllib3.exceptions import InsecureRequestWarning\n \n requests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n \n+\n def get_fieldnames(fields):\n-    fieldnames = \",\".join([f['id'] for f in fields])+\",owner_org,log_date,log_activity\"\n+    fieldnames = \",\".join([f['id'] for f in fields]) + \\\n+        \",owner_org,log_date,log_activity\"\n     return fieldnames\n \n+\n def csv_to_dict(csv_file, primary_keys):\n     csv_dict = {}\n     with open(csv_file) as f:\n-        hashcsv = csv.DictReader(codecs.EncodedFile(f, 'utf-8', 'utf-8-sig'), delimiter=\",\")\n+        hashcsv = csv.DictReader(\n+            codecs.EncodedFile(f, 'utf-8', 'utf-8-sig'), delimiter=\",\")\n         for row in hashcsv:\n             primary_fields = [str(row[t]) for t in primary_keys]\n             uid = '-'.join(primary_fields)\n             csv_dict[uid] = row\n     return csv_dict\n \n+\n def compare_dicts(prev, curr):\n     removed_keys = []\n     added_keys = []\n     modified_keys = []\n     for key in prev:\n-        if not key in curr:\n+        if key not in curr:\n             removed_keys.append(key)\n     for key in curr:\n-        if not key in prev:\n+        if key not in prev:\n             added_keys.append(key)\n         else:\n             for field in curr[key]:\n@@ -40,9 +43,10 @@ def compare_dicts(prev, curr):\n                     break\n     return removed_keys, added_keys, modified_keys\n \n+\n def add_metadata_fields(prev, curr, rkeys, akeys, mkeys, date):\n     results = {}\n-    result_keys=[]\n+    result_keys = []\n     for key in akeys:\n         curr[key][\"log_date\"] = date\n         curr[key][\"log_activity\"] = 'C'\n@@ -64,15 +68,18 @@ def add_metadata_fields(prev, curr, rkeys, akeys, mkeys, date):\n     return results, result_keys\n \n \n-prev_csv, current_csv, endpoint, datestamp, outfile = sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5]\n+prev_csv, current_csv, endpoint, datestamp, outfile = \\\n+    sys.argv[1], sys.argv[2], sys.argv[3], sys.argv[4], sys.argv[5]\n \n field_info = requests.get(endpoint, timeout=100, verify=False).json()\n \n \n # Grab the primary key fields from the datatype reference endpoint\n-current_csv_resource = current_csv.split('_')[-1].replace('.csv','')\n-pk_fields = [f['primary_key'][0] for f in field_info['resources'] if current_csv_resource == f['resource_name']]\n-fields = [f['fields'] for f in field_info['resources'] if current_csv_resource == f['resource_name']]\n+current_csv_resource = current_csv.split('_')[-1].replace('.csv', '')\n+pk_fields = [f['primary_key'][0] for f in field_info['resources']\n+             if current_csv_resource == f['resource_name']]\n+fields = [f['fields'] for f in field_info['resources']\n+          if current_csv_resource == f['resource_name']]\n fieldnames = get_fieldnames(fields[0]).split(\",\")\n \n pk_fields.append('owner_org')\n@@ -82,11 +89,12 @@ def add_metadata_fields(prev, curr, rkeys, akeys, mkeys, date):\n \n removed_keys, added_keys, modified_keys = compare_dicts(old_csv_dict, new_csv_dict)\n \n-result_rows, result_keys = add_metadata_fields(old_csv_dict,new_csv_dict,removed_keys,added_keys,modified_keys,datestamp)\n+result_rows, result_keys = add_metadata_fields(\n+    old_csv_dict, new_csv_dict, removed_keys, added_keys, modified_keys, datestamp)\n \n exists_flag = 0\n if os.path.isfile(outfile):\n-    exists_flag=1\n+    exists_flag = 1\n if result_rows:\n     print(\"writing\")\n     with open(outfile, 'a') as f:\n@@ -95,10 +103,9 @@ def add_metadata_fields(prev, curr, rkeys, akeys, mkeys, date):\n             warehouse.writeheader()\n         for row in result_keys:\n             for key in result_rows[row].keys():\n-                if not key in fieldnames:\n+                if key not in fieldnames:\n                     result_rows[row].pop(key)\n             warehouse.writerow(result_rows[row])\n         f.close()\n-\n else:\n-    print(\"No changes detected between files\")\n\\ No newline at end of file\n+    print(\"No changes detected between files\")"
                },
                {
                    "sha": "2e7c07813b4f1d6857f3ed054e62496d6eded3a6",
                    "filename": "bin/warehouse/generate_warehouse.py",
                    "status": "modified",
                    "additions": 120,
                    "deletions": 112,
                    "changes": 232,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fwarehouse%2Fgenerate_warehouse.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fwarehouse%2Fgenerate_warehouse.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fwarehouse%2Fgenerate_warehouse.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,112 +1,120 @@\n-#!/usr/bin/env python3\r\n-\"\"\"\r\n-Creates Warehouse for all PD-Types found in archived backups.\r\n-\r\n-Arguments:\r\n-fname - directory of archived backups\r\n-operation - '-d' to compare last 2 backups (default), '-a' to compare all backups.\r\n-\"\"\"\r\n-import tarfile\r\n-import sys\r\n-import os\r\n-import subprocess\r\n-import shutil\r\n-import tempfile\r\n-from datetime import datetime\r\n-import argparse\r\n-\r\n-\r\n-\r\n-parser = argparse.ArgumentParser(description=\"Run warehouse script. By default, it runs on the last 2 backups.\")\r\n-parser.add_argument(\"fname\", help=\"directory of archived backups\")\r\n-parser.add_argument(\"-a\", \"--all\", action='store_true', help=\"compare all backups.\")\r\n-args = parser.parse_args()\r\n-\r\n-tar_array = sorted(os.listdir(args.fname))\r\n-if args.all == False:\r\n-    tar_array = tar_array[-2:]\r\n-\r\n-prev = ''\r\n-curr = ''\r\n-\r\n-def get_base(tfile):\r\n-    base = os.path.basename(tfile)\r\n-    pd_name = os.path.splitext(os.path.splitext(base)[0])[0]\r\n-    return pd_name\r\n-\r\n-def extract(tfile, dest):\r\n-    fpath = './' + dest\r\n-    tar = tarfile.open(args.fname + tfile)\r\n-    tar.extractall(path=fpath)\r\n-    tar.close()\r\n-    return fpath\r\n-\r\n-def run_migrations(fpath, temp_dir):\r\n-\r\n-    for csvfile in os.listdir(fpath):\r\n-        print(\"Migrating {0} from directory {1}\".format(csvfile, fpath))\r\n-        proc = subprocess.Popen(['python', 'migrate_all.py', fpath+'/'+csvfile, temp_dir+'/'+fpath+'m_'+csvfile])\r\n-        if proc.wait():\r\n-            sys.exit(1)\r\n-\r\n-def csv_diff(prev_csv, curr_csv, endpoint, outfile):\r\n-    now = datetime.now()\r\n-    dt_string = now.strftime(\"%Y-%m-%d\")\r\n-\r\n-    print(\"Getting difference between {0} and {1}\".format(prev_csv, curr_csv))\r\n-    proc = subprocess.Popen(['python', 'csv_diff.py', temp_dir+'/'+prev_csv, temp_dir+'/'+curr_csv, endpoint,\r\n-                             dt_string, outfile])\r\n-    if proc.wait():\r\n-        sys.exit(1)\r\n-\r\n-\r\n-if not os.path.exists('warehouse_reports'):\r\n-    os.mkdir('warehouse_reports')\r\n-\r\n-while tar_array:\r\n-    with tempfile.TemporaryDirectory() as temp_dir:\r\n-        if tar_array == []:\r\n-            break\r\n-        if prev == '':\r\n-            prev = tar_array.pop(0)\r\n-            curr = tar_array.pop(0)\r\n-        else:\r\n-            prev = curr\r\n-            curr = tar_array.pop(0)\r\n-\r\n-        prev_base = get_base(prev)\r\n-        curr_base = get_base(curr)\r\n-\r\n-        # Extract zipped backups\r\n-        prev_path = extract(prev, prev_base)\r\n-        curr_path = extract(curr, curr_base)\r\n-\r\n-        # Migrate all CSVs\r\n-        run_migrations(prev_path, temp_dir)\r\n-        run_migrations(curr_path, temp_dir)\r\n-\r\n-        # Delete extracted directories\r\n-        shutil.rmtree(prev_path)\r\n-        shutil.rmtree(curr_path)\r\n-\r\n-        # Match Migrated CSVs\r\n-        csv_array = sorted(os.listdir(temp_dir))\r\n-        prev_array = [a for a in csv_array if prev_base in a]\r\n-        curr_array = [a for a in csv_array if curr_base in a]\r\n-\r\n-        for curr_csv in curr_array:\r\n-            now = datetime.now()\r\n-            dt_string = now.strftime(\"%H:%M:%s\")\r\n-            print(dt_string,'\\n')\r\n-            pdfile = curr_csv.split('_')[1]\r\n-            pdtype = pdfile.split('.')[0]\r\n-            schema = pdtype\r\n-            if 'nil' in pdtype or 'std' in pdtype:\r\n-                schema = schema.split('-')[0]\r\n-            prev_csv_matches = [string for string in prev_array if pdfile in string]\r\n-            if prev_csv_matches:\r\n-                csv_diff(prev_csv_matches[0], curr_csv,\r\n-                    'http://open.canada.ca/data/en/recombinant-schema/{0}.json'.format(schema),\r\n-                    'warehouse_reports/{0}_warehouse.csv'.format(pdtype))\r\n-\r\n-\r\n+#!/usr/bin/env python3\n+\"\"\"\n+Creates Warehouse for all PD-Types found in archived backups.\n+\n+Arguments:\n+fname - directory of archived backups\n+operation - '-d' to compare last 2 backups (default), '-a' to compare all backups.\n+\"\"\"\n+import tarfile\n+import sys\n+import os\n+import subprocess\n+import shutil\n+import tempfile\n+from datetime import datetime\n+import argparse\n+\n+\n+parser = argparse.ArgumentParser(\n+    description=\"Run warehouse script. By default, it runs on the last 2 backups.\")\n+parser.add_argument(\"fname\", help=\"directory of archived backups\")\n+parser.add_argument(\"-a\", \"--all\", action='store_true', help=\"compare all backups.\")\n+args = parser.parse_args()\n+\n+tar_array = sorted(os.listdir(args.fname))\n+if args.all is False:\n+    tar_array = tar_array[-2:]\n+\n+prev = ''\n+curr = ''\n+\n+\n+def get_base(tfile):\n+    base = os.path.basename(tfile)\n+    pd_name = os.path.splitext(os.path.splitext(base)[0])[0]\n+    return pd_name\n+\n+\n+def extract(tfile, dest):\n+    fpath = './' + dest\n+    tar = tarfile.open(args.fname + tfile)\n+    tar.extractall(path=fpath)\n+    tar.close()\n+    return fpath\n+\n+\n+def run_migrations(fpath, temp_dir):\n+\n+    for csvfile in os.listdir(fpath):\n+        print(\"Migrating {0} from directory {1}\".format(csvfile, fpath))\n+        proc = subprocess.Popen(\n+            ['python', 'migrate_all.py',\n+             fpath+'/' + csvfile, temp_dir + '/' + fpath + 'm_' + csvfile])\n+        if proc.wait():\n+            sys.exit(1)\n+\n+\n+def csv_diff(prev_csv, curr_csv, endpoint, outfile):\n+    now = datetime.now()\n+    dt_string = now.strftime(\"%Y-%m-%d\")\n+\n+    print(\"Getting difference between {0} and {1}\".format(prev_csv, curr_csv))\n+    proc = subprocess.Popen(\n+        ['python', 'csv_diff.py', temp_dir + '/' + prev_csv, temp_dir + '/' + curr_csv,\n+         endpoint, dt_string, outfile])\n+    if proc.wait():\n+        sys.exit(1)\n+\n+\n+if not os.path.exists('warehouse_reports'):\n+    os.mkdir('warehouse_reports')\n+\n+while tar_array:\n+    with tempfile.TemporaryDirectory() as temp_dir:\n+        if tar_array == []:\n+            break\n+        if prev == '':\n+            prev = tar_array.pop(0)\n+            curr = tar_array.pop(0)\n+        else:\n+            prev = curr\n+            curr = tar_array.pop(0)\n+\n+        prev_base = get_base(prev)\n+        curr_base = get_base(curr)\n+\n+        # Extract zipped backups\n+        prev_path = extract(prev, prev_base)\n+        curr_path = extract(curr, curr_base)\n+\n+        # Migrate all CSVs\n+        run_migrations(prev_path, temp_dir)\n+        run_migrations(curr_path, temp_dir)\n+\n+        # Delete extracted directories\n+        shutil.rmtree(prev_path)\n+        shutil.rmtree(curr_path)\n+\n+        # Match Migrated CSVs\n+        csv_array = sorted(os.listdir(temp_dir))\n+        prev_array = [a for a in csv_array if prev_base in a]\n+        curr_array = [a for a in csv_array if curr_base in a]\n+\n+        for curr_csv in curr_array:\n+            now = datetime.now()\n+            dt_string = now.strftime(\"%H:%M:%s\")\n+            print(dt_string, '\\n')\n+            pdfile = curr_csv.split('_')[1]\n+            pdtype = pdfile.split('.')[0]\n+            schema = pdtype\n+            if 'nil' in pdtype or 'std' in pdtype:\n+                schema = schema.split('-')[0]\n+            prev_csv_matches = [string for string in prev_array if pdfile in string]\n+            if prev_csv_matches:\n+                csv_diff(\n+                    prev_csv_matches[0],\n+                    curr_csv,\n+                    'http://open.canada.ca/data/'\n+                    'en/recombinant-schema/{0}.json'.format(schema),\n+                    'warehouse_reports/{0}_warehouse.csv'.format(pdtype))"
                },
                {
                    "sha": "d0ccae55858f96f38f2586c19b36dc6ca190c584",
                    "filename": "bin/warehouse/migrate_all.py",
                    "status": "modified",
                    "additions": 24,
                    "deletions": 12,
                    "changes": 36,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fwarehouse%2Fmigrate_all.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/bin%2Fwarehouse%2Fmigrate_all.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fwarehouse%2Fmigrate_all.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,13 +1,15 @@\n #!/usr/bin/env python3\n \"\"\"\n-This script takes proactive disclosure data in the form of a csv file and runs it against the corresponding migration scripts\n+This script takes proactive disclosure data in the form\n+of a csv file and runs it against the corresponding migration scripts\n \"\"\"\n \n import sys\n import codecs\n import glob\n import io\n-import os, errno\n+import os\n+import errno\n import subprocess\n import shutil\n \n@@ -19,17 +21,25 @@ def run_scripts(infile, outfile, matching_files):\n \n     # Covers the case where there is only one migration script for the given type\n     if len(matching_files) == 1:\n-        proc_array.append(subprocess.Popen([\"python\", matching_files[0], 'warehouse'], stdin=subprocess.PIPE, stdout=outfile))\n-\n+        proc_array.append(subprocess.Popen(\n+            [\"python\", matching_files[0], 'warehouse'],\n+            stdin=subprocess.PIPE, stdout=outfile))\n     else:\n         for matching_file in matching_files:\n-            print(\"Starting process: {0} with {1}\".format(matching_files.index(matching_file), matching_file))\n+            print(\"Starting process: {0} with {1}\".format(\n+                matching_files.index(matching_file), matching_file))\n             if len(proc_array) == 0:\n-                proc_array.append(subprocess.Popen(['python', matching_file, 'warehouse'], stdin=subprocess.PIPE, stdout=subprocess.PIPE))\n+                proc_array.append(subprocess.Popen(\n+                    ['python', matching_file, 'warehouse'],\n+                    stdin=subprocess.PIPE, stdout=subprocess.PIPE))\n             elif matching_file == matching_files[-1]:\n-                proc_array.append(subprocess.Popen(['python', matching_file, 'warehouse'], stdin=proc_array[-1].stdout, stdout=outfile))\n+                proc_array.append(subprocess.Popen(\n+                    ['python', matching_file, 'warehouse'],\n+                    stdin=proc_array[-1].stdout, stdout=outfile))\n             else:\n-                proc_array.append(subprocess.Popen(['python', matching_file, 'warehouse'], stdin=proc_array[-1].stdout, stdout=subprocess.PIPE))\n+                proc_array.append(subprocess.Popen(\n+                    ['python', matching_file, 'warehouse'],\n+                    stdin=proc_array[-1].stdout, stdout=subprocess.PIPE))\n \n     # Check if the input csv has a byte order marks\n     if infile.read(3) != codecs.BOM_UTF8:\n@@ -38,14 +48,14 @@ def run_scripts(infile, outfile, matching_files):\n     infile.seek(0)\n \n     try:\n-    # writing, flushing, whatever goes here\n+        # writing, flushing, whatever goes here\n         for chunk in iter(lambda: infile.read(1000), ''):\n             proc_array[0].stdin.write(chunk)\n         proc_array[0].stdin.close()\n     except IOError as e:\n         # skip if it's just a SIGPIPE signal exception\n         if e.errno != errno.EPIPE:\n-            raise \n+            raise\n \n     while proc_array[0].poll() is None:\n         pass\n@@ -59,10 +69,12 @@ def run_scripts(infile, outfile, matching_files):\n pd_type = os.path.splitext(base)[0]\n proc_array = []\n \n-# Check if the input csv file is a *-nil data type, and retrieve only the nil migration scripts\n+# Check if the input csv file is a *-nil data type,\n+# and retrieve only the nil migration scripts\n if \"nil\" not in pd_type:\n     search_pd = '*_{0}_*'.format(pd_type)\n-    matching_files = sorted([mf for mf in glob.glob('../migrate/'+search_pd) if \"nil\" not in mf])\n+    matching_files = sorted(\n+        [mf for mf in glob.glob('../migrate/' + search_pd) if \"nil\" not in mf])\n \n else:\n     pd_type = pd_type.replace(\"-\", \"_\")"
                },
                {
                    "sha": "acc351602235c920893c53ed5e94488a558ccca3",
                    "filename": "bin/wget.sh",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 13,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fwget.sh",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/bin%2Fwget.sh",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/bin%2Fwget.sh?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,13 +0,0 @@\n-#!/bin/bash\n-for i in {1..5}\n-do\n-   echo 'wget' \"$@\"\n-   wget \"$@\"\n-   if [ $? == 0 ]\n-   then\n-     exit 0\n-   fi\n-   sleep 1\n-done\n-echo 'error wget' \"$@\"\n-exit -1"
                },
                {
                    "sha": "1f9325ea4e0374f58cef1dab995a8f362d119789",
                    "filename": "changes/0015.bugfix",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F0015.bugfix",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F0015.bugfix",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F0015.bugfix?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1 @@\n+Fixed an issue with the app global `is_registry` for new Jinja versions."
                },
                {
                    "sha": "d09cc072d86c433e165383d3cffca74d639cabd7",
                    "filename": "changes/1547.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F1547.changes",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F1547.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1547.changes?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1 @@\n+Refactor code to meet CKAN and Python coding standards."
                },
                {
                    "sha": "6501272e2cdb30c0204633f145a6b177feccf7ba",
                    "filename": "changes/1547.removal",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F1547.removal",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F1547.removal",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1547.removal?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1 @@\n+Removed old, unused scripts from `bin` and `migration`"
                },
                {
                    "sha": "00d6b668083daabe472103fe395061cc28d973b0",
                    "filename": "changes/1552.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F1552.changes",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/changes%2F1552.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/changes%2F1552.changes?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1 @@\n+Use `ckan.plugins.toolkit` instead of `ckantoolkit`"
                },
                {
                    "sha": "71d397dda45289b872e409022c350ea397ab34bb",
                    "filename": "ckanext/canada/auth.py",
                    "status": "modified",
                    "additions": 33,
                    "deletions": 17,
                    "changes": 50,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fauth.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fauth.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fauth.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,67 +1,82 @@\n+from typing import Optional\n+from ckan.types import Context, AuthFunction, DataDict, AuthResult\n+\n from ckan.plugins.toolkit import chained_auth_function, config\n from ckan.authz import has_user_permission_for_group_or_org\n from ckan.plugins import plugin_loaded\n \n \n-def _is_reporting_user(context):\n+def _is_reporting_user(context: Context):\n     if not context.get('user') or not config.get('ckanext.canada.reporting_user'):\n         return False\n     return context.get('user') == config.get('ckanext.canada.reporting_user')\n \n+\n # block datastore-modifying APIs on the portal\n @chained_auth_function\n-def datastore_create(up_func, context, data_dict):\n+def datastore_create(up_func: AuthFunction, context: Context,\n+                     data_dict: Optional[DataDict]) -> AuthResult:\n     if not plugin_loaded('canada_internal'):\n         return {'success': False}\n-    return up_func(context, data_dict)\n+    # type_ignore_reason: incomplete typing\n+    return up_func(context, data_dict)  # type: ignore\n+\n \n @chained_auth_function\n-def datastore_delete(up_func, context, data_dict):\n+def datastore_delete(up_func: AuthFunction, context: Context,\n+                     data_dict: Optional[DataDict]) -> AuthResult:\n     if not plugin_loaded('canada_internal'):\n         return {'success': False}\n-    return up_func(context, data_dict)\n+    # type_ignore_reason: incomplete typing\n+    return up_func(context, data_dict)  # type: ignore\n+\n \n @chained_auth_function\n-def datastore_upsert(up_func, context, data_dict):\n+def datastore_upsert(up_func: AuthFunction, context: Context,\n+                     data_dict: Optional[DataDict]) -> AuthResult:\n     if not plugin_loaded('canada_internal'):\n         return {'success': False}\n-    return up_func(context, data_dict)\n+    # type_ignore_reason: incomplete typing\n+    return up_func(context, data_dict)  # type: ignore\n \n \n-def view_org_members(context, data_dict):\n+def view_org_members(context: Context, data_dict: DataDict) -> AuthResult:\n     user = context.get('user')\n-    can_view = has_user_permission_for_group_or_org(data_dict.get(u'id'), user, 'manage_group')\n+    can_view = has_user_permission_for_group_or_org(\n+        data_dict.get('id'), user, 'manage_group')\n     return {'success': can_view}\n \n \n-def registry_jobs_running(context, data_dict):\n+def registry_jobs_running(context: Context, data_dict: DataDict) -> AuthResult:\n     return {'success': _is_reporting_user(context)}\n \n \n-def group_list(context, data_dict):\n+def group_list(context: Context, data_dict: DataDict) -> AuthResult:\n     return {'success': bool(context.get('user'))}\n \n \n-def group_show(context, data_dict):\n+def group_show(context: Context, data_dict: DataDict) -> AuthResult:\n     return {'success': bool(context.get('user'))}\n \n \n-def organization_list(context, data_dict):\n+def organization_list(context: Context, data_dict: DataDict) -> AuthResult:\n     return {'success': bool(context.get('user'))}\n \n \n-def organization_show(context, data_dict):\n+def organization_show(context: Context, data_dict: DataDict) -> AuthResult:\n     return {'success': bool(context.get('user'))}\n \n \n-def recently_changed_packages_activity_list(context, data_dict):\n+def recently_changed_packages_activity_list(\n+        context: Context,\n+        data_dict: DataDict) -> AuthResult:\n     \"\"\"\n     Legacy, anyone can view.\n     \"\"\"\n     return {'success': True}\n \n \n-def portal_sync_info(context, data_dict):\n+def portal_sync_info(context: Context, data_dict: DataDict) -> AuthResult:\n     \"\"\"\n     Registry users have to be logged in.\n \n@@ -72,7 +87,8 @@ def portal_sync_info(context, data_dict):\n     return {'success': True}\n \n \n-def list_out_of_sync_packages(context, data_dict):\n+def list_out_of_sync_packages(context: Context,\n+                              data_dict: DataDict) -> AuthResult:\n     \"\"\"\n     Only sysadmins can list the out of sync packages.\n     \"\"\""
                },
                {
                    "sha": "7e390de90ef44b75521f058820e28136d828c4cd",
                    "filename": "ckanext/canada/checks.py",
                    "status": "modified",
                    "additions": 26,
                    "deletions": 13,
                    "changes": 39,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fchecks.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fchecks.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fchecks.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -8,16 +8,29 @@\n \n class DatastoreInvalidHeader(HeaderError):\n     type = \"datastore-invalid-header\"\n-    title = property(lambda self:_(\"Invalid Header for DataStore\"))\n-    description = property(lambda self: _(\"Column name is invalid for a DataStore header.\\n\\n How it could be resolved:\\n - Remove any leading underscores('_') from the column name.\\n - Remove any leading or trailing white space from the column name.\\n - Remove any double quotes('\\\"') from the column name.\\n - Make sure the column name is not blank.\"))\n-    template = property(lambda self: _(\"Column name {value} in column {column_number} is not valid for a DataStore header\"))\n+    title = property(lambda self: _(\"Invalid Header for DataStore\"))\n+    description = property(\n+        lambda self: _(\"Column name is invalid for a DataStore header.\\n\\n \"\n+                       \"How it could be resolved:\\n - Remove any leading \"\n+                       \"underscores('_') from the column name.\\n - Remove \"\n+                       \"any leading or trailing white space from the column \"\n+                       \"name.\\n - Remove any double quotes('\\\"') from the \"\n+                       \"column name.\\n - Make sure the column name is not blank.\"))\n+    template = property(\n+        lambda self: _(\"Column name {value} in column {column_number} is not \"\n+                       \"valid for a DataStore header\"))\n \n \n class DatastoreTooLongHeader(HeaderError):\n     type = \"datastore-header-too-long\"\n     title = property(lambda self: _(\"Header Too Long for DataStore\"))\n-    description = property(lambda self: _(\"Column name is too long for a DataStore header.\\n\\n How it could be resolved:\\n - Make the column name at most 63 characters long.\"))\n-    template = property(lambda self: _(\"Column name {value} in column {column_number} is too long for a DataStore header\"))\n+    description = property(\n+        lambda self: _(\"Column name is too long for a DataStore header.\\n\\n \"\n+                       \"How it could be resolved:\\n - Make the column name at \"\n+                       \"most 63 characters long.\"))\n+    template = property(\n+        lambda self: _(\"Column name {value} in column {column_number} is \"\n+                       \"too long for a DataStore header\"))\n \n \n @attrs.define(kw_only=True, repr=False)\n@@ -26,31 +39,31 @@ class DatastoreHeadersCheck(Check):\n     Errors = [DatastoreInvalidHeader, DatastoreTooLongHeader]\n \n     # Validate\n-\n     def validate_start(self):\n         index = 0\n-        for header in self.resource.labels:\n+        # type_ignore_reason: custom check classes\n+        for header in self.resource.labels:  # type: ignore\n             if not is_valid_field_name(header):\n                 yield DatastoreInvalidHeader(\n-                    note=_(\"Column name {value} in column {column_number} is not valid for a DataStore header\").format(value=header,\n-                                                                                                                       column_number=index),\n+                    note=_(\"Column name {value} in column {column_number} \"\n+                           \"is not valid for a DataStore header\").format(\n+                               value=header, column_number=index),\n                     labels=[header],\n                     row_numbers=[index]\n                 )\n \n             if len(header) > 63:\n                 yield DatastoreTooLongHeader(\n-                    note=_(\"Column name {value} in column {column_number} is too long for a DataStore header\").format(value=header,\n-                                                                                                                      column_number=index),\n+                    note=_(\"Column name {value} in column {column_number} is \"\n+                           \"too long for a DataStore header\").format(\n+                               value=header, column_number=index),\n                     labels=[header],\n                     row_numbers=[index]\n                 )\n \n-\n             index += 1\n \n     # Metadata\n-\n     metadata_profile_patch = {\n         \"type\": \"object\",\n         \"properties\": {},"
                },
                {
                    "sha": "a96fcb39f69bef343704205ca6696b70f3c087cb",
                    "filename": "ckanext/canada/cli.py",
                    "status": "modified",
                    "additions": 836,
                    "deletions": 464,
                    "changes": 1300,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fcli.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fcli.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fcli.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756"
                },
                {
                    "sha": "7d31eeef3b056a0cbe4ce85a16165b20240ba4ca",
                    "filename": "ckanext/canada/column_types.py",
                    "status": "modified",
                    "additions": 11,
                    "deletions": 5,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fcolumn_types.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fcolumn_types.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fcolumn_types.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,9 +1,14 @@\n+from typing import Dict\n+from ckan.types import Schema, Validator\n+\n from ckanext.tabledesigner.column_types import ChoiceColumn, TextColumn\n from ckanext.datastore.backend.postgres import literal_string, identifier\n \n-def _(x):\n+\n+def _(x: str) -> str:\n     return x\n \n+\n class Province(ChoiceColumn):\n     label = _(\"Canadian Province or Territory\")\n     description = _(\n@@ -15,7 +20,7 @@ class Province(ChoiceColumn):\n     design_snippet = None  # disable from parent ChoiceColumn\n     view_snippet = 'province.html'\n \n-    def choices(self):\n+    def choices(self) -> Dict[str, str]:\n         return {\n             'AB': _('Alberta'),\n             'BC': _('British Columbia'),\n@@ -33,7 +38,8 @@ def choices(self):\n         }\n \n     @classmethod\n-    def datastore_field_schema(cls, td_ignore, td_pd):\n+    def datastore_field_schema(cls, td_ignore: Validator,\n+                               td_pd: Validator) -> Schema:\n         # Remove tdchoices from parent ChoiceColumn\n         return {}\n \n@@ -54,15 +60,15 @@ class CRABusinessNumber(TextColumn):\n \n     _BUSINESS_NUMBER_PATTERN = r'\\d{9}'\n \n-    def sql_validate_rule(self):\n+    def sql_validate_rule(self) -> str:\n         return self._SQL_VALIDATE.format(\n             value='NEW.' + identifier(self.colname),\n             pattern=literal_string(self._BUSINESS_NUMBER_PATTERN),\n             colname=literal_string(self.colname),\n             error=literal_string(_('Invalid business number')),\n         )\n \n-    def excel_validate_rule(self):\n+    def excel_validate_rule(self) -> str:\n         # COUNT(FIND(...)) lets us accept single-quote-prefixed values\n         # like \"'012345678\" as a business number\n         return ("
                },
                {
                    "sha": "fb80b29ac59a6543230b77a44710b0f1d517de10",
                    "filename": "ckanext/canada/dataset.py",
                    "status": "modified",
                    "additions": 37,
                    "deletions": 23,
                    "changes": 60,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fdataset.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fdataset.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fdataset.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,25 +1,35 @@\n # -*- coding: utf-8 -*-\n+\n+# NOTE: used to connect to the SOLR cores for Drupal PD Searches\n+# TODO: remove once all PDs are in Django\n+\n+from typing import Optional, Generator, Tuple, List, Any\n+\n import sys\n+from pysolr import Solr\n from ckan.plugins.toolkit import config\n+from ckanapi import LocalCKAN\n \n BATCH_SIZE = 1000\n MONTHS_FR = [\n-    u'', # \"month 0\"\n-    u'janvier',\n-    u'février',\n-    u'mars',\n-    u'avril',\n-    u'mai',\n-    u'juin',\n-    u'juillet',\n-    u'août',\n-    u'septembre',\n-    u'octobre',\n-    u'novembre',\n-    u'décembre',\n-    ]\n-\n-def solr_connection(ini_prefix, solr_url=None):\n+    '',  # \"month 0\"\n+    'janvier',\n+    'février',\n+    'mars',\n+    'avril',\n+    'mai',\n+    'juin',\n+    'juillet',\n+    'août',\n+    'septembre',\n+    'octobre',\n+    'novembre',\n+    'décembre',\n+]\n+\n+\n+def solr_connection(ini_prefix: str,\n+                    solr_url: Optional[str] = None) -> Solr:\n     \"\"\"\n     Set up solr connection\n     :param ini_prefix: prefix to use in specifying .ini file keys (e.g.,\n@@ -29,7 +39,6 @@ def solr_connection(ini_prefix, solr_url=None):\n     :return a solr connection from configured URL, user, password settings\n     :rtype object\n     \"\"\"\n-    from pysolr import Solr\n     if not solr_url:\n         url = config.get('{0:s}.solr_url'.format(ini_prefix))\n         user = config.get('{0:s}.solr_user'.format(ini_prefix))\n@@ -41,10 +50,13 @@ def solr_connection(ini_prefix, solr_url=None):\n     if url is None:\n         raise KeyError('{0:s}.solr_url'.format(ini_prefix))\n     if user is not None and password is not None:\n-        return Solr(url, http_user=user, http_pass=password)\n+        # type_ignore_reason: solr user pass may be required for Drupal PD searches\n+        return Solr(url, http_user=user, http_pass=password)  # type: ignore\n     return Solr(url)\n \n-def data_batch(org_id, lc, dataset_type):\n+\n+def data_batch(org_id: str, lc: LocalCKAN,\n+               dataset_type: str) -> Generator[Tuple[str, List[Any]], None, None]:\n     \"\"\"\n     Generator of dataset dicts for organization with name org\n \n@@ -64,8 +76,8 @@ def data_batch(org_id, lc, dataset_type):\n     if not result:\n         return\n     if len(result) != 1:\n-       sys.stderr.write('1 record expected for %s %s, found %d' %\n-            (dataset_type, org_id, len(result)))\n+        sys.stderr.write('1 record expected for %s %s, found %d' %\n+                         (dataset_type, org_id, len(result)))\n \n     dataset = result[0]\n     for resource in dataset['resources']:\n@@ -81,14 +93,16 @@ def data_batch(org_id, lc, dataset_type):\n             offset += len(records)\n             yield (resource['name'], records)\n \n+\n _REMOVE_CONTROL_CODES = dict((x, None) for x in range(32) if x != 10 and x != 13)\n \n-def safe_for_solr(s):\n+\n+def safe_for_solr(s: Optional[str]) -> str:\n     \"\"\"\n     return a string that is safe for solr to ingest by removing all\n     control characters except for CR and LF\n     \"\"\"\n     if s is None:\n-        return u''\n+        return ''\n     assert isinstance(s, str)\n     return s.translate(_REMOVE_CONTROL_CODES)"
                },
                {
                    "sha": "ec1e4b079f38d94dfed3c8e23a8e49b018701d34",
                    "filename": "ckanext/canada/extract.py",
                    "status": "modified",
                    "additions": 41,
                    "deletions": 19,
                    "changes": 60,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fextract.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fextract.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fextract.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,26 +1,37 @@\n-from yaml import load\n+# NOTE: custom Babel extrcators\n+from typing import BinaryIO, Any, List, Generator, Tuple, Dict\n+\n+from yaml import load, ScalarNode\n from yaml.loader import SafeLoader\n from six import string_types\n \n \n class SafeLineLoader(SafeLoader):\n-    def __init__(self, stream):\n+    def __init__(self, stream: BinaryIO):\n         super(SafeLineLoader, self).__init__(stream)\n         self.line_numbers = {}\n \n-    def construct_scalar(self, node):\n+    def construct_scalar(self, node: ScalarNode) -> Any:\n         if node.value in self.line_numbers:\n-            self.line_numbers[node.value].append(node.start_mark.line + 1)\n+            # type_ignore_reason: incomplete typing\n+            self.line_numbers[node.value].append(\n+                node.start_mark.line + 1)  # type: ignore\n         else:\n-            self.line_numbers[node.value] = [node.start_mark.line + 1]\n+            # type_ignore_reason: incomplete typing\n+            self.line_numbers[node.value] = [\n+                node.start_mark.line + 1]  # type: ignore\n         return super(SafeLineLoader, self).construct_scalar(node)\n \n-    def get_single_data(self):\n+    def get_single_data(self) -> Any:\n         data = super(SafeLineLoader, self).get_single_data()\n         return self.line_numbers, data\n \n \n-def extract_pd(fileobj, keywords, comment_tags, options):\n+def extract_pd(fileobj: BinaryIO,\n+               keywords: List[str],\n+               comment_tags: List[str],\n+               options: Dict[str, Any]) -> Generator[\n+                   Tuple[int, str, str, List[str]], None, None]:\n     \"\"\"Extract messages from XXX files.\n \n     :param fileobj: the file-like object the messages should be extracted\n@@ -35,46 +46,57 @@ def extract_pd(fileobj, keywords, comment_tags, options):\n     :rtype: ``iterator``\n     \"\"\"\n     encoding = options.get('encoding', 'utf-8')\n-    line_numbers, chromo = load(fileobj.read().decode(encoding), Loader=SafeLineLoader)\n+    line_numbers, chromo = load(fileobj.read().decode(encoding),\n+                                Loader=SafeLineLoader)\n \n     pd_type = chromo.get('dataset_type', 'unknown')\n \n     # PD Type Title\n     title = chromo.get('title')\n     if isinstance(title, string_types):\n         for line_number in line_numbers.get(title, [0]):\n-            yield (line_number, '', title, ['Title for PD Type: %s' % pd_type])\n+            yield (line_number, '', title,\n+                   ['Title for PD Type: %s' % pd_type])\n \n     # PD Type Short Label\n     label = chromo.get('shortname')\n     if isinstance(label, string_types):\n         for line_number in line_numbers.get(label, [0]):\n-            yield (line_number, '', label, ['Label for PD Type: %s' % pd_type])\n+            yield (line_number, '', label,\n+                   ['Label for PD Type: %s' % pd_type])\n \n     # PD Type Description\n     notes = chromo.get('notes')\n     if isinstance(notes, string_types):\n         for line_number in line_numbers.get(notes, [0]):\n-            yield (line_number, '', notes, ['Description for PD Type: %s' % pd_type])\n+            yield (line_number, '', notes,\n+                   ['Description for PD Type: %s' % pd_type])\n \n     # PD Type Resources\n     resources = chromo.get('resources', [])\n     for resource in resources:\n-        resource_title = resource.get('title')  # resource title\n+        # resource title\n+        resource_title = resource.get('title')\n         if isinstance(resource_title, string_types):\n             for line_number in line_numbers.get(resource_title, [0]):\n-                yield (line_number, '', resource_title, ['Resource Title for PD Type: %s' % pd_type])\n+                yield (line_number, '', resource_title,\n+                       ['Resource Title for PD Type: %s' % pd_type])\n \n-        resource_trigger_strings = resource.get('trigger_strings')  # resource sql error messages\n+        # resource sql error messages\n+        resource_trigger_strings = resource.get('trigger_strings')\n         if resource_trigger_strings:\n-            for k, v in resource_trigger_strings.items():\n+            for _k, v in resource_trigger_strings.items():\n                 if isinstance(v, string_types):\n                     for line_number in line_numbers.get(v, [0]):\n-                        yield (line_number, '', v, ['SQL Trigger String for PD Type: %s' % pd_type])\n+                        yield (line_number, '', v,\n+                               ['SQL Trigger String for PD Type: %s' % pd_type])\n \n-        datastore_constraint_errors = resource.get('datastore_constraint_errors')  # more user friendly sql constraint error messages\n+        # more user friendly sql constraint error messages\n+        datastore_constraint_errors = resource.get('datastore_constraint_errors')\n         if datastore_constraint_errors:\n-            for k, v in datastore_constraint_errors.items():\n+            for _k, v in datastore_constraint_errors.items():\n                 if isinstance(v, string_types):\n                     for line_number in line_numbers.get(v, [0]):\n-                        yield (line_number, '', v, ['SQL Constraint Error String for PD Type: %s' % pd_type])\n+                        yield (line_number, '', v,\n+                               ['SQL Constraint Error String for PD Type: %s' %\n+                                pd_type])"
                },
                {
                    "sha": "9bdd3d5e4f1be4e2d92d040e3a2b4815ff23295b",
                    "filename": "ckanext/canada/helpers.py",
                    "status": "modified",
                    "additions": 354,
                    "deletions": 229,
                    "changes": 583,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fhelpers.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fhelpers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fhelpers.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,34 +1,42 @@\n-from typing import Optional, Union\n+from typing import Optional, Union, Any, Tuple, List, Set, Dict, cast\n+from ckan.types import Context\n \n import json\n import re\n import inspect\n from urllib.parse import urlsplit\n-from ckan.plugins.toolkit import config, _, h, g, request\n+from ckan.plugins.toolkit import (\n+    config,\n+    asbool,\n+    aslist,\n+    get_action,\n+    _,\n+    h,\n+    g,\n+    request,\n+    ObjectNotFound,\n+    NotAuthorized\n+)\n from ckan.model import User, Package\n from ckanext.activity.model import Activity\n import ckan.model as model\n+from ckan.model.license import License\n import datetime\n import unicodedata\n-import ckan as ckan\n import html\n from six import text_type\n from bs4 import BeautifulSoup\n from ckan import plugins\n \n-from ckanapi import NotFound\n-from ckantoolkit import aslist\n-import ckan.plugins.toolkit as t\n from ckanext.scheming.helpers import scheming_get_preset\n import dateutil.parser\n import geomet.wkt as wkt\n-import json as json\n from markupsafe import Markup, escape\n from ckan.lib.helpers import core_helper\n from ckan.plugins.core import plugin_loaded\n-from ckan.logic import NotAuthorized\n import ckan.lib.datapreview as datapreview\n \n+from ckanext.recombinant.tables import get_chromo\n from ckanext.security.cache.login import max_login_attempts\n \n try:\n@@ -50,7 +58,8 @@\n RELEASE_DATE_FACET_STEP = 100\n \n \n-def get_translated_t(data_dict, field):\n+def get_translated_t(data_dict: Dict[str, Any],\n+                     field: str) -> Tuple[str, bool]:\n     '''\n     customized version of core get_translated helper that also looks\n     for machine translated values (e.g. en-t-fr and fr-t-en)\n@@ -60,25 +69,28 @@ def get_translated_t(data_dict, field):\n \n     language = h.lang()\n     try:\n-        return data_dict[field+'_translated'][language], False\n+        return data_dict[field + '_translated'][language], False\n     except KeyError:\n         if field+'_translated' in data_dict:\n-            for l in data_dict[field+'_translated']:\n-                if l.startswith(language + '-t-'):\n-                    return data_dict[field+'_translated'][l], True\n+            for trans_field in data_dict[field + '_translated']:\n+                if trans_field.startswith(language + '-t-'):\n+                    return data_dict[field + '_translated'][trans_field], True\n         val = data_dict.get(field, '')\n         return (_(val) if val and isinstance(val, str) else val), False\n \n \n-def language_text_t(text, prefer_lang=None):\n+# FIXME: this is only for fluent tags...try to fix??\n+def language_text_t(text: Union[Dict[str, Any], str],\n+                    prefer_lang: Optional[str] = None) -> \\\n+                        Tuple[Optional[str], bool]:\n     '''\n     customized version of scheming_language_text helper that also looks\n     for machine translated values (e.g. en-t-fr and fr-t-en)\n \n     Returns translated_text, is_machine_translated (True/False)\n     '''\n     if not text:\n-        return u'', False\n+        return '', False\n \n     assert text != {}\n     if hasattr(text, 'get'):\n@@ -89,11 +101,14 @@ def language_text_t(text, prefer_lang=None):\n             pass  # lang() call will fail when no user language available\n         else:\n             try:\n-                return text[prefer_lang], False\n+                # type_ignore_reason: incomplete typing\n+                return text[prefer_lang], False  # type: ignore\n             except KeyError:\n-                for l in text:\n-                    if l.startswith(prefer_lang + '-t-'):\n-                        return text[l], True\n+                if prefer_lang:\n+                    for line in text:\n+                        if line.startswith(prefer_lang + '-t-'):\n+                            # type_ignore_reason: incomplete typing\n+                            return text[line], True  # type: ignore\n                 pass\n \n         default_locale = config.get('ckan.locale_default', 'en')\n@@ -102,18 +117,23 @@ def language_text_t(text, prefer_lang=None):\n         except KeyError:\n             pass\n \n-        l, v = sorted(text.items())[0]\n+        # type_ignore_reason: incomplete typing\n+        _l, v = sorted(text.items())[0]  # type: ignore\n         return v, False\n \n     t = _(text)\n-    if isinstance(t, str):\n+    if isinstance(t, bytes):\n         return t.decode('utf-8'), False\n     return t, False\n \n \n-def may_publish_datasets(userobj=None):\n+def may_publish_datasets(userobj: Optional['model.User'] = None) -> bool:\n     if not userobj:\n         userobj = g.userobj\n+\n+    if not userobj:\n+        return False\n+\n     if userobj.sysadmin:\n         return True\n \n@@ -123,11 +143,16 @@ def may_publish_datasets(userobj=None):\n             continue\n         if group.name == pub_org:\n             return True\n+\n     return False\n \n-def openness_score(pkg):\n+\n+def openness_score(pkg: Dict[str, Any]) -> int:\n     score = 1\n-    fmt_choices = scheming_get_preset('canada_resource_format')['choices']\n+    field_preset = scheming_get_preset('canada_resource_format')\n+    fmt_choices = []\n+    if field_preset:\n+        fmt_choices = field_preset['choices']\n     resource_formats = set(r['format'] for r in pkg['resources'])\n     for f in fmt_choices:\n         if 'openness_score' not in f:\n@@ -144,41 +169,51 @@ def openness_score(pkg):\n     return score\n \n \n-def user_organizations(user):\n+def user_organizations(user: Dict[str, Any]) -> List[Union['model.Group', Any]]:\n     u = User.get(user['name'])\n-    return u.get_groups(group_type = \"organization\")\n+    if not u:\n+        return []\n+    return u.get_groups(group_type=\"organization\")\n+\n \n-def catalogue_last_update_date():\n-    return '' # FIXME: cache this value or add an index to the DB for query below\n+def catalogue_last_update_date() -> str:\n+    return ''  # FIXME: cache this value or add an index to the DB for query below\n     q = model.Session.query(Activity.timestamp).filter(\n         Activity.activity_type.endswith('package')).order_by(\n         Activity.timestamp.desc()).first()\n     return q[0].replace(microsecond=0).isoformat() if q else ''\n \n-def today():\n+\n+def today() -> str:\n     return datetime.datetime.now(EST()).strftime(\"%Y-%m-%d\")\n \n+\n # Return the Date format that the WET datepicker requires to function properly\n-def date_format(date_string):\n+def date_format(date_string: Optional[str]) -> Optional[str]:\n     if not date_string:\n         return None\n     try:\n-        return datetime.datetime.strptime(date_string, \"%Y-%m-%d %H:%M:%S\"\n-            ).strftime(\"%Y-%m-%d\")\n+        return datetime.datetime.strptime(\n+            date_string, \"%Y-%m-%d %H:%M:%S\").strftime(\"%Y-%m-%d\")\n     except ValueError:\n         return date_string\n \n+\n class EST(datetime.tzinfo):\n-    def utcoffset(self, dt):\n-      return datetime.timedelta(hours=-5)\n+    def utcoffset(self, dt: 'datetime.datetime') -> 'datetime.timedelta':\n+        return datetime.timedelta(hours=-5)\n \n-    def dst(self, dt):\n+    def dst(self, dt: 'datetime.datetime') -> 'datetime.timedelta':\n         return datetime.timedelta(0)\n \n+\n # copied from ckan 2.6 branch\n-# https://github.com/open-data/ckan/blob/ee0a94c97f8988e78c9b1f92f92adb5c26884841/ckan/lib/helpers.py#L1245\n-def canada_date_str_to_datetime(date_str):\n-    '''Convert ISO-like formatted datestring to datetime object.\n+# https://github.com/open-data/ckan\n+# /blob/ee0a94c97f8988e78c9b1f92f92adb5c26884841/ckan/lib/helpers.py#L1245\n+def canada_date_str_to_datetime(date_str: str) -> 'datetime.datetime':\n+    '''\n+    Convert ISO-like formatted datestring to datetime object.\n+\n     This function converts ISO format date- and datetime-strings into\n     datetime objects.  Times may be specified down to the microsecond.  UTC\n     offset or timezone information may **not** be included in the string.\n@@ -191,60 +226,69 @@ def canada_date_str_to_datetime(date_str):\n            despite that not being part of the ISO format.\n     '''\n \n-    time_tuple = re.split('[^\\d]+', date_str, maxsplit=5)\n+    time_tuple = re.split(r'[^\\d]+', date_str, maxsplit=5)\n \n     # Extract seconds and microseconds\n     if len(time_tuple) >= 6:\n-        m = re.match('(?P<seconds>\\d{2})(\\.(?P<microseconds>\\d+))?$',\n+        m = re.match(r'(?P<seconds>\\d{2})(\\.(?P<microseconds>\\d+))?$',\n                      time_tuple[5])\n         if not m:\n             raise ValueError('Unable to parse %s as seconds.microseconds' %\n                              time_tuple[5])\n-        seconds = int(m.groupdict().get('seconds'))\n+        seconds = int(m.groupdict()['seconds'])\n         microseconds = int((str(m.groupdict(0).get('microseconds')) + '00000')[0:6])\n         time_tuple = time_tuple[:5] + [seconds, microseconds]\n \n-    return datetime.datetime(*map(int, time_tuple))\n+    # type_ignore_reason: typchecker can't guess number of arguments\n+    return datetime.datetime(*map(int, time_tuple))  # type: ignore\n+\n \n-def remove_duplicates(a_list):\n+def remove_duplicates(a_list: List[Any]) -> Set[Any]:\n     s = set()\n     for i in a_list:\n         s.add(i)\n \n     return s\n \n-def get_license(license_id):\n+\n+def get_license(license_id: str) -> License:\n     return Package.get_license_register().get(license_id)\n \n \n-def normalize_strip_accents(s):\n+def normalize_strip_accents(s: Union[str, bytes]) -> str:\n     \"\"\"\n-    utility function to help with sorting our French strings\n+    Utility function to help with sorting our French strings\n     \"\"\"\n-    if isinstance(s, str):\n-        return s\n+    if isinstance(s, bytes):\n+        s = s.decode('utf-8')\n     if not s:\n-        s = u''\n+        s = ''\n     s = unicodedata.normalize('NFD', s)\n     return s.encode('ascii', 'ignore').decode('ascii').lower()\n \n \n-def portal_url():\n+def portal_url() -> str:\n     url = PORTAL_URL_DEFAULT_FR if h.lang() == 'fr' else PORTAL_URL_DEFAULT_EN\n     return str(config.get(PORTAL_URL_OPTION, url))\n \n-def adv_search_url():\n-    return config.get('ckanext.canada.adv_search_url_fr') if h.lang() == 'fr' else config.get('ckanext.canada.adv_search_url_en')\n \n-def adv_search_mlt_root():\n-    return \"{0}/donneesouvertes/similaire/\".format(config.get('ckanext.canada.adv_search_url_fr')) if h.lang() == 'fr' else \"{0}/opendata/similar/\".format(config.get('ckanext.canada.adv_search_url_en'))\n+def adv_search_url() -> str:\n+    return config.get('ckanext.canada.adv_search_url_fr') if \\\n+        h.lang() == 'fr' else config.get('ckanext.canada.adv_search_url_en')\n+\n \n+def adv_search_mlt_root() -> str:\n+    return \"{0}/donneesouvertes/similaire/\".format(\n+        config.get('ckanext.canada.adv_search_url_fr')) if \\\n+            h.lang() == 'fr' else \"{0}/opendata/similar/\".format(\n+                config.get('ckanext.canada.adv_search_url_en'))\n \n-def ga4_id():\n+\n+def ga4_id() -> str:\n     return str(config.get('ga4.id'))\n \n-def adobe_analytics_login_required(current_url):\n-    # type: (str) -> int\n+\n+def adobe_analytics_login_required(current_url: str) -> int:\n     \"\"\"\n     1: login required\n     2: public\n@@ -255,8 +299,8 @@ def adobe_analytics_login_required(current_url):\n     \"\"\"\n     return 2\n \n-def adobe_analytics_lang():\n-    # type: () -> str\n+\n+def adobe_analytics_lang() -> str:\n     \"\"\"\n     Return Adobe Analytics expected language codes.\n \n@@ -266,7 +310,8 @@ def adobe_analytics_lang():\n         return 'fra'\n     return 'eng'\n \n-def adobe_analytics_js():\n+\n+def adobe_analytics_js() -> str:\n     \"\"\"\n     Return partial Adobe Analytics JS address.\n \n@@ -277,16 +322,20 @@ def adobe_analytics_js():\n     return str(config.get('ckanext.canada.adobe_analytics.js', ''))\n \n \n-def adobe_analytics_creator(organization=None, package=None):\n-    # type: (dict|None, dict|None) -> str\n+def adobe_analytics_creator(organization: Optional[Dict[str, Any]] = None,\n+                            package: Optional[Dict[str, Any]] = None) -> \\\n+                                Markup:\n     \"\"\"\n     Generates HTML Meta Tag for Adobe Analytics, along with extra GoC\n     page ownership HTML attribute.\n \n-    Need to have organization and package parameters separately for Organization/Group templates.\n+    Need to have organization and package parameters\n+    separately for Organization/Group templates.\n \n-    creator and owner_1 should be the Organization who made the \"page\" (org, package, resource, or PD record set)\n-    owner_2, owner_3, and owner_4 are for the org_section field in the package schema.\n+    creator and owner_1 should be the Organization who made\n+    the \"page\" (org, package, resource, or PD record set)\n+    owner_2, owner_3, and owner_4 are for the org_section\n+    field in the package schema.\n     \"\"\"\n     # defaults\n     creator = _('Treasury Board of Canada Secretariat')\n@@ -295,31 +344,41 @@ def adobe_analytics_creator(organization=None, package=None):\n     owner_3 = 'N/A'\n     owner_4 = 'N/A'\n \n-    # set creator and owner_1 to the package's organization title (language respective)\n+    # set creator and owner_1 to the package's\n+    # organization title (language respective)\n     if organization:\n-        if ' | ' in organization.get('title'):\n-            creator = organization.get('title').split(' | ')[1 if h.lang() == 'fr' else 0].strip()\n+        org_title = organization.get('title')\n+        if org_title and ' | ' in org_title:\n+            creator = org_title.split(' | ')[\n+                1 if h.lang() == 'fr' else 0].strip()\n         else:\n             creator = h.get_translated(organization, h.lang()).strip()\n         owner_1 = creator\n \n-    # set owners 2-4 to the package's org_section field value if available (language respective)\n-    if package and 'org_section' in package and h.scheming_language_text(package.get('org_section')):\n-        org_sections = h.scheming_language_text(package.get('org_section')).split(',')\n+    # set owners 2-4 to the package's org_section\n+    # field value if available (language respective)\n+    if (\n+      package and 'org_section' in package and\n+      h.scheming_language_text(package.get('org_section'))):\n+        org_sections = h.scheming_language_text(\n+            package.get('org_section')).split(',')\n         osl = len(org_sections)\n         owner_2 = org_sections[0].strip() if osl >= 1 else 'N/A'\n         owner_3 = org_sections[1].strip() if osl >= 2 else 'N/A'\n         owner_4 = org_sections[2].strip() if osl >= 3 else 'N/A'\n \n-    return Markup(u'<meta property=\"dcterms:creator\" content=\"%s\" ' \\\n-            'data-gc-analytics-owner=\"%s|%s|%s|%s\"/>' % (\n-                html.escape(creator), html.escape(owner_1),\n-                html.escape(owner_2), html.escape(owner_3),\n-                html.escape(owner_4)))\n+    return Markup('<meta property=\"dcterms:creator\" content=\"%s\" '\n+                  'data-gc-analytics-owner=\"%s|%s|%s|%s\"/>' % (\n+                    html.escape(creator), html.escape(owner_1),\n+                    html.escape(owner_2), html.escape(owner_3),\n+                    html.escape(owner_4)))\n \n \n-def resource_view_meta_title(package, resource, view, is_subtitle=False):\n-    # type: (dict, dict, dict, bool) -> str\n+def resource_view_meta_title(package: Dict[str, Any],\n+                             resource: Dict[str, Any],\n+                             view: Dict[str, Any],\n+                             is_subtitle: Optional[bool] = False) -> \\\n+                                Union[Markup, str]:\n     \"\"\"\n     Generates the string for the title meta tag for Resource Views.\n \n@@ -329,25 +388,19 @@ def resource_view_meta_title(package, resource, view, is_subtitle=False):\n     resource_title = h.get_translated(resource, 'name')\n     view_title = view['title_fr'] if h.lang() == 'fr' else view['title']\n     if not is_subtitle:\n-        return u'%s - %s - %s - %s' % (\n+        return '%s - %s - %s - %s' % (\n             html.escape(package_title), html.escape(resource_title),\n             html.escape(view_title), html.escape(_(g.site_title)))\n-    return Markup(u'%s - %s - %s' % (\n+    return Markup('%s - %s - %s' % (\n         html.escape(package_title), html.escape(resource_title),\n         html.escape(view_title)))\n \n \n-def loop11_key():\n+def loop11_key() -> str:\n     return str(config.get('loop11.key', ''))\n \n-def drupal_session_present(request):\n-    for name in request.cookies.keys():\n-        if name.startswith(\"SESS\"):\n-            return True\n-\n-    return False\n \n-def parse_release_date_facet(facet_results):\n+def parse_release_date_facet(facet_results: Dict[str, Any]) -> Dict[str, Any]:\n     counts = facet_results['counts'][1::2]\n     ranges = facet_results['counts'][0::2]\n     facet_dict = dict()\n@@ -356,22 +409,36 @@ def parse_release_date_facet(facet_results):\n         return dict()\n     elif len(counts) == 1:\n         if ranges[0] == facet_results['start']:\n-            facet_dict = {'published': {'count': counts[0], 'url_param': '[' + ranges[0] + ' TO ' + facet_results['end'] + ']'} }\n+            facet_dict = {\n+                'published': {\n+                    'count': counts[0],\n+                    'url_param': '[' + ranges[0] + ' TO ' + facet_results['end'] + ']'}\n+            }\n         else:\n-            facet_dict = {'scheduled': {'count': counts[0], 'url_param': '[' + ranges[0] + ' TO ' + facet_results['end'] + ']'} }\n+            facet_dict = {\n+                'scheduled': {\n+                    'count': counts[0],\n+                    'url_param': '[' + ranges[0] + ' TO ' + facet_results['end'] + ']'}\n+            }\n     else:\n-        facet_dict = {'published': {'count': counts[0], 'url_param': '[' + ranges[0] + ' TO ' + ranges[1] + ']'} ,\n-                      'scheduled': {'count': counts[1], 'url_param': '[' + ranges[1] + ' TO ' + facet_results['end'] + ']'} }\n+        facet_dict = {\n+            'published': {\n+                'count': counts[0],\n+                'url_param': '[' + ranges[0] + ' TO ' + ranges[1] + ']'},\n+            'scheduled': {\n+                'count': counts[1],\n+                'url_param': '[' + ranges[1] + ' TO ' + facet_results['end'] + ']'}\n+        }\n \n     return facet_dict\n \n \n-def release_date_facet_start_year():\n+def release_date_facet_start_year() -> int:\n     today = int(datetime.datetime.now(EST()).strftime(\"%Y\"))\n     return today - RELEASE_DATE_FACET_STEP\n \n \n-def is_ready_to_publish(package):\n+def is_ready_to_publish(package: Dict[str, Any]) -> bool:\n     portal_release_date = package.get('portal_release_date')\n     ready_to_publish = package.get('ready_to_publish')\n \n@@ -380,10 +447,12 @@ def is_ready_to_publish(package):\n     else:\n         return False\n \n-def get_datapreview_recombinant(resource_name, resource_id, owner_org, dataset_type):\n-    from ckanext.recombinant.tables import get_chromo\n+\n+def get_datapreview_recombinant(resource_name: str,\n+                                resource_id: str,\n+                                owner_org: str,\n+                                dataset_type: str) -> str:\n     chromo = get_chromo(resource_name)\n-    default_preview_args = {}\n     priority = len(chromo['datastore_primary_key'])\n     pk_priority = 0\n     fields = []\n@@ -406,14 +475,15 @@ def get_datapreview_recombinant(resource_name, resource_id, owner_org, dataset_t\n \n     pkids = [fids.index(k) for k in aslist(chromo['datastore_primary_key'])]\n     return h.snippet('package/wet_datatable.html',\n-        resource_name=resource_name,\n-        resource_id=resource_id,\n-        owner_org=owner_org,\n-        primary_keys=pkids,\n-        dataset_type=dataset_type,\n-        ds_fields=fields)\n+                     resource_name=resource_name,\n+                     resource_id=resource_id,\n+                     owner_org=owner_org,\n+                     primary_keys=pkids,\n+                     dataset_type=dataset_type,\n+                     ds_fields=fields)\n \n-def contact_information(info):\n+\n+def contact_information(info: str) -> Dict[str, Any]:\n     \"\"\"\n     produce label, value pairs from contact info\n     \"\"\"\n@@ -436,62 +506,68 @@ def show_openinfo_facets():\n     return False\n \n \n-def json_loads(value):\n-    return json.loads(value)\n+def json_loads(value: str) -> Dict[str, Any]:\n+    try:\n+        return json.loads(value)\n+    except Exception:\n+        return {}\n \n \n-def get_datapreview(res_id):\n+def get_datapreview(res_id: str) -> str:\n+    dsq_results = get_action('datastore_search')(\n+        cast(Context, {}), {'resource_id': res_id, 'limit': 100})\n+    return h.snippet('package/wet_datatable.html',\n+                     ds_fields=dsq_results['fields'],\n+                     ds_records=dsq_results['records'])\n \n-    #import pdb; pdb.set_trace()\n-    dsq_results = ckan.logic.get_action('datastore_search')({}, {'resource_id': res_id, 'limit' : 100})\n-    return h.snippet('package/wet_datatable.html', ds_fields=dsq_results['fields'], ds_records=dsq_results['records'])\n \n-def iso_to_goctime(isodatestr):\n+def iso_to_goctime(isodatestr: str) -> str:\n     dateobj = dateutil.parser.parse(isodatestr)\n     return dateobj.strftime('%Y-%m-%d')\n \n-def geojson_to_wkt(gjson_str):\n-    ## Ths GeoJSON string should look something like:\n-    ##  u'{\"type\": \"Polygon\", \"coordinates\": [[[-54, 46], [-54, 47], [-52, 47], [-52, 46], [-54, 46]]]}']\n-    ## Convert this JSON into an object, and load it into a Shapely object. The Shapely library can\n-    ## then output the geometry in Well-Known-Text format\n \n+def geojson_to_wkt(gjson_str: str) -> Any:\n+    # Ths GeoJSON string should look something like:\n+    #  '{\"type\": \"Polygon\",\n+    #    \"coordinates\": [[[-54, 46], [-54, 47], [-52, 47], [-52, 46], [-54, 46]]]}']\n+    # Convert this JSON into an object, and load it into a Shapely object.\n+    # The Shapely library can then output the geometry in Well-Known-Text format\n     try:\n         gjson = json.loads(gjson_str)\n         try:\n             gjson = _add_extra_longitude_points(gjson)\n-        except:\n+        except Exception:\n             # this is bad, but all we're trying to do is improve\n             # certain shapes and if that fails showing the original\n             # is good enough\n             pass\n         shape = gjson\n     except ValueError:\n-        return None # avoid 500 error on bad geojson in DB\n+        return None  # avoid 500 error on bad geojson in DB\n \n     wkt_str = wkt.dumps(shape)\n     return wkt_str\n \n \n-def cdts_asset(file_path, theme=True):\n-    return CDTS_URI + '/' + CDTS_VERSION + ('/wet-boew' if theme else '/cdts') + file_path\n+def cdts_asset(file_path: str, theme: Optional[bool] = True) -> str:\n+    return CDTS_URI + '/' + CDTS_VERSION + \\\n+        ('/wet-boew' if theme else '/cdts') + file_path\n \n \n-def get_map_type():\n+def get_map_type() -> str:\n     return str(config.get(GEO_MAP_TYPE_OPTION, GEO_MAP_TYPE_DEFAULT))\n \n \n-def _add_extra_longitude_points(gjson):\n+def _add_extra_longitude_points(gjson: Dict[str, Any]) -> Dict[str, Any]:\n     \"\"\"\n     Assume that sides of a polygon with the same latitude should\n     be rendered as curves following that latitude instead of\n     straight lines on the final map projection\n     \"\"\"\n-    import math\n     fuzz = 0.00001\n-    if gjson[u'type'] != u'Polygon':\n+    if gjson['type'] != 'Polygon':\n         return gjson\n-    coords = gjson[u'coordinates'][0]\n+    coords = gjson['coordinates'][0]\n     plng, plat = coords[0]\n     out = [[plng, plat]]\n     for lng, lat in coords[1:]:\n@@ -504,19 +580,21 @@ def _add_extra_longitude_points(gjson):\n                 out.append([(i*lng + (parts-i)*plng)/parts, lat])\n         out.append([lng, lat])\n         plng, plat = lng, lat\n-    return {u'coordinates': [out], u'type': u'Polygon'}\n+    return {'coordinates': [out], 'type': 'Polygon'}\n \n \n-def recombinant_description_to_markup(text):\n+def recombinant_description_to_markup(text: str) -> Dict[str, Markup]:\n     \"\"\"\n     Return text as HTML escaped strings joined with '<br/>, links enabled'\n     \"\"\"\n     # very lax, this is trusted text defined in a schema not user-provided\n     url_pattern = r'(https?:[^)\\s\"]{20,})'\n     markup = []\n-    for i, part in enumerate(re.split(url_pattern, h.recombinant_language_text(text))):\n+    for i, part in enumerate(re.split(url_pattern,\n+                                      h.recombinant_language_text(text))):\n         if i % 2:\n-            markup.append(Markup('<a href=\"{0}\">{1}</a>'.format(part, escape(part))))\n+            markup.append(Markup('<a href=\"{0}\">{1}</a>'.format(\n+                part, escape(part))))\n         else:\n             markup.extend(Markup('<br/>'.join(\n                escape(t) for t in part.split('\\n')\n@@ -526,84 +604,95 @@ def recombinant_description_to_markup(text):\n     return {'en': Markup(''.join(markup))}\n \n \n-def mail_to_with_params(email_address, name, subject, body):\n+def mail_to_with_params(email_address: str, name: str,\n+                        subject: str, body: str) -> Markup:\n     email = escape(email_address)\n     author = escape(name)\n     mail_subject = escape(subject)\n     mail_body = escape(body)\n-    html = Markup(u'<a href=\"mailto:{0}?subject={2}&body={3}\">{1}</a>'.format(email, author, mail_subject, mail_body))\n+    html = Markup('<a href=\"mailto:{0}?subject={2}&body={3}\">{1}</a>'.format(\n+        email, author, mail_subject, mail_body))\n     return html\n \n-def get_timeout_length():\n+\n+def get_timeout_length() -> int:\n     return int(config.get('beaker.session.timeout', 0))\n \n \n-def canada_check_access(package_id):\n+def canada_check_access(package_id: str) -> bool:\n     try:\n         return h.check_access('package_update', {'id': package_id})\n-    except NotFound:\n+    except ObjectNotFound:\n         return False\n \n \n-def get_user_email(user_id):\n+def get_user_email(user_id: str) -> str:\n     '''\n     Return user email address if belong to the same organization\n     '''\n     u = User.get(user_id)\n     orgs = h.organizations_available()\n     org_ids = [o['id'] for o in orgs]\n \n-    if not u.is_in_groups(org_ids):\n+    if not u or not u.is_in_groups(org_ids):\n         return \"\"\n \n-    context = {'model': model,\n-               'session': model.Session,\n-               'keep_email': True}\n+    context = cast(Context, {'model': model,\n+                             'session': model.Session,\n+                             'keep_email': True})\n \n     try:\n         data_dict = {'id': user_id}\n-        user_dict = ckan.logic.get_action('user_show')(context, data_dict)\n+        user_dict = get_action('user_show')(context, data_dict)\n \n-        return user_dict['email']\n-\n-    except NotFound as e:\n+        if 'email' in user_dict:\n+            return user_dict['email']\n+        else:\n+            return \"\"\n+    except ObjectNotFound:\n         return \"\"\n \n \n core_helper(plugin_loaded)\n \n \n-def organization_member_count(id):\n+def organization_member_count(id: str) -> int:\n     try:\n-        members = ckan.logic.get_action(u'member_list')({}, {\n-            u'id': id,\n-            u'object_type': u'user',\n-            u'include_total': True,\n-        })\n-    except NotFound:\n-        raise NotFound( _('Members not found'))\n+        members = get_action('member_list')(\n+            cast(Context, {}),\n+            {\n+                'id': id,\n+                'object_type': 'user',\n+                'include_total': True\n+            })\n+    except ObjectNotFound:\n+        raise ObjectNotFound(_('Members not found'))\n     except NotAuthorized:\n         return -1\n \n     return len(members)\n \n \n-def _build_flash_html_for_ga4(message, category, caller, allow_html=True):\n+def _build_flash_html_for_ga4(message: str, category: str,\n+                              caller: str, allow_html: Optional[bool] = True) -> str:\n     \"\"\"\n     All flash messages will be given an event name and action attribute.\n \n     data-ga-event: CALLER in format of <module>.<class>.<method> | <module>.<method>\n     data-ga-action: CATEGORY in format of notice | error | success\n     \"\"\"\n-    return '<div class=\"canada-ga-flash\" data-ga-event=\"%s\" data-ga-action=\"%s\">%s</div>' \\\n-        % (caller, category, escape(message) if not allow_html else Markup(message))\n+    return '<div class=\"canada-ga-flash\" '\\\n+           'data-ga-event=\"%s\" data-ga-action=\"%s\">%s</div>' % \\\n+           (caller, category, escape(message) if\n+            not allow_html else Markup(message))\n \n \n-def _get_caller_info(stack):\n+def _get_caller_info(stack: List['inspect.FrameInfo']) -> str:\n     parentframe = stack[1][0]\n     module_info = inspect.getmodule(parentframe)\n \n     # module name\n+    caller_module = None\n     if module_info:\n         caller_module = module_info.__name__\n \n@@ -627,76 +716,80 @@ def _get_caller_info(stack):\n     return '%s.%s' % (caller_module, caller_method)\n \n \n-def flash_notice(message, allow_html=True):\n+def flash_notice(message: str, allow_html: Optional[bool] = True):\n     \"\"\"\n     Show a flash message of type notice\n \n     Adding the view/action caller for GA4 Custom Events\n     \"\"\"\n-    t.h.flash(_build_flash_html_for_ga4(message, 'notice',\n-                                        _get_caller_info(inspect.stack()),\n-                                        allow_html=allow_html),\n-              category='alert-info')\n+    h.flash(_build_flash_html_for_ga4(message, 'notice',\n+                                      _get_caller_info(inspect.stack()),\n+                                      allow_html=allow_html),\n+            category='alert-info')\n \n \n-def flash_error(message, allow_html=True):\n+def flash_error(message: str, allow_html: Optional[bool] = True):\n     \"\"\"\n     Show a flash message of type error\n \n     Adding the view/action caller for GA4 Custom Events\n     \"\"\"\n-    t.h.flash(_build_flash_html_for_ga4(message, 'error',\n-                                        _get_caller_info(inspect.stack()),\n-                                        allow_html=allow_html),\n-              category='alert-danger')\n+    h.flash(_build_flash_html_for_ga4(message, 'error',\n+                                      _get_caller_info(inspect.stack()),\n+                                      allow_html=allow_html),\n+            category='alert-danger')\n \n \n-def flash_success(message, allow_html=True):\n+def flash_success(message: str, allow_html: Optional[bool] = True):\n     \"\"\"\n     Show a flash message of type success\n \n     Adding the view/action caller for GA4 Custom Events\n     \"\"\"\n-    t.h.flash(_build_flash_html_for_ga4(message, 'success',\n-                                        _get_caller_info(inspect.stack()),\n-                                        allow_html=allow_html),\n-              category='alert-success')\n+    h.flash(_build_flash_html_for_ga4(message, 'success',\n+                                      _get_caller_info(inspect.stack()),\n+                                      allow_html=allow_html),\n+            category='alert-success')\n \n \n-def get_loader_status_badge(resource):\n-    # type: (dict) -> str\n+def get_loader_status_badge(resource: Dict[str, Any]) -> Union[Markup, str]:\n     \"\"\"\n     Displays a custom badge for the status of Xloader and DataStore\n     for the specified resource.\n     \"\"\"\n-    if not t.asbool(config.get('ckanext.canada.show_loader_badges', False)):\n+    if not asbool(config.get('ckanext.canada.show_loader_badges', False)):\n         return ''\n \n     if not XLoaderFormats:\n         return ''\n \n-    allowed_domains = config.get('ckanext.canada.datastore_source_domain_allow_list', [])\n+    allowed_domains = config.get(\n+        'ckanext.canada.datastore_source_domain_allow_list', [])\n     url = resource.get('url')\n     url_parts = urlsplit(url)\n \n-    if (resource.get('url_type') != 'upload' and url_parts.netloc not in allowed_domains) or \\\n-    not XLoaderFormats.is_it_an_xloader_format(resource.get('format')):\n+    if (\n+      (resource.get('url_type') != 'upload' and\n+       url_parts.netloc not in allowed_domains) or\n+      not XLoaderFormats.is_it_an_xloader_format(resource.get('format'))):\n         # we only want to show badges for uploads of supported xloader formats\n         return ''\n \n     is_datastore_active = resource.get('datastore_active', False)\n \n     try:\n-        xloader_job = t.get_action(\"xloader_status\")(None, {\"resource_id\": resource.get('id')})\n-    except (t.ObjectNotFound, t.NotAuthorized):\n+        xloader_job = get_action(\"xloader_status\")(\n+            cast(Context, {}), {\"resource_id\": resource.get('id')})\n+    except (ObjectNotFound, NotAuthorized):\n         xloader_job = {}\n \n     if xloader_job.get('status') == 'complete':\n         # the xloader task is complete, show datastore active or inactive.\n         # xloader will delete the datastore table at the beggining of the job run.\n         # so this will only be true if the job is fully finished.\n         status = 'active' if is_datastore_active else 'inactive'\n-    elif xloader_job.get('status') in ['pending', 'running', 'running_but_viewable', 'error']:\n+    elif xloader_job.get('status') in ['pending', 'running',\n+                                       'running_but_viewable', 'error']:\n         # the job is running or pending or errored\n         # show the xloader status\n         status = xloader_job.get('status')\n@@ -717,39 +810,48 @@ def get_loader_status_badge(resource):\n         'unknown': _('DataStore status unknown'),\n     }\n \n-    pusher_url = t.h.url_for('xloader.resource_data',\n-                             id=resource.get('package_id'),\n-                             resource_id=resource.get('id'))\n+    pusher_url = h.url_for('xloader.resource_data',\n+                           id=resource.get('package_id'),\n+                           resource_id=resource.get('id'))\n \n-    badge_url = t.h.url_for_static('/static/img/badges/{lang}/datastore-{status}.svg'.format(lang=t.h.lang(), status=status))\n+    badge_url = h.url_for_static(\n+        '/static/img/badges/{lang}/datastore-{status}.svg'.format(\n+            lang=h.lang(), status=status))\n \n-    title = t.h.render_datetime(xloader_job.get('last_updated'), with_hours=True) \\\n+    title = h.render_datetime(xloader_job.get('last_updated'), with_hours=True) \\\n         if xloader_job.get('last_updated') else ''\n \n-    return Markup(u'<a href=\"{pusher_url}\" class=\"loader-badge\"><img src=\"{badge_url}\" alt=\"{alt}\" title=\"{title}\"/></a>'.format(\n-        pusher_url=pusher_url,\n-        badge_url=badge_url,\n-        alt=html.escape(messages[status], quote=True),\n-        title=html.escape(title, quote=True)))\n+    # type_ignore_reason: incomplete typing\n+    alt_text = messages[status]  # type: ignore\n+\n+    return Markup(\n+        '<a href=\"{pusher_url}\" class=\"loader-badge\">'\n+        '<img src=\"{badge_url}\" alt=\"{alt}\" title=\"{title}\"/></a>'.format(\n+            pusher_url=pusher_url,\n+            badge_url=badge_url,\n+            alt=html.escape(alt_text, quote=True),\n+            title=html.escape(title, quote=True)))\n \n \n-def get_resource_view(resource_view_id):\n+def get_resource_view(resource_view_id: str) -> Optional[Dict[str, Any]]:\n     \"\"\"\n     Returns a resource view dict for the resource_view_id\n     \"\"\"\n     try:\n-        return t.get_action('resource_view_show')(\n+        return get_action('resource_view_show')(\n             {}, {'id': resource_view_id})\n-    except t.ObjectNotFound:\n+    except ObjectNotFound:\n         return None\n \n \n-def resource_view_type(resource_view):\n+def resource_view_type(resource_view: Dict[str, Any]) -> Optional[str]:\n     view_plugin = datapreview.get_view_plugin(resource_view['view_type'])\n+    if not view_plugin:\n+        return\n     return view_plugin.info().get('title')\n \n \n-def fgp_viewer_url(package):\n+def fgp_viewer_url(package: Dict[str, Any]) -> Optional[str]:\n     \"\"\"\n     Returns a link to fgp viewer for the package\n     \"\"\"\n@@ -763,19 +865,22 @@ def fgp_viewer_url(package):\n         return h.adv_search_url() + '/' + openmap_uri + '/' + package.get('id')\n \n \n-def date_field(field, pkg):\n-    if pkg.get(field) and ' ' in pkg.get(field):\n-        return pkg.get(field).split(' ')[0]\n-    return pkg.get(field, None)\n+def date_field(field: str, pkg: Dict[str, Any]) -> Any:\n+    field_value = pkg.get(field, None)\n+    if field_value and ' ' in field_value:\n+        return field_value.split(' ')[0]\n+    return field_value\n \n \n-def split_piped_bilingual_field(field_text, client_lang):\n+def split_piped_bilingual_field(field_text: Optional[str],\n+                                client_lang: str) -> Optional[str]:\n     if field_text is not None and ' | ' in field_text:\n         return field_text.split(' | ')[1 if client_lang == 'fr' else 0]\n     return field_text\n \n \n-def search_filter_pill_link_label(search_field, search_extras):\n+def search_filter_pill_link_label(search_field: str,\n+                                  search_extras: Dict[str, Any]) -> List[Any]:\n     links_labels = []\n \n     if search_field == 'portal_type':\n@@ -786,12 +891,15 @@ def search_filter_pill_link_label(search_field, search_extras):\n \n         # Add PD types\n         for pd_type in h.recombinant_get_types():\n-            preset_choices.append({'value': pd_type, 'label': _(h.recombinant_get_chromo(pd_type).get('title'))})\n+            preset_choices.append(\n+                {'value': pd_type,\n+                 'label': _(h.recombinant_get_chromo(pd_type).get('title'))})\n \n     elif search_field == 'status':\n \n-        preset_choices = [{'value': 'department_contacted',\n-                           'label': _('Request sent to data owner - awaiting response')}]\n+        preset_choices = [\n+            {'value': 'department_contacted',\n+             'label': _('Request sent to data owner - awaiting response')}]\n \n     elif search_field == 'ready_to_publish':\n \n@@ -800,24 +908,34 @@ def search_filter_pill_link_label(search_field, search_extras):\n \n     else:\n \n-        preset_choices = (h.scheming_get_preset('canada_' + search_field) or {}).get('choices', [])\n+        preset_choices = (\n+            h.scheming_get_preset('canada_' + search_field) or {}).get(\n+                'choices', [])\n \n         if search_field == 'collection':\n \n             collection_choices = preset_choices\n-            preset_choices = [{'value': 'pd', 'label': _('Proactive Publication')}]\n+            preset_choices = [{'value': 'pd',\n+                               'label': _('Proactive Publication')}]\n \n             for collection_type in collection_choices:\n                 preset_choices.append(collection_type)\n \n             # Add PD types\n             for pd_type in h.recombinant_get_types():\n-                preset_choices.append({'value': pd_type, 'label': _(h.recombinant_get_chromo(pd_type).get('title'))})\n+                preset_choices.append(\n+                    {'value': pd_type,\n+                     'label': _(h.recombinant_get_chromo(pd_type).get('title'))})\n \n-    def remove_filter_button_link_label(_field, _value, s_extras, _choices):\n+    def remove_filter_button_link_label(_field: str,\n+                                        _value: str,\n+                                        s_extras: Dict[str, Any],\n+                                        _choices: List[Any]):\n \n         extrs = s_extras.copy() if s_extras else {}\n-        extrs.update(request.view_args)\n+        view_args = request.view_args\n+        if view_args:\n+            extrs.update(view_args)\n         link = h.remove_url_param(_field, value=_value, extras=extrs)\n         label = _value\n \n@@ -831,34 +949,38 @@ def remove_filter_button_link_label(_field, _value, s_extras, _choices):\n             else:\n                 label = _('Scheduled')\n         else:\n-            label = h.scheming_language_text(h.list_dict_filter(_choices, 'value', 'label', _value))\n+            label = h.scheming_language_text(\n+                h.list_dict_filter(_choices, 'value', 'label', _value))\n \n         return link, label\n \n     for value in g.fields_grouped[search_field]:\n         if not isinstance(value, text_type):\n             for v in value:\n-                links_labels.append(remove_filter_button_link_label(_field=search_field,\n-                                                                    _value=v,\n-                                                                    s_extras=search_extras,\n-                                                                    _choices=preset_choices))\n+                links_labels.append(remove_filter_button_link_label(\n+                    _field=search_field,\n+                    _value=v,\n+                    s_extras=search_extras,\n+                    _choices=preset_choices))\n         else:\n-            links_labels.append(remove_filter_button_link_label(_field=search_field,\n-                                                                _value=value,\n-                                                                s_extras=search_extras,\n-                                                                _choices=preset_choices))\n+            links_labels.append(remove_filter_button_link_label(\n+                _field=search_field,\n+                _value=value,\n+                s_extras=search_extras,\n+                _choices=preset_choices))\n \n     return links_labels\n \n \n-def ckan_to_cdts_breadcrumbs(breadcrumb_content):\n+def ckan_to_cdts_breadcrumbs(breadcrumb_content: str) -> List[Dict[str, Any]]:\n     \"\"\"\n     The Wet Builder requires a list of JSON objects.\n \n     There is no good way to get the breadcrumbs from the CKAN template blocks\n     into parsed JSON objects. We need to use an HTML Parser to do it.\n \n-    See: https://cdts.service.canada.ca/app/cls/WET/gcweb/v4_1_0/cdts/samples/breadcrumbs-en.html\n+    See: https://cdts.service.canada.ca/app/cls/WET\n+        /gcweb/v4_1_0/cdts/samples/breadcrumbs-en.html\n     \"\"\"\n     breadcrumb_html = BeautifulSoup(breadcrumb_content, 'html.parser')\n     cdts_breadcrumbs = []\n@@ -871,7 +993,7 @@ def ckan_to_cdts_breadcrumbs(breadcrumb_content):\n         cdts_breadcrumbs.extend([{\n             'title': _('Open Government'),\n             'href': '/%s' % h.lang(),\n-        },{\n+        }, {\n             'title': _('Search'),\n             'href': adv_search_url(),\n         }])\n@@ -893,32 +1015,35 @@ def ckan_to_cdts_breadcrumbs(breadcrumb_content):\n     return cdts_breadcrumbs\n \n \n-def validation_status(resource_id):\n+def validation_status(resource_id: str) -> str:\n     try:\n-        validation = t.get_action('resource_validation_show')(\n+        validation = get_action('resource_validation_show')(\n             {'ignore_auth': True},\n             {'resource_id': resource_id})\n         return validation.get('status')\n-    except (t.ObjectNotFound, KeyError):\n+    except (ObjectNotFound, KeyError):\n         return 'unknown'\n \n \n-def is_user_locked(user_name):\n+def is_user_locked(user_name: str) -> Optional[bool]:\n     \"\"\"\n     Returns whether the user is locked out of their account or not.\n     \"\"\"\n     try:\n-        throttle = t.get_action('security_throttle_user_show')({'user': g.user}, {'user': user_name})\n+        throttle = get_action('security_throttle_user_show')(\n+            {'user': g.user}, {'user': user_name})\n     except (NotAuthorized, KeyError):\n         return None\n \n-    if throttle and 'count' in throttle and throttle['count'] >= max_login_attempts():\n+    if (\n+      throttle and 'count' in throttle and\n+      throttle['count'] >= max_login_attempts()):\n         return True\n \n     return False\n \n \n-def available_purge_types():\n+def available_purge_types() -> List[str]:\n     \"\"\"\n     Returns a list of available purge types.\n     \"\"\"\n@@ -934,7 +1059,7 @@ def available_purge_types():\n     return types\n \n \n-def operations_guide_link(stub: Optional[Union[str, None]]=None) -> str:\n+def operations_guide_link(stub: Optional[str] = None) -> str:\n     \"\"\"\n     Return a string for a link to the Registry Operations Guide.\n     \"\"\"\n@@ -950,7 +1075,7 @@ def operations_guide_link(stub: Optional[Union[str, None]]=None) -> str:\n     return f'{guide_link}/{stub}'\n \n \n-def max_resources_per_dataset():\n+def max_resources_per_dataset() -> Optional[int]:\n     max_resource_count = config.get('ckanext.canada.max_resources_per_dataset', None)\n     if max_resource_count:\n         return int(max_resource_count)"
                },
                {
                    "sha": "aa07ac7e86d768673c4c5d257d08017251f590f7",
                    "filename": "ckanext/canada/logic.py",
                    "status": "modified",
                    "additions": 247,
                    "deletions": 135,
                    "changes": 382,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Flogic.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Flogic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Flogic.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,8 +1,13 @@\n-from ckan.logic.action import get as core_get\n+from typing import Optional, Any, cast, Dict, List, Union\n+from ckan.types import Context, DataDict, Action, ChainedAction, Schema, ErrorDict\n+\n from ckan.logic.validators import isodate, Invalid\n-from ckan.lib.dictization import model_dictize\n from ckan import model\n from ckanext.activity.model import Activity, activity\n+from ckan.logic.schema import (\n+    default_create_resource_view_schema_filtered,\n+    default_update_resource_view_schema_changes,\n+)\n from contextlib import contextmanager\n \n from redis import ConnectionPool, Redis\n@@ -24,38 +29,35 @@\n     h,\n     asbool,\n     check_access,\n+    get_validator,\n )\n from ckan.authz import is_sysadmin\n from ckan.lib.navl.dictization_functions import validate\n \n-import functools\n from flask import has_request_context\n \n from sqlalchemy import func\n from sqlalchemy import or_\n \n-from six.moves.urllib.parse import urlparse\n+from urllib.parse import urlparse\n import mimetypes\n from ckanext.scheming.helpers import scheming_get_preset\n \n from ckanext.datastore.backend import DatastoreBackend\n from ckanext.datastore.logic.schema import datastore_search_schema\n from ckanext.canada import model as canada_model\n \n-MIMETYPES_AS_DOMAINS = [\n-    'application/x-msdos-program',  # .com\n-    'application/vnd.lotus-organizer',  # .org\n-]\n-\n from rq.job import Job\n from rq.exceptions import NoSuchJobError\n \n from pytz import timezone\n from logging import getLogger\n \n \n-log = getLogger(__name__)\n-ottawa_tz = timezone('America/Montreal')\n+MIMETYPES_AS_DOMAINS = [\n+    'application/x-msdos-program',  # .com\n+    'application/vnd.lotus-organizer',  # .org\n+]\n \n JOB_MAPPING = {\n     'ckanext.validation.jobs.run_validation_job': {\n@@ -80,63 +82,101 @@\n     }\n }\n \n+log = getLogger(__name__)\n+ottawa_tz = timezone('America/Montreal')\n+\n+\n+def disabled_action(context: Context,\n+                    data_dict: DataDict) -> Dict[str, Any]:\n+    \"\"\"\n+    Raises a NotFound exception to disable a logic action method.\n+    \"\"\"\n+    raise ObjectNotFound\n+\n \n-def limit_api_logic():\n+# type_ignore_reason: incomplete typing\n+disabled_action.side_effect_free = True  # type: ignore\n+disabled_action.auth_audit_exempt = True  # type: ignore\n+\n+\n+@chained_action\n+def disabled_anon_action(up_func: Action,\n+                         context: Context,\n+                         data_dict: DataDict) -> Union[ChainedAction, List[Any]]:\n+    if (\n+      not context.get('ignore_auth', False) and\n+      context.get('user', 'visitor') in ('', 'visitor')):\n+        return []\n+    return up_func(context, data_dict)\n+\n+\n+# type_ignore_reason: incomplete typing\n+disabled_anon_action.side_effect_free = True  # type: ignore\n+disabled_anon_action.auth_audit_exempt = True  # type: ignore\n+\n+\n+@chained_action\n+def resource_view_create_bilingual(up_func: Action,\n+                                   context: Context,\n+                                   data_dict: DataDict) -> ChainedAction:\n+    # assuming all resource views we used are filtered\n+    # filter_fields and filter_values have ignore_missing validator\n+    # so using the filtered schema should be fine here.\n+    s = default_create_resource_view_schema_filtered()\n+    # type_ignore_reason: incomplete typing for Schema overload\n+    return up_func(\n+        cast(Context, dict(\n+            context,\n+            schema=cast(Schema, dict(\n+                s,  # type: ignore\n+                title=[get_validator('default')('View'),  # type: ignore\n+                       get_validator('unicode_safe')],\n+                title_fr=[get_validator('default')('Vue'),  # type: ignore\n+                          get_validator('unicode_safe')],\n+                description=[get_validator('default')(''),  # type: ignore\n+                             get_validator('unicode_safe')],\n+                description_fr=[get_validator('default')(''),  # type: ignore\n+                                get_validator('unicode_safe')],\n+            )),\n+        )),\n+        data_dict\n+    )\n+\n+\n+@chained_action\n+def resource_view_update_bilingual(up_func: Action,\n+                                   context: Context,\n+                                   data_dict: DataDict) -> ChainedAction:\n+    # assuming all resource views we used are filtered\n+    # filter_fields and filter_values have ignore_missing validator\n+    # so using the filtered schema should be fine here.\n+    s = default_create_resource_view_schema_filtered()\n+    s.update(default_update_resource_view_schema_changes())\n+    return up_func(\n+        cast(Context, dict(\n+            context,\n+            schema=cast(Schema, dict(\n+                s,\n+                title_fr=list(s['title']),\n+                description_fr=list(s['description']),\n+            )),\n+        )),\n+        data_dict\n+    )\n+\n+\n+def limit_api_logic() -> Dict[str, Any]:\n     \"\"\"\n     Return a dict of logic function names -> wrappers that override\n     existing api calls to set new default limits and hard limits\n     \"\"\"\n     return {}\n-    context_limit_packages = {\n-        'group_show': (5, 20),\n-        'organization_show': (5, 20),\n-    }\n-    data_dict_limit = {\n-        'package_search': (int(config.get('ckan.datasets_per_page', 20)), 300),\n-        'package_activity_list': (20, 100),\n-        'recently_changed_packages_activity_list': (20, 100),\n-        'package_activity_list_html': (20, 100),\n-        'dashboard_activity_list': (20, 100),\n-        'dashboard_activity_list_html': (20, 100),\n-        }\n-\n-    out = {}\n-    for name, (default, limit) in context_limit_packages.items():\n-        action = getattr(core_get, name)\n-        @functools.wraps(action)\n-        def wrapper(context, data_dict,\n-                default=default, limit=limit, action=action):\n-            #value = int(context.get('limits', {}).get('packages', default))\n-            #context.setdefault('limits', {})['packages'] = min(value, limit)\n-            return action(context, data_dict)\n-        if hasattr(action, 'side_effect_free'):\n-            wrapper.side_effect_free = action.side_effect_free\n-        out[name] = wrapper\n-\n-    for name, (default, limit) in data_dict_limit.items():\n-        action = getattr(core_get, name)\n-        # package_search is special... :-(\n-        param = 'rows' if name == 'package_search' else 'limit'\n-        @functools.wraps(action)\n-        def wrapper(context, data_dict,\n-                default=default, limit=limit, action=action, param=param):\n-            try:\n-                if int(data_dict.get('offset', '0')) > 1000:\n-                    return []  # no.\n-                value = int(data_dict.get(param, default))\n-            except ValueError:\n-                return []\n-            data_dict[param] = min(value, limit)\n-            return action(context, data_dict)\n-        if hasattr(action, 'side_effect_free'):\n-            wrapper.side_effect_free = action.side_effect_free\n-        out[name] = wrapper\n-\n-    return out\n \n \n @side_effect_free\n-def changed_packages_activity_timestamp_since(context, data_dict):\n+def changed_packages_activity_timestamp_since(context: Context,\n+                                              data_dict: DataDict) -> \\\n+                                                List[Dict[str, Any]]:\n     '''Return the package_id and timestamp of all recently added or changed packages.\n \n     :param since_time: starting date/time\n@@ -150,9 +190,9 @@ def changed_packages_activity_timestamp_since(context, data_dict):\n \n     since = get_or_bust(data_dict, 'since_time')\n     try:\n-        since_time = isodate(since, None)\n+        since_time = isodate(since, cast(Context, {}))\n     except Invalid as e:\n-        raise ValidationError({'since_time':e.error})\n+        raise ValidationError(cast(ErrorDict, {'since_time': e.error}))\n \n     # hard limit this api to reduce opportunity for abuse\n     limit = int(config.get('ckan.activity_timestamp_since_limit', 10000))\n@@ -166,7 +206,7 @@ def changed_packages_activity_timestamp_since(context, data_dict):\n \n \n @side_effect_free\n-def activity_list_from_user_since(context, data_dict):\n+def activity_list_from_user_since(context: Context, data_dict: DataDict):\n     '''Return the activity stream of all recently added or changed packages.\n \n     :param since_time: starting date/time\n@@ -183,19 +223,20 @@ def activity_list_from_user_since(context, data_dict):\n     since = get_or_bust(data_dict, 'since_time')\n     user_id = get_or_bust(data_dict, 'user_id')\n     try:\n-        since_time = isodate(since, None)\n+        since_time = isodate(since, cast(Context, {}))\n     except Invalid as e:\n-        raise ValidationError({'since_time':e.error})\n+        raise ValidationError(cast(ErrorDict, {'since_time': e.error}))\n \n     # hard limit this api to reduce opportunity for abuse\n     limit = int(config.get('ckan.activity_list_hard_limit', 63))\n \n     activity_objects = _activities_from_user_list_since(\n-        since_time, limit,user_id)\n-    return model_dictize.activity_list_dictize(activity_objects, context)\n+        since_time, limit, user_id)\n+    return activity.activity_list_dictize(activity_objects, context)\n \n \n-def _changed_packages_activity_timestamp_since(since, limit):\n+def _changed_packages_activity_timestamp_since(since: str,\n+                                               limit: int) -> List[Activity]:\n     '''Return package_ids and last activity date of changed package\n     activities since a given date.\n \n@@ -204,35 +245,48 @@ def _changed_packages_activity_timestamp_since(since, limit):\n     'deleted resource view' activities for the whole site.\n \n     '''\n-    q = model.Session.query(Activity.object_id.label('object_id'),\n+    # type_ignore_reason: incomplete typing\n+    q = model.Session.query(Activity.object_id.label('object_id'),  # type: ignore\n                             func.max(Activity.timestamp).label(\n                                 'timestamp'))\n-    q = q.filter(or_(Activity.activity_type.endswith('package'),  # Package create, update, delete\n-                     Activity.activity_type.endswith('view'),  # Resource View create, update, delete\n-                     Activity.activity_type.endswith('created datastore')))  # DataStore create & Data Dictionary update\n-    q = q.filter(Activity.timestamp > since)\n+    q = q.filter(\n+            or_(\n+                # Package create, update, delete\n+                Activity.activity_type.endswith('package'),\n+                # Resource View create, update, delete\n+                Activity.activity_type.endswith('view'),\n+                # DataStore create & Data Dictionary update\n+                Activity.activity_type.endswith('created datastore')\n+            )\n+        )\n+    # type_ignore_reason: incomplete typing\n+    q = q.filter(Activity.timestamp > since)  # type: ignore\n     q = q.group_by(Activity.object_id)\n     q = q.order_by('timestamp')\n-    return q.limit(limit)\n+    # type_ignore_reason: incomplete typing\n+    return q.limit(limit)  # type: ignore\n \n \n-def _activities_from_user_list_since(since, limit,user_id):\n+def _activities_from_user_list_since(since: str,\n+                                     limit: int,\n+                                     user_id: str) -> List[Activity]:\n     '''Return the site-wide stream of changed package activities since a given\n     date for a particular user.\n \n     This activity stream includes recent 'new package', 'changed package' and\n     'deleted package' activities for that user.\n \n     '''\n-\n     q = activity._activities_from_user_query(user_id)\n     q = q.order_by(Activity.timestamp)\n-    q = q.filter(Activity.timestamp > since)\n+    # type_ignore_reason: incomplete typing\n+    q = q.filter(Activity.timestamp > since)  # type: ignore\n     return q.limit(limit)\n \n \n @contextmanager\n-def datastore_create_temp_user_table(context, drop_on_commit=True):\n+def datastore_create_temp_user_table(context: Context,\n+                                     drop_on_commit: Optional[bool] = True):\n     \"\"\"\n     Context manager for wrapping DataStore transactions with\n     a temporary user table.\n@@ -247,7 +301,7 @@ def datastore_create_temp_user_table(context, drop_on_commit=True):\n     else:\n         from ckanext.datastore.backend.postgres import literal_string\n         username = context['user']\n-        context['connection'].execute(u'''\n+        context['connection'].execute('''\n             CREATE TEMP TABLE IF NOT EXISTS datastore_user (\n                 username text NOT NULL,\n                 sysadmin boolean NOT NULL\n@@ -264,22 +318,23 @@ def datastore_create_temp_user_table(context, drop_on_commit=True):\n     # __exit__ of context manager\n \n     if 'user' in context and not drop_on_commit:\n-        context['connection'].execute(u'''DROP TABLE datastore_user;''')\n+        context['connection'].execute('''DROP TABLE datastore_user;''')\n \n \n-def canada_guess_mimetype(context, data_dict):\n+def canada_guess_mimetype(context: Context, data_dict: DataDict) -> str:\n     \"\"\"\n     Returns mimetype based on url, similar to the Core code,\n     but will respect the Schema and choice replacements such\n     as [\"jpg\", \"jpeg\"] and returns value JPG.\n     \"\"\"\n     url = data_dict.pop('url', None)\n-    mimetype, encoding = mimetypes.guess_type(url)\n+    mimetype, _encoding = mimetypes.guess_type(url)\n \n     if not mimetype or mimetype in MIMETYPES_AS_DOMAINS:\n         # if we cannot guess the mimetype, check if it is an actual web address\n-        # and we can set the mimetype to text/html. Uploaded files have only the filename as url,\n-        # so check scheme to determine if it's an actual web address.\n+        # and we can set the mimetype to text/html. Uploaded files\n+        # have only the filename as url, so check scheme to determine if it's\n+        # an actual web address.\n         parsed = urlparse(url)\n         if parsed.scheme:\n             mimetype = 'text/html'\n@@ -288,7 +343,10 @@ def canada_guess_mimetype(context, data_dict):\n         # run mimetype through core helper to clean format, then\n         # check replacements in the scheming choices.\n         mimetype = h.unified_resource_format(mimetype)\n-        fmt_choices = scheming_get_preset('canada_resource_format')['choices']\n+        preset_field = scheming_get_preset('canada_resource_format')\n+        fmt_choices = []\n+        if preset_field and 'choices' in preset_field:\n+            fmt_choices = preset_field['choices']\n         for f in fmt_choices:\n             if 'mimetype' in f and mimetype == f['mimetype']:\n                 # core unified_resource_format may not have all of our\n@@ -300,14 +358,19 @@ def canada_guess_mimetype(context, data_dict):\n                         mimetype = f['value']\n \n     if not mimetype:\n-        # raise the ValidationError here so that the front-end and back-end will have it.\n-        raise ValidationError({'format': _('Could not determine a resource format. Please supply a format.')})\n+        # raise the ValidationError here so that the\n+        # front-end and back-end will have it.\n+        raise ValidationError(cast(ErrorDict, {\n+            'format': _('Could not determine a resource '\n+                        'format. Please supply a format.')}))\n \n     return mimetype\n \n \n @chained_action\n-def canada_resource_view_show(up_func, context, data_dict):\n+def canada_resource_view_show(up_func: Action,\n+                              context: Context,\n+                              data_dict: DataDict) -> ChainedAction:\n     \"\"\"\n     Return the metadata of a resource_view.\n \n@@ -319,17 +382,22 @@ def canada_resource_view_show(up_func, context, data_dict):\n     Canada Fork: extends the resource_view_show action method\n     to prevent showing datatable_views for invalid and inactive Resources\n \n-    We need this method to 404 the resource_view page (e.g. viewing in full screen)\n+    We need this method to 404 the resource_view page\n+    (e.g. viewing in full screen)\n \n-    If a user is logged in, we want them to be able to see and edit the datatables_view\n-    views still. We will just add a key to the view dict to be used within templates for visuals.\n+    If a user is logged in, we want them to be able\n+    to see and edit the datatables_view views still.\n+    We will just add a key to the view dict to be used\n+    within templates for visuals.\n     \"\"\"\n     view_dict = up_func(context, data_dict)\n     if not asbool(config.get('ckanext.canada.disable_failed_ds_views', False)):\n         return view_dict\n     if view_dict.get('view_type') == 'datatables_view':\n-        # at this point, the core function has been called, calling resource_view_show etc.\n-        # so we can assume that the Resource and View exists here, and that `resource_id` is in view_dict\n+        # at this point, the core function has been called,\n+        # calling resource_view_show etc.\n+        # so we can assume that the Resource and View exists here,\n+        # and that `resource_id` is in view_dict\n         resource = model.Resource.get(view_dict.get('resource_id'))\n         url_type = getattr(resource, 'url_type', None)\n         if url_type in h.datastore_rw_resource_url_types():\n@@ -348,8 +416,9 @@ def canada_resource_view_show(up_func, context, data_dict):\n             current_user = None\n             is_system_process = True\n \n-        if not res_extras.get('datastore_active', False) or \\\n-        res_extras.get('validation_status') != 'success':\n+        if (\n+          not res_extras.get('datastore_active', False) or\n+          res_extras.get('validation_status') != 'success'):\n             # if the Resource is not active in the DataStore or has not\n             # passed validation, we do not want to show its datatables_view views\n \n@@ -365,7 +434,9 @@ def canada_resource_view_show(up_func, context, data_dict):\n \n \n @chained_action\n-def canada_resource_view_list(up_func, context, data_dict):\n+def canada_resource_view_list(up_func: Action,\n+                              context: Context,\n+                              data_dict: DataDict) -> List[Dict[str, Any]]:\n     \"\"\"\n     Return the list of resource views for a particular resource.\n \n@@ -379,15 +450,20 @@ def canada_resource_view_list(up_func, context, data_dict):\n \n     This will delete any datatables_view from the list of views.\n \n-    If a user is logged in, we want them to be able to see and edit the datatables_view\n-    views still. We will just add a key to the view dict to be used within templates for visuals.\n+    If a user is logged in, we want them to be able\n+    to see and edit the datatables_view views still.\n+    We will just add a key to the view dict to be used\n+    within templates for visuals.\n     \"\"\"\n     view_list = up_func(context, data_dict)\n     if not asbool(config.get('ckanext.canada.disable_failed_ds_views', False)):\n         return view_list\n     # at this point, the core function has been called, calling resource_show etc.\n     # so we can assume that the Resource exists here, and that `id` is in data_dict\n-    resource = model.Resource.get(data_dict.get('id'))\n+    if not data_dict.get('id') or not isinstance(data_dict.get('id'), str):\n+        return view_list\n+    # type_ignore_reason: checking str existance\n+    resource = model.Resource.get(data_dict.get('id'))  # type: ignore\n     url_type = getattr(resource, 'url_type', None)\n     if url_type in h.datastore_rw_resource_url_types():\n         # we don't want to disable views for TableDesigner or Recombinant\n@@ -407,9 +483,10 @@ def canada_resource_view_list(up_func, context, data_dict):\n     disabled_views_indexes = []\n     for i, view_dict in enumerate(view_list):\n \n-        if view_dict.get('view_type') == 'datatables_view' and \\\n-        ( not res_extras.get('datastore_active', False) or\n-          res_extras.get('validation_status') != 'success'):\n+        if (\n+          view_dict.get('view_type') == 'datatables_view' and\n+          (not res_extras.get('datastore_active', False) or\n+           res_extras.get('validation_status') != 'success')):\n             # if the Resource is not active in the DataStore or has not\n             # passed validation, we do not want to show its datatables_view views\n \n@@ -425,7 +502,8 @@ def canada_resource_view_list(up_func, context, data_dict):\n \n \n @chained_action\n-def canada_job_list(up_func, context, data_dict):\n+def canada_job_list(up_func: Action, context: Context,\n+                    data_dict: DataDict) -> ChainedAction:\n     \"\"\"List enqueued background jobs.\n \n     :param list queues: Queues to list jobs from. If not given then the\n@@ -475,38 +553,45 @@ def canada_job_list(up_func, context, data_dict):\n             icon = 'fa-circle-notch'\n \n         job_info = {}\n-        if not job_kwargs and job_obj.func_name == 'ckan.lib.search.jobs.reindex_packages':\n+        if (\n+          not job_kwargs and\n+          job_obj.func_name == 'ckan.lib.search.jobs.reindex_packages'):\n             job_info = {'name': _('Entire Site')}\n         if rid or gid:\n-            current_user = get_action('get_site_user')({'ignore_auth': True}, {})['name']\n+            current_user = get_action('get_site_user')(\n+                {'ignore_auth': True}, {})['name']\n             if has_request_context():\n                 try:\n                     current_user = g.user\n                 except (TypeError, AttributeError):\n                     pass\n             if rid:\n                 try:\n-                    resource = get_action('resource_show')({'user': current_user}, {'id': rid})\n+                    resource = get_action('resource_show')(\n+                        {'user': current_user}, {'id': rid})\n                 except (ObjectNotFound, NotAuthorized):\n                     continue\n-                job_info = {'name_translated': resource.get('name_translated'),\n-                            'resource_id': rid,\n-                            'url': h.url_for('dataset_resource.read',\n-                                            id=resource.get('package_id'),\n-                                            resource_id=rid)}\n+                job_info = {\n+                    'name_translated': resource.get('name_translated'),\n+                    'resource_id': rid,\n+                    'url': h.url_for('dataset_resource.read',\n+                                     id=resource.get('package_id'),\n+                                     resource_id=rid)}\n             if gid:\n                 try:\n-                    group = get_action('organization_show')({'user': current_user}, {'id': gid})\n+                    group = get_action('organization_show')(\n+                        {'user': current_user}, {'id': gid})\n                 except (ObjectNotFound, NotAuthorized):\n                     try:\n-                        group = get_action('group_show')({'user': current_user}, {'id': gid})\n+                        group = get_action('group_show')(\n+                            {'user': current_user}, {'id': gid})\n                     except (ObjectNotFound, NotAuthorized):\n                         continue\n                 job_info = {'name_translated': group.get('title_translated', {}),\n                             'name': group.get('title'),\n                             'group_id': gid,\n                             'url': h.url_for('%s.read' % group.get('type'),\n-                                            id=group.get('name'))}\n+                                             id=group.get('name'))}\n \n         job['info'] = job_info\n         job['type'] = job_title\n@@ -518,9 +603,10 @@ def canada_job_list(up_func, context, data_dict):\n \n \n @side_effect_free\n-def registry_jobs_running(context, data_dict):\n+def registry_jobs_running(context: Context, data_dict: DataDict) -> bool:\n     \"\"\"\n-    Returns false if the first job in the default queue has not run in the last 18 minutes.\n+    Returns false if the first job in the default\n+    queue has not run in the last 18 minutes.\n \n     #TODO: rework this when the Registry moves to public network.\n     \"\"\"\n@@ -535,7 +621,7 @@ def registry_jobs_running(context, data_dict):\n     _connection_pool = ConnectionPool.from_url(registry_redis_url)\n     redis_conn = Redis(connection_pool=_connection_pool)\n \n-    fullname = u'ckan:{}:default'.format(registry_redis_prefix)\n+    fullname = 'ckan:{}:default'.format(registry_redis_prefix)\n \n     queue = Queue(fullname, connection=redis_conn)\n \n@@ -546,27 +632,32 @@ def registry_jobs_running(context, data_dict):\n \n     if jobs:\n         first_job = jobs[0]\n-        first_created_at = first_job.created_at.strftime(u'%Y-%m-%dT%H:%M:%S')\n-        if datetime.strptime(first_created_at, '%Y-%m-%dT%H:%M:%S') < (datetime.now() - timedelta(minutes=18)):\n+        first_created_at = first_job.created_at.strftime('%Y-%m-%dT%H:%M:%S')\n+        if (\n+          datetime.strptime(first_created_at, '%Y-%m-%dT%H:%M:%S') <\n+          (datetime.now() - timedelta(minutes=18))):\n             return False\n \n     return True\n \n \n @chained_action\n-def canada_datastore_run_triggers(up_func, context, data_dict):\n+def canada_datastore_run_triggers(up_func: Action,\n+                                  context: Context,\n+                                  data_dict: DataDict) -> ChainedAction:\n     \"\"\"\n     Wraps datastore_run_triggers action in context manager for DS temp user table.\n     \"\"\"\n     if 'connection' not in context:\n         backend = DatastoreBackend.get_active_backend()\n-        context['connection'] = backend._get_write_engine().connect()\n+        # type_ignore_reason: incomplete typing\n+        context['connection'] = backend._get_write_engine().connect()  # type: ignore\n     with datastore_create_temp_user_table(context, drop_on_commit=False):\n         return up_func(context, data_dict)\n \n \n @side_effect_free\n-def portal_sync_info(context, data_dict):\n+def portal_sync_info(context: Context, data_dict: DataDict) -> Dict[str, Any]:\n     \"\"\"\n     Returns PackageSync object for a given package_id if it exists.\n     \"\"\"\n@@ -577,9 +668,11 @@ def portal_sync_info(context, data_dict):\n     sync_info = canada_model.PackageSync.get(package_id=package_id)\n \n     if not sync_info:\n-        raise ObjectNotFound(_('No Portal Sync information found for package %s') % package_id)\n+        raise ObjectNotFound(\n+            _('No Portal Sync information found for package %s') % package_id)\n \n-    # NOTE: never show sync_info.error as it contains stack traces and system information\n+    # NOTE: never show sync_info.error as it\n+    # contains stack traces and system information\n     return {\n         'package_id': sync_info.package_id,\n         'last_run': sync_info.last_run,\n@@ -589,15 +682,18 @@ def portal_sync_info(context, data_dict):\n \n \n @side_effect_free\n-def list_out_of_sync_packages(context, data_dict):\n+def list_out_of_sync_packages(context: Context, data_dict: DataDict) -> Dict[str, Any]:\n     \"\"\"\n     Returns a list of out of sync packages on the Portal.\n \n     Based on PackageSync model.\n     \"\"\"\n     check_access('list_out_of_sync_packages', context, data_dict)\n \n-    sync_infos_count = model.Session.query(canada_model.PackageSync.package_id).filter(canada_model.PackageSync.error_on != None).count()\n+    sync_infos_count = model.Session.query(\n+        canada_model.PackageSync.package_id).filter(\n+            # type_ignore_reason: incomplete typing\n+            canada_model.PackageSync.error_on != None).count()  # type: ignore\n \n     out_of_sync_packages = {'count': sync_infos_count, 'results': []}\n \n@@ -606,29 +702,42 @@ def list_out_of_sync_packages(context, data_dict):\n \n     limit = data_dict.get('limit', 25)\n     offset = data_dict.get('start', 0)\n-    sync_infos = model.Session.query(canada_model.PackageSync).filter(canada_model.PackageSync.error_on != None).limit(limit).offset(offset)\n+    sync_infos = model.Session.query(\n+        canada_model.PackageSync).filter(\n+            # type_ignore_reason: incomplete typing\n+            canada_model.PackageSync.error_on != None).limit(  # type: ignore\n+                limit).offset(offset)\n \n     for sync_info in sync_infos:\n         try:\n-            pkg_dict = get_action('package_show')({'user': context.get('user')}, {'id': sync_info.package_id})\n+            pkg_dict = get_action('package_show')(\n+                cast(Context, {'user': context.get('user')}),\n+                {'id': sync_info.package_id})\n         except (ObjectNotFound, NotAuthorized):\n             continue\n-        # NOTE: never show sync_info.error as it contains stack traces and system information\n-        out_of_sync_packages['results'].append({'pkg_dict': pkg_dict, 'last_successful_sync': sync_info.last_successful_sync,\n-                                                'error_on': sync_info.error_on, 'last_run': sync_info.last_run})\n+        # NOTE: never show sync_info.error as it\n+        # contains stack traces and system information\n+        out_of_sync_packages['results'].append(\n+            {'pkg_dict': pkg_dict,\n+             'last_successful_sync': sync_info.last_successful_sync,\n+             'error_on': sync_info.error_on,\n+             'last_run': sync_info.last_run})\n \n     return out_of_sync_packages\n \n \n @chained_action\n @side_effect_free\n-def canada_datastore_search(up_func, context, data_dict):\n+def canada_datastore_search(up_func: Action,\n+                            context: Context,\n+                            data_dict: DataDict) -> ChainedAction:\n     \"\"\"\n     Limit datastore search logic to prevent FTS searches for data\n     over the maximum rows for FTS index.\n     \"\"\"\n     schema = context.get('schema', datastore_search_schema())\n-    _data_dict, errors = validate(dict(data_dict), schema, dict(context))\n+    _data_dict, errors = validate(dict(data_dict), schema,\n+                                  cast(Context, dict(context)))\n     if errors:\n         raise ValidationError(errors)\n     try:\n@@ -637,12 +746,15 @@ def canada_datastore_search(up_func, context, data_dict):\n     except Exception:\n         return up_func(context, data_dict)\n     res = get_action('resource_show')(\n-        dict(context), {'id': _data_dict.get('resource_id')})\n+        cast(Context, dict(context)), {'id': _data_dict.get('resource_id')})\n     if not res.get('url_type') or res.get('url_type') == 'upload':\n         # only limit FTS for links and uploads\n         record_count = ds_result.get('total', 0)\n         max_rows_for_fts = int(config.get('ckanext.canada.max_ds_fts_rows', 100000))\n-        if (_data_dict.get('full_text') or (_data_dict.get('q') and isinstance(_data_dict.get('q'), str))) and record_count > max_rows_for_fts:\n+        if (_data_dict.get('full_text') or\n+            (_data_dict.get('q') and isinstance(_data_dict.get('q'), str))) and \\\n+                record_count > max_rows_for_fts:\n             raise ValidationError(_('Invalid request. Full text search is '\n-                                    'not supported for data with more than {} rows.').format(max_rows_for_fts))\n+                                    'not supported for data with '\n+                                    'more than {} rows.').format(max_rows_for_fts))\n     return up_func(context, data_dict)"
                },
                {
                    "sha": "22e8ad1f87ad5a9740e489b3c4fe4a46e9b91078",
                    "filename": "ckanext/canada/migration/canada_public/versions/0ef791477ff0_.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 1,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fversions%2F0ef791477ff0_.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fversions%2F0ef791477ff0_.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmigration%2Fcanada_public%2Fversions%2F0ef791477ff0_.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -32,7 +32,9 @@ def upgrade():\n     op.create_table(\n         \"package_sync\",\n         sa.Column(\"package_id\", sa.Unicode, primary_key=True),\n-        sa.Column(\"last_run\", sa.DateTime, nullable=False, default=datetime.datetime.now(datetime.timezone.utc)),\n+        sa.Column(\"last_run\", sa.DateTime,\n+                  nullable=False,\n+                  default=datetime.datetime.now(datetime.timezone.utc)),\n         sa.Column(\"last_successful_sync\", sa.DateTime, nullable=True),\n         sa.Column(\"error_on\", sa.Unicode, nullable=True),\n         sa.Column(\"error\", sa.Unicode, nullable=True),"
                },
                {
                    "sha": "40b2dcc3e9849b8176470297543cf8b50f9cf4b4",
                    "filename": "ckanext/canada/model.py",
                    "status": "modified",
                    "additions": 15,
                    "deletions": 11,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fmodel.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fmodel.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fmodel.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,4 +1,5 @@\n # encoding: utf-8\n+from typing import Optional\n \n import datetime\n import logging\n@@ -14,20 +15,21 @@\n Base = declarative_base(metadata=meta.metadata)\n \n \n-class PackageSync(Base):\n+# type_ignore_reason: incomplete typing\n+class PackageSync(Base):  # type: ignore\n     __tablename__ = 'package_sync'\n \n     package_id = Column(Unicode, primary_key=True)\n-    last_run = Column(DateTime, nullable=False, default=datetime.datetime.now(datetime.timezone.utc))\n+    last_run = Column(DateTime, nullable=False,\n+                      default=datetime.datetime.now(datetime.timezone.utc))\n     last_successful_sync = Column(DateTime, nullable=True)\n     error_on = Column(Unicode, nullable=True)\n     error = Column(Unicode, nullable=True)\n \n     Session = meta.Session\n \n-\n     @classmethod\n-    def get(cls, package_id, for_update=False):\n+    def get(cls, package_id: str, for_update: Optional[bool] = False):\n         \"\"\"\n         Returns a package_sync object referenced by its package_id.\n         \"\"\"\n@@ -39,17 +41,18 @@ def get(cls, package_id, for_update=False):\n             q = q.with_for_update()\n         return q.first()\n \n-\n     @classmethod\n     def save(cls):\n         \"\"\"\n         Adds the current object to the database Session. Requires Session.commit()\n         \"\"\"\n         cls.Session.add(cls)\n \n-\n     @classmethod\n-    def upsert(cls, package_id, last_successful_sync=None, error_on=None, error=None):\n+    def upsert(cls, package_id: str,\n+               last_successful_sync: Optional[datetime.datetime] = None,\n+               error_on: Optional[str] = None,\n+               error: Optional[str] = None):\n         \"\"\"\n         Sets and returns a package_sync object referenced by its package_id.\n         \"\"\"\n@@ -59,19 +62,20 @@ def upsert(cls, package_id, last_successful_sync=None, error_on=None, error=None\n             package_sync.error_on = error_on\n             package_sync.error = error\n             package_sync.last_run = datetime.datetime.now(datetime.timezone.utc)\n-            package_sync.last_successful_sync = last_successful_sync if last_successful_sync else package_sync.last_successful_sync\n+            package_sync.last_successful_sync = last_successful_sync if \\\n+                last_successful_sync else package_sync.last_successful_sync\n         else:\n-            package_sync = cls(package_id=package_id, last_successful_sync=last_successful_sync,\n+            package_sync = cls(package_id=package_id,\n+                               last_successful_sync=last_successful_sync,\n                                error_on=error_on, error=error)\n \n         cls.Session.add(package_sync)\n         cls.Session.commit()\n \n         return cls.get(package_id)\n \n-\n     @classmethod\n-    def delete(cls, package_id):\n+    def delete(cls, package_id: str):\n         \"\"\"\n         Deletes a pacage_sync object referenced by its package_id.\n         \"\"\""
                },
                {
                    "sha": "65a6cb5872696de00fbd346cb58e4381d358fead",
                    "filename": "ckanext/canada/pd.py",
                    "status": "modified",
                    "additions": 122,
                    "deletions": 69,
                    "changes": 191,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fpd.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fpd.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fpd.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,14 +1,18 @@\n+# NOTE: used to connect to the SOLR cores for Drupal PD Searches\n+# TODO: remove once all PDs are in Django\n+from typing import Optional, Union, Dict, Any, List, Tuple\n+\n import click\n import os\n import hashlib\n import calendar\n import time\n+from pysolr import Solr\n from babel.numbers import format_currency, format_decimal\n \n from ckanapi import LocalCKAN, NotFound\n \n from ckanext.recombinant.tables import (\n-    get_geno,\n     get_chromo,\n     get_dataset_types)\n from ckanext.recombinant.errors import RecombinantException\n@@ -30,7 +34,7 @@ def get_commands():\n     return pd\n \n \n-def _check_pd_type(pd_type):\n+def _check_pd_type(pd_type: str):\n     if pd_type not in get_dataset_types():\n         raise RecombinantException(f'PD Type \"{pd_type}\" does not exist')\n \n@@ -50,7 +54,7 @@ def list_types():\n \n @pd.command(short_help=\"Clear all SOLR records.\")\n @click.argument(\"pd_type\")\n-def clear(pd_type):\n+def clear(pd_type: str):\n     _check_pd_type(pd_type)\n     clear_index(pd_type)\n \n@@ -60,14 +64,16 @@ def clear(pd_type):\n @click.option(\n     \"--lenient\",\n     is_flag=True,\n-    help=\"Allow rebuild from csv files without checking hat columns match expected columns.\",\n+    help=\"Allow rebuild from csv files without \"\n+         \"checking hat columns match expected columns.\",\n )\n @click.option(\n     \"-f\",\n     \"--files\",\n     default=None,\n     multiple=True,\n-    help=\"CSV file(s) to use as input (or default CKAN DB). Use PD and PD-nil files for NIL types.\",\n+    help=\"CSV file(s) to use as input (or default CKAN DB). \"\n+         \"Use PD and PD-nil files for NIL types.\",\n )\n @click.option(\n     \"-s\",\n@@ -78,10 +84,14 @@ def clear(pd_type):\n @click.option(\n     \"-n\",\n     \"--has-nil\",\n-     is_flag=True,\n+    is_flag=True,\n     help=\"If the PD Type is a NIL type.\",\n )\n-def rebuild(pd_type, files=None, solr_url=None, lenient=False, has_nil=False):\n+def rebuild(pd_type: str,\n+            files: Optional[List[str]] = None,\n+            solr_url: Optional[str] = None,\n+            lenient: Optional[bool] = False,\n+            has_nil: Optional[bool] = False):\n     \"\"\"\n     Rebuilds and reindexes all SOLR records.\n \n@@ -100,18 +110,21 @@ def rebuild(pd_type, files=None, solr_url=None, lenient=False, has_nil=False):\n     strict = True\n     if lenient:\n         strict = False\n-    rebuild(pd_type,\n-            files,\n-            solr_url,\n-            strict)\n+    _rebuild(pd_type,\n+             files,\n+             solr_url,\n+             strict)\n \n \n-def clear_index(pd_type, solr_url=None, commit=True):\n+def clear_index(pd_type: str, solr_url: Optional[str] = None,\n+                commit: Optional[bool] = True):\n     conn = solr_connection(pd_type, solr_url)\n     conn.delete(q=\"*:*\", commit=commit)\n \n \n-def rebuild(pd_type, csv_files=None, solr_url=None, strict=True):\n+def _rebuild(pd_type: str, csv_files: Optional[List[str]] = None,\n+             solr_url: Optional[str] = None,\n+             strict: bool = True):\n     \"\"\"\n     Implement rebuild command\n \n@@ -130,16 +143,15 @@ def rebuild(pd_type, csv_files=None, solr_url=None, strict=True):\n             print(csv_file + ':')\n             prev_org = None\n             unmatched = None\n-            firstpart, filename = os.path.split(csv_file)\n+            _firstpart, filename = os.path.split(csv_file)\n             assert filename.endswith('.csv')\n             resource_name = filename[:-4]\n \n             chromo = get_chromo(resource_name)\n-            geno = get_geno(chromo['dataset_type'])\n \n             for org_id, records in csv_data_batch(csv_file, chromo, strict=strict):\n                 records = [dict((k, safe_for_solr(v)) for k, v in\n-                            row_dict.items()) for row_dict in records]\n+                           row_dict.items()) for row_dict in records]\n                 if org_id != prev_org:\n                     unmatched = None\n                 try:\n@@ -164,7 +176,13 @@ def rebuild(pd_type, csv_files=None, solr_url=None, strict=True):\n     conn.commit()\n \n \n-def _update_records(records, org_detail, conn, resource_name, unmatched, retry=True):\n+def _update_records(records: List[Any],\n+                    org_detail: Dict[str, Any],\n+                    conn: Solr,\n+                    resource_name: str,\n+                    unmatched: Union[Tuple[\n+                        Dict[Any, Any], Dict[Any, Any]], None],\n+                    retry: Optional[bool] = True):\n     \"\"\"\n     Update records on solr core\n \n@@ -184,16 +202,16 @@ def _update_records(records, org_detail, conn, resource_name, unmatched, retry=T\n     org = org_detail['name']\n     orghash = hashlib.md5(org.encode('utf-8')).hexdigest()\n \n-    def unique_id(r):\n+    def unique_id(r: List[Any]):\n         \"return hash, friendly id, partial id\"\n         s = orghash\n         f = org\n         p = org\n         for k in pk:\n             s = hashlib.md5((s + r[k]).encode('utf-8')).hexdigest()\n-            f += u'|' + str(r[k])\n-            if u'|' not in p:\n-                p += u'|' + str(r[k])\n+            f += '|' + str(r[k])\n+            if '|' not in p:\n+                p += '|' + str(r[k])\n         return s, f, p\n \n     out = []\n@@ -211,7 +229,7 @@ def unique_id(r):\n     # and cleaning up old data.\n     failed_choices = {}\n \n-    def _record_failed_choice(_key, _value):\n+    def _record_failed_choice(_key: str, _value: str):\n         if _key not in failed_choices:\n             failed_choices[_key] = {}\n         if _value not in failed_choices[_key]:\n@@ -223,9 +241,9 @@ def _record_failed_choice(_key, _value):\n         unique, friendly, partial = unique_id(r)\n         if chromo.get('solr_legacy_ati_ids', False):\n             # for compatibility with existing urls\n-            unique = hashlib.md5((orghash\n-                + r.get('request_number', repr((int(r['year']), int(r['month'])))\n-                )).encode('utf-8')).hexdigest()\n+            unique = hashlib.md5((orghash + r.get(\n+                'request_number', repr((int(r['year']), int(r['month'])))))\n+                    .encode('utf-8')).hexdigest()\n \n         solrrec = {\n             'id': unique,\n@@ -249,7 +267,7 @@ def _record_failed_choice(_key, _value):\n             facet_range = f.get('solr_dollar_range_facet')\n             if facet_range:\n                 try:\n-                    float_value = float(value.replace('$','').replace(',',''))\n+                    float_value = float(value.replace('$', '').replace(',', ''))\n                 except ValueError:\n                     pass\n                 else:\n@@ -290,30 +308,42 @@ def _record_failed_choice(_key, _value):\n                 except ValueError:\n                     pass\n \n-            # limit text values to 28kB for indexing. Solr max 32kB minus a threshold for synonym replacements.\n-            solrrec[key] = value.encode('utf-8')[:SOLR_MAX_UTF8_LENGTH].decode() if (f.get('datastore_type') == 'text' and len(value.encode('utf-8')) > SOLR_MAX_UTF8_LENGTH) else value\n+            # limit text values to 28kB for indexing.\n+            # Solr max 32kB minus a threshold for synonym replacements.\n+            solrrec[key] = value.encode('utf-8')[:SOLR_MAX_UTF8_LENGTH].decode() if (\n+                f.get('datastore_type') == 'text' and\n+                len(value.encode('utf-8')) > SOLR_MAX_UTF8_LENGTH) else value\n \n             choices = choice_fields.get(f['datastore_id'])\n             if choices:\n                 if key.endswith('_code'):\n                     key = key[:-5]\n                 if f.get('datastore_type') == '_text':\n-                    # special handling for _text types, joining the multiple choices with semicolons (;)\n+                    # special handling for _text types, joining\n+                    # the multiple choices with semicolons (;)\n                     english_choices = []\n                     french_choices = []\n                     for v in value.split(','):\n                         choice = dict(choices).get(v)\n-                        if (not choice and v) or (not v and (f.get('form_required') or f.get('excel_required'))):\n+                        if (\n+                          (not choice and v) or\n+                          (not v and (f.get('form_required')\n+                                      or f.get('excel_required')))):\n                             # not a valid choice, or empty value on a required field\n                             _record_failed_choice(key, v)\n                         if choice:\n-                            english_choices.append(recombinant_language_text(choice, 'en'))\n-                            french_choices.append(recombinant_language_text(choice, 'fr'))\n+                            english_choices.append(\n+                                recombinant_language_text(choice, 'en'))\n+                            french_choices.append(\n+                                recombinant_language_text(choice, 'fr'))\n                     solrrec[key + '_en'] = '; '.join(english_choices)\n                     solrrec[key + '_fr'] = '; '.join(french_choices)\n                 else:\n                     choice = dict(choices).get(value, {})\n-                    if (not choice and value) or (not value and (f.get('form_required') or f.get('excel_required'))):\n+                    if (\n+                      (not choice and value) or\n+                      (not value and (f.get('form_required') or\n+                                      f.get('excel_required')))):\n                         # not a valid choice, or empty value on a required field\n                         _record_failed_choice(key, value)\n                     _add_choice(solrrec, key, r, choice, f)\n@@ -323,7 +353,7 @@ def _record_failed_choice(_key, _value):\n                 solrrec[key + '_name_en'] = calendar.month_name[int(value)]\n                 solrrec[key + '_name_fr'] = MONTHS_FR[int(value)]\n \n-        solrrec['text'] = u' '.join(str(v) for v in solrrec.values())\n+        solrrec['text'] = ' '.join(str(v) for v in solrrec.values())\n \n         if 'solr_static_fields' in chromo:\n             solrrec.update(chromo['solr_static_fields'])\n@@ -345,10 +375,8 @@ def _record_failed_choice(_key, _value):\n     if failed_choices:\n         for _key, _values in failed_choices.items():\n             for _value, _count in _values.items():\n-                print(\"    %s -- WARNING: '%s' invalid option '%s' (%s)\" % (org_detail['name'],\n-                                                                            _key,\n-                                                                            _value,\n-                                                                            _count))\n+                print(\"    %s -- WARNING: '%s' invalid option '%s' (%s)\" % (\n+                    org_detail['name'], _key, _value, _count))\n \n     if unmatched:\n         out.extend(unmatched[1].values())\n@@ -369,14 +397,19 @@ def _record_failed_choice(_key, _value):\n     return unmatched\n \n \n-def _add_choice(solrrec, key, record, choice, field):\n+def _add_choice(solrrec: Dict[str, Any],\n+                key: str,\n+                record: Dict[str, Any],\n+                choice: Dict[str, Any],\n+                field: Dict[str, Any]):\n     \"\"\"\n     add the english+french values for choice to solrrec\n     \"\"\"\n     solrrec[key + '_en'] = recombinant_language_text(choice, 'en')\n     solrrec[key + '_fr'] = recombinant_language_text(choice, 'fr')\n \n     # lookups used for choices that expand to multiple values\n+    lookup = []\n     if 'lookup' in choice:\n         lookup = choice['lookup']\n     elif 'conditional_lookup' in choice:\n@@ -397,14 +430,15 @@ def _add_choice(solrrec, key, record, choice, field):\n         for cl in lookup]\n \n \n-def date2zulu(yyyy_mm_dd):\n+def date2zulu(yyyy_mm_dd: str) -> str:\n     return time.strftime(\n         \"%Y-%m-%dT%H:%M:%SZ\",\n         time.gmtime(time.mktime(time.strptime(\n             '{0:s} 00:00:00'.format(yyyy_mm_dd),\n             \"%Y-%m-%d %H:%M:%S\"))))\n \n-def list_or_none(v):\n+\n+def list_or_none(v: Any) -> Optional[List[str]]:\n     \"\"\"\n     None -> None\n     \"str\" -> [\"str\"]\n@@ -418,15 +452,17 @@ def list_or_none(v):\n     return v\n \n \n-def en_dollars(v):\n+def en_dollars(v: Any) -> str:\n     return format_currency(v, 'CAD', locale='en_CA')\n \n \n-def fr_dollars(v):\n+def fr_dollars(v: Any) -> str:\n     return format_currency(v, 'CAD', locale='fr_CA')\n \n \n-def dollar_range_facet(key, facet_range, float_value):\n+def dollar_range_facet(key: str,\n+                       facet_range: List[float],\n+                       float_value: float) -> Dict[str, Any]:\n     \"\"\"\n     return solr range fields for dollar float_value in ranges\n     given by facet_range, in English and French\n@@ -438,35 +474,39 @@ def dollar_range_facet(key, facet_range, float_value):\n     in English\n     \"\"\"\n     last_fac = None\n+    i = None\n+    fac = None\n     for i, fac in enumerate(facet_range):\n         if float_value < fac:\n             break\n         last_fac = fac\n     else:\n         return {\n-            key + u'_range': str(i),\n-            key + u'_en': u'A: ' + en_dollars(fac) + u'+',\n-            key + u'_fr': u'A: ' + fr_dollars(fac) + u' +'}\n+            key + '_range': str(i),\n+            key + '_en': 'A: ' + en_dollars(fac) + '+',\n+            key + '_fr': 'A: ' + fr_dollars(fac) + ' +'}\n \n     if last_fac is None:\n         return {}\n \n-    prefix = chr(ord('A') + len(facet_range) - i) + u': '\n+    prefix = chr(ord('A') + len(facet_range) - i) + ': '\n     return {\n-        key + u'_range': str(i - 1),\n-        key + u'_en': prefix + en_dollars(last_fac) + u' - ' + en_dollars(fac-0.01),\n-        key + u'_fr': prefix + fr_dollars(last_fac) + u' - ' + fr_dollars(fac-0.01)}\n+        key + '_range': str(i - 1),\n+        key + '_en': prefix + en_dollars(last_fac) + ' - ' + en_dollars(fac-0.01),\n+        key + '_fr': prefix + fr_dollars(last_fac) + ' - ' + fr_dollars(fac-0.01)}\n \n \n-def en_numeric(v):\n+def en_numeric(v: Any) -> str:\n     return format_decimal(v, locale='en_CA')\n \n \n-def fr_numeric(v):\n+def fr_numeric(v: Any) -> str:\n     return format_decimal(v, locale='fr_CA')\n \n \n-def numeric_range_facet(key, facet_range, float_value):\n+def numeric_range_facet(key: str,\n+                        facet_range: List[float],\n+                        float_value: float) -> Dict[str, Any]:\n     \"\"\"\n     return solr range fields for numeric float_value in ranges\n     given by facet_range, in English and French\n@@ -478,27 +518,31 @@ def numeric_range_facet(key, facet_range, float_value):\n     in English\n     \"\"\"\n     last_fac = None\n+    i = None\n+    fac = None\n     for i, fac in enumerate(facet_range):\n         if float_value < fac:\n             break\n         last_fac = fac\n     else:\n         return {\n-            key + u'_range': str(i),\n-            key + u'_en': u'A: ' + en_numeric(fac) + u'+',\n-            key + u'_fr': u'A: ' + fr_numeric(fac) + u' +'}\n+            key + '_range': str(i),\n+            key + '_en': 'A: ' + en_numeric(fac) + '+',\n+            key + '_fr': 'A: ' + fr_numeric(fac) + ' +'}\n \n     if last_fac is None:\n         return {}\n \n-    prefix = chr(ord('A') + len(facet_range) - i) + u': '\n+    prefix = chr(ord('A') + len(facet_range) - i) + ': '\n     return {\n-        key + u'_range': str(i - 1),\n-        key + u'_en': prefix + en_numeric(last_fac) + u' - ' + en_numeric(fac-1),\n-        key + u'_fr': prefix + fr_numeric(last_fac) + u' - ' + fr_numeric(fac-1)}\n+        key + '_range': str(i - 1),\n+        key + '_en': prefix + en_numeric(last_fac) + ' - ' + en_numeric(fac-1),\n+        key + '_fr': prefix + fr_numeric(last_fac) + ' - ' + fr_numeric(fac-1)}\n \n \n-def sum_to_field(solrrec, key, value):\n+def sum_to_field(solrrec: Dict[str, Any],\n+                 key: str,\n+                 value: Any):\n     \"\"\"\n     modify solrrec dict in-place to add this value to solrrec[key]\n     \"\"\"\n@@ -512,10 +556,13 @@ def sum_to_field(solrrec, key, value):\n     try:\n         solrrec[key] = float_value + solrrec.get(key, 0)\n     except TypeError:\n-        pass # None can stay as None\n+        pass  # None can stay as None\n \n \n-def match_compare_output(solrrec, out, unmatched, chromo):\n+def match_compare_output(solrrec: Dict[str, Any],\n+                         out: List[Dict[str, Any]],\n+                         unmatched: Tuple[Dict[Any, Any], Dict[Any, Any]],\n+                         chromo: Dict[str, Any]):\n     \"\"\"\n     pop matching prev/next records from unmatched, create compare fields\n     and append on out\n@@ -534,7 +581,9 @@ def match_compare_output(solrrec, out, unmatched, chromo):\n         prev_years[year] = solrrec\n \n \n-def compare_output(prev_solrrec, solrrec, chromo):\n+def compare_output(prev_solrrec: Dict[str, Any],\n+                   solrrec: Dict[str, Any],\n+                   chromo: Dict[str, Any]):\n     \"\"\"\n     process solr_compare_previous_year fields and return solrrec with\n     extra sum and change fields added\n@@ -563,11 +612,15 @@ def compare_output(prev_solrrec, solrrec, chromo):\n         out[comp['change']] = change\n \n         if 'sum_previous_year' in comp:\n-            for sp in list_or_none(comp['sum_previous_year']):\n-                sum_to_field(out, sp, float_prev)\n+            sp_list = list_or_none(comp['sum_previous_year'])\n+            if sp_list:\n+                for sp in sp_list:\n+                    sum_to_field(out, sp, float_prev)\n         if 'sum_change' in comp:\n             sum_change = (float_cur or 0) - (float_prev or 0)\n-            for sc in list_or_none(comp['sum_change']):\n-                sum_to_field(out, sc, sum_change)\n+            sc_list = list_or_none(comp['sum_change'])\n+            if sc_list:\n+                for sc in sc_list:\n+                    sum_to_field(out, sc, sum_change)\n \n     return out"
                },
                {
                    "sha": "3fd85760b6bd2053762fe642423788906f1a602c",
                    "filename": "ckanext/canada/plugin/__init__.py",
                    "status": "added",
                    "additions": 22,
                    "deletions": 0,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2F__init__.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2F__init__.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2F__init__.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,22 @@\n+from .dataset_plugin import CanadaDatasetsPlugin\n+from .form_plugin import CanadaFormsPlugin\n+from .internal_plugin import CanadaInternalPlugin\n+from .public_plugin import CanadaPublicPlugin\n+from .security_plugin import CanadaSecurityPlugin\n+from .theme_plugin import CanadaThemePlugin\n+\n+# XXX Monkey patch to work around libcloud/azure 400 error on get_container\n+try:\n+    import libcloud.common.azure\n+    libcloud.common.azure.API_VERSION = '2014-02-14'  # type: ignore\n+except ImportError:\n+    pass\n+\n+__all__ = [\n+    'CanadaDatasetsPlugin',\n+    'CanadaFormsPlugin',\n+    'CanadaInternalPlugin',\n+    'CanadaPublicPlugin',\n+    'CanadaSecurityPlugin',\n+    'CanadaThemePlugin'\n+]"
                },
                {
                    "sha": "d86e2db89b6f16252f4b306254d38b29db4cc196",
                    "filename": "ckanext/canada/plugin/config_declaration.yaml",
                    "status": "renamed",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fconfig_declaration.yaml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fconfig_declaration.yaml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Fconfig_declaration.yaml?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,5 +10,3 @@ groups:\n         validators: ignore_missing\n         required: false\n         type: list\n-\n-",
                    "previous_filename": "ckanext/canada/config_declaration.yaml"
                },
                {
                    "sha": "9289d3b9e4f6f099a3fee3511d29209bd5050d74",
                    "filename": "ckanext/canada/plugin/dataset_plugin.py",
                    "status": "added",
                    "additions": 290,
                    "deletions": 0,
                    "changes": 290,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fdataset_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fdataset_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Fdataset_plugin.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,290 @@\n+import re\n+import json\n+from flask import has_request_context, Blueprint\n+from urllib.parse import urlsplit\n+import logging\n+\n+from typing import Optional, List, Dict, cast\n+from flask.typing import BeforeRequestCallable\n+from ckan.types import Context, Response, Any\n+\n+import ckan.plugins as p\n+from ckan.plugins.toolkit import g, h, request\n+\n+from ckanext.datastore.interfaces import IDataDictionaryForm\n+from ckanext.scheming.plugins import SchemingDatasetsPlugin\n+from ckanext.canada.helpers import RELEASE_DATE_FACET_STEP\n+from ckanext.canada.view import (\n+    CanadaDatasetEditView,\n+    CanadaDatasetCreateView,\n+    CanadaResourceEditView,\n+    CanadaResourceCreateView,\n+    canada_search,\n+    canada_prevent_pd_views,\n+    _get_package_type_from_dict\n+)\n+\n+\n+log = logging.getLogger(__name__)\n+fq_portal_release_date_match = re.compile(r\"(portal_release_date:\\\"\\[.*\\]\\\")\")\n+\n+\n+class CanadaDatasetsPlugin(SchemingDatasetsPlugin):\n+    \"\"\"\n+    Plugin for dataset and resource\n+    \"\"\"\n+    p.implements(p.IDatasetForm, inherit=True)\n+    p.implements(p.IPackageController, inherit=True)\n+    p.implements(p.IBlueprint)\n+    p.implements(IDataDictionaryForm, inherit=True)\n+\n+    try:\n+        from ckanext.validation.interfaces import IDataValidation\n+    except ImportError:\n+        log.warning('failed to import ckanext-validation interface')\n+    else:\n+        p.implements(IDataValidation, inherit=True)\n+\n+    # IBlueprint\n+    def get_blueprint(self) -> List[Blueprint]:\n+        \"\"\"\n+        Prevents all Core Dataset and Resources Views\n+        for all the PD types. Will type_redirect them\n+        to the pd_type. Will allow /<pd_type>/activity\n+        \"\"\"\n+        blueprints = []\n+        for pd_type in h.recombinant_get_types():\n+            blueprint = Blueprint(\n+                'canada_%s' % pd_type,\n+                __name__,\n+                url_prefix='/%s' % pd_type,\n+                url_defaults={'package_type': pd_type})\n+            blueprint.add_url_rule(\n+                '/',\n+                endpoint='canada_search_%s' % pd_type,\n+                view_func=canada_search,\n+                methods=['GET']\n+            )\n+            blueprint.add_url_rule(\n+                '/<path:uri>',\n+                endpoint='canada_prevent_%s' % pd_type,\n+                view_func=canada_prevent_pd_views,\n+                methods=['GET', 'POST']\n+            )\n+            blueprints.append(blueprint)\n+        return blueprints\n+\n+    # type_ignore_reason: incomplete typing\n+    def _redirect_pd_dataset_endpoints(blueprint: Blueprint  # type: ignore\n+                                       ) -> Optional[Response]:\n+        \"\"\"\n+        Runs before request for /dataset and /dataset/<pkg id>/resource\n+\n+        Checks if the actual package type is a PD type and redirects it.\n+        \"\"\"\n+        if has_request_context() and hasattr(request, 'view_args'):\n+            if not request.view_args:\n+                return\n+            id = request.view_args.get('id')\n+            if not id:\n+                return\n+            package_type = request.view_args.get('package_type')\n+            package_type = _get_package_type_from_dict(id, package_type)\n+            if package_type in h.recombinant_get_types():\n+                return h.redirect_to('canada.type_redirect',\n+                                     resource_name=package_type)\n+\n+    # IDatasetForm\n+    def prepare_dataset_blueprint(self, package_type: str,\n+                                  blueprint: Blueprint) -> Blueprint:\n+        blueprint.add_url_rule(\n+            '/edit/<id>',\n+            endpoint='canada_edit_%s' % package_type,\n+            view_func=CanadaDatasetEditView.as_view(str('edit')),\n+            methods=['GET', 'POST']\n+        )\n+        blueprint.add_url_rule(\n+            '/new',\n+            endpoint='canada_new_%s' % package_type,\n+            view_func=CanadaDatasetCreateView.as_view(str('new')),\n+            methods=['GET', 'POST']\n+        )\n+        blueprint.add_url_rule(\n+            '/',\n+            endpoint='canada_search_%s' % package_type,\n+            view_func=canada_search,\n+            methods=['GET'],\n+            strict_slashes=False\n+        )\n+        # redirect PD endpoints accessed from /dataset/<pd pkg id>\n+        blueprint.before_request(cast(BeforeRequestCallable,\n+                                      self._redirect_pd_dataset_endpoints))\n+        return blueprint\n+\n+    # IDatasetForm\n+    def prepare_resource_blueprint(self, package_type: str,\n+                                   blueprint: Blueprint) -> Blueprint:\n+        blueprint.add_url_rule(\n+            '/<resource_id>/edit',\n+            endpoint='canada_resource_edit_%s' % package_type,\n+            view_func=CanadaResourceEditView.as_view(str('edit')),\n+            methods=['GET', 'POST']\n+        )\n+        blueprint.add_url_rule(\n+            '/new',\n+            endpoint='canada_resource_new_%s' % package_type,\n+            view_func=CanadaResourceCreateView.as_view(str('new')),\n+            methods=['GET', 'POST']\n+        )\n+        # redirect PD endpoints accessed from /dataset/<pd pkg id>/resource\n+        blueprint.before_request(cast(BeforeRequestCallable,\n+                                      self._redirect_pd_dataset_endpoints))\n+        return blueprint\n+\n+    # IDataValidation\n+    def can_validate(self, context: Context, resource: Dict[str, Any]):\n+        \"\"\"\n+        Only uploaded resources are allowed to be\n+        validated, or allowed domain sources.\n+        \"\"\"\n+        if resource.get('url_type') == 'upload':\n+            return True\n+\n+        if not resource.get('url_type'):\n+            allowed_domains = p.toolkit.config.get(\n+                'ckanext.canada.datastore_source_domain_allow_list', [])\n+            url = resource.get('url')\n+            url_parts = urlsplit(url)\n+            if url_parts.netloc in allowed_domains:\n+                return True\n+\n+        return False\n+\n+    # IPackageController\n+    def before_dataset_search(self, search_params: Dict[str, Any]) -> Dict[str, Any]:\n+        # We're going to group portal_release_date into two bins - to today and\n+        # after today.\n+        search_params['facet.range'] = 'portal_release_date'\n+        search_params['facet.range.start'] = 'NOW/DAY-%sYEARS' % \\\n+            RELEASE_DATE_FACET_STEP\n+        search_params['facet.range.end'] = 'NOW/DAY+%sYEARS' % \\\n+            RELEASE_DATE_FACET_STEP\n+        search_params['facet.range.gap'] = '+%sYEARS' % \\\n+            RELEASE_DATE_FACET_STEP\n+\n+        # FIXME: so terrible. hack out WET4 wbdisable parameter\n+        try:\n+            search_params['fq'] = search_params['fq'].replace(\n+                'wbdisable:\"true\"', '').replace(\n+                'wbdisable:\"false\"', '')\n+        except Exception:\n+            pass\n+\n+        try:\n+            g.fields_grouped.pop('wbdisable', None)\n+        except Exception:\n+            pass\n+\n+        # search extras for ckan-admin/publish route.\n+        # we only want to show ready to publish,\n+        # approved datasets without a release date.\n+        if has_request_context() and 'ckan-admin/publish' in request.url:\n+            search_params['extras']['ready_to_publish'] = 'true'\n+            search_params['extras']['imso_approval'] = 'true'\n+            search_params['fq'] += '+ready_to_publish:\"true\", '\\\n+                '+imso_approval:\"true\", -portal_release_date:*'\n+\n+        # CKAN Core search view wraps all fq values with double quotes.\n+        # We need to remove double quotes from the portal_release_date queries.\n+        if 'fq' in search_params:\n+            for release_date_query in re.findall(fq_portal_release_date_match,\n+                                                 search_params['fq']):\n+                search_params['fq'] = search_params['fq'].replace(\n+                    release_date_query, release_date_query.replace('\"', ''))\n+\n+        return search_params\n+\n+    # IPackageController\n+    def after_dataset_search(self, search_results: Dict[str, Any],\n+                             search_params: Dict[str, Any]) -> Dict[str, Any]:\n+        for result in search_results.get('results', []):\n+            for extra in result.get('extras', []):\n+                if extra.get('key') in ['title_fra', 'notes_fra']:\n+                    result[extra['key']] = extra['value']\n+\n+        return search_results\n+\n+    # IPackageController\n+    def before_dataset_index(self, data_dict: Dict[str, Any]) -> Dict[str, Any]:\n+        kw = json.loads(data_dict.get('extras_keywords', '{}'))\n+        data_dict['keywords'] = kw.get('en', [])\n+        data_dict['keywords_fra'] = kw.get('fr', kw.get('fr-t-en', []))\n+        data_dict['catalog_type'] = data_dict.get('type', '')\n+\n+        data_dict['subject'] = json.loads(data_dict.get('subject', '[]'))\n+        data_dict['topic_category'] = json.loads(data_dict.get(\n+            'topic_category', '[]'))\n+        data_dict['spatial_representation_type'] = []\n+        if (\n+          data_dict.get('spatial_representation_type') and\n+          isinstance(data_dict.get('spatial_representation_type'), str)):\n+            rep_type: str = data_dict.get('spatial_representation_type', '')\n+            try:\n+                data_dict['spatial_representation_type'] = json.loads(rep_type)\n+            except (TypeError, ValueError):\n+                data_dict['spatial_representation_type'] = []\n+\n+        if data_dict.get('portal_release_date'):\n+            data_dict.pop('ready_to_publish', None)\n+        elif data_dict.get('ready_to_publish') == 'true':\n+            data_dict['ready_to_publish'] = 'true'\n+        else:\n+            data_dict['ready_to_publish'] = 'false'\n+\n+        try:\n+            geno = h.recombinant_get_geno(data_dict['type']) or {}\n+        except AttributeError:\n+            pass\n+        else:\n+            data_dict['portal_type'] = geno.get('portal_type', data_dict['type'])\n+            if 'collection' in geno:\n+                data_dict['collection'] = geno['collection']\n+\n+        # need to keep fgp_viewer in the index for Advanced Search App\n+        if 'fgp_viewer' in data_dict.get('display_flags', []):\n+            data_dict['fgp_viewer'] = 'map_view'\n+\n+        titles = json.loads(data_dict.get('title_translated', '{}'))\n+        data_dict['title_fr'] = titles.get('fr', '')\n+        data_dict['title_string'] = titles.get('en', '')\n+\n+        if data_dict['type'] == 'prop':\n+            status = data_dict.get('status')\n+            data_dict['status'] = status[-1]['reason'] if \\\n+                status else 'department_contacted'\n+\n+        if data_dict.get('credit'):\n+            for i, cr in enumerate(data_dict['credit']):\n+                cr.pop('__extras', None)\n+                # credit is a string multiValue in SOLR,\n+                # need to json stringify for SOLR 9+\n+                data_dict['credit'][i] = json.dumps(cr)\n+\n+        if data_dict.get('relationship'):\n+            data_dict['related_relationship'] = [rel['related_relationship'] for\n+                                                 rel in data_dict['relationship']]\n+            data_dict['related_type'] = [rel['related_type'] for\n+                                         rel in data_dict['relationship']]\n+        data_dict.pop('relationship', None)\n+\n+        return data_dict\n+\n+    # IDataDictionaryForm\n+    def update_datastore_info_field(self, field: Dict[str, Any],\n+                                    plugin_data: Dict[str, Any]) -> Dict[str, Any]:\n+        if 'info' or '_info' in plugin_data and 'info' not in field:\n+            if 'info' in plugin_data:\n+                field['info'] = plugin_data.get('info', {})\n+            elif '_info' in plugin_data:\n+                field['info'] = plugin_data.get('_info', {})\n+        return field"
                },
                {
                    "sha": "025878b465291c95065c329e9eea13b17042e121",
                    "filename": "ckanext/canada/plugin/form_plugin.py",
                    "status": "added",
                    "additions": 99,
                    "deletions": 0,
                    "changes": 99,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fform_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fform_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Fform_plugin.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,99 @@\n+from typing import Dict, Union\n+from ckan.types import Action, ChainedAction, Validator\n+\n+import ckan.plugins as p\n+from ckan.lib.plugins import DefaultDatasetForm\n+\n+from ckanext.canada import validators\n+from ckanext.canada import logic\n+\n+\n+class CanadaFormsPlugin(p.SingletonPlugin, DefaultDatasetForm):\n+    \"\"\"\n+    Plugin for dataset forms for Canada's metadata schema\n+    \"\"\"\n+    p.implements(p.IActions)\n+    p.implements(p.IValidators, inherit=True)\n+\n+    # IActions\n+    def get_actions(self) -> Dict[str, Union[Action, ChainedAction]]:\n+        actions = logic.limit_api_logic()\n+        actions.update((h, getattr(logic, h)) for h in [\n+            'changed_packages_activity_timestamp_since',\n+            'canada_guess_mimetype',\n+            ])\n+        actions.update({k: logic.disabled_anon_action for k in [\n+            'current_package_list_with_resources',\n+            'user_list',\n+            'user_activity_list',\n+            'member_list',\n+            # 'user_show',  FIXME: required for password reset\n+            'package_autocomplete',\n+            'format_autocomplete',\n+            'user_autocomplete',\n+            'group_activity_list',\n+            'organization_activity_list',\n+            'group_package_show',\n+            ]})\n+        # disable group & organization bulk actions as they do not support\n+        # IPackageController and IResourceController implementations.\n+        actions.update({k: logic.disabled_action for k in [\n+            'bulk_update_private',\n+            'bulk_update_public',\n+            'bulk_update_delete',\n+            '_bulk_update_dataset',]})\n+        return actions\n+\n+    # IValidators\n+    def get_validators(self) -> Dict[str, Validator]:\n+        return {\n+            'canada_validate_generate_uuid':\n+                validators.canada_validate_generate_uuid,\n+            'canada_tags': validators.canada_tags,\n+            'geojson_validator': validators.geojson_validator,\n+            'email_validator': validators.email_validator,\n+            'protect_portal_release_date':\n+                validators.protect_portal_release_date,\n+            'canada_copy_from_org_name':\n+                validators.canada_copy_from_org_name,\n+            'canada_maintainer_email_default':\n+                validators.canada_maintainer_email_default,\n+            'user_read_only':\n+                validators.user_read_only,\n+            'user_read_only_json':\n+                validators.user_read_only_json,\n+            'canada_sort_prop_status':\n+                validators.canada_sort_prop_status,\n+            'no_future_date':\n+                validators.no_future_date,\n+            'canada_org_title_translated_save':\n+                validators.canada_org_title_translated_save,\n+            'canada_org_title_translated_output':\n+                validators.canada_org_title_translated_output,\n+            'protect_reporting_requirements':\n+                validators.protect_reporting_requirements,\n+            'ati_email_validate':\n+                validators.ati_email_validate,\n+            'isodate':\n+                validators.isodate,\n+            'string_safe':\n+                validators.string_safe,\n+            'string_safe_stop':\n+                validators.string_safe_stop,\n+            'json_string':\n+                validators.json_string,\n+            'json_string_has_en_fr_keys':\n+                validators.json_string_has_en_fr_keys,\n+            'canada_static_charset_tabledesigner':\n+                validators.canada_static_charset_tabledesigner,\n+            'canada_static_rtype_tabledesigner':\n+                validators.canada_static_rtype_tabledesigner,\n+            'canada_guess_resource_format':\n+                validators.canada_guess_resource_format,\n+            'canada_output_none':\n+                validators.canada_output_none,\n+            'protect_registry_access':\n+                validators.protect_registry_access,\n+            'limit_resources_per_dataset':\n+                validators.limit_resources_per_dataset,\n+            }"
                },
                {
                    "sha": "7526106961ccb500385fa47c54aa4bf10a5c4896",
                    "filename": "ckanext/canada/plugin/internal_plugin.py",
                    "status": "added",
                    "additions": 181,
                    "deletions": 0,
                    "changes": 181,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Finternal_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Finternal_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Finternal_plugin.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,181 @@\n+import logging\n+from urllib.parse import urlsplit\n+from frictionless import system\n+\n+from ckan.types import (\n+    Action,\n+    ChainedAction,\n+    AuthFunction,\n+    ChainedAuthFunction,\n+    Context,\n+    DataDict\n+)\n+from typing import Dict, Union, Any\n+from ckan.common import CKANConfig\n+\n+import ckan.plugins as p\n+from ckan import model\n+from ckan.plugins.toolkit import ValidationError, ObjectNotFound\n+\n+from ckanext.datastore.backend import postgres as db\n+from ckanext.xloader.interfaces import IXloader\n+from ckanext.canada.plugin.validation_plugin import CanadaValidationPlugin\n+from ckanext.canada import logic\n+from ckanext.canada import auth\n+\n+\n+log = logging.getLogger(__name__)\n+\n+\n+class CanadaInternalPlugin(p.SingletonPlugin):\n+    \"\"\"\n+    Plugin for internal version of data.gc.ca site, aka the \"registry\"\n+    This plugin requires the DataGCCAPublic and DataGCCAForms plugins\n+    \"\"\"\n+    p.implements(p.IConfigurable)\n+    p.implements(p.IConfigurer)\n+    p.implements(p.IPackageController, inherit=True)\n+    p.implements(p.IActions)\n+    p.implements(IXloader, inherit=True)\n+    p.implements(p.IAuthFunctions)\n+\n+    # IConfigurer\n+    def update_config(self, config: 'CKANConfig'):\n+        config.update({\n+            \"ckan.user_list_limit\": 250\n+        })\n+\n+        # CKAN 2.10 plugin loading does not allow us to set the schema\n+        # files in update_config in a way that the load order will work fully.\n+        scheming_presets = config.get('scheming.presets', '')\n+        assert 'ckanext.scheming:presets.json' in scheming_presets\n+        assert 'ckanext.fluent:presets.json' in scheming_presets\n+        assert 'ckanext.canada:schemas/presets.yaml' in scheming_presets\n+        assert 'ckanext.validation:presets.json' in scheming_presets\n+\n+        # Include private datasets in Feeds\n+        config['ckan.feeds.include_private'] = True\n+\n+    # IConfigurable\n+    def configure(self, config: 'CKANConfig'):\n+        # FIXME: monkey-patch datastore upsert_data\n+        original_upsert_data = db.upsert_data\n+\n+        def patched_upsert_data(context: Context, data_dict: DataDict) -> Any:\n+            with logic.datastore_create_temp_user_table(context):\n+                try:\n+                    return original_upsert_data(context, data_dict)\n+                except ValidationError as e:\n+                    # reformat tab-delimited error as dict\n+                    # type_ignore_reason: incomplete typing\n+                    head, sep, rerr = e.error_dict.get(  # type: ignore\n+                        'records', [''])[0].partition('\\t')  # type: ignore\n+                    rerr = rerr.rstrip('\\n')\n+                    if head == 'TAB-DELIMITED' and sep:\n+                        out = {}\n+                        it = iter(rerr.split('\\t'))\n+                        for key, error in zip(it, it):\n+                            out.setdefault(key, []).append(error)\n+                        e.error_dict['records'] = [out]\n+                    raise e\n+        if db.upsert_data.__name__ == 'upsert_data':\n+            db.upsert_data = patched_upsert_data\n+\n+        # register custom frictionless plugin\n+        system.register('canada-validation', CanadaValidationPlugin())\n+\n+    # IPackageController\n+    def create(self, pkg: 'model.Package'):\n+        \"\"\"\n+        All datasets on registry should now be marked private\n+        \"\"\"\n+        pkg.private = True\n+\n+    # IPackageController\n+    def edit(self, pkg: 'model.Package'):\n+        \"\"\"\n+        All datasets on registry should now be marked private\n+        \"\"\"\n+        pkg.private = True\n+\n+    # IActions\n+    def get_actions(self) -> Dict[str, Union[Action, ChainedAction]]:\n+        return dict(\n+            {\n+                k: logic.disabled_anon_action for k in [\n+                    'package_activity_list',\n+                    'recently_changed_packages_activity_list',\n+                    'dashboard_activity_list',\n+                    'changed_packages_activity_timestamp_since',\n+                ]\n+            },\n+            resource_view_update=logic.resource_view_update_bilingual,\n+            resource_view_create=logic.resource_view_create_bilingual,\n+            datastore_run_triggers=logic.canada_datastore_run_triggers,\n+            portal_sync_info=logic.portal_sync_info,\n+            list_out_of_sync_packages=logic.list_out_of_sync_packages,\n+        )\n+\n+    # IAuthFunctions\n+    def get_auth_functions(self) -> Dict[str, Union[AuthFunction,\n+                                                    ChainedAuthFunction]]:\n+        return {\n+            'group_list': auth.group_list,\n+            'group_show': auth.group_show,\n+            'organization_list': auth.organization_list,\n+            'organization_show': auth.organization_show,\n+            'portal_sync_info': auth.portal_sync_info,\n+            'list_out_of_sync_packages': auth.list_out_of_sync_packages,\n+        }\n+\n+    # IXloader\n+    def can_upload(self, resource_id: str) -> bool:\n+        \"\"\"\n+        Only uploaded resources are allowed to be xloadered, or allowed domain sources.\n+        \"\"\"\n+\n+        # check if file is uploded\n+        try:\n+            res = p.toolkit.get_action('resource_show')(\n+                {'ignore_auth': True}, {'id': resource_id})\n+\n+            if (\n+              res.get('url_type') != 'upload' and\n+              res.get('url_type') != '' and\n+              res.get('url_type') is not None):\n+                log.debug(\n+                    'Only uploaded resources and allowed domain '\n+                    'sources can be added to the Data Store.')\n+                return False\n+\n+            if not res.get('url_type'):\n+                allowed_domains = p.toolkit.config.get(\n+                    'ckanext.canada.datastore_source_domain_allow_list', [])\n+                url = res.get('url')\n+                url_parts = urlsplit(url)\n+                if url_parts.netloc not in allowed_domains:\n+                    log.debug(\n+                        'Only uploaded resources and allowed domain '\n+                        'sources can be added to the Data Store.')\n+                    return False\n+\n+        except ObjectNotFound:\n+            log.error('Resource %s does not exist.' % resource_id)\n+            return False\n+\n+        # check if validation report exists\n+        try:\n+            validation = p.toolkit.get_action('resource_validation_show')(\n+                {'ignore_auth': True},\n+                {'resource_id': res['id']})\n+            if validation.get('status', None) != 'success':\n+                log.error(\n+                    'Only validated resources can be added to the Data Store.')\n+                return False\n+\n+        except ObjectNotFound:\n+            log.error('No validation report exists for resource %s' %\n+                      resource_id)\n+            return False\n+\n+        return True"
                },
                {
                    "sha": "0bfd68c0a73232770104d2ec31cc354a85a3c855",
                    "filename": "ckanext/canada/plugin/public_plugin.py",
                    "status": "added",
                    "additions": 282,
                    "deletions": 0,
                    "changes": 282,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fpublic_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fpublic_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Fpublic_plugin.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,282 @@\n+from typing import Any, Union, Optional, List, TYPE_CHECKING, Type, Dict, Tuple\n+from ckan.types import (\n+    Action,\n+    ChainedAction,\n+    AuthFunction,\n+    ChainedAuthFunction,\n+    CKANApp\n+)\n+from ckan.common import CKANConfig\n+\n+import os\n+from flask import Blueprint\n+from click import Command\n+\n+import ckan.plugins as p\n+from ckan.lib.plugins import DefaultTranslation\n+from ckan.plugins.toolkit import _, g, h\n+import ckan.lib.helpers as core_helpers\n+import ckan.lib.formatters as formatters\n+\n+from ckanext.activity.logic.validators import object_id_validators\n+from ckanext.tabledesigner.interfaces import IColumnTypes\n+from ckanext.tabledesigner.column_types import ColumnType\n+from ckanext.canada import column_types as coltypes\n+from ckanext.canada.pd import get_commands as get_pd_commands\n+from ckanext.canada.view import canada_views\n+from ckanext.canada import cli\n+from ckanext.canada import logic\n+from ckanext.canada import auth\n+\n+if TYPE_CHECKING:\n+    from collections import OrderedDict\n+\n+\n+class CanadaPublicPlugin(p.SingletonPlugin, DefaultTranslation):\n+    \"\"\"\n+    Plugin for public-facing version of Open Government site, aka the \"portal\"\n+    This plugin requires the DataGCCAForms plugin\n+    \"\"\"\n+    p.implements(p.IConfigurer)\n+    p.implements(p.IAuthFunctions)\n+    p.implements(p.IFacets)\n+    p.implements(p.ITranslation)\n+    p.implements(p.IMiddleware, inherit=True)\n+    p.implements(p.IActions)\n+    p.implements(p.IClick)\n+    p.implements(IColumnTypes)\n+    p.implements(p.IBlueprint)\n+\n+    # DefaultTranslation, ITranslation\n+    @classmethod\n+    def i18n_domain(cls) -> str:\n+        return 'ckanext-canada'\n+\n+    @classmethod\n+    def i18n_directory(cls) -> str:\n+        return os.path.join(os.path.dirname(str(__file__)), '../i18n')\n+\n+    @classmethod\n+    def i18n_locales(cls) -> List[str]:\n+        return ['en', 'fr']\n+\n+    # IConfigurer\n+    def update_config(self, config: 'CKANConfig'):\n+        config['ckan.auth.public_user_details'] = False\n+\n+        recombinant_definitions = config.get('recombinant.definitions', '')\n+        assert 'ckanext.canada:tables/ati.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/briefingt.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/qpnotes.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/contracts.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/contractsa.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/grants.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/hospitalityq.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/reclassification.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/travela.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/travelq.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/wrongdoing.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/inventory.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/consultations.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/service.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/dac.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/nap5.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/experiment.yaml' in recombinant_definitions\n+        assert 'ckanext.canada:tables/adminaircraft.yaml' in recombinant_definitions\n+\n+        config['ckan.search.show_all_types'] = True\n+        config['ckan.gravatar_default'] = 'disabled'\n+        config['search.facets.limit'] = 200  # because org list\n+\n+        scheming_presets = config.get('scheming.presets', '')\n+        if 'validation' not in scheming_presets:\n+            assert 'ckanext.scheming:presets.json' in scheming_presets\n+            assert 'ckanext.fluent:presets.json' in scheming_presets\n+            assert 'ckanext.canada:schemas/presets.yaml' in scheming_presets\n+            assert 'ckanext.canada:schemas/validation_placeholder_presets.yaml' in \\\n+                scheming_presets\n+\n+        scheming_dataset_schemas = config.get('scheming.dataset_schemas', '')\n+        assert 'ckanext.canada:schemas/dataset.yaml' in scheming_dataset_schemas\n+        assert 'ckanext.canada:schemas/info.yaml' in scheming_dataset_schemas\n+        assert 'ckanext.canada:schemas/prop.yaml' in scheming_dataset_schemas\n+\n+        scheming_organization_schemas = config.get('scheming.organization_schemas', '')\n+        assert 'ckanext.canada:schemas/organization.yaml' in \\\n+            scheming_organization_schemas\n+\n+        # Pretty output for Feeds\n+        config['ckan.feeds.pretty'] = True\n+\n+        # Enable our custom DCAT profile.\n+        config['ckanext.dcat.rdf.profiles'] = 'euro_dcat_ap_2'\n+\n+        # Enable license restriction\n+        config['ckan.dataset.restrict_license_choices'] = True\n+\n+        # monkey patch helpers.py pagination method\n+        core_helpers.Page.pager = _wet_pager\n+        core_helpers.SI_number_span = _SI_number_span_close\n+\n+        core_helpers.build_nav_main = build_nav_main\n+\n+        # migration from `canada_activity` and `ckanext-extendedactivity` - Aug 2022\n+        # migrated from `ckan` canada fork for resource view activities - Jan 2024\n+        # migrated from `activity` for ckan 2.10 upgrade - June 2024\n+        object_id_validators.update({\n+            'new resource view': 'package_id_exists',\n+            'changed resource view': 'package_id_exists',\n+            'deleted resource view': 'package_id_exists',\n+        })\n+\n+    # IFacets\n+    def dataset_facets(self, facets_dict: 'OrderedDict[str, Any]',\n+                       package_type: str) -> 'OrderedDict[str, Any]':\n+        ''' Update the facets_dict and return it. '''\n+\n+        facets_dict.update({\n+            'portal_type': _('Portal Type'),\n+            'organization': _('Organization'),\n+            'collection': _('Collection Type'),\n+            'keywords': _('Keywords'),\n+            'keywords_fra': _('Keywords'),\n+            'subject': _('Subject'),\n+            'res_format': _('Format'),\n+            'res_type': _('Resource Type'),\n+            'frequency': _('Maintenance and Update Frequency'),\n+            'ready_to_publish': _('Record Status'),\n+            'imso_approval': _('IMSO Approval'),\n+            'jurisdiction': _('Jurisdiction'),\n+            'status': _('Suggestion Status'),\n+            })\n+\n+        return facets_dict\n+\n+    # IFacets\n+    # FIXME: remove `group_facets` method once issue\n+    # https://github.com/ckan/ckan/issues/7017 is patched into <2.9\n+    def group_facets(self, facets_dict: 'OrderedDict[str, Any]',\n+                     group_type: str, package_type: str) -> 'OrderedDict[str, Any]':\n+        ''' Update the facets_dict and return it. '''\n+        if group_type == 'organization':\n+            return self.dataset_facets(facets_dict, package_type)\n+        return facets_dict\n+\n+    # IFacets\n+    def organization_facets(self, facets_dict: 'OrderedDict[str, Any]',\n+                            organization_type: str, package_type: str\n+                            ) -> 'OrderedDict[str, Any]':\n+        return self.dataset_facets(facets_dict, package_type)\n+\n+    # IActions\n+    def get_actions(self) -> Dict[str, Union[Action, ChainedAction]]:\n+        return {\n+            'resource_view_show': logic.canada_resource_view_show,\n+            'resource_view_list': logic.canada_resource_view_list,\n+            'job_list': logic.canada_job_list,\n+            'registry_jobs_running': logic.registry_jobs_running,\n+            'datastore_search': logic.canada_datastore_search,\n+        }\n+\n+    # IAuthFunctions\n+    def get_auth_functions(self) -> Dict[str, Union[AuthFunction,\n+                                                    ChainedAuthFunction]]:\n+        return {\n+            'datastore_create': auth.datastore_create,\n+            'datastore_delete': auth.datastore_delete,\n+            'datastore_upsert': auth.datastore_upsert,\n+            'view_org_members': auth.view_org_members,\n+            'registry_jobs_running': auth.registry_jobs_running,\n+            'recently_changed_packages_activity_list':\n+                auth.recently_changed_packages_activity_list,\n+        }\n+\n+    # IMiddleware\n+    def make_middleware(self, app: CKANApp, config: 'CKANConfig') -> CKANApp:\n+        return LogExtraMiddleware(app, config)\n+\n+    # IClick\n+    def get_commands(self) -> List[Command]:\n+        return [cli.get_commands(), get_pd_commands()]\n+\n+    # IColumnTypes\n+    def column_types(self, existing_types: Dict[str, Type[ColumnType]]):\n+        return dict(\n+            existing_types,\n+            province=coltypes.Province,\n+            crabusnum=coltypes.CRABusinessNumber,\n+        )\n+\n+    # IBlueprint\n+    def get_blueprint(self) -> List[Blueprint]:\n+        return [canada_views]\n+\n+\n+class LogExtraMiddleware(object):\n+    def __init__(self, app: Any, config: 'CKANConfig'):\n+        self.app = app\n+\n+    def __call__(self, environ: Any, start_response: Any) -> Any:\n+        def _start_response(status: str,\n+                            response_headers: List[Tuple[str, str]],\n+                            exc_info: Optional[Any] = None):\n+            extra = []\n+            try:\n+                contextual_user = g.user\n+            except (TypeError, RuntimeError, AttributeError):\n+                contextual_user = None\n+            if contextual_user:\n+                log_extra = g.log_extra if hasattr(g, 'log_extra') else ''\n+                # FIXME: make sure username special chars are handled\n+                # the values in the tuple HAVE to be str types.\n+                extra = [('X-LogExtra', f'user={contextual_user} {log_extra}')]\n+\n+            return start_response(\n+                status,\n+                response_headers + extra,\n+                exc_info)\n+\n+        return self.app(environ, _start_response)\n+\n+\n+def _wet_pager(self: core_helpers.Page, *args: Any, **kwargs: Any):\n+    # a custom pagination method, because CKAN doesn't\n+    # expose the pagination to the templates,\n+    # and instead hardcodes the pagination html in helpers.py\n+    kwargs.update(\n+        format=\"<ul class='pagination'>$link_previous ~2~ $link_next</ul>\",\n+        symbol_previous=core_helpers._('Previous'),\n+        symbol_next=core_helpers._('Next'),\n+        curpage_attr={'class': 'active'}\n+    )\n+\n+    return super(core_helpers.Page, self).pager(*args, **kwargs)\n+\n+\n+def _SI_number_span_close(number: Union[str, int]):\n+    ''' outputs a span with the number in SI unit eg 14700 -> 14.7k '''\n+    number = int(number)\n+    if number < 1000:\n+        output = h.literal('<span>')\n+    else:\n+        output = h.literal(\n+            '<span title=\"' + formatters.localised_number(number) + '\">')\n+    return output + formatters.localised_SI_number(number) + h.literal('</span>')\n+\n+\n+# Monkey Patched to inlude the 'list-group-item' class\n+# TODO: Clean up and convert to proper HTML templates\n+def build_nav_main(*args: Any):\n+    ''' build a set of menu items.\n+\n+    args: tuples of (menu type, title) eg ('login', _('Login'))\n+    outputs <li><a href=\"...\">title</a></li>\n+    '''\n+    output = ''\n+    for item in args:\n+        menu_item, title = item[:2]\n+        if len(item) == 3 and not core_helpers.check_access(item[2]):\n+            continue\n+        output += core_helpers._make_menu_item(\n+            menu_item, title, class_='list-group-item')\n+    return output"
                },
                {
                    "sha": "2981a90ab7d2717ceecc50fe24d6283b980e57cf",
                    "filename": "ckanext/canada/plugin/security_plugin.py",
                    "status": "added",
                    "additions": 74,
                    "deletions": 0,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fsecurity_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fsecurity_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Fsecurity_plugin.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,74 @@\n+from typing import Any, Dict\n+from ckan.types import Context, Validator\n+from ckan.common import CKANConfig\n+\n+import ckan.plugins as p\n+from ckan.plugins.core import plugin_loaded\n+from ckan.config.middleware.flask_app import csrf\n+\n+from ckanext.datatablesview.blueprint import datatablesview\n+from ckanext.security.plugin import CkanSecurityPlugin\n+from ckanext.canada import validators\n+\n+\n+class CanadaSecurityPlugin(CkanSecurityPlugin):\n+    \"\"\"\n+    Plugin for extra security\n+    \"\"\"\n+    p.implements(p.IResourceController, inherit=True)\n+    p.implements(p.IValidators, inherit=True)\n+    p.implements(p.IConfigurer)\n+\n+    def update_config(self, config: 'CKANConfig'):\n+        super(CanadaSecurityPlugin, self).update_config(config)\n+        # Disable auth settings\n+        config['ckan.auth.anon_create_dataset'] = False\n+        config['ckan.auth.create_unowned_dataset'] = False\n+        config['ckan.auth.create_dataset_if_not_in_organization'] = False\n+        config['ckan.auth.user_create_groups'] = False\n+        config['ckan.auth.user_create_organizations'] = False\n+        config['ckan.auth.create_user_via_api'] = config.get(\n+            'ckan.auth.create_user_via_api', False)  # allow setting in INI file\n+        # Enable auth settings\n+        config['ckan.auth.user_delete_groups'] = True\n+        config['ckan.auth.user_delete_organizations'] = True\n+        config['ckan.auth.create_user_via_web'] = plugin_loaded(\n+            'canada_internal')  # /user/register view only on registry\n+        # Set auth settings\n+        config['ckan.auth.roles_that_cascade_to_sub_groups'] = ['admin']\n+\n+        csrf.exempt(datatablesview)\n+\n+    def before_create(self, context: Context, resource: Dict[str, Any]):\n+        \"\"\"\n+        Override before_create from CkanSecurityPlugin.\n+        Want to use the methods in scheming instead of before_create.\n+        \"\"\"\n+\n+    def before_update(self, context: Context,\n+                      current: Dict[str, Any], resource: Dict[str, Any]):\n+        \"\"\"\n+        Override before_update from CkanSecurityPlugin.\n+        Want to use the methods in scheming instead of before_update.\n+        \"\"\"\n+\n+    def before_resource_create(self, context: Context, resource: Dict[str, Any]):\n+        \"\"\"\n+        Override before_resource_create from CkanSecurityPlugin.\n+        Want to use the methods in scheming instead of before_resource_create.\n+        \"\"\"\n+\n+    def before_resource_update(self, context: Context,\n+                               current: Dict[str, Any], resource: Dict[str, Any]):\n+        \"\"\"\n+        Override before_resource_update from CkanSecurityPlugin.\n+        Want to use the methods in scheming instead of before_resource_update.\n+        \"\"\"\n+\n+    def get_validators(self) -> Dict[str, Validator]:\n+        validators_dict = super(CanadaSecurityPlugin, self).get_validators() or {}\n+        return dict(\n+            validators_dict,\n+            canada_security_upload_type=validators.canada_security_upload_type,\n+            canada_security_upload_presence=validators.canada_security_upload_presence,\n+        )"
                },
                {
                    "sha": "1726041d3955ca78afc6310ac707611d80cd11b4",
                    "filename": "ckanext/canada/plugin/theme_plugin.py",
                    "status": "added",
                    "additions": 90,
                    "deletions": 0,
                    "changes": 90,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Ftheme_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Ftheme_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Ftheme_plugin.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,90 @@\n+from ckan.types import Callable, Any, Dict\n+from ckan.common import CKANConfig\n+\n+import ckan.plugins as p\n+from ckan.lib.app_globals import set_app_global\n+from ckan.plugins.core import plugin_loaded\n+\n+from ckanext.canada import helpers\n+\n+\n+@p.toolkit.blanket.config_declarations\n+class CanadaThemePlugin(p.SingletonPlugin):\n+    p.implements(p.IConfigurer)\n+    p.implements(p.ITemplateHelpers)\n+\n+    # IConfigurer\n+    def update_config(self, config: 'CKANConfig'):\n+        p.toolkit.add_template_directory(config, '../templates')\n+        p.toolkit.add_public_directory(config, '../public')\n+        p.toolkit.add_resource('../public/static/js', 'js')\n+        p.toolkit.add_resource('../assets/internal', 'canada_internal')\n+        p.toolkit.add_resource('../assets/datatables', 'canada_datatables')\n+        p.toolkit.add_resource('../assets/public', 'canada_public')\n+        p.toolkit.add_resource('../assets/invitation-manager', 'invitation_manager')\n+        set_app_global('is_registry', bool(plugin_loaded('canada_internal')))\n+\n+        config['ckan.favicon'] = helpers.cdts_asset('/assets/favicon.ico')\n+\n+    # ITemplateHelpers\n+    def get_helpers(self) -> Dict[str, Callable[..., Any]]:\n+        return dict((h, getattr(helpers, h)) for h in [\n+            # Registry\n+            'may_publish_datasets',\n+            'today',\n+            'date_format',\n+            'parse_release_date_facet',\n+            'is_ready_to_publish',\n+            'get_datapreview_recombinant',\n+            'recombinant_description_to_markup',\n+            'mail_to_with_params',\n+            'get_timeout_length',\n+            'canada_check_access',\n+            'get_user_email',\n+            'get_loader_status_badge',\n+            'validation_status',\n+            'is_user_locked',\n+            # Portal\n+            'user_organizations',\n+            'openness_score',\n+            'remove_duplicates',\n+            'get_license',\n+            'normalize_strip_accents',\n+            'portal_url',\n+            'adv_search_url',\n+            'adv_search_mlt_root',\n+            'ga4_id',\n+            'loop11_key',\n+            'contact_information',\n+            'show_openinfo_facets',\n+            'json_loads',\n+            'catalogue_last_update_date',\n+            'get_translated_t',\n+            'language_text_t',\n+            'get_datapreview',\n+            'iso_to_goctime',\n+            'geojson_to_wkt',\n+            'cdts_asset',\n+            'get_map_type',\n+            'adobe_analytics_login_required',\n+            'adobe_analytics_lang',\n+            'adobe_analytics_js',\n+            'mail_to_with_params',\n+            'organization_member_count',\n+            'flash_notice',\n+            'flash_error',\n+            'flash_success',\n+            'adobe_analytics_creator',\n+            'resource_view_meta_title',\n+            'get_resource_view',\n+            'resource_view_type',\n+            'fgp_viewer_url',\n+            'date_field',\n+            'split_piped_bilingual_field',\n+            'search_filter_pill_link_label',\n+            'release_date_facet_start_year',\n+            'ckan_to_cdts_breadcrumbs',\n+            'available_purge_types',\n+            'operations_guide_link',\n+            'max_resources_per_dataset',\n+        ])"
                },
                {
                    "sha": "330dfea2f5991167bb2d951e52380789b1398152",
                    "filename": "ckanext/canada/plugin/validation_plugin.py",
                    "status": "added",
                    "additions": 26,
                    "deletions": 0,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fvalidation_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fplugin%2Fvalidation_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugin%2Fvalidation_plugin.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,26 @@\n+from typing import Optional, Any, List, Dict\n+\n+from frictionless import Plugin as FrictionlessPlugin\n+\n+from ckan.plugins.toolkit import config, asbool\n+from ckanext.canada import checks\n+\n+\n+class CanadaValidationPlugin(FrictionlessPlugin):\n+    def select_check_class(self,\n+                           type: Optional[str] = None) -> \\\n+          Optional['checks.DatastoreHeadersCheck']:\n+        \"\"\"\n+        Load custom check classes.\n+        \"\"\"\n+        if type == 'ds-headers':\n+            return checks.DatastoreHeadersCheck()\n+\n+    def detect_field_candidates(self, field_candidates: List[Dict[str, Any]]):\n+        \"\"\"\n+        Set list of available types for Resource table fields.\n+        \"\"\"\n+        if asbool(config.get('ckanext.validation.use_type_guessing', False)):\n+            return\n+        field_candidates.clear()\n+        field_candidates.append({'type': 'string'})"
                },
                {
                    "sha": "e98d1ae9406e4c7d6537de08f25dd9886b5ccff2",
                    "filename": "ckanext/canada/plugins.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1014,
                    "changes": 1014,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/ckanext%2Fcanada%2Fplugins.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/ckanext%2Fcanada%2Fplugins.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fplugins.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,1014 +0,0 @@\n-#!/usr/bin/env python\n-# -*- coding: utf-8 -*-\n-from typing import Optional, Type\n-import logging\n-import re\n-from urllib.parse import urlsplit\n-from flask import has_request_context\n-import ckan.plugins as p\n-from ckan.lib.plugins import DefaultDatasetForm, DefaultTranslation\n-import ckan.lib.helpers as hlp\n-from ckanext.datastore.interfaces import IDataDictionaryForm\n-from ckanext.activity.logic.validators import object_id_validators\n-\n-from ckan.lib.app_globals import set_app_global\n-from ckan.plugins.core import plugin_loaded\n-\n-from ckan.config.middleware.flask_app import csrf\n-from ckanext.datatablesview.blueprint import datatablesview\n-\n-from frictionless import system, Check, Plugin as FrictionlessPlugin\n-\n-from ckan.plugins.toolkit import (\n-    g,\n-    h,\n-    chained_action,\n-    ValidationError,\n-    ObjectNotFound,\n-    _,\n-    get_validator,\n-    request\n-)\n-\n-from ckanext.canada import validators\n-from ckanext.canada import logic\n-from ckanext.canada import auth\n-from ckanext.canada import helpers\n-from ckanext.canada import cli\n-from ckanext.canada.pd import get_commands as get_pd_commands\n-from ckanext.canada import checks\n-from ckanext.canada import column_types as coltypes\n-from ckanext.tabledesigner.interfaces import IColumnTypes\n-from ckanext.xloader.interfaces import IXloader\n-import json\n-\n-import ckan.lib.formatters as formatters\n-from flask import Blueprint\n-from ckanext.scheming.plugins import SchemingDatasetsPlugin\n-from ckanext.security.plugin import CkanSecurityPlugin\n-from ckanext.canada.view import (\n-    canada_views,\n-    CanadaDatasetEditView,\n-    CanadaDatasetCreateView,\n-    CanadaResourceEditView,\n-    CanadaResourceCreateView,\n-    canada_search,\n-    canada_prevent_pd_views,\n-    _get_package_type_from_dict\n-)\n-\n-# XXX Monkey patch to work around libcloud/azure 400 error on get_container\n-try:\n-    import libcloud.common.azure\n-    libcloud.common.azure.API_VERSION = '2014-02-14'\n-except ImportError:\n-    pass\n-\n-log = logging.getLogger(__name__)\n-fq_portal_release_date_match = re.compile(r\"(portal_release_date:\\\"\\[.*\\]\\\")\")\n-\n-\n-class CanadaValidationPlugin(FrictionlessPlugin):\n-    def select_check_class(self, type: Optional[str] = None) -> Optional[Type[Check]]:\n-        \"\"\"\n-        Load custom check classes.\n-        \"\"\"\n-        if type == 'ds-headers':\n-            return checks.DatastoreHeadersCheck()\n-\n-    def detect_field_candidates(self, field_candidates: list):\n-        \"\"\"\n-        Set list of available types for Resource table fields.\n-        \"\"\"\n-        if p.toolkit.asbool(p.toolkit.config.get('ckanext.validation.use_type_guessing', False)):\n-            return\n-        field_candidates.clear()\n-        field_candidates.append({'type':'string'})\n-\n-\n-@p.toolkit.blanket.config_declarations\n-class CanadaThemePlugin(p.SingletonPlugin):\n-\n-    p.implements(p.IConfigurer)\n-    p.implements(p.ITemplateHelpers)\n-\n-    # IConfigurer\n-    def update_config(self, config):\n-        p.toolkit.add_template_directory(config, 'templates')\n-        p.toolkit.add_public_directory(config, 'public')\n-        p.toolkit.add_resource('public/static/js', 'js')\n-        p.toolkit.add_resource('assets/internal', 'canada_internal')\n-        p.toolkit.add_resource('assets/datatables', 'canada_datatables')\n-        p.toolkit.add_resource('assets/public', 'canada_public')\n-        p.toolkit.add_resource('assets/invitation-manager', 'invitation_manager')\n-        set_app_global('is_registry', plugin_loaded('canada_internal'))\n-\n-        config['ckan.favicon'] = helpers.cdts_asset('/assets/favicon.ico')\n-\n-    # ITemplateHelpers\n-    def get_helpers(self):\n-        return dict((h, getattr(helpers, h)) for h in [\n-            # Registry\n-            'may_publish_datasets',\n-            'today',\n-            'date_format',\n-            'parse_release_date_facet',\n-            'is_ready_to_publish',\n-            'get_datapreview_recombinant',\n-            'recombinant_description_to_markup',\n-            'mail_to_with_params',\n-            'get_timeout_length',\n-            'canada_check_access',\n-            'get_user_email',\n-            'get_loader_status_badge',\n-            'validation_status',\n-            'is_user_locked',\n-            # Portal\n-            'user_organizations',\n-            'openness_score',\n-            'remove_duplicates',\n-            'get_license',\n-            'normalize_strip_accents',\n-            'portal_url',\n-            'adv_search_url',\n-            'adv_search_mlt_root',\n-            'ga4_id',\n-            'loop11_key',\n-            'drupal_session_present',\n-            'contact_information',\n-            'show_openinfo_facets',\n-            'json_loads',\n-            'catalogue_last_update_date',\n-            'get_translated_t',\n-            'language_text_t',\n-            'get_datapreview',\n-            'iso_to_goctime',\n-            'geojson_to_wkt',\n-            'cdts_asset',\n-            'get_map_type',\n-            'adobe_analytics_login_required',\n-            'adobe_analytics_lang',\n-            'adobe_analytics_js',\n-            'mail_to_with_params',\n-            'organization_member_count',\n-            'flash_notice',\n-            'flash_error',\n-            'flash_success',\n-            'adobe_analytics_creator',\n-            'resource_view_meta_title',\n-            'get_resource_view',\n-            'resource_view_type',\n-            'fgp_viewer_url',\n-            'date_field',\n-            'split_piped_bilingual_field',\n-            'search_filter_pill_link_label',\n-            'release_date_facet_start_year',\n-            'ckan_to_cdts_breadcrumbs',\n-            'available_purge_types',\n-            'operations_guide_link',\n-            'max_resources_per_dataset',\n-        ])\n-\n-\n-class CanadaSecurityPlugin(CkanSecurityPlugin):\n-    \"\"\"\n-    Plugin for extra security\n-    \"\"\"\n-    p.implements(p.IResourceController, inherit=True)\n-    p.implements(p.IValidators, inherit=True)\n-    p.implements(p.IConfigurer)\n-\n-    def update_config(self, config):\n-        super(CanadaSecurityPlugin, self).update_config(config)\n-        # Disable auth settings\n-        config['ckan.auth.anon_create_dataset'] = False\n-        config['ckan.auth.create_unowned_dataset'] = False\n-        config['ckan.auth.create_dataset_if_not_in_organization'] = False\n-        config['ckan.auth.user_create_groups'] = False\n-        config['ckan.auth.user_create_organizations'] = False\n-        config['ckan.auth.create_user_via_api'] = config.get('ckan.auth.create_user_via_api', False)  # allow setting in INI file\n-        # Enable auth settings\n-        config['ckan.auth.user_delete_groups'] = True\n-        config['ckan.auth.user_delete_organizations'] = True\n-        config['ckan.auth.create_user_via_web'] = plugin_loaded('canada_internal')  # /user/register view only on registry\n-        # Set auth settings\n-        config['ckan.auth.roles_that_cascade_to_sub_groups'] = ['admin']\n-\n-        csrf.exempt(datatablesview)\n-\n-    def before_create(self, context, resource):\n-        \"\"\"\n-        Override before_create from CkanSecurityPlugin.\n-        Want to use the methods in scheming instead of before_create.\n-        \"\"\"\n-\n-    def before_update(self, context, current, resource):\n-        \"\"\"\n-        Override before_update from CkanSecurityPlugin.\n-        Want to use the methods in scheming instead of before_update.\n-        \"\"\"\n-\n-    def before_resource_create(self, context, resource):\n-        \"\"\"\n-        Override before_resource_create from CkanSecurityPlugin.\n-        Want to use the methods in scheming instead of before_resource_create.\n-        \"\"\"\n-\n-    def before_resource_update(self, context, current, resource):\n-        \"\"\"\n-        Override before_resource_update from CkanSecurityPlugin.\n-        Want to use the methods in scheming instead of before_resource_update.\n-        \"\"\"\n-\n-    def get_validators(self):\n-        validators_dict = super(CanadaSecurityPlugin, self).get_validators() or {}\n-        return dict(\n-            validators_dict,\n-            canada_security_upload_type=validators.canada_security_upload_type,\n-            canada_security_upload_presence=validators.canada_security_upload_presence,\n-        )\n-\n-\n-class CanadaDatasetsPlugin(SchemingDatasetsPlugin):\n-    \"\"\"\n-    Plugin for dataset and resource\n-    \"\"\"\n-    p.implements(p.IDatasetForm, inherit=True)\n-    p.implements(p.IPackageController, inherit=True)\n-    p.implements(p.IBlueprint)\n-    p.implements(IDataDictionaryForm, inherit=True)\n-\n-    try:\n-        from ckanext.validation.interfaces import IDataValidation\n-    except ImportError:\n-        log.warn('failed to import ckanext-validation interface')\n-    else:\n-        p.implements(IDataValidation, inherit=True)\n-\n-\n-    # IBlueprint\n-    def get_blueprint(self):\n-        \"\"\"\n-        Prevents all Core Dataset and Resources Views\n-        for all the PD types. Will type_redirect them\n-        to the pd_type. Will allow /<pd_type>/activity\n-        \"\"\"\n-        # type: () -> list[Blueprint]\n-        blueprints = []\n-        for pd_type in h.recombinant_get_types():\n-            blueprint = Blueprint(\n-                u'canada_%s' % pd_type,\n-                __name__,\n-                url_prefix=u'/%s' % pd_type,\n-                url_defaults={u'package_type': pd_type})\n-            blueprint.add_url_rule(\n-                u'/',\n-                endpoint='canada_search_%s' % pd_type,\n-                view_func=canada_search,\n-                methods=['GET']\n-            )\n-            blueprint.add_url_rule(\n-                u'/<path:uri>',\n-                endpoint='canada_prevent_%s' % pd_type,\n-                view_func=canada_prevent_pd_views,\n-                methods=['GET', 'POST']\n-            )\n-            blueprints.append(blueprint)\n-        return blueprints\n-\n-\n-    def _redirect_pd_dataset_endpoints(blueprint):\n-        \"\"\"\n-        Runs before request for /dataset and /dataset/<pkg id>/resource\n-\n-        Checks if the actual package type is a PD type and redirects it.\n-        \"\"\"\n-        if has_request_context() and hasattr(request, 'view_args'):\n-            id = request.view_args.get('id')\n-            if not id:\n-                return\n-            package_type = request.view_args.get('package_type')\n-            package_type = _get_package_type_from_dict(id, package_type)\n-            if package_type in h.recombinant_get_types():\n-                return h.redirect_to('canada.type_redirect',\n-                                        resource_name=package_type)\n-\n-\n-    #IDatasetForm\n-    def prepare_dataset_blueprint(self, package_type, blueprint):\n-        # type: (str,Blueprint) -> Blueprint\n-        blueprint.add_url_rule(\n-            u'/edit/<id>',\n-            endpoint='canada_edit_%s' % package_type,\n-            view_func=CanadaDatasetEditView.as_view(str(u'edit')),\n-            methods=['GET', 'POST']\n-        )\n-        blueprint.add_url_rule(\n-            u'/new',\n-            endpoint='canada_new_%s' % package_type,\n-            view_func=CanadaDatasetCreateView.as_view(str(u'new')),\n-            methods=['GET', 'POST']\n-        )\n-        blueprint.add_url_rule(\n-            u'/',\n-            endpoint='canada_search_%s' % package_type,\n-            view_func=canada_search,\n-            methods=['GET'],\n-            strict_slashes=False\n-        )\n-        # redirect PD endpoints accessed from /dataset/<pd pkg id>\n-        blueprint.before_request(self._redirect_pd_dataset_endpoints)\n-        return blueprint\n-\n-\n-    #IDatasetForm\n-    def prepare_resource_blueprint(self, package_type, blueprint):\n-        # type: (str,Blueprint) -> Blueprint\n-        blueprint.add_url_rule(\n-            u'/<resource_id>/edit',\n-            endpoint='canada_resource_edit_%s' % package_type,\n-            view_func=CanadaResourceEditView.as_view(str(u'edit')),\n-            methods=['GET', 'POST']\n-        )\n-        blueprint.add_url_rule(\n-            u'/new',\n-            endpoint='canada_resource_new_%s' % package_type,\n-            view_func=CanadaResourceCreateView.as_view(str(u'new')),\n-            methods=['GET', 'POST']\n-        )\n-        # redirect PD endpoints accessed from /dataset/<pd pkg id>/resource\n-        blueprint.before_request(self._redirect_pd_dataset_endpoints)\n-        return blueprint\n-\n-    # IDataValidation\n-\n-    def can_validate(self, context, resource):\n-        \"\"\"\n-        Only uploaded resources are allowed to be validated, or allowed domain sources.\n-        \"\"\"\n-        if resource.get('url_type') == 'upload':\n-            return True\n-\n-        if not resource.get('url_type'):\n-            allowed_domains = p.toolkit.config.get('ckanext.canada.datastore_source_domain_allow_list', [])\n-            url = resource.get('url')\n-            url_parts = urlsplit(url)\n-            if url_parts.netloc in allowed_domains:\n-                return True\n-\n-        return False\n-\n-\n-    # IPackageController\n-    def before_dataset_search(self, search_params):\n-        # We're going to group portal_release_date into two bins - to today and\n-        # after today.\n-        search_params['facet.range'] = 'portal_release_date'\n-        search_params['facet.range.start'] = 'NOW/DAY-%sYEARS' % helpers.RELEASE_DATE_FACET_STEP\n-        search_params['facet.range.end'] = 'NOW/DAY+%sYEARS' % helpers.RELEASE_DATE_FACET_STEP\n-        search_params['facet.range.gap'] = '+%sYEARS' % helpers.RELEASE_DATE_FACET_STEP\n-\n-        # FIXME: so terrible. hack out WET4 wbdisable parameter\n-        try:\n-            search_params['fq'] = search_params['fq'].replace(\n-                'wbdisable:\"true\"', '').replace(\n-                'wbdisable:\"false\"', '')\n-        except Exception:\n-            pass\n-\n-        try:\n-            g.fields_grouped.pop('wbdisable', None)\n-        except Exception:\n-            pass\n-\n-        # search extras for ckan-admin/publish route.\n-        # we only want to show ready to publish,\n-        # approved datasets without a release date.\n-        if has_request_context() and 'ckan-admin/publish' in request.url:\n-            search_params['extras']['ready_to_publish'] = u'true'\n-            search_params['extras']['imso_approval'] = u'true'\n-            search_params['fq'] += '+ready_to_publish:\"true\", +imso_approval:\"true\", -portal_release_date:*'\n-\n-        # CKAN Core search view wraps all fq values with double quotes.\n-        # We need to remove double quotes from the portal_release_date queries.\n-        if 'fq' in search_params:\n-            for release_date_query in re.findall(fq_portal_release_date_match, search_params['fq']):\n-                search_params['fq'] = search_params['fq'].replace(release_date_query, release_date_query.replace('\"', ''))\n-\n-        return search_params\n-\n-\n-    # IPackageController\n-    def after_dataset_search(self, search_results, search_params):\n-        for result in search_results.get('results', []):\n-            for extra in result.get('extras', []):\n-                if extra.get('key') in ['title_fra', 'notes_fra']:\n-                    result[extra['key']] = extra['value']\n-\n-        return search_results\n-\n-\n-    # IPackageController\n-    def before_dataset_index(self, data_dict):\n-        kw = json.loads(data_dict.get('extras_keywords', '{}'))\n-        data_dict['keywords'] = kw.get('en', [])\n-        data_dict['keywords_fra'] = kw.get('fr', kw.get('fr-t-en', []))\n-        data_dict['catalog_type'] = data_dict.get('type', '')\n-\n-        data_dict['subject'] = json.loads(data_dict.get('subject', '[]'))\n-        data_dict['topic_category'] = json.loads(data_dict.get(\n-            'topic_category', '[]'))\n-        try:\n-            data_dict['spatial_representation_type'] = json.loads(\n-                data_dict.get('spatial_representation_type')\n-            )\n-        except (TypeError, ValueError):\n-            data_dict['spatial_representation_type'] = []\n-\n-        if data_dict.get('portal_release_date'):\n-            data_dict.pop('ready_to_publish', None)\n-        elif data_dict.get('ready_to_publish') == 'true':\n-            data_dict['ready_to_publish'] = 'true'\n-        else:\n-            data_dict['ready_to_publish'] = 'false'\n-\n-        try:\n-            geno = h.recombinant_get_geno(data_dict['type']) or {}\n-        except AttributeError:\n-            pass\n-        else:\n-            data_dict['portal_type'] = geno.get('portal_type', data_dict['type'])\n-            if 'collection' in geno:\n-                data_dict['collection'] = geno['collection']\n-\n-        # need to keep fgp_viewer in the index for Advanced Search App\n-        if 'fgp_viewer' in data_dict.get('display_flags', []):\n-            data_dict['fgp_viewer'] = 'map_view'\n-\n-        titles = json.loads(data_dict.get('title_translated', '{}'))\n-        data_dict['title_fr'] = titles.get('fr', '')\n-        data_dict['title_string'] = titles.get('en', '')\n-\n-        if data_dict['type'] == 'prop':\n-            status = data_dict.get('status')\n-            data_dict['status'] = status[-1]['reason'] if status else 'department_contacted'\n-\n-        if data_dict.get('credit'):\n-            for i, cr in enumerate(data_dict['credit']):\n-                cr.pop('__extras', None)\n-                # credit is a string multiValue in SOLR, need to json stringify for SOLR 9+\n-                data_dict['credit'][i] = json.dumps(cr)\n-\n-        if data_dict.get('relationship'):\n-            data_dict['related_relationship'] = [rel['related_relationship'] for rel in data_dict['relationship']]\n-            data_dict['related_type'] = [rel['related_type'] for rel in data_dict['relationship']]\n-        data_dict.pop('relationship', None)\n-\n-        return data_dict\n-\n-    # IDataDictionaryForm\n-\n-    def update_datastore_info_field(self, field, plugin_data):\n-        if 'info' or '_info' in plugin_data and 'info' not in field:\n-            if 'info' in plugin_data:\n-                field['info'] = plugin_data.get('info', {})\n-            elif '_info' in plugin_data:\n-                field['info'] = plugin_data.get('_info', {})\n-        return field\n-\n-\n-class DataGCCAInternal(p.SingletonPlugin):\n-    \"\"\"\n-    Plugin for internal version of data.gc.ca site, aka the \"registry\"\n-    This plugin requires the DataGCCAPublic and DataGCCAForms plugins\n-    \"\"\"\n-    p.implements(p.IConfigurable)\n-    p.implements(p.IConfigurer)\n-    p.implements(p.IPackageController, inherit=True)\n-    p.implements(p.IActions)\n-    p.implements(IXloader, inherit=True)\n-    p.implements(p.IAuthFunctions)\n-\n-    # IConfigurer\n-    def update_config(self, config):\n-        config.update({\n-            \"ckan.user_list_limit\": 250\n-        })\n-\n-        # CKAN 2.10 plugin loading does not allow us to set the schema\n-        # files in update_config in a way that the load order will work fully.\n-        scheming_presets = config.get('scheming.presets', '')\n-        assert 'ckanext.scheming:presets.json' in scheming_presets\n-        assert 'ckanext.fluent:presets.json' in scheming_presets\n-        assert 'ckanext.canada:schemas/presets.yaml' in scheming_presets\n-        assert 'ckanext.validation:presets.json' in scheming_presets\n-\n-        # Include private datasets in Feeds\n-        config['ckan.feeds.include_private'] = True\n-\n-\n-    # IConfigurable\n-    def configure(self, config):\n-        # FIXME: monkey-patch datastore upsert_data\n-        from ckanext.datastore.backend import postgres as db\n-        original_upsert_data = db.upsert_data\n-        def patched_upsert_data(context, data_dict):\n-            with logic.datastore_create_temp_user_table(context):\n-                try:\n-                    return original_upsert_data(context, data_dict)\n-                except ValidationError as e:\n-                    # reformat tab-delimited error as dict\n-                    head, sep, rerr = e.error_dict.get('records', [''])[0].partition('\\t')\n-                    rerr = rerr.rstrip('\\n')\n-                    if head == 'TAB-DELIMITED' and sep:\n-                        out = {}\n-                        it = iter(rerr.split('\\t'))\n-                        for key, error in zip(it, it):\n-                            out.setdefault(key, []).append(error)\n-                        e.error_dict['records'] = [out]\n-                    raise e\n-        if db.upsert_data.__name__ == 'upsert_data':\n-            db.upsert_data = patched_upsert_data\n-\n-        # register custom frictionless plugin\n-        system.register('canada-validation', CanadaValidationPlugin())\n-\n-    # IPackageController\n-    def create(self, pkg):\n-        \"\"\"\n-        All datasets on registry should now be marked private\n-        \"\"\"\n-        pkg.private = True\n-\n-    # IPackageController\n-    def edit(self, pkg):\n-        \"\"\"\n-        All datasets on registry should now be marked private\n-        \"\"\"\n-        pkg.private = True\n-\n-    # IActions\n-\n-    def get_actions(self):\n-        return dict(\n-            {\n-                k: disabled_anon_action for k in [\n-                    'package_activity_list',\n-                    'recently_changed_packages_activity_list',\n-                    'dashboard_activity_list',\n-                    'changed_packages_activity_timestamp_since',\n-                ]\n-            },\n-            resource_view_update=resource_view_update_bilingual,\n-            resource_view_create=resource_view_create_bilingual,\n-            datastore_run_triggers=logic.canada_datastore_run_triggers,\n-            portal_sync_info=logic.portal_sync_info,\n-            list_out_of_sync_packages=logic.list_out_of_sync_packages,\n-        )\n-\n-    # IAuthFunctions\n-\n-    def get_auth_functions(self):\n-        return {\n-            'group_list': auth.group_list,\n-            'group_show': auth.group_show,\n-            'organization_list': auth.organization_list,\n-            'organization_show': auth.organization_show,\n-            'portal_sync_info': auth.portal_sync_info,\n-            'list_out_of_sync_packages': auth.list_out_of_sync_packages,\n-        }\n-\n-    # IXloader\n-\n-    def can_upload(self, resource_id):\n-        \"\"\"\n-        Only uploaded resources are allowed to be xloadered, or allowed domain sources.\n-        \"\"\"\n-\n-        # check if file is uploded\n-        try:\n-            res = p.toolkit.get_action(u'resource_show')({'ignore_auth': True},\n-                                                         {'id': resource_id})\n-\n-            if res.get('url_type') != 'upload' and res.get('url_type') != '' and res.get('url_type') is not None:\n-                log.debug(\n-                    'Only uploaded resources and allowed domain sources can be added to the Data Store.')\n-                return False\n-\n-            if not res.get('url_type'):\n-                allowed_domains = p.toolkit.config.get('ckanext.canada.datastore_source_domain_allow_list', [])\n-                url = res.get('url')\n-                url_parts = urlsplit(url)\n-                if url_parts.netloc not in allowed_domains:\n-                    log.debug(\n-                        'Only uploaded resources and allowed domain sources can be added to the Data Store.')\n-                    return False\n-\n-        except ObjectNotFound:\n-            log.error('Resource %s does not exist.' % resource_id)\n-            return False\n-\n-        # check if validation report exists\n-        try:\n-            validation = p.toolkit.get_action(u'resource_validation_show')(\n-                {'ignore_auth': True},\n-                {'resource_id': res['id']})\n-            if validation.get('status', None) != 'success':\n-                log.error(\n-                    'Only validated resources can be added to the Data Store.')\n-                return False\n-\n-        except ObjectNotFound:\n-            log.error('No validation report exists for resource %s' %\n-                      resource_id)\n-            return False\n-\n-        return True\n-\n-\n-@chained_action\n-def disabled_anon_action(up_func, context, data_dict):\n-    if not context.get('ignore_auth', False) and context.get('user', 'visitor') in ('', 'visitor'):\n-        return []\n-    return up_func(context, data_dict)\n-disabled_anon_action.side_effect_free = True\n-disabled_anon_action.auth_audit_exempt = True\n-\n-\n-def _disabled_action(context, data_dict):\n-    \"\"\"\n-    Raises a NotFound exception to disable a logic action method.\n-    \"\"\"\n-    raise ObjectNotFound\n-_disabled_action.side_effect_free = True\n-_disabled_action.auth_audit_exempt = True\n-\n-\n-@chained_action\n-def resource_view_create_bilingual(up_func, context, data_dict):\n-    from ckan.logic.schema import default_create_resource_view_schema_filtered\n-    # assuming all resource views we used are filtered\n-    # filter_fields and filter_values have ignore_missing validator\n-    # so using the filtered schema should be fine here.\n-    s = default_create_resource_view_schema_filtered()\n-    return up_func(\n-        dict(\n-            context,\n-            schema=dict(\n-                s,\n-                title=[get_validator('default')('View'), get_validator('unicode_safe')],\n-                title_fr=[get_validator('default')('Vue'), get_validator('unicode_safe')],\n-                description=[get_validator('default')(''), get_validator('unicode_safe')],\n-                description_fr=[get_validator('default')(''), get_validator('unicode_safe')],\n-            ),\n-        ),\n-        data_dict\n-    )\n-\n-@chained_action\n-def resource_view_update_bilingual(up_func, context, data_dict):\n-    from ckan.logic.schema import (\n-        default_create_resource_view_schema_filtered,\n-        default_update_resource_view_schema_changes,\n-    )\n-    # assuming all resource views we used are filtered\n-    # filter_fields and filter_values have ignore_missing validator\n-    # so using the filtered schema should be fine here.\n-    s = default_create_resource_view_schema_filtered()\n-    s.update(default_update_resource_view_schema_changes())\n-    return up_func(\n-        dict(\n-            context,\n-            schema=dict(\n-                s,\n-                title_fr=list(s['title']),\n-                description_fr=list(s['description']),\n-            ),\n-        ),\n-        data_dict\n-    )\n-\n-\n-class DataGCCAPublic(p.SingletonPlugin, DefaultTranslation):\n-    \"\"\"\n-    Plugin for public-facing version of Open Government site, aka the \"portal\"\n-    This plugin requires the DataGCCAForms plugin\n-    \"\"\"\n-    p.implements(p.IConfigurer)\n-    p.implements(p.IAuthFunctions)\n-    p.implements(p.IFacets)\n-    p.implements(p.ITranslation, inherit=True)\n-    p.implements(p.IMiddleware, inherit=True)\n-    p.implements(p.IActions)\n-    p.implements(p.IClick)\n-    p.implements(IColumnTypes)\n-    p.implements(p.IBlueprint)\n-\n-    # DefaultTranslation, ITranslation\n-    def i18n_domain(self):\n-        return 'ckanext-canada'\n-\n-    # IConfigurer\n-    def update_config(self, config):\n-        config['ckan.auth.public_user_details'] = False\n-\n-        recombinant_definitions = config.get('recombinant.definitions', '')\n-        assert 'ckanext.canada:tables/ati.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/briefingt.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/qpnotes.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/contracts.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/contractsa.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/grants.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/hospitalityq.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/reclassification.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/travela.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/travelq.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/wrongdoing.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/inventory.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/consultations.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/service.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/dac.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/nap5.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/experiment.yaml' in recombinant_definitions\n-        assert 'ckanext.canada:tables/adminaircraft.yaml' in recombinant_definitions\n-\n-        config['ckan.search.show_all_types'] = True\n-        config['ckan.gravatar_default'] = 'disabled'\n-        config['search.facets.limit'] = 200  # because org list\n-\n-        scheming_presets = config.get('scheming.presets', '')\n-        if 'validation' not in scheming_presets:\n-            assert 'ckanext.scheming:presets.json' in scheming_presets\n-            assert 'ckanext.fluent:presets.json' in scheming_presets\n-            assert 'ckanext.canada:schemas/presets.yaml' in scheming_presets\n-            assert 'ckanext.canada:schemas/validation_placeholder_presets.yaml' in scheming_presets\n-\n-        scheming_dataset_schemas = config.get('scheming.dataset_schemas', '')\n-        assert 'ckanext.canada:schemas/dataset.yaml' in scheming_dataset_schemas\n-        assert 'ckanext.canada:schemas/info.yaml' in scheming_dataset_schemas\n-        assert 'ckanext.canada:schemas/prop.yaml' in scheming_dataset_schemas\n-\n-        scheming_organization_schemas = config.get('scheming.organization_schemas', '')\n-        assert 'ckanext.canada:schemas/organization.yaml' in scheming_organization_schemas\n-\n-        # Pretty output for Feeds\n-        config['ckan.feeds.pretty'] = True\n-\n-        # Enable our custom DCAT profile.\n-        config['ckanext.dcat.rdf.profiles'] = 'euro_dcat_ap_2'\n-\n-        # Enable license restriction\n-        config['ckan.dataset.restrict_license_choices'] = True\n-\n-        # monkey patch helpers.py pagination method\n-        hlp.Page.pager = _wet_pager\n-        hlp.SI_number_span = _SI_number_span_close\n-\n-        hlp.build_nav_main = build_nav_main\n-\n-        # migration from `canada_activity` and `ckanext-extendedactivity` - Aug 2022\n-        # migrated from `ckan` canada fork for resource view activities - Jan 2024\n-        # migrated from `activity` for ckan 2.10 upgrade - June 2024\n-        object_id_validators.update({\n-            'new resource view': 'package_id_exists',\n-            'changed resource view': 'package_id_exists',\n-            'deleted resource view': 'package_id_exists',\n-        })\n-\n-    # IFacets\n-    def dataset_facets(self, facets_dict, package_type):\n-        ''' Update the facets_dict and return it. '''\n-\n-        facets_dict.update({\n-            'portal_type': _('Portal Type'),\n-            'organization': _('Organization'),\n-            'collection': _('Collection Type'),\n-            'keywords': _('Keywords'),\n-            'keywords_fra': _('Keywords'),\n-            'subject': _('Subject'),\n-            'res_format': _('Format'),\n-            'res_type': _('Resource Type'),\n-            'frequency': _('Maintenance and Update Frequency'),\n-            'ready_to_publish': _('Record Status'),\n-            'imso_approval': _('IMSO Approval'),\n-            'jurisdiction': _('Jurisdiction'),\n-            'status': _('Suggestion Status'),\n-            })\n-\n-        return facets_dict\n-\n-    # IFacets\n-    #FIXME: remove `group_facets` method once issue https://github.com/ckan/ckan/issues/7017 is patched into <2.9\n-    def group_facets(self, facets_dict, group_type, package_type):\n-        ''' Update the facets_dict and return it. '''\n-        if group_type == 'organization':\n-            return self.dataset_facets(facets_dict, package_type)\n-        return facets_dict\n-\n-    # IFacets\n-    def organization_facets(self, facets_dict, organization_type,\n-                            package_type):\n-        return self.dataset_facets(facets_dict, package_type)\n-\n-    # IActions\n-    def get_actions(self):\n-        return {\n-                'resource_view_show': logic.canada_resource_view_show,\n-                'resource_view_list': logic.canada_resource_view_list,\n-                'job_list': logic.canada_job_list,\n-                'registry_jobs_running': logic.registry_jobs_running,\n-                'datastore_search': logic.canada_datastore_search,\n-               }\n-\n-    # IAuthFunctions\n-    def get_auth_functions(self):\n-        return {\n-            'datastore_create': auth.datastore_create,\n-            'datastore_delete': auth.datastore_delete,\n-            'datastore_upsert': auth.datastore_upsert,\n-            'view_org_members': auth.view_org_members,\n-            'registry_jobs_running': auth.registry_jobs_running,\n-            'recently_changed_packages_activity_list': auth.recently_changed_packages_activity_list,\n-        }\n-\n-    # IMiddleware\n-\n-    def make_middleware(self, app, config):\n-        return LogExtraMiddleware(app, config)\n-\n-    # IClick\n-\n-    def get_commands(self):\n-        return [cli.get_commands(), get_pd_commands()]\n-\n-    # IColumnTypes\n-\n-    def column_types(self, existing_types):\n-        return dict(\n-            existing_types,\n-            province=coltypes.Province,\n-            crabusnum=coltypes.CRABusinessNumber,\n-        )\n-\n-    # IBlueprint\n-    def get_blueprint(self):\n-        # type: () -> list[Blueprint]\n-        return [canada_views]\n-\n-\n-class DataGCCAForms(p.SingletonPlugin, DefaultDatasetForm):\n-    \"\"\"\n-    Plugin for dataset forms for Canada's metadata schema\n-    \"\"\"\n-    p.implements(p.IActions)\n-    p.implements(p.IValidators, inherit=True)\n-\n-    # IActions\n-\n-    def get_actions(self):\n-        actions = logic.limit_api_logic()\n-        actions.update((h, getattr(logic, h)) for h in [\n-            'changed_packages_activity_timestamp_since',\n-            'canada_guess_mimetype',\n-            ])\n-        actions.update({k: disabled_anon_action for k in [\n-            'current_package_list_with_resources',\n-            'user_list',\n-            'user_activity_list',\n-            'member_list',\n-            #'user_show',  FIXME: required for password reset\n-            'package_autocomplete',\n-            'format_autocomplete',\n-            'user_autocomplete',\n-            'group_activity_list',\n-            'organization_activity_list',\n-            'group_package_show',\n-            ]})\n-        # disable group & organization bulk actions as they do not support\n-        # IPackageController and IResourceController implementations.\n-        actions.update({k: _disabled_action for k in [\n-            'bulk_update_private',\n-            'bulk_update_public',\n-            'bulk_update_delete',\n-            '_bulk_update_dataset',]})\n-        return actions\n-\n-    # IValidators\n-\n-    def get_validators(self):\n-        return {\n-            'canada_validate_generate_uuid':\n-                validators.canada_validate_generate_uuid,\n-            'canada_tags': validators.canada_tags,\n-            'geojson_validator': validators.geojson_validator,\n-            'email_validator': validators.email_validator,\n-            'protect_portal_release_date':\n-                validators.protect_portal_release_date,\n-            'canada_copy_from_org_name':\n-                validators.canada_copy_from_org_name,\n-            'canada_maintainer_email_default':\n-                validators.canada_maintainer_email_default,\n-            'user_read_only':\n-                validators.user_read_only,\n-            'user_read_only_json':\n-                validators.user_read_only_json,\n-            'canada_sort_prop_status':\n-                validators.canada_sort_prop_status,\n-            'no_future_date':\n-                validators.no_future_date,\n-            'canada_org_title_translated_save':\n-                validators.canada_org_title_translated_save,\n-            'canada_org_title_translated_output':\n-                validators.canada_org_title_translated_output,\n-            'protect_reporting_requirements':\n-                validators.protect_reporting_requirements,\n-            'ati_email_validate':\n-                validators.ati_email_validate,\n-            'isodate':\n-                validators.isodate,\n-            'string_safe':\n-                validators.string_safe,\n-            'string_safe_stop':\n-                validators.string_safe_stop,\n-            'json_string':\n-                validators.json_string,\n-            'json_string_has_en_fr_keys':\n-                validators.json_string_has_en_fr_keys,\n-            'canada_static_charset_tabledesigner':\n-                validators.canada_static_charset_tabledesigner,\n-            'canada_static_rtype_tabledesigner':\n-                validators.canada_static_rtype_tabledesigner,\n-            'canada_guess_resource_format':\n-                validators.canada_guess_resource_format,\n-            'canada_output_none':\n-                validators.canada_output_none,\n-            'protect_registry_access':\n-                validators.protect_registry_access,\n-            'limit_resources_per_dataset':\n-                validators.limit_resources_per_dataset,\n-            }\n-\n-\n-class LogExtraMiddleware(object):\n-    def __init__(self, app, config):\n-        self.app = app\n-\n-    def __call__(self, environ, start_response):\n-        def _start_response(status, response_headers, exc_info=None):\n-            extra = []\n-            try:\n-                contextual_user = g.user\n-            except (TypeError, RuntimeError, AttributeError):\n-                contextual_user = None\n-            if contextual_user:\n-                log_extra = g.log_extra if hasattr(g, 'log_extra') else ''\n-                #FIXME: make sure username special chars are handled\n-                # the values in the tuple HAVE to be str types.\n-                extra = [('X-LogExtra', f'user={contextual_user} {log_extra}')]\n-\n-            return start_response(\n-                status,\n-                response_headers + extra,\n-                exc_info)\n-\n-        return self.app(environ, _start_response)\n-\n-\n-def _wet_pager(self, *args, **kwargs):\n-    ## a custom pagination method, because CKAN doesn't expose the pagination to the templates,\n-    ## and instead hardcodes the pagination html in helpers.py\n-\n-    kwargs.update(\n-        format=u\"<ul class='pagination'>$link_previous ~2~ $link_next</ul>\",\n-        symbol_previous=hlp._('Previous'), symbol_next=hlp._('Next'),\n-        curpage_attr={'class': 'active'}\n-    )\n-\n-    return super(hlp.Page, self).pager(*args, **kwargs)\n-\n-def _SI_number_span_close(number):\n-    ''' outputs a span with the number in SI unit eg 14700 -> 14.7k '''\n-    number = int(number)\n-    if number < 1000:\n-        output = h.literal('<span>')\n-    else:\n-        output = h.literal('<span title=\"' + formatters.localised_number(number) + '\">')\n-    return output + formatters.localised_SI_number(number) + h.literal('</span>')\n-\n-\n-# Monkey Patched to inlude the 'list-group-item' class\n-# TODO: Clean up and convert to proper HTML templates\n-def build_nav_main(*args):\n-    ''' build a set of menu items.\n-\n-    args: tuples of (menu type, title) eg ('login', _('Login'))\n-    outputs <li><a href=\"...\">title</a></li>\n-    '''\n-    output = ''\n-    for item in args:\n-        menu_item, title = item[:2]\n-        if len(item) == 3 and not hlp.check_access(item[2]):\n-            continue\n-        output += hlp._make_menu_item(menu_item, title, class_='list-group-item')\n-    return output\n-"
                },
                {
                    "sha": "669eedf19d7442d6e616ba888eedc6e9675427d5",
                    "filename": "ckanext/canada/strings.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fstrings.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fstrings.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fstrings.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,8 +1,9 @@\n # coding=UTF-8\n \"\"\"\n-Copies of strings that need translations but babel can't find, e.g. text embedded in triggers\n+Copies of strings that need translations\n+but babel can't find, e.g. text embedded in triggers\n \"\"\"\n-_ = lambda x: x\n+_ = lambda x: x  # noqa: E731\n \n # CKAN Core\n # Include any custom strings put into our CKAN fork."
                },
                {
                    "sha": "404201232713eb14f9174ab240babd6dfdb26e80",
                    "filename": "ckanext/canada/tests/__init__.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2F__init__.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2F__init__.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2F__init__.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -9,14 +9,15 @@\n from ckanext.recombinant.cli import _create_triggers\n from ckan.cli.db import _run_migrations\n \n+\n class CanadaTestBase(object):\n     @classmethod\n     def setup_method(self, method):\n         \"\"\"Method is called at class level before EACH test methods of the class are called.\n         Setup any state specific to the execution of the given class methods.\n         \"\"\"\n-        #FIXME: DB head for migartions in our test environment setup.\n-        #       HEAD of CKAN db Docker image is always ahead??\n+        # FIXME: DB head for migartions in our test environment setup.\n+        #        HEAD of CKAN db Docker image is always ahead??\n         _run_migrations('canada_public')\n         reset_db()\n         clear_all()"
                },
                {
                    "sha": "4bf80f73d01c8d4f45210c42af2b418f354db7ae",
                    "filename": "ckanext/canada/tests/factories.py",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 2,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ffactories.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ffactories.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ffactories.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,7 +1,13 @@\n # -*- coding: UTF-8 -*-\n from factory import LazyAttribute, Sequence\n \n-from ckan.tests.factories import UserWithToken, Organization, Dataset, Resource, ResourceView\n+from ckan.tests.factories import (\n+    UserWithToken,\n+    Organization,\n+    Dataset,\n+    Resource,\n+    ResourceView\n+)\n import ckan.tests.helpers as helpers\n from ckan.model import Session\n \n@@ -78,4 +84,3 @@ class CanadaDataset(Dataset):\n     jurisdiction = 'federal'\n     restrictions = 'unrestricted'\n     imso_approval = 'true'\n-"
                },
                {
                    "sha": "334edaa06ecc9631ce1bec078fce96ba1ff81fb9",
                    "filename": "ckanext/canada/tests/fixtures.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ffixtures.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ffixtures.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ffixtures.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,6 +1,7 @@\n import pytest\n from ckan.lib import uploader\n \n+\n @pytest.fixture\n def mock_uploads(ckan_config, monkeypatch, tmp_path):\n     def mock_get_storage_path():"
                },
                {
                    "sha": "127e7ce832ec58cccae86f5edc491af1d1844fa1",
                    "filename": "ckanext/canada/tests/helpers.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Fhelpers.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Fhelpers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Fhelpers.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -26,7 +26,7 @@ class MockFlashMessages(object):\n     def mock_flash(self, message: str, category: str = \"message\") -> None:\n         self.__flashes.append((category, message))\n \n-    def mock_get_flashed_messages(self, with_categories: bool = False, category_filter = ()):\n+    def mock_get_flashed_messages(self, with_categories: bool = False, category_filter: set = ()):\n         flashes = self.__flashes\n         if category_filter:\n             flashes = list(filter(lambda f: f[0] in category_filter, flashes))"
                },
                {
                    "sha": "be03ca91d6cbd5aac47f9c4a5cbe8ce119a9d5a7",
                    "filename": "ckanext/canada/tests/test_alerts.py",
                    "status": "modified",
                    "additions": 15,
                    "deletions": 22,
                    "changes": 37,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_alerts.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_alerts.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_alerts.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -23,7 +23,6 @@ def setup_method(self, method):\n         self.sysadmin_action = LocalCKAN(\n             username=self.sysadmin['name']).action\n \n-\n     def test_marked_not_ready_to_publish(self, app):\n         data = self._filled_dataset_data()\n         data['imso_approval'] = 'false'\n@@ -35,10 +34,9 @@ def test_marked_not_ready_to_publish(self, app):\n         response = app.get(offset, extra_environ=self.extra_environ_tester)\n \n         # Check dataset page\n-        assert not 'View on Portal' in response.body\n+        assert 'View on Portal' not in response.body\n         assert 'Seek out departmental approval and mark as approved to continue' in response.body\n \n-\n     def test_approval_required(self, app):\n         data = self._filled_dataset_data()\n         data['ready_to_publish'] = 'false'\n@@ -50,10 +48,9 @@ def test_approval_required(self, app):\n         response = app.get(offset, extra_environ=self.extra_environ_tester)\n \n         # Check dataset page\n-        assert not 'View on Portal' in response.body\n+        assert 'View on Portal' not in response.body\n         assert 'Draft record has been saved and can be edited. Mark as ready to publish to continue' in response.body\n \n-\n     def test_queued_for_publishing(self, app):\n         data = self._filled_dataset_data()\n         data['imso_approval'] = 'true'\n@@ -66,11 +63,10 @@ def test_queued_for_publishing(self, app):\n         response = app.get(offset, extra_environ=self.extra_environ_tester)\n \n         # Check dataset page\n-        assert not 'View on Portal' in response.body\n+        assert 'View on Portal' not in response.body\n         assert 'Data record is in queue for validation' in response.body\n         assert 'Record will be published by the following business day upon validation' in response.body\n \n-\n     def test_view_on_portal(self, app):\n         data = self._filled_dataset_data()\n         data['imso_approval'] = 'true'\n@@ -85,38 +81,35 @@ def test_view_on_portal(self, app):\n \n         # Check dataset page\n         assert 'View on Portal' in response.body\n-        assert not 'Data record is in queue for validation' in response.body\n-        assert not 'Record will be published by the following business day upon validation' in response.body\n-        assert not 'Seek out departmental approval and mark as approved to continue' in response.body\n-        assert not 'Draft record has been saved and can be edited. Mark as ready to publish to continue' in response.body\n-\n+        assert 'Data record is in queue for validation' not in response.body\n+        assert 'Record will be published by the following business day upon validation' not in response.body\n+        assert 'Seek out departmental approval and mark as approved to continue' not in response.body\n+        assert 'Draft record has been saved and can be edited. Mark as ready to publish to continue' not in response.body\n \n     def _filled_dataset_data(self):\n-        # type: () -> dict\n         return {\n             'type': 'dataset',\n             'collection': 'primary',\n-            'title_translated': {'en': u'A Novel By Tolstoy'},\n             'license_id': 'ca-ogl-lgo',\n             'ready_to_publish': 'true',\n             'imso_approval': 'true',\n             'jurisdiction': 'federal',\n             'maintainer_email': 'not@all.example.com',\n             'restrictions': 'unrestricted',\n             'resources': [{\n-                'name_translated': {'en': u'Full text.', 'fr': u'Full text.'},\n-                'format': u'TXT',\n-                'url': u'http://www.annakarenina.com/download/',\n+                'name_translated': {'en': 'Full text.', 'fr': 'Full text.'},\n+                'format': 'TXT',\n+                'url': 'http://www.annakarenina.com/download/',\n                 'size': 42,\n                 'resource_type': 'dataset',\n                 'language': ['zxx'],\n             }],\n             'owner_org': self.org['name'],\n             'title_translated': {\n-                'en': u'A Novel By Tolstoy', 'fr':u'Un novel par Tolstoy'},\n+                'en': 'A Novel By Tolstoy', 'fr': 'Un novel par Tolstoy'},\n             'frequency': 'as_needed',\n-            'notes_translated': {'en': u'...', 'fr': u'...'},\n-            'subject': [u'persons'],\n-            'date_published': u'2013-01-01',\n-            'keywords': {'en': [u'book'], 'fr': [u'livre']},\n+            'notes_translated': {'en': '...', 'fr': '...'},\n+            'subject': ['persons'],\n+            'date_published': '2013-01-01',\n+            'keywords': {'en': ['book'], 'fr': ['livre']},\n         }"
                },
                {
                    "sha": "2d97d5e8f83990a44e4b9de64d07e0e8c4ca492e",
                    "filename": "ckanext/canada/tests/test_ati.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_ati.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_ati.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_ati.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('ati')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -58,14 +56,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][1]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('ati-nil')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert("
                },
                {
                    "sha": "ce3bc102e50112b0287a5860e189d1ac13d48d79",
                    "filename": "ckanext/canada/tests/test_briefingt.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 4,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_briefingt.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_briefingt.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_briefingt.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('briefingt')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -41,6 +39,7 @@ def test_blank(self):\n         assert 'key' in err\n         assert 'tracking_number' in err['key'][0]\n \n+\n class TestBriefingTNil(CanadaTestBase):\n     @classmethod\n     def setup_method(self, method):\n@@ -57,14 +56,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][1]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('briefingt-nil')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert("
                },
                {
                    "sha": "f736f5bc910e83301567c85ba83fc0564751474b",
                    "filename": "ckanext/canada/tests/test_consultations.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 5,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_consultations.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_consultations.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_consultations.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('consultations')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -41,7 +39,6 @@ def test_blank(self):\n         assert 'key' in err\n         assert 'registration_number' in err['key'][0]\n \n-\n     def test_multiple_errors(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -50,7 +47,7 @@ def test_multiple_errors(self):\n                     'registration_number': 'CCC0249',\n                     'publishable': 'Q',\n                     'subjects': [\"IP\", \"CD\", \"HS\", \"GEO\", \"SE\", \"MATH\"],\n-                    'title_fr': u'seulment français',\n+                    'title_fr': 'seulment français',\n                     'description_en': 'only english',\n                     'target_participants_and_audience': [\"ZOMBIES\", \"IP\", \"IG\", \"PT\"],\n                     'end_date': \"2018-05-15\",\n@@ -77,7 +74,6 @@ def test_multiple_errors(self):\n             assert k in err\n             assert err[k] == expected[k]\n \n-\n     def test_not_going_forward_unpublished(self):\n         record = get_chromo('consultations')['examples']['record']\n         with pytest.raises(ValidationError) as ve:"
                },
                {
                    "sha": "f356f83d8af12e56569eab5bbb2ba8da697f8fac",
                    "filename": "ckanext/canada/tests/test_contracts.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 11,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_contracts.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_contracts.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_contracts.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,24 +24,21 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('contracts')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n                 resource_id=self.resource_id,\n-            records=[{}])\n+                records=[{}])\n         err = ve.value.error_dict\n         assert 'key' in err\n         assert 'reference_number' in err['key'][0]\n \n-\n     def test_ministers_office_missing(self):\n         record = dict(\n             get_chromo('contracts')['examples']['record'],\n@@ -55,7 +52,6 @@ def test_ministers_office_missing(self):\n         assert 'records' in err\n         assert 'ministers_office' in err['records'][0]\n \n-\n     def test_ministers_office(self):\n         record = dict(\n             get_chromo('contracts')['examples']['record'],\n@@ -65,7 +61,6 @@ def test_ministers_office(self):\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_2022_fields(self):\n         record = dict(\n             get_chromo('contracts')['examples']['record'],\n@@ -95,7 +90,6 @@ def test_2022_fields(self):\n             assert k in err\n             assert err[k] == expected[k]\n \n-\n     def test_multi_field_errors(self):\n         record = dict(\n             get_chromo('contracts')['examples']['record'],\n@@ -120,7 +114,6 @@ def test_multi_field_errors(self):\n             assert k in err\n             assert err[k] == expected[k]\n \n-\n     def test_inter_field_errors(self):\n         record = dict(\n             get_chromo('contracts')['examples']['record'],\n@@ -141,14 +134,13 @@ def test_inter_field_errors(self):\n         expected = {\n             'buyer_name': ['This field must be populated with an NA if an amendment is disclosed under Instrument Type'],\n             'economic_object_code': ['If N/A, then Instrument Type must be identified as a standing offer/supply arrangement (SOSA)'],\n-            'number_of_bids':['This field must be populated with a 1 if the solicitation procedure is identified as non-competitive (TN) or Advance Contract Award Notice (AC).'],\n+            'number_of_bids': ['This field must be populated with a 1 if the solicitation procedure is identified as non-competitive (TN) or Advance Contract Award Notice (AC).'],\n         }\n         assert isinstance(err, dict), err\n         for k in set(err) | set(expected):\n             assert k in err\n             assert err[k] == expected[k]\n \n-\n     def test_field_length_errors(self):\n         record = dict(\n             get_chromo('contracts')['examples']['record'],\n@@ -169,7 +161,6 @@ def test_field_length_errors(self):\n             assert k in err\n             assert err[k] == expected[k]\n \n-\n     def test_postal_code(self):\n         record = dict(\n             get_chromo('contracts')['examples']['record'],"
                },
                {
                    "sha": "e75a31a8c1a5799cd19e8a72349f497de83605ab",
                    "filename": "ckanext/canada/tests/test_contractsa.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_contractsa.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_contractsa.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_contractsa.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('contractsa')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -41,7 +39,6 @@ def test_blank(self):\n         assert 'key' in err\n         assert 'year' in err['key'][0]\n \n-\n     def test_year(self):\n         record = dict(\n             get_chromo('contractsa')['examples']['record'],"
                },
                {
                    "sha": "db453f8467ffc5f8eaee1cd68d27be23e845dc07",
                    "filename": "ckanext/canada/tests/test_dac.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_dac.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_dac.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_dac.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('dac')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert("
                },
                {
                    "sha": "a1a5203a5fe5bc2f1002fd51c63c22b14ff26998",
                    "filename": "ckanext/canada/tests/test_datastore.py",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 26,
                    "changes": 34,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_datastore.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_datastore.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_datastore.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -17,7 +17,7 @@\n     get_sample_filepath,\n )\n # type_ignore_reason: custom fixtures\n-from ckanext.canada.tests.fixtures import (\n+from ckanext.canada.tests.fixtures import (  # noqa: F401\n     mock_uploads,  # type: ignore\n )\n from ckanext.xloader import loader\n@@ -57,7 +57,6 @@ def setup_method(self, method):\n \n         self.action = LocalCKAN().action\n \n-\n     @classmethod\n     def teardown_method(self):\n         \"\"\"Method is called at class level after EACH test methods of the class are called.\n@@ -72,7 +71,6 @@ def teardown_method(self):\n         if not plugins.plugin_loaded('validation'):\n             plugins.load('validation')\n \n-\n     def _setup_resource_upload(self, filename):\n         csv_filepath = get_sample_filepath(filename)\n \n@@ -91,14 +89,13 @@ def _setup_resource_upload(self, filename):\n \n         return resource, fake_stream\n \n-\n     @change_config('ckanext.validation.run_on_create_async', False)\n     @change_config('ckanext.validation.run_on_update_async', False)\n     @change_config('ckanext.validation.locales_offered', 'en')\n     @change_config('ckanext.validation.static_validation_options', '{\"checks\":[{\"type\":\"baseline\"},{\"type\":\"ds-headers\"}]}')\n     @pytest.mark.usefixtures(\"mock_uploads\")\n     @mock.patch('ckanext.validation.jobs.get_resource_uploader', mock_get_resource_uploader)\n-    def test_validation_report(self, mock_uploads):\n+    def test_validation_report(self, mock_uploads):  # noqa: F811\n         resource, fake_stream = self._setup_resource_upload('sample.csv')\n \n         with mock.patch('io.open', return_value=fake_stream):\n@@ -111,14 +108,13 @@ def test_validation_report(self, mock_uploads):\n         assert 'language' in report\n         assert report.get('language') == 'en'\n \n-\n     @change_config('ckanext.validation.run_on_create_async', False)\n     @change_config('ckanext.validation.run_on_update_async', False)\n     @change_config('ckanext.validation.locales_offered', 'en')\n     @change_config('ckanext.validation.static_validation_options', '{\"checks\":[{\"type\":\"baseline\"},{\"type\":\"ds-headers\"}]}')\n     @pytest.mark.usefixtures(\"mock_uploads\")\n     @mock.patch('ckanext.validation.jobs.get_resource_uploader', mock_get_resource_uploader)\n-    def test_validation_report_bad_ds_headers(self, mock_uploads):\n+    def test_validation_report_bad_ds_headers(self, mock_uploads):  # noqa: F811\n         resource, fake_stream = self._setup_resource_upload('sample_with_bad_ds_headers.csv')\n \n         with mock.patch('io.open', return_value=fake_stream):\n@@ -135,20 +131,19 @@ def test_validation_report_bad_ds_headers(self, mock_uploads):\n         tasks = report.get('tasks', [])\n         assert len(tasks) == 1\n         errors = tasks[0].get('errors')\n-        assert  len(errors) == 2\n+        assert len(errors) == 2\n         assert errors[0].get('type') == 'datastore-invalid-header'\n         assert '_thisisnotallowed' in errors[0].get('note')\n         assert errors[1].get('type') == 'datastore-header-too-long'\n         assert 'thisheaderisgoingtobewaywaywaywaywaywaywaywaywaywaywaywaywaywaywaywaywaywaywaywaywaywaytolongforthedatastore' in errors[1].get('note')\n \n-\n     @change_config('ckanext.validation.run_on_create_async', False)\n     @change_config('ckanext.validation.run_on_update_async', False)\n     @change_config('ckanext.validation.locales_offered', 'en')\n     @change_config('ckanext.validation.static_validation_options', '{\"skip_errors\":[\"blank-row\"],\"checks\":[{\"type\":\"baseline\"},{\"type\":\"ds-headers\"}]}')\n     @pytest.mark.usefixtures(\"mock_uploads\")\n     @mock.patch('ckanext.validation.jobs.get_resource_uploader', mock_get_resource_uploader)\n-    def test_validation_report_empty_lines(self, mock_uploads):\n+    def test_validation_report_empty_lines(self, mock_uploads):  # noqa: F811\n         resource, fake_stream = self._setup_resource_upload('sample_with_empty_lines.csv')\n \n         with mock.patch('io.open', return_value=fake_stream):\n@@ -161,14 +156,13 @@ def test_validation_report_empty_lines(self, mock_uploads):\n         assert 'language' in report\n         assert report.get('language') == 'en'\n \n-\n     @change_config('ckanext.validation.run_on_create_async', False)\n     @change_config('ckanext.validation.run_on_update_async', False)\n     @change_config('ckanext.validation.locales_offered', 'en')\n     @change_config('ckanext.validation.static_validation_options', '{\"checks\":[{\"type\":\"baseline\"},{\"type\":\"ds-headers\"}]}')\n     @pytest.mark.usefixtures(\"mock_uploads\")\n     @mock.patch('ckanext.validation.jobs.get_resource_uploader', mock_get_resource_uploader)\n-    def test_validation_report_white_space(self, mock_uploads):\n+    def test_validation_report_white_space(self, mock_uploads):  # noqa: F811\n         resource, fake_stream = self._setup_resource_upload('sample_with_extra_white_space.csv')\n \n         with mock.patch('io.open', return_value=fake_stream):\n@@ -181,14 +175,13 @@ def test_validation_report_white_space(self, mock_uploads):\n         assert 'language' in report\n         assert report.get('language') == 'en'\n \n-\n     @change_config('ckanext.validation.run_on_create_async', False)\n     @change_config('ckanext.validation.run_on_update_async', False)\n     @change_config('ckanext.validation.locales_offered', 'en fr')\n     @change_config('ckanext.validation.static_validation_options', '{\"checks\":[{\"type\":\"baseline\"},{\"type\":\"ds-headers\"}]}')\n     @pytest.mark.usefixtures(\"mock_uploads\")\n     @mock.patch('ckanext.validation.jobs.get_resource_uploader', mock_get_resource_uploader)\n-    def test_validation_report_languages(self, mock_uploads):\n+    def test_validation_report_languages(self, mock_uploads):  # noqa: F811\n         resource, fake_stream = self._setup_resource_upload('sample.csv')\n \n         def mocked_byte_stream(cls):\n@@ -200,8 +193,7 @@ def mocked_byte_stream(cls):\n \n                 with mock.patch.object(Loader, 'buffer', fake_stream):\n \n-                    #FIXME: issue with secondary language validation getting: I/O operation on closed file\n-\n+                    # FIXME: issue with secondary language validation getting: I/O operation on closed file\n                     run_validation_job(resource)\n \n         report = self.action.resource_validation_show(resource_id=resource.get('id'), lang='en')\n@@ -236,7 +228,6 @@ def setup_method(self, method):\n         resource = Resource()\n         self.resource_id = resource['id']\n \n-\n     @classmethod\n     def teardown_method(self):\n         \"\"\"Method is called at class level after EACH test methods of the class are called.\n@@ -248,7 +239,6 @@ def teardown_method(self):\n         if not plugins.plugin_loaded('validation'):\n             plugins.load('validation')\n \n-\n     def _get_ds_records(self, exclude_field_schemas=True):\n         result = self.action.datastore_search(resource_id=self.resource_id)\n         ds_info = self.action.datastore_info(id=self.resource_id)\n@@ -257,7 +247,6 @@ def _get_ds_records(self, exclude_field_schemas=True):\n                 field.pop('schema', None)\n         return ds_info.get('fields'), result.get('records')\n \n-\n     def test_load_csv(self):\n         csv_filepath = get_sample_filepath(\"sample.csv\")\n \n@@ -288,7 +277,6 @@ def test_load_csv(self):\n         assert fields == expected_fields\n         assert records == expected_records\n \n-\n     def test_load_table(self):\n         csv_filepath = get_sample_filepath(\"sample.csv\")\n \n@@ -319,7 +307,6 @@ def test_load_table(self):\n         assert fields == expected_fields\n         assert records == expected_records\n \n-\n     def test_load_csv_bad_ds_headers(self):\n         csv_filepath = get_sample_filepath(\"sample_with_bad_ds_headers.csv\")\n \n@@ -333,7 +320,6 @@ def test_load_csv_bad_ds_headers(self):\n \n         assert '\"_thisisnotallowed\" is not a valid field name' in str(le)\n \n-\n     def test_load_table_bad_ds_headers(self):\n         csv_filepath = get_sample_filepath(\"sample_with_bad_ds_headers.csv\")\n \n@@ -347,7 +333,6 @@ def test_load_table_bad_ds_headers(self):\n \n         assert '\"_thisisnotallowed\" is not a valid field name' in str(le)\n \n-\n     def test_load_csv_empty_lines(self):\n         csv_filepath = get_sample_filepath(\"sample_with_empty_lines.csv\")\n \n@@ -378,7 +363,6 @@ def test_load_csv_empty_lines(self):\n         assert fields == expected_fields\n         assert records == expected_records\n \n-\n     def test_load_table_empty_lines(self):\n         csv_filepath = get_sample_filepath(\"sample_with_empty_lines.csv\")\n \n@@ -409,7 +393,6 @@ def test_load_table_empty_lines(self):\n         assert fields == expected_fields\n         assert records == expected_records\n \n-\n     def test_load_csv_white_space(self):\n         csv_filepath = get_sample_filepath(\"sample_with_extra_white_space.csv\")\n \n@@ -440,7 +423,6 @@ def test_load_csv_white_space(self):\n         assert fields == expected_fields\n         assert records == expected_records\n \n-\n     def test_load_table_white_space(self):\n         csv_filepath = get_sample_filepath(\"sample_with_extra_white_space.csv\")\n "
                },
                {
                    "sha": "91f7488f433998905ca011739a092635fd196021",
                    "filename": "ckanext/canada/tests/test_experiment.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_experiment.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_experiment.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_experiment.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('experiment')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -40,4 +38,3 @@ def test_blank(self):\n         err = ve.value.error_dict\n         assert 'key' in err\n         assert 'reference_number' in err['key'][0]\n-"
                },
                {
                    "sha": "723086bbcd1582ce7b08649a0ffc7bb5fdf6c1b1",
                    "filename": "ckanext/canada/tests/test_grants.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_grants.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_grants.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_grants.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('grants')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -41,7 +39,6 @@ def test_blank(self):\n         assert 'key' in err\n         assert 'ref_number, amendment_number' in err['key'][0]\n \n-\n     def test_empty_string_instead_of_null(self):\n         record = dict(get_chromo('grants')['examples']['record'])\n         record['foreign_currency_type'] = ''"
                },
                {
                    "sha": "9553123c5ad5e232ac6d707b5c224a36fab62326",
                    "filename": "ckanext/canada/tests/test_hospitalityq.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_hospitalityq.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_hospitalityq.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_hospitalityq.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('hospitalityq')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -58,14 +56,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][1]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('hospitalityq-nil')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert("
                },
                {
                    "sha": "2b315abfc6a0b5f0ca9d0f4615bfc77e2e4a2b7f",
                    "filename": "ckanext/canada/tests/test_logic.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_logic.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_logic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_logic.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -44,4 +44,3 @@ def test_data_dictionary(self):\n         assert ds_info['fields'][0]['info']['notes_en'] == 'Example Description'\n         assert 'notes_fr' in ds_info['fields'][0]['info']\n         assert ds_info['fields'][0]['info']['notes_fr'] == 'Example Description FR'\n-"
                },
                {
                    "sha": "6f72d617ce079f48b2005cd273f97c83055cfecc",
                    "filename": "ckanext/canada/tests/test_make.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 22,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_make.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_make.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_make.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -77,7 +77,6 @@ def setup_method(self, method):\n         os.environ['PORTAL_STATIC_SMB_DIRECTORY'] = self.tmp_dir\n         os.environ['REGISTRY_CKAN_COMMAND'] = 'ckan'\n \n-\n     @classmethod\n     def teardown_method(self, method):\n         \"\"\"Method is called at class level after EACH test methods of the class are called.\n@@ -91,19 +90,16 @@ def teardown_method(self, method):\n \n         shutil.rmtree(self.tmp_dir)\n \n-\n     def _get_ds_records(self, type):\n         chromo = get_chromo(type)\n         result = self.action.datastore_search(resource_id=chromo['published_resource_id'])\n         return result.get('fields'), result.get('records')\n \n-\n     def _setup_ini(self, ini):\n         assert ini.startswith('/')\n         os.environ['REGISTRY_INI'] = ini\n         os.environ['PORTAL_INI'] = ini\n \n-\n     def _setup_pd(self, type, nil_type=None, extra_resource_ids=[]):\n         assert type\n \n@@ -133,7 +129,6 @@ def _setup_pd(self, type, nil_type=None, extra_resource_ids=[]):\n         for _id in extra_resource_ids:\n             Resource(id=_id)\n \n-\n     def test_enivonment_variables(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -156,7 +151,6 @@ def test_enivonment_variables(self):\n         assert 'PORTAL_STATIC_SMB_DIRECTORY is undefined' not in stdout\n         assert 'REGISTRY_CKAN_COMMAND is undefined' not in stdout\n \n-\n     def test_make_ati(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -181,7 +175,6 @@ def test_make_ati(self):\n         assert \"rebuild-ati] Error\" not in stdout\n         assert '%s 1' % self.org['name'] in stdout\n \n-\n     def test_make_briefingt(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -206,7 +199,6 @@ def test_make_briefingt(self):\n         assert \"rebuild-briefingt] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_qpnotes(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -231,7 +223,6 @@ def test_make_qpnotes(self):\n         assert \"rebuild-qpnotes] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_contracts(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -256,7 +247,6 @@ def test_make_contracts(self):\n         assert \"rebuild-contracts] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_contractsa(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -280,7 +270,6 @@ def test_make_contractsa(self):\n         assert \"Usage:\" not in stdout\n         assert \"rebuild-contractsa] Error\" not in stdout\n \n-\n     def test_make_consultations(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -306,7 +295,6 @@ def test_make_consultations(self):\n         assert \"Usage:\" not in stdout\n         assert \"rebuild-consultations] Error\" not in stdout\n \n-\n     def test_make_dac(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -330,7 +318,6 @@ def test_make_dac(self):\n         assert \"Usage:\" not in stdout\n         assert \"rebuild-dac] Error\" not in stdout\n \n-\n     def test_make_experiment(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -354,7 +341,6 @@ def test_make_experiment(self):\n         assert \"Usage:\" not in stdout\n         assert \"rebuild-experiment] Error\" not in stdout\n \n-\n     def test_make_grants(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -379,7 +365,6 @@ def test_make_grants(self):\n         assert \"rebuild-grants] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_hospitalityq(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -404,7 +389,6 @@ def test_make_hospitalityq(self):\n         assert \"rebuild-hospitalityq] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_travelq(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -429,7 +413,6 @@ def test_make_travelq(self):\n         assert \"rebuild-travelq] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_nap5(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -454,7 +437,6 @@ def test_make_nap5(self):\n         assert \"rebuild-nap5] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_reclassification(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -479,7 +461,6 @@ def test_make_reclassification(self):\n         assert \"rebuild-reclassification] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_service(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -633,7 +614,6 @@ def test_make_service(self):\n         assert expected_fields == published_fields\n         assert expected_record == published_record\n \n-\n     def test_make_travela(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -658,7 +638,6 @@ def test_make_travela(self):\n         assert \"rebuild-travela] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_wrongdoing(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)\n@@ -683,7 +662,6 @@ def test_make_wrongdoing(self):\n         assert \"rebuild-wrongdoing] Error\" not in stdout\n         assert 'import_data_csv' in stdout\n \n-\n     def test_make_adminaircraft(self):\n         assert self.ckan_ini\n         self._setup_ini(self.ckan_ini)"
                },
                {
                    "sha": "07ff7a9caf33c878872486d2d9dc471cf912ea66",
                    "filename": "ckanext/canada/tests/test_nap5.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_nap5.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_nap5.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_nap5.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('nap5')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -40,7 +38,6 @@ def test_blank(self):\n         err = ve.value.error_dict\n         assert 'key' in err, err\n \n-\n     def test_required(self):\n         record = dict(\n             get_chromo('nap5')['examples']['record'],"
                },
                {
                    "sha": "502e1f5bb1e67e9d30a541fb10bb4ef4b22c3a52",
                    "filename": "ckanext/canada/tests/test_pd.py",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 15,
                    "changes": 24,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_pd.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_pd.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_pd.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -13,30 +13,26 @@ class TestDollarRangeFacet(object):\n     def test_too_low(self):\n         assert dollar_range_facet('foo', [100, 500, 1000], 50) == {}\n \n-\n     def test_negative(self):\n         assert dollar_range_facet('foo', [100, 500, 1000], -500) == {}\n \n-\n     def test_top_bucket(self):\n         assert dollar_range_facet('foo', [100, 500, 1000], 5000) == {\n-            'foo_range': u'2',\n-            'foo_en': u'A: $1,000.00+',\n-            'foo_fr': u'A: 1\\xa0000,00\\xa0$ +'}\n-\n+            'foo_range': '2',\n+            'foo_en': 'A: $1,000.00+',\n+            'foo_fr': 'A: 1\\xa0000,00\\xa0$ +'}\n \n     def test_bucket_0_bottom_edge(self):\n         assert dollar_range_facet('foo', [100, 500, 1000], 100) == {\n-            'foo_range': u'0',\n-            'foo_en': u'C: $100.00 - $499.99',\n-            'foo_fr': u'C: 100,00\\xa0$ - 499,99\\xa0$'}\n-\n+            'foo_range': '0',\n+            'foo_en': 'C: $100.00 - $499.99',\n+            'foo_fr': 'C: 100,00\\xa0$ - 499,99\\xa0$'}\n \n     def test_bucket_1_top_edge(self):\n         assert dollar_range_facet('foo', [100, 500, 1000], 999.999) == {\n-           'foo_range': u'1',\n-            'foo_en': u'B: $500.00 - $999.99',\n-            'foo_fr': u'B: 500,00\\xa0$ - 999,99\\xa0$'}\n+            'foo_range': '1',\n+            'foo_en': 'B: $500.00 - $999.99',\n+            'foo_fr': 'B: 500,00\\xa0$ - 999,99\\xa0$'}\n \n \n class TestIndex(CanadaTestBase):\n@@ -58,7 +54,6 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def get_records(self):\n         rval = self.lc.action.datastore_search(\n             resource_id=self.resource_id,\n@@ -67,7 +62,6 @@ def get_records(self):\n         records = rval['records']\n         return records\n \n-\n     def test_max_text_length(self):\n         record = get_chromo(self.ds_type)['examples']['record']\n         record['summary_en'] = 'e' * 33000"
                },
                {
                    "sha": "7cff1077a393f1ee8c75555274bb44d9e74973ae",
                    "filename": "ckanext/canada/tests/test_prop.py",
                    "status": "modified",
                    "additions": 24,
                    "deletions": 44,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_prop.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_prop.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_prop.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -10,19 +10,20 @@\n \n from ckanapi import LocalCKAN, ValidationError, NotAuthorized\n \n+\n SIMPLE_SUGGESTION = {\n     'type': 'prop',\n     'title_translated': {\n-        'en': u'Simple Suggestion',\n-        'fr': u'Suggestion simple'\n+        'en': 'Simple Suggestion',\n+        'fr': 'Suggestion simple'\n     },\n     'notes_translated': {\n-        'en': u'Notes',\n-        'fr': u'Notes',\n+        'en': 'Notes',\n+        'fr': 'Notes',\n     },\n     'keywords': {\n-        'en': [u'key'],\n-        'fr': [u'clé'],\n+        'en': ['key'],\n+        'fr': ['clé'],\n     },\n     'reason': 'personal_interest',\n     'subject': ['persons'],\n@@ -32,41 +33,26 @@\n     'status': [],\n }\n \n-\n COMPLETE_SUGGESTION = dict(SIMPLE_SUGGESTION,\n-    status=[\n-        {\n-            'date': '2021-03-01',\n-            'reason': 'under_review',\n-            'comments': {\n-                'en': 'good idea',\n-                'fr': 'bon idée',\n-            },\n-        },\n-    ]\n-)\n-\n+                           status=[{\n+                            'date': '2021-03-01',\n+                            'reason': 'under_review',\n+                            'comments': {\n+                                'en': 'good idea',\n+                                'fr': 'bon idée'}}])\n \n UPDATED_SUGGESTION = dict(SIMPLE_SUGGESTION,\n-    status=[\n-        {\n-            'date': '2021-04-01',\n-            'reason': 'released',\n-            'comments': {\n-                'en': 'here',\n-                'fr': 'ici',\n-            },\n-        },\n-        {\n-            'date': '2021-03-01',\n-            'reason': 'under_review',\n-            'comments': {\n-                'en': 'good idea',\n-                'fr': 'bon idée',\n-            },\n-        },\n-    ]\n-)\n+                          status=[{\n+                            'date': '2021-04-01',\n+                            'reason': 'released',\n+                            'comments': {\n+                                'en': 'here',\n+                                'fr': 'ici'}},\n+                            {'date': '2021-03-01',\n+                             'reason': 'under_review',\n+                             'comments': {\n+                                 'en': 'good idea',\n+                                 'fr': 'bon idée'}}])\n \n \n class TestSuggestedDataset(CanadaTestBase):\n@@ -91,7 +77,6 @@ def setup_method(self, method):\n             {'name': sysadmin['name'],\n              'capacity': 'admin'}])\n \n-\n     def test_simple_suggestion(self):\n         \"System should be able to create suggested datasets\"\n         response = self.system_lc.action.package_create(\n@@ -100,7 +85,6 @@ def test_simple_suggestion(self):\n \n         assert 'status' not in response\n \n-\n     def test_normal_user_cant_create(self):\n         \"Member users cannot create suggested datasets\"\n         with pytest.raises(NotAuthorized) as e:\n@@ -111,7 +95,6 @@ def test_normal_user_cant_create(self):\n         assert 'not authorized to add dataset' in err or \\\n                'not authorized to create packages' in err\n \n-\n     def test_normal_user_cant_update(self):\n         \"Member users cannot update suggested datasets\"\n         response = self.system_lc.action.package_create(\n@@ -126,7 +109,6 @@ def test_normal_user_cant_update(self):\n         err = str(e.value)\n         assert 'not authorized to edit package' in err\n \n-\n     def test_editor_user_cant_create(self):\n         \"Editor users cannot create suggested datasets\"\n         with pytest.raises(ValidationError) as ve:\n@@ -137,7 +119,6 @@ def test_editor_user_cant_create(self):\n         for e in err:\n             assert [m for m in err[e] if 'Only sysadmin may set this value' in m]\n \n-\n     def test_editor_user_can_update(self):\n         \"Editors should be able to update suggested datasets\"\n         response = self.system_lc.action.package_create(\n@@ -151,7 +132,6 @@ def test_editor_user_can_update(self):\n \n         assert response['status'][0]['reason'] == 'under_review'\n \n-\n     def test_responses_ordered(self):\n         resp = self.system_lc.action.package_create(\n             owner_org=self.org['name'],"
                },
                {
                    "sha": "c413156cab5472319ba444095c9665b6a8f4df9a",
                    "filename": "ckanext/canada/tests/test_reclassification.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_reclassification.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_reclassification.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_reclassification.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('reclassification')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -58,14 +56,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][1]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('reclassification-nil')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert("
                },
                {
                    "sha": "b649e202f1b51d95c217a7bced885a9af9e4a4b4",
                    "filename": "ckanext/canada/tests/test_search.py",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 17,
                    "changes": 25,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_search.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_search.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_search.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -46,10 +46,10 @@ def setup_method(self, method):\n                 title_translated={\n                     'en': 'Test Dataset %s' % i,\n                     'fr': 'Test FR Dataset %s' % i},\n-                notes_translated = {\n+                notes_translated={\n                     'en': 'Test Notes %s' % i,\n                     'fr': 'Test FR Notes %s' % i},\n-                keywords = {\n+                keywords={\n                     'en': ['Test %s' % i, 'Keywords'],\n                     'fr': ['Test %s' % i, 'FR', 'Keywords']},\n                 ready_to_publish=str(i == 1 or i == 3).lower(),\n@@ -65,16 +65,15 @@ def setup_method(self, method):\n                 title_translated={\n                     'en': 'Test Dataset %s' % i,\n                     'fr': 'Test FR Dataset %s' % i},\n-                notes_translated = {\n+                notes_translated={\n                     'en': 'Test Notes %s' % i,\n                     'fr': 'Test FR Notes %s' % i},\n-                keywords = {\n+                keywords={\n                     'en': ['Test %s' % i, 'Keywords'],\n                     'fr': ['Test %s' % i, 'FR', 'Keywords']},\n                 ready_to_publish='true',\n                 portal_release_date='2000-01-01')\n \n-\n     def test_portal_release_date_facet(self):\n         response = self.system_lc.action.package_search(\n             q='*:*',\n@@ -85,7 +84,6 @@ def test_portal_release_date_facet(self):\n         assert 'counts' in response['facet_ranges']['portal_release_date']\n         assert 5 in response['facet_ranges']['portal_release_date']['counts']\n \n-\n     def test_sysadmin_package_search(self):\n         \"A sysadmin should have access to all packages.\"\n         response = self.system_lc.action.package_search(\n@@ -95,7 +93,6 @@ def test_sysadmin_package_search(self):\n         assert 'count' in response\n         assert response['count'] == 6\n \n-\n     def test_user_package_search(self):\n         \"A user with no access to Orgs should not see any packages.\"\n         response = self.user_lc.action.package_search(\n@@ -105,7 +102,6 @@ def test_user_package_search(self):\n         assert 'count' in response\n         assert response['count'] == 0\n \n-\n     def test_editor_package_search(self):\n         \"A user with editor access to an Org should see those organization's packages.\"\n         response = self.editor_lc.action.package_search(\n@@ -115,7 +111,6 @@ def test_editor_package_search(self):\n         assert 'count' in response\n         assert response['count'] == 4\n \n-\n     def test_editor_package_search_another_org(self):\n         \"A user with editor access to an Org should NOT be able to see another organization's packages.\"\n         response = self.editor_lc.action.package_search(\n@@ -148,10 +143,10 @@ def setup_method(self, method):\n                 title_translated={\n                     'en': 'Test Dataset %s' % i,\n                     'fr': 'Test FR Dataset %s' % i},\n-                notes_translated = {\n+                notes_translated={\n                     'en': 'Test Notes %s' % i,\n                     'fr': 'Test FR Notes %s' % i},\n-                keywords = {\n+                keywords={\n                     'en': ['Test %s' % i, 'Keywords'],\n                     'fr': ['Test %s' % i, 'FR', 'Keywords']},\n                 ready_to_publish='true',\n@@ -163,16 +158,15 @@ def setup_method(self, method):\n                 title_translated={\n                     'en': 'Test Dataset %s' % i,\n                     'fr': 'Test FR Dataset %s' % i},\n-                notes_translated = {\n+                notes_translated={\n                     'en': 'Test Notes %s' % i,\n                     'fr': 'Test FR Notes %s' % i},\n-                keywords = {\n+                keywords={\n                     'en': ['Test %s' % i, 'Keywords'],\n                     'fr': ['Test %s' % i, 'FR', 'Keywords']},\n                 ready_to_publish='true',\n                 portal_release_date='2000-01-01')\n \n-\n     @classmethod\n     def teardown_method(self, method):\n         \"\"\"Method is called at class level after EACH test methods of the class are called.\n@@ -181,7 +175,6 @@ def teardown_method(self, method):\n         if not p.plugin_loaded('canada_internal'):\n             p.load('canada_internal')\n \n-\n     def test_user_package_search(self):\n         response = self.lc.action.package_search(\n             q='*:*',\n@@ -190,7 +183,6 @@ def test_user_package_search(self):\n         assert 'count' in response\n         assert response['count'] == 6\n \n-\n     def test_user_package_search_by_owner_org(self):\n         response = self.lc.action.package_search(\n             fq='owner_org:%s' % self.org['id'],\n@@ -206,7 +198,6 @@ def test_user_package_search_by_owner_org(self):\n         assert 'count' in response\n         assert response['count'] == 2\n \n-\n     def test_user_package_search_by_keywords(self):\n         response = self.lc.action.package_search(\n             fq='keywords:(\"Test 0\" OR \"Test 1\")',"
                },
                {
                    "sha": "e1799bbbfd3f21bcaaff54dfac92679e34b77766",
                    "filename": "ckanext/canada/tests/test_service.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 20,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_service.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_service.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_service.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -25,7 +25,6 @@ def setup_method(self, method):\n         self.resource_id = rval['resources'][0]['id']\n         self.resource_cid = rval['resources'][1]['id']\n \n-\n     def test_example(self):\n         \"\"\"\n         Example data should load\n@@ -35,7 +34,6 @@ def test_example(self):\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_primary_key_commas(self):\n         \"\"\"\n         Commas in primary keys should error\n@@ -51,7 +49,6 @@ def test_primary_key_commas(self):\n         assert 'service_id' in err['records'][0]\n         assert err['records'][0]['service_id'] == ['Comma is not allowed in Service ID Number field']\n \n-\n     def test_foreign_constraint(self):\n         \"\"\"\n         Trying to delete a Service record when there are Standard records referencing it should raise an exception\n@@ -72,7 +69,6 @@ def test_foreign_constraint(self):\n         assert 'foreign_constraints' in err\n         assert 'Cannot delete records or table because of a reference to another table' in err['foreign_constraints'][0]\n \n-\n     def test_blank(self):\n         \"\"\"\n         Should raise a Database key error\n@@ -85,7 +81,6 @@ def test_blank(self):\n         assert 'key' in err\n         assert 'fiscal_yr, service_id' in err['key'][0]\n \n-\n     def test_required_fields(self):\n         \"\"\"\n         Excluding required fields should raise an exception\n@@ -124,7 +119,6 @@ def test_required_fields(self):\n         for required_field in expected_required_fields:\n             assert required_field in err['records'][0]\n \n-\n     def test_conditional_fields(self):\n         \"\"\"\n         Test conditionally required fields\n@@ -180,7 +174,6 @@ def test_conditional_fields(self):\n         assert 'special_remarks_en' in err['records'][0]\n         assert 'special_remarks_fr' in err['records'][0]\n \n-\n     def test_duolang_fields(self):\n         \"\"\"\n         Fields with both _en and _fr should require eachother\n@@ -236,7 +229,6 @@ def test_duolang_fields(self):\n         assert 'special_remarks_en' in err['records'][0]\n         assert 'service_uri_en' in err['records'][0]\n \n-\n     def test_choice_fields(self):\n         \"\"\"\n         Fields with choices should expect those values\n@@ -272,7 +264,6 @@ def test_choice_fields(self):\n         for expected_choice_field in expected_choice_fields:\n             assert expected_choice_field in err['records'][0]\n \n-\n     def test_max_chars(self):\n         \"\"\"\n         Over max character field values should raise an exception\n@@ -303,7 +294,6 @@ def test_max_chars(self):\n         for maxchar_field in expect_maxchar_fields:\n             assert maxchar_field in err['records'][0]\n \n-\n     def test_int_na_nd(self):\n         \"\"\"\n         Special ND, NA, or positive integer fields\n@@ -360,14 +350,12 @@ def setup_method(self, method):\n         self.resource_pid = rval['resources'][0]['id']\n         self.resource_id = rval['resources'][1]['id']\n \n-\n     def _make_parent_record(self):\n         record = get_chromo('service')['examples']['record'].copy()\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_pid,\n             records=[record])\n \n-\n     def test_example(self):\n         \"\"\"\n         Example data should load\n@@ -378,7 +366,6 @@ def test_example(self):\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_primary_key_commas(self):\n         \"\"\"\n         Commas in primary keys should error\n@@ -397,7 +384,6 @@ def test_primary_key_commas(self):\n         assert err['records'][0]['service_id'] == ['Comma is not allowed in Service ID Number field']\n         assert err['records'][0]['service_standard_id'] == ['Comma is not allowed in Service Standard ID field']\n \n-\n     def test_foreign_constraint(self):\n         \"\"\"\n         Trying to create a Standard record referencing a nonexistent Service record should raise an exception\n@@ -411,7 +397,6 @@ def test_foreign_constraint(self):\n         assert 'records' in err\n         assert 'violates foreign key constraint' in err['records'][0]\n \n-\n     def test_blank(self):\n         \"\"\"\n         Should raise a Database key error\n@@ -424,7 +409,6 @@ def test_blank(self):\n         assert 'key' in err\n         assert 'fiscal_yr, service_id, service_standard_id' in err['key'][0]\n \n-\n     def test_required_fields(self):\n         \"\"\"\n         Excluding required fields should raise an exception\n@@ -454,7 +438,6 @@ def test_required_fields(self):\n         for required_field in expected_required_fields:\n             assert required_field in err['records'][0]\n \n-\n     def test_duolang_fields(self):\n         \"\"\"\n         Fields with both _en and _fr should require eachother\n@@ -500,7 +483,6 @@ def test_duolang_fields(self):\n         assert 'comments_en' in err['records'][0]\n         assert 'performance_results_uri_en' in err['records'][0]\n \n-\n     def test_choice_fields(self):\n         \"\"\"\n         Fields with choices should expect those values\n@@ -529,7 +511,6 @@ def test_choice_fields(self):\n         for expected_choice_field in expected_choice_fields:\n             assert expected_choice_field in err['records'][0]\n \n-\n     def test_max_chars(self):\n         \"\"\"\n         Over max character field values should raise an exception\n@@ -561,7 +542,6 @@ def test_max_chars(self):\n         for maxchar_field in expect_maxchar_fields:\n             assert maxchar_field in err['records'][0]\n \n-\n     def test_integers(self):\n         \"\"\"\n         Range and positive integer validation"
                },
                {
                    "sha": "8344c862ba93382fd78aee76dc3c046af9f564e6",
                    "filename": "ckanext/canada/tests/test_travela.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 3,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_travela.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_travela.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_travela.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('travela')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -41,7 +39,6 @@ def test_blank(self):\n         assert 'key' in err\n         assert 'year' in err['key'][0]\n \n-\n     def test_year(self):\n         record = dict(\n             get_chromo('travela')['examples']['record'],"
                },
                {
                    "sha": "39af3649add7b242a96c9248acd5610e0d524bc6",
                    "filename": "ckanext/canada/tests/test_travelq.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_travelq.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_travelq.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_travelq.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('travelq')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert(\n@@ -58,14 +56,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][1]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('travelq-nil')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert("
                },
                {
                    "sha": "be4d46b15b63b710b1335666be740a5582cf54e0",
                    "filename": "ckanext/canada/tests/test_triggers.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 4,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_triggers.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_triggers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_triggers.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -31,7 +31,6 @@ def setup_method(self, method):\n         self.editor2_action = LocalCKAN(username=self.editor2['name']).action\n         self.sys_action = LocalCKAN().action\n \n-\n     def _setup_pd(self, type, nil_type=None):\n         assert type\n \n@@ -54,7 +53,6 @@ def _setup_pd(self, type, nil_type=None):\n \n         return rval['resources'][0]['id'], rval['resources'][1]['id'] if nil_type else None\n \n-\n     def test_update_record_modified_created_trigger(self):\n         \"\"\"\n         The update_record_modified_created_trigger has a lot of scenarios\n@@ -72,7 +70,7 @@ def test_update_record_modified_created_trigger(self):\n         \"\"\"\n         resource_id, nil_resource_id = self._setup_pd(type='ati', nil_type='ati-nil')\n \n-        #NOTE: we use datastore_search_sql to get nanosecond timestamps\n+        # NOTE: we use datastore_search_sql to get nanosecond timestamps\n \n         chromo = get_chromo('ati')\n \n@@ -195,7 +193,6 @@ def test_update_record_modified_created_trigger(self):\n         assert record['record_modified'] != initial_modified_time\n         assert record['record_modified'] == new_modified_time\n \n-\n     def test_money_type_rounding(self):\n         \"\"\"\n         Money datastore fields should be rounded to 2 decimal places."
                },
                {
                    "sha": "4a194aaf0b242b40245dfc24d11f8832c4b6bcdd",
                    "filename": "ckanext/canada/tests/test_trim_package.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_trim_package.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_trim_package.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_trim_package.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -23,15 +23,13 @@ def setup_method(self, method):\n         self.example_pkg['resources'] = resources\n         _trim_package(self.example_pkg)\n \n-\n     def test_trimmed_dataset(self):\n         for field in PACKAGE_TRIM_FIELDS:\n             assert field not in self.example_pkg\n         assert 'type' in self.example_pkg\n         assert 'name' in self.example_pkg and self.example_pkg['name'] is not None\n         assert 'state' in self.example_pkg\n \n-\n     def test_trimmed_resources(self):\n         for resource in self.example_pkg['resources']:\n             for field in RESOURCE_TRIM_FIELDS:"
                },
                {
                    "sha": "37413c2adfa720d18f7c2b82580977887f2bccbd",
                    "filename": "ckanext/canada/tests/test_validators.py",
                    "status": "modified",
                    "additions": 77,
                    "deletions": 118,
                    "changes": 195,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_validators.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_validators.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_validators.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -18,56 +18,47 @@\n \n class TestCanadaTags(object):\n     def test_simple(self):\n-        canada_tags(u'hello', {})\n-\n+        canada_tags('hello', {})\n \n     def test_too_short(self):\n         with pytest.raises(Invalid) as ie:\n-            canada_tags(u'h', {})\n+            canada_tags('h', {})\n         err = str(ie.value)\n         assert 'length is less than minimum' in err\n \n-\n     def test_too_long(self):\n         with pytest.raises(Invalid) as ie:\n-            canada_tags(u'z' * 141, {})\n+            canada_tags('z' * 141, {})\n         err = str(ie.value)\n         assert 'length is more than maximum' in err\n \n-\n     def test_barely_fits(self):\n-        canada_tags(u'z' * 140, {})\n-\n+        canada_tags('z' * 140, {})\n \n     def test_strip_whitespace(self):\n-        assert canada_tags(u'  hello world\\n ', {}) == u'hello world'\n-\n+        assert canada_tags('  hello world\\n ', {}) == 'hello world'\n \n     def test_consecutive_spaces(self):\n         with pytest.raises(Invalid) as ie:\n-            canada_tags( u'hello  world', {})\n+            canada_tags('hello  world', {})\n         err = str(ie.value)\n         assert 'may not contain consecutive spaces' in err\n \n-\n     def test_punctuation(self):\n-        canada_tags(u'yes we accept this ´‘’– —:;.!', {})\n-\n+        canada_tags('yes we accept this ´‘’– —:;.!', {})\n \n     def test_symbols(self):\n-        canada_tags(u'₩₮¬× this is fine too', {})\n-\n+        canada_tags('₩₮¬× this is fine too', {})\n \n     def test_control(self):\n         with pytest.raises(Invalid) as ie:\n-            canada_tags(u'hey\\bthere', {})\n+            canada_tags('hey\\bthere', {})\n         err = str(ie.value)\n         assert 'may not contain unprintable character' in err\n \n-\n     def test_separator(self):\n         with pytest.raises(Invalid) as ie:\n-            canada_tags(u'one line\\u2028two', {})\n+            canada_tags('one line\\u2028two', {})\n         err = str(ie.value)\n         assert 'may not contain separator charater' in err\n \n@@ -82,7 +73,7 @@ def setup_method(self, method):\n \n         self.sysadmin_user = Sysadmin()\n         self.normal_user = User()\n-        self.org = Organization(title_translated = {\n+        self.org = Organization(title_translated={\n                 'en': 'en org name',\n                 'fr': 'fr org name'})\n \n@@ -100,34 +91,32 @@ def setup_method(self, method):\n         self.incomplete_pkg = {\n             'type': 'dataset',\n             'collection': 'primary',\n-            'title_translated': {'en': u'A Novel By Tolstoy'},\n+            'title_translated': {'en': 'A Novel By Tolstoy'},\n             'license_id': 'ca-ogl-lgo',\n             'ready_to_publish': 'true',\n             'imso_approval': 'true',\n             'jurisdiction': 'federal',\n             'maintainer_email': 'not@all.example.com',\n             'restrictions': 'unrestricted',\n             'resources': [{\n-                'name_translated': {'en': u'Full text.', 'fr': u'Full text.'},\n-                'format': u'TXT',\n-                'url': u'http://www.annakarenina.com/download/',\n+                'name_translated': {'en': 'Full text.', 'fr': 'Full text.'},\n+                'format': 'TXT',\n+                'url': 'http://www.annakarenina.com/download/',\n                 'size': 42,\n                 'resource_type': 'dataset',\n                 'language': ['zxx'],\n             }],\n         }\n \n         self.complete_pkg = dict(self.incomplete_pkg,\n-            owner_org=self.org['name'],\n-            title_translated={\n-                'en': u'A Novel By Tolstoy', 'fr':u'Un novel par Tolstoy'},\n-            frequency=u'as_needed',\n-            notes_translated={'en': u'...', 'fr': u'...'},\n-            subject=[u'persons'],\n-            date_published=u'2013-01-01',\n-            keywords={'en': [u'book'], 'fr': [u'livre']},\n-            )\n-\n+                                 owner_org=self.org['name'],\n+                                 title_translated={\n+                                    'en': 'A Novel By Tolstoy', 'fr': 'Un novel par Tolstoy'},\n+                                 frequency='as_needed',\n+                                 notes_translated={'en': '...', 'fr': '...'},\n+                                 subject=['persons'],\n+                                 date_published='2013-01-01',\n+                                 keywords={'en': ['book'], 'fr': ['livre']})\n \n     def test_basic_package(self):\n         with pytest.raises(ValidationError) as ve:\n@@ -153,41 +142,38 @@ def test_basic_package(self):\n \n         resp = self.normal_action.package_create(\n             name='12345678-9abc-def0-1234-56789abcdef0', **self.complete_pkg)\n-        assert resp['title_translated']['fr'] == u'Un novel par Tolstoy'\n+        assert resp['title_translated']['fr'] == 'Un novel par Tolstoy'\n \n         resp = self.action.package_show(id=resp['id'])\n-        assert resp['title_translated']['fr'] == u'Un novel par Tolstoy'\n-\n+        assert resp['title_translated']['fr'] == 'Un novel par Tolstoy'\n \n     def test_keyword_validation(self):\n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**dict(\n                 self.complete_pkg,\n-                keywords={'en':['test'], 'fr':['not  ok']}))\n+                keywords={'en': ['test'], 'fr': ['not  ok']}))\n         err = ve.value.error_dict\n         assert 'keywords' in err\n         assert 'may not contain consecutive spaces' in err['keywords'][0]\n \n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**dict(\n                 self.complete_pkg,\n-                keywords={'en':['test'], 'fr':['one too short', 'q']}))\n+                keywords={'en': ['test'], 'fr': ['one too short', 'q']}))\n         err = ve.value.error_dict\n         assert 'keywords' in err\n         assert 'length is less than minimum' in err['keywords'][0]\n \n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**dict(\n                 self.complete_pkg,\n-                keywords={'en':['this is much too long' * 50], 'fr':['test']}))\n+                keywords={'en': ['this is much too long' * 50], 'fr': ['test']}))\n         err = ve.value.error_dict\n         assert 'keywords' in err\n         assert 'length is more than maximum' in err['keywords'][0]\n \n         self.normal_action.package_create(\n-            **dict(self.complete_pkg,\n-                keywords={'en':['these', 'ones', 'are', 'a-ok'], 'fr':['test']}))\n-\n+            **dict(self.complete_pkg, keywords={'en': ['these', 'ones', 'are', 'a-ok'], 'fr': ['test']}))\n \n     def test_custom_dataset_id(self):\n         my_uuid = '3056920043b943f1a1fb9e7974cbb997'\n@@ -216,7 +202,6 @@ def test_custom_dataset_id(self):\n         assert 'id' in err\n         assert 'Badly formed hexadecimal UUID string' in err['id'][0]\n \n-\n     def test_raw_required(self):\n         raw_pkg = dict(self.complete_pkg)\n         del raw_pkg['title_translated']\n@@ -233,20 +218,16 @@ def test_raw_required(self):\n             assert k in err\n             assert err[k] == expected[k]\n \n-\n     def test_tag_extras_bug(self):\n         resp = self.normal_action.package_create(\n             **self.complete_pkg)\n \n         resp = self.action.package_show(id=resp['id'])\n-        assert 'subject' not in [e['key'] for e in resp.get('extras',[])]\n-\n+        assert 'subject' not in [e['key'] for e in resp.get('extras', [])]\n \n     def test_keywords_with_apostrophe(self):\n         self.normal_action.package_create(\n-            **dict(self.complete_pkg, keywords=\n-                {'en': ['test'], 'fr': [\"emissions de l'automobile\"]}))\n-\n+            **dict(self.complete_pkg, keywords={'en': ['test'], 'fr': [\"emissions de l'automobile\"]}))\n \n     def test_invalid_resource_size(self):\n         with pytest.raises(ValidationError) as ve:\n@@ -259,23 +240,20 @@ def test_invalid_resource_size(self):\n         assert 'resources' in err\n         assert 'size' in err['resources'][0]\n \n-\n     def test_copy_org_name(self):\n         pkg = self.normal_action.package_create(**self.complete_pkg)\n \n         assert sorted(pkg['org_title_at_publication']) == ['en', 'fr']\n         assert pkg['org_title_at_publication']['en'] == 'en org name'\n         assert pkg['org_title_at_publication']['fr'] == 'fr org name'\n \n-\n     def test_dont_copy_org_name(self):\n         pkg = self.normal_action.package_create(**dict(\n-            self.complete_pkg, org_title_at_publication={'en':'a', 'fr':'b'}))\n+            self.complete_pkg, org_title_at_publication={'en': 'a', 'fr': 'b'}))\n \n         assert pkg['org_title_at_publication']['en'] == 'a'\n         assert pkg['org_title_at_publication']['fr'] == 'b'\n \n-\n     def test_license_fields(self):\n         pkg = self.normal_action.package_create(**self.complete_pkg)\n \n@@ -284,79 +262,71 @@ def test_license_fields(self):\n         # this one is generated in the bowels of CKAN's model_dictize\n         assert pkg['license_title'] == 'Open Government Licence - Canada'\n \n-\n     def test_portal_release_date(self):\n-        release_pkg = dict(self.complete_pkg,\n-            portal_release_date='2012-01-01')\n+        release_pkg = dict(self.complete_pkg, portal_release_date='2012-01-01')\n \n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**release_pkg)\n+\n         err = ve.value.error_dict\n         assert 'portal_release_date' in err\n         assert 'This key is read-only' in err['portal_release_date'][0]\n \n         self.sysadmin_action.package_create(**release_pkg)\n \n-\n     def test_spatial(self):\n         spatial_pkg = dict(self.complete_pkg,\n-            spatial='{\"type\": \"Polygon\", \"coordinates\": '\n-                '[[[-141.001333, 41.736231], [-141.001333, 82.514468], '\n-                '[-52.622540, 82.514468], [-52.622540, 41.736231], '\n-                '[-141.001333, 41.736231]]]}')\n+                           spatial='{\"type\": \"Polygon\", \"coordinates\": '\n+                                   '[[[-141.001333, 41.736231], [-141.001333, 82.514468], '\n+                                   '[-52.622540, 82.514468], [-52.622540, 41.736231], '\n+                                   '[-141.001333, 41.736231]]]}')\n         self.normal_action.package_create(**spatial_pkg)\n \n         bad_spatial_pkg = dict(self.complete_pkg,\n-            spatial='{\"type\": \"Line\", \"coordinates\": '\n-                '[[[-141.001333, 41.736231], [-141.001333, 82.514468], '\n-                '[-52.622540, 82.514468], [-52.622540, 41.736231], '\n-                '[-141.001333, 41.736231]]]}')\n+                               spatial='{\"type\": \"Line\", \"coordinates\": '\n+                                       '[[[-141.001333, 41.736231], [-141.001333, 82.514468], '\n+                                       '[-52.622540, 82.514468], [-52.622540, 41.736231], '\n+                                       '[-141.001333, 41.736231]]]}')\n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**bad_spatial_pkg)\n         err = ve.value.error_dict\n         assert 'spatial' in err\n         assert 'Invalid GeoJSON' in err['spatial'][0]\n \n-        bad_spatial_pkg2 = dict(self.complete_pkg,\n-            spatial='forty')\n+        bad_spatial_pkg2 = dict(self.complete_pkg, spatial='forty')\n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**bad_spatial_pkg2)\n         err = ve.value.error_dict\n         assert 'spatial' in err\n         assert 'Invalid GeoJSON' in err['spatial'][0]\n \n-        bad_spatial_pkg3 = dict(self.complete_pkg,\n-            spatial='{\"type\": \"Polygon\", \"coordinates\": ''}')\n+        bad_spatial_pkg3 = dict(self.complete_pkg, spatial='{\"type\": \"Polygon\", \"coordinates\": ''}')\n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**bad_spatial_pkg3)\n         err = ve.value.error_dict\n         assert 'spatial' in err\n         assert 'Invalid GeoJSON' in err['spatial'][0]\n \n-        bad_spatial_pkg4 = dict(self.complete_pkg,\n-            spatial='{\"type\": \"Polygon\", \"coordinates\": [1,2,3,4]}')\n+        bad_spatial_pkg4 = dict(self.complete_pkg, spatial='{\"type\": \"Polygon\", \"coordinates\": [1,2,3,4]}')\n         with pytest.raises(ValidationError) as ve:\n             self.normal_action.package_create(**bad_spatial_pkg4)\n         err = ve.value.error_dict\n         assert 'spatial' in err\n         assert 'Invalid GeoJSON' in err['spatial'][0]\n \n-\n     def test_dont_change_portal_release_date(self):\n         \"normal users should not be able to reset the portal release date\"\n         resp = self.sysadmin_action.package_create(\n             portal_release_date='2012-01-01',\n             **self.complete_pkg)\n \n         # silently ignore missing portal_release_date\n-        self.normal_action.package_update(id=resp['id'],\n-            **self.complete_pkg)\n+        self.normal_action.package_update(id=resp['id'], **self.complete_pkg)\n \n         resp2 = self.normal_action.package_show(id=resp['id'])\n \n         assert resp['portal_release_date'] == resp2.get('portal_release_date')\n \n-\n     def test_resource_view(self):\n         \"creating a resource view should default `title` and `title_fr` fields\"\n         resource_view_data = dict(\n@@ -379,15 +349,14 @@ def test_resource_view(self):\n         assert resp['title'] == 'Test Resource View'\n         assert resp['title_fr'] == 'Test Resource View FR'\n \n-\n     def test_validation_schema(self):\n         \"creating a resource with a URL schema should empty the schema\"\n         pkg = self.sysadmin_action.package_create(**self.complete_pkg)\n \n         resource_data = {\n-            'name_translated': {'en': u'Full text.', 'fr': u'Full text.'},\n-            'format': u'TXT',\n-            'url': u'http://www.annakarenina.com/download/',\n+            'name_translated': {'en': 'Full text.', 'fr': 'Full text.'},\n+            'format': 'TXT',\n+            'url': 'http://www.annakarenina.com/download/',\n             'size': 42,\n             'resource_type': 'dataset',\n             'language': ['zxx'],\n@@ -396,14 +365,12 @@ def test_validation_schema(self):\n         }\n \n         resource = self.sysadmin_action.resource_create(**resource_data)\n-        assert 'schema' not in resource or resource['schema'] == None\n+        assert 'schema' not in resource or resource['schema'] is None\n \n-        resource_data = dict(resource_data,\n-                            schema='{\"fields\":[\"this is bad JSON for Schema\"]}')\n+        resource_data = dict(resource_data, schema='{\"fields\":[\"this is bad JSON for Schema\"]}')\n \n         resource = self.sysadmin_action.resource_create(**resource_data)\n-        assert 'schema' not in resource or resource['schema'] == None\n-\n+        assert 'schema' not in resource or resource['schema'] is None\n \n     def test_guess_resource_format(self):\n         \"\"\"\n@@ -413,9 +380,9 @@ def test_guess_resource_format(self):\n \n         # creating a resource WITH a format should use the supplied format\n         resource_data = {\n-            'name_translated': {'en': u'Full text.', 'fr': u'Full text.'},\n-            'url': u'http://www.annakarenina.com/download/image.jpeg',\n-            'format': u'TXT',\n+            'name_translated': {'en': 'Full text.', 'fr': 'Full text.'},\n+            'url': 'http://www.annakarenina.com/download/image.jpeg',\n+            'format': 'TXT',\n             'size': 42,\n             'resource_type': 'dataset',\n             'language': ['en', 'fr'],\n@@ -429,8 +396,8 @@ def test_guess_resource_format(self):\n \n         # creating a resource WITHOUT a format should guess the format\n         resource_data = {\n-            'name_translated': {'en': u'Full text.', 'fr': u'Full text.'},\n-            'url': u'http://www.annakarenina.com/download/image.jpeg',\n+            'name_translated': {'en': 'Full text.', 'fr': 'Full text.'},\n+            'url': 'http://www.annakarenina.com/download/image.jpeg',\n             'size': 42,\n             'resource_type': 'dataset',\n             'language': ['en', 'fr'],\n@@ -444,46 +411,45 @@ def test_guess_resource_format(self):\n \n         # updating a url should re-guess the format\n         resource_data['id'] = res_dict['id']\n-        resource_data['url'] = u'http://www.annakarenina.com/download/image.png'\n+        resource_data['url'] = 'http://www.annakarenina.com/download/image.png'\n \n         res_dict = self.sysadmin_action.resource_patch(**resource_data)\n \n         assert 'format' in res_dict\n         assert res_dict['format'] == 'PNG'\n \n         # updating a format without changing the url should use the supplied format\n-        resource_data['format'] = u'HTML'\n+        resource_data['format'] = 'HTML'\n \n         res_dict = self.sysadmin_action.resource_patch(**resource_data)\n \n         assert 'format' in res_dict\n         assert res_dict['format'] == 'HTML'\n \n         # failed mimetype guessing should raise a validation error\n-        resource_data['url'] = u'thisisabadformat.blublub'\n+        resource_data['url'] = 'thisisabadformat.blublub'\n \n         res_dict = self.sysadmin_action.resource_patch(**resource_data)\n \n-        #TODO: once guess format is fully functional, use raises test and remove this one\n+        # TODO: once guess format is fully functional, use raises test and remove this one\n         assert 'format' in res_dict\n         assert res_dict['format'] == 'unknown' or res_dict['format'] == 'Unknown'\n \n-        #TODO: once guess format is fully functional, use this test\n+        # TODO: once guess format is fully functional, use this test\n         # with pytest.raises(ValidationError) as ve:\n         #     self.sysadmin_action.resource_patch(**resource_data)\n         # err = ve.value.error_dict\n         # assert 'format' in err\n         # assert 'Could not determine a resource format' in err['format'][0]\n \n-\n     def test_validation_options(self):\n         \"creating a resource with lax validation options should remove them\"\n         pkg = self.sysadmin_action.package_create(**self.complete_pkg)\n \n         resource_data = {\n-            'name_translated': {'en': u'Full text.', 'fr': u'Full text.'},\n-            'format': u'TXT',\n-            'url': u'http://www.annakarenina.com/download/',\n+            'name_translated': {'en': 'Full text.', 'fr': 'Full text.'},\n+            'format': 'TXT',\n+            'url': 'http://www.annakarenina.com/download/',\n             'size': 42,\n             'resource_type': 'dataset',\n             'language': ['zxx'],\n@@ -512,7 +478,7 @@ def test_validation_options(self):\n         }\n \n         resource = self.sysadmin_action.resource_create(**resource_data)\n-        assert 'validation_options' not in resource or resource['validation_options'] == None\n+        assert 'validation_options' not in resource or resource['validation_options'] is None\n \n \n class TestSysadminUpdate(CanadaTestBase):\n@@ -525,7 +491,7 @@ def setup_method(self, method):\n \n         self.sysadmin_user = Sysadmin()\n         self.normal_user = User()\n-        self.org= Organization()\n+        self.org = Organization()\n \n         self.sysadmin_action = LocalCKAN(\n             username=self.sysadmin_user['name']).action\n@@ -545,50 +511,43 @@ def setup_method(self, method):\n             id=self.org['name'],\n             role='editor')\n \n-\n     def test_user_cannot_update_sysadmin(self):\n         \"\"\"non sysadmins shoud not be able to update\"\"\"\n         with pytest.raises(NotAuthorized) as err:\n-            self.normal_action.user_patch(id=self.sysadmin_user.get('id'),\n-                                          sysadmin=False)\n+            self.normal_action.user_patch(id=self.sysadmin_user.get('id'), sysadmin=False)\n+\n         assert err\n         assert 'not authorized to edit user' in str(err)\n \n-\n     def test_cannot_update_self_sysadmin(self):\n         \"\"\"cannot change your own sysadmin privs\"\"\"\n         with pytest.raises(ValidationError) as err:\n-            self.sysadmin_action.user_patch(id=self.sysadmin_user.get('id'),\n-                                            sysadmin=False)\n+            self.sysadmin_action.user_patch(id=self.sysadmin_user.get('id'), sysadmin=False)\n+\n         err = err.value.error_dict\n         assert 'sysadmin' in err\n         assert 'Cannot modify your own sysadmin privileges' in err['sysadmin'][0]\n \n-\n     def test_cannot_update_system_sysadmin(self):\n         \"\"\"cannot change system user privs\"\"\"\n         site_id = config.get('ckan.site_id')\n         with pytest.raises(ValidationError) as err:\n-            self.sysadmin_action.user_patch(id=site_id,\n-                                            sysadmin=False)\n+            self.sysadmin_action.user_patch(id=site_id, sysadmin=False)\n+\n         err = err.value.error_dict\n         assert 'sysadmin' in err\n         assert 'Cannot modify sysadmin privileges for system user' in err['sysadmin'][0]\n \n-\n     def test_update_sysadmin_users(self):\n         \"\"\"tbs member w/ email sysadmin should be able to update\"\"\"\n-        user_dict = self.sysadmin_action.user_patch(id=self.normal_user.get('id'),\n-                                                    sysadmin=True)\n+        user_dict = self.sysadmin_action.user_patch(id=self.normal_user.get('id'), sysadmin=True)\n         # user dict does not contain sysadmin, so go get db object\n         user_obj = model.User.get(user_dict.get('id'))\n-        assert user_obj.sysadmin == True\n-\n+        assert user_obj.sysadmin is True\n \n     def test_update_system_sysadmin(self):\n         \"\"\"system user should be able to update\"\"\"\n-        user_dict = self.action.user_patch(id=self.normal_user.get('id'),\n-                                           sysadmin=True)\n+        user_dict = self.action.user_patch(id=self.normal_user.get('id'), sysadmin=True)\n         # user dict does not contain sysadmin, so go get db object\n         user_obj = model.User.get(user_dict.get('id'))\n-        assert user_obj.sysadmin == True\n+        assert user_obj.sysadmin is True"
                },
                {
                    "sha": "b8be2aed910e268b2e4ef9bc8be79f83b31aa439",
                    "filename": "ckanext/canada/tests/test_webforms.py",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 61,
                    "changes": 71,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_webforms.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_webforms.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_webforms.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -4,14 +4,14 @@\n import mock\n from urllib.parse import urlparse\n from io import BytesIO\n-from openpyxl.workbook import Workbook\n+from openpyxl.workbook import Workbook  # noqa: F401\n from ckan.plugins.toolkit import h\n from ckanapi import (\n     LocalCKAN,\n     ValidationError\n )\n \n-from ckan.tests.helpers import CKANResponse\n+from ckan.tests.helpers import CKANResponse  # noqa: F401\n \n from ckan.tests.factories import SysadminWithToken as Sysadmin, APIToken\n from ckanext.canada.tests.factories import (\n@@ -33,7 +33,6 @@\n \n \n def _get_relative_offset_from_response(response):\n-    # type: (CKANResponse) -> str\n     assert response.headers\n     assert 'Location' in response.headers\n     return urlparse(response.headers['Location'])._replace(scheme='', netloc='').geturl()\n@@ -56,7 +55,6 @@ def setup_method(self, method):\n         self.dataset_id = 'f3e4adb9-6e32-4cb4-bf68-1eab9d1288f4'\n         self.resource_id = '8b29e2c6-8a12-4537-bf97-fe4e5f0a14c1'\n \n-\n     @mock.patch.object(h, 'flash_success', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_new_dataset_required_fields(self, app):\n@@ -87,11 +85,10 @@ def test_new_dataset_required_fields(self, app):\n \n         offset = _get_relative_offset_from_response(response)\n         response = app.get(offset, extra_environ=self.extra_environ_tester,\n-                        environ_overrides=self.environ_overrides_tester)\n+                           environ_overrides=self.environ_overrides_tester)\n \n         assert 'Resource added' in response.body\n \n-\n     def test_new_dataset_missing_fields(self, app):\n         offset = h.url_for('dataset.new')\n         response = app.get(offset, extra_environ=self.extra_environ_tester,\n@@ -155,9 +152,7 @@ def test_new_dataset_missing_fields(self, app):\n         assert 'Title (French):' in response.body\n         assert 'Resource Type:' in response.body\n \n-\n     def _filled_dataset_form(self):\n-        # type: () -> dict\n         return {\n             'id': self.dataset_id,\n             'owner_org': self.org['id'],\n@@ -168,7 +163,7 @@ def _filled_dataset_form(self):\n             'notes_translated-fr': 'french description',\n             'subject': 'arts_music_literature',\n             'keywords-en': 'english keywords',\n-            'keywords-fr' : 'french keywords',\n+            'keywords-fr': 'french keywords',\n             'date_published': '2000-01-01',\n             'ready_to_publish': 'false',\n             'frequency': 'as_needed',\n@@ -180,9 +175,7 @@ def _filled_dataset_form(self):\n             '_ckan_phase': '1',\n         }\n \n-\n     def _filled_resource_form(self):\n-        # type: () -> dict\n         return {\n             'id': '',\n             'package_id': self.dataset_id,\n@@ -209,7 +202,6 @@ def setup_method(self, method):\n         self.environ_overrides_tester = {'REMOTE_USER': str(u\"\")}\n         self.org = Organization()\n \n-\n     @mock.patch.object(h, 'flash_notice', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_new_user_required_fields(self, app):\n@@ -239,7 +231,6 @@ def test_new_user_required_fields(self, app):\n         assert 'Account Created' in response.body\n         assert 'Thank you for creating your account for the Open Government registry' in response.body\n \n-\n     def test_new_user_missing_fields(self, app):\n         offset = h.url_for('user.register')\n         response = app.get(offset, extra_environ=self.extra_environ_tester,\n@@ -264,9 +255,7 @@ def test_new_user_missing_fields(self, app):\n         assert 'Email: Missing value' in response.body\n         assert 'Password: Please enter both passwords' in response.body\n \n-\n     def _filled_new_user_form(self, csrf_token=None):\n-        # type: (str|None) -> dict\n         return {\n             'name': 'newusername',\n             'fullname': 'New User',\n@@ -313,19 +302,15 @@ def setup_method(self, method):\n         self.example_record = self.chromo['examples']['record']\n         self.example_nil_record = self.nil_chromo['examples']['record']\n \n-\n     def _lc_init_pd(self, org=None):\n-        # type: (Organization|None) -> None\n         lc = LocalCKAN()\n         org = org if org else self.org\n         try:\n             lc.action.recombinant_create(dataset_type=self.pd_type, owner_org=org['name'])\n         except ValidationError:\n             pass\n \n-\n     def _lc_create_pd_record(self, org=None, is_nil=False, return_field='name'):\n-        # type: (Organization|None, bool, str) -> str\n         lc = LocalCKAN()\n         org = org if org else self.org\n         self._lc_init_pd(org=org)\n@@ -335,24 +320,19 @@ def _lc_create_pd_record(self, org=None, is_nil=False, return_field='name'):\n         lc.action.datastore_upsert(resource_id=resource_id, records=[record])\n         return rval['resources'][1][return_field] if is_nil else rval['resources'][0][return_field]\n \n-\n     def _lc_pd_template(self, org=None):\n-        # type: (Organization|None) -> Workbook\n         org = org if org else self.org\n         self._lc_create_pd_record(org=org)\n         self._lc_create_pd_record(org=org, is_nil=True)\n         return excel_template(dataset_type=self.pd_type, org=org)\n \n-\n     def _lc_get_pd_package_id(self, org=None):\n-        # type: (Organization|None) -> str\n         lc = LocalCKAN()\n         org = org if org else self.org\n         self._lc_init_pd(org=org)\n         rval = lc.action.recombinant_show(dataset_type=self.pd_type, owner_org=org['name'])\n         return rval['id']\n \n-\n     def test_member_cannot_init_pd(self, app):\n         offset = h.url_for('recombinant.preview_table',\n                            resource_name=self.pd_type,\n@@ -375,7 +355,6 @@ def test_member_cannot_init_pd(self, app):\n         assert 'not authorized to add dataset' in response.body or \\\n                'not authorized to create packages' in response.body\n \n-\n     def test_editor_can_init_pd(self, app):\n         offset = h.url_for('recombinant.preview_table',\n                            resource_name=self.pd_type,\n@@ -400,7 +379,6 @@ def test_editor_can_init_pd(self, app):\n \n         assert 'Create and update multiple records' in response.body\n \n-\n     def test_admin_can_init_pd(self, app):\n         offset = h.url_for('recombinant.preview_table',\n                            resource_name=self.pd_type,\n@@ -425,7 +403,6 @@ def test_admin_can_init_pd(self, app):\n \n         assert 'Create and update multiple records' in response.body\n \n-\n     def test_ati_email_notice(self, app):\n         no_ati_email_org = Organization(ati_email=None)\n         self._lc_init_pd(org=no_ati_email_org)\n@@ -448,7 +425,6 @@ def test_ati_email_notice(self, app):\n         assert 'Your organization does not have an Access to Information email on file' not in response.body\n         assert 'Informal Requests for ATI Records Previously Released are being sent to' in response.body\n \n-\n     def test_member_cannot_create_single_record(self, app):\n         self._lc_init_pd()\n \n@@ -471,7 +447,6 @@ def test_member_cannot_create_single_record(self, app):\n \n         assert 'Unauthorized to create a resource for this package' in response.body\n \n-\n     @mock.patch.object(h, 'flash_notice', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_editor_can_create_single_record(self, app):\n@@ -494,7 +469,6 @@ def test_editor_can_create_single_record(self, app):\n \n         assert 'Record Created' in response.body\n \n-\n     @mock.patch.object(h, 'flash_notice', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_admin_can_create_single_record(self, app):\n@@ -517,7 +491,6 @@ def test_admin_can_create_single_record(self, app):\n \n         assert 'Record Created' in response.body\n \n-\n     def test_member_cannot_update_single_record(self, app):\n         self._lc_create_pd_record()\n \n@@ -543,7 +516,6 @@ def test_member_cannot_update_single_record(self, app):\n \n         assert 'Unauthorized to update dataset' in response.body\n \n-\n     @mock.patch.object(h, 'flash_notice', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_editor_can_update_single_record(self, app):\n@@ -569,7 +541,6 @@ def test_editor_can_update_single_record(self, app):\n \n         assert 'Record {} Updated'.format(self.example_record['request_number']) in response.body\n \n-\n     @mock.patch.object(h, 'flash_notice', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_admin_can_update_single_record(self, app):\n@@ -595,9 +566,7 @@ def test_admin_can_update_single_record(self, app):\n \n         assert 'Record {} Updated'.format(self.example_record['request_number']) in response.body\n \n-\n     def _filled_create_single_record_form(self):\n-        # type: () -> dict\n         return {\n             'year': self.example_record['year'],\n             'month': self.example_record['month'],\n@@ -609,7 +578,6 @@ def _filled_create_single_record_form(self):\n             'save': ''\n         }\n \n-\n     def test_download_template(self, app):\n         self._lc_create_pd_record()\n         self._lc_create_pd_record(is_nil=True)\n@@ -641,7 +609,6 @@ def test_download_template(self, app):\n             if f.get('import_template_include', True):  # only check fields included in template\n                 assert f['datastore_id'] in template_file[1][2]  # check each field id is in column names\n \n-\n     def test_selected_download_template(self, app):\n         resource_name = self._lc_create_pd_record()\n         nil_resource_name = self._lc_create_pd_record(is_nil=True)\n@@ -706,7 +673,6 @@ def test_selected_download_template(self, app):\n             assert int(v[1]) == int(self.example_nil_record['month'])\n             break\n \n-\n     def test_member_cannot_upload_records(self, app):\n         template = self._lc_pd_template()\n         template_file = self._populate_good_template_file(template)\n@@ -724,15 +690,14 @@ def test_member_cannot_upload_records(self, app):\n                                 id=self._lc_get_pd_package_id())\n         dataset_form = self._filled_upload_form(filestream=template_file)\n         response = app.post(form_action,\n-                     data=dataset_form,\n-                     extra_environ=self.extra_environ_member,\n-                     environ_overrides=self.environ_overrides_member,\n-                     status=403,\n-                     follow_redirects=True)\n+                            data=dataset_form,\n+                            extra_environ=self.extra_environ_member,\n+                            environ_overrides=self.environ_overrides_member,\n+                            status=403,\n+                            follow_redirects=True)\n \n         assert 'not authorized to update resource' in response.body\n \n-\n     @mock.patch.object(h, 'flash_success', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_editor_can_upload_records(self, app):\n@@ -758,8 +723,6 @@ def test_editor_can_upload_records(self, app):\n \n         assert 'Your file was successfully uploaded into the central system.' in response.body\n \n-\n-\n     @mock.patch.object(h, 'flash_success', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_admin_can_upload_records(self, app):\n@@ -785,7 +748,6 @@ def test_admin_can_upload_records(self, app):\n \n         assert 'Your file was successfully uploaded into the central system.' in response.body\n \n-\n     def test_member_cannot_validate_upload(self, app):\n         template = self._lc_pd_template()\n         good_template_file = self._populate_good_template_file(template)\n@@ -810,7 +772,6 @@ def test_member_cannot_validate_upload(self, app):\n \n         assert 'not authorized to update resource' in response.body\n \n-\n     @mock.patch.object(h, 'flash_error', flashes.mock_flash)\n     @mock.patch.object(h, 'flash_success', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n@@ -851,7 +812,6 @@ def test_editor_can_validate_upload(self, app):\n \n         assert 'No errors found.' in response.body\n \n-\n     @mock.patch.object(h, 'flash_error', flashes.mock_flash)\n     @mock.patch.object(h, 'flash_success', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n@@ -892,9 +852,7 @@ def test_admin_can_validate_upload(self, app):\n \n         assert 'No errors found.' in response.body\n \n-\n     def _populate_good_template_file(self, template):\n-        # type: (Workbook) -> BytesIO\n         for i, v in enumerate(['2023',\n                                '7',\n                                'B-8019',\n@@ -914,9 +872,7 @@ def _populate_good_template_file(self, template):\n         good_template_file.seek(0, 0)\n         return good_template_file\n \n-\n     def _populate_bad_template_file(self, template):\n-        # type: (Workbook) -> BytesIO\n         for i, v in enumerate(['1978',\n                                '20',\n                                'B-8019',\n@@ -936,16 +892,13 @@ def _populate_bad_template_file(self, template):\n         bad_template_file.seek(0, 0)\n         return bad_template_file\n \n-\n     def _filled_upload_form(self, filestream, action='upload'):\n-        # type: (BytesIO, str) -> dict\n         return {\n-            'xls_update': (filestream, u'{}_en_{}.xlsx'.format(self.pd_type, self.org['name'])),\n+            'xls_update': (filestream, '{}_en_{}.xlsx'.format(self.pd_type, self.org['name'])),\n             'resource_name': self.pd_type,\n             action: ''\n         }\n \n-\n     def test_member_cannot_delete_records(self, app):\n         records_to_delete = self._prepare_records_to_delete()\n \n@@ -981,7 +934,6 @@ def test_member_cannot_delete_records(self, app):\n \n         assert 'not authorized to update resource' in response.body\n \n-\n     @mock.patch.object(h, 'flash_success', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_editor_can_delete_records(self, app):\n@@ -1016,7 +968,6 @@ def test_editor_can_delete_records(self, app):\n \n         assert '2 deleted.' in response.body\n \n-\n     @mock.patch.object(h, 'flash_success', flashes.mock_flash)\n     @mock.patch.object(h, 'get_flashed_messages', flashes.mock_get_flashed_messages)\n     def test_admin_can_delete_records(self, app):\n@@ -1051,9 +1002,7 @@ def test_admin_can_delete_records(self, app):\n \n         assert '2 deleted.' in response.body\n \n-\n     def _prepare_records_to_delete(self):\n-        # type: () -> dict\n         original_request_number = self.example_record['request_number']\n         self.example_record['request_number'] = 'B-8019'\n         self._lc_create_pd_record()"
                },
                {
                    "sha": "1da056c085e9deaa130fc18ddf01b2337379088b",
                    "filename": "ckanext/canada/tests/test_wrongdoing.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_wrongdoing.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_wrongdoing.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_wrongdoing.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -24,14 +24,12 @@ def setup_method(self, method):\n \n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_example(self):\n         record = get_chromo('wrongdoing')['examples']['record']\n         self.lc.action.datastore_upsert(\n             resource_id=self.resource_id,\n             records=[record])\n \n-\n     def test_blank(self):\n         with pytest.raises(ValidationError) as ve:\n             self.lc.action.datastore_upsert("
                },
                {
                    "sha": "65a2eac2cc9a30d17bb7f064136fc68ee3b34e0e",
                    "filename": "ckanext/canada/tests/test_xls_upload.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 8,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_xls_upload.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftests%2Ftest_xls_upload.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftests%2Ftest_xls_upload.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -16,7 +16,7 @@\n from ckanext.recombinant.tables import get_chromo, get_geno\n from ckanext.recombinant.views import _process_upload_file\n from ckanext.recombinant.write_excel import excel_template, append_data\n-from ckanext.recombinant.errors import  BadExcelData\n+from ckanext.recombinant.errors import BadExcelData\n \n \n # testing the upload of PD template files\n@@ -45,7 +45,6 @@ def setup_method(self, method):\n         self.pkg_id = rval['id']\n         self.resource_id = rval['resources'][0]['id']\n \n-\n     def test_upload_empty(self):\n         current_user = model.User.get(self.editor['name'])\n         with mock.patch('ckan.lib.helpers.current_user', current_user):\n@@ -62,7 +61,6 @@ def test_upload_empty(self):\n                     True)\n             assert e.value.message == 'The template uploaded is empty'\n \n-\n     def test_upload_example(self):\n         current_user = model.User.get(self.editor['name'])\n         with mock.patch('ckan.lib.helpers.current_user', current_user):\n@@ -98,9 +96,9 @@ def test_upload_example(self):\n            \"findings_conclusions\": [\"b\"],\n            \"recommendations_corrective_measures_en\": \"Recommendations and Corrective Measures\",\n            \"recommendations_corrective_measures_fr\": \"Recommandations et mesures correctives\",\n-           #\"record_created\": \"2024-07-10T19:57:55\",\n-           #\"record_modified\": \"2024-07-10T19:57:55\",\n-           #\"user_modified\": \"registry\"\n+           # \"record_created\": \"2024-07-10T19:57:55\",\n+           # \"record_modified\": \"2024-07-10T19:57:55\",\n+           # \"user_modified\": \"registry\"\n         }]\n         for record in records:\n             record.pop('record_created', None)\n@@ -109,7 +107,6 @@ def test_upload_example(self):\n \n         assert records == expected_records\n \n-\n     def test_upload_example_dry_run(self):\n         current_user = model.User.get(self.editor['name'])\n         with mock.patch('ckan.lib.helpers.current_user', current_user):\n@@ -133,7 +130,6 @@ def test_upload_example_dry_run(self):\n         records = result.get('records')\n         assert records == []\n \n-\n     def test_upload_wrong_type(self):\n         flask.g.user = self.editor['name']\n         wb = excel_template('travela', self.org)"
                },
                {
                    "sha": "3895896bb248e0e6f04db66ab5c54b74423e4a73",
                    "filename": "ckanext/canada/triggers.py",
                    "status": "modified",
                    "additions": 380,
                    "deletions": 361,
                    "changes": 741,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftriggers.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Ftriggers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Ftriggers.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -9,308 +9,323 @@ def update_triggers():\n     # *_error functions return NULL or ARRAY[[field_name, error_message]]\n     # required_error\n     lc.action.datastore_function_create(\n-        name=u'required_error',\n+        name='required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'text'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF (value = '') IS NOT FALSE THEN\n-                    RETURN ARRAY[[field_name, 'This field must not be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'text'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF (value = '') IS NOT FALSE THEN\n+            RETURN ARRAY[[field_name,\n+            'This field must not be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'required_error',\n+        name='required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'_text'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL OR value = '{}' THEN\n-                    return ARRAY[[field_name, 'This field must not be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': '_text'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL OR value = '{}' THEN\n+            return ARRAY[[field_name,\n+            'This field must not be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'required_error',\n+        name='required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'date'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field must not be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'date'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field must not be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'required_error',\n+        name='required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'numeric'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field must not be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'numeric'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field must not be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'required_error',\n+        name='required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'int4'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field must not be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'int4'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field must not be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'required_error',\n+        name='required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'money'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field must not be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'money'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field must not be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'required_error',\n+        name='required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'boolean'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field must not be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'boolean'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field must not be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     # END required_error\n     # conditional_required_error\n     lc.action.datastore_function_create(\n-        name=u'conditional_required_error',\n+        name='conditional_required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'text'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF (value = '') IS NOT FALSE THEN\n-                    RETURN ARRAY[[field_name, 'This field is required due to a response in a different field.']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'text'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF (value = '') IS NOT FALSE THEN\n+            RETURN ARRAY[[field_name,\n+            'This field is required due to a response in a different field.']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'conditional_required_error',\n+        name='conditional_required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'_text'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL OR value = '{}' THEN\n-                    RETURN ARRAY[[field_name, 'This field is required due to a response in a different field.']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': '_text'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL OR value = '{}' THEN\n+            RETURN ARRAY[[field_name,\n+            'This field is required due to a response in a different field.']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'conditional_required_error',\n+        name='conditional_required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'date'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field is required due to a response in a different field.']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'date'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field is required due to a response in a different field.']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'conditional_required_error',\n+        name='conditional_required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'numeric'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field is required due to a response in a different field.']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'numeric'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field is required due to a response in a different field.']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'conditional_required_error',\n+        name='conditional_required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'int4'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field is required due to a response in a different field.']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'int4'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field is required due to a response in a different field.']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'conditional_required_error',\n+        name='conditional_required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'money'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field is required due to a response in a different field.']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'money'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field is required due to a response in a different field.']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'conditional_required_error',\n+        name='conditional_required_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'boolean'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field is required due to a response in a different field.']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'boolean'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NULL THEN\n+            RETURN ARRAY[[field_name,\n+            'This field is required due to a response in a different field.']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     # END conditional_required_error\n     lc.action.datastore_function_create(\n-        name=u'choice_error',\n+        name='choice_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'text'},\n-            {u'argname': u'choices', u'argtype': u'_text'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n+            {'argname': 'value', 'argtype': 'text'},\n+            {'argname': 'choices', 'argtype': '_text'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n         definition='''\n-            BEGIN\n-                IF value IS NOT NULL AND value <> '' AND NOT (value = ANY (choices)) THEN\n-                    -- \\\\t is used when converting errors to string\n-                    RETURN ARRAY[[field_name, 'Invalid choice: {}\\uF8FF\"'\n-                        || replace(value, E'\\\\t', ' ') || '\"']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+    BEGIN\n+        IF value IS NOT NULL AND value <> '' AND NOT (value = ANY (choices)) THEN\n+            -- \\\\t is used when converting errors to string\n+            RETURN ARRAY[[field_name, 'Invalid choice: {}\\uF8FF\"'\n+                || replace(value, E'\\\\t', ' ') || '\"']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'max_char_error',\n+        name='max_char_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'text'},\n-            {u'argname': u'max_chars', u'argtype': u'numeric'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NOT NULL AND value <> '' AND LENGTH(value) > max_chars THEN\n-                    RETURN ARRAY[[field_name, 'This field has a maximum length of {} characters.\\uF8FF' || max_chars]];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'text'},\n+            {'argname': 'max_chars', 'argtype': 'numeric'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NOT NULL AND value <> '' AND LENGTH(value) > max_chars THEN\n+            RETURN ARRAY[[field_name,\n+            'This field has a maximum length of {} characters.\\uF8FF' || max_chars]];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n     lc.action.datastore_function_create(\n-        name=u'trim_lead_trailing',\n+        name='trim_lead_trailing',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'text'}],\n-        rettype=u'text',\n-        definition=u'''\n-            DECLARE\n-                value_trimmed text := trim(both E'\\t\\n\\x0b\\x0c\\r ' from value);\n-            BEGIN\n-                RETURN value_trimmed;\n-            END;\n+            {'argname': 'value', 'argtype': 'text'}],\n+        rettype='text',\n+        definition='''\n+    DECLARE\n+        value_trimmed text := trim(both E'\\t\\n\\x0b\\x0c\\r ' from value);\n+    BEGIN\n+        RETURN value_trimmed;\n+    END;\n         ''')\n     # return record with .clean (normalized value) and .error\n     # (NULL or ARRAY[[field_name, error_message]])\n     lc.action.datastore_function_create(\n-        name=u'choices_clean_error',\n+        name='choices_clean_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'_text'},\n-            {u'argname': u'choices', u'argtype': u'_text'},\n-            {u'argname': u'field_name', u'argtype': u'text'},\n-            {u'argname': u'clean', u'argtype': u'_text', u'argmode': u'out'},\n-            {u'argname': u'error', u'argtype': u'_text', u'argmode': u'out'}],\n-        rettype=u'record',\n+            {'argname': 'value', 'argtype': '_text'},\n+            {'argname': 'choices', 'argtype': '_text'},\n+            {'argname': 'field_name', 'argtype': 'text'},\n+            {'argname': 'clean', 'argtype': '_text', 'argmode': 'out'},\n+            {'argname': 'error', 'argtype': '_text', 'argmode': 'out'}],\n+        rettype='record',\n         definition='''\n-            DECLARE\n-                bad_choices text := array_to_string(ARRAY(\n-                    SELECT c FROM(SELECT unnest(value) as c) u\n-                    WHERE NOT c = ANY(choices)), ',');\n-            BEGIN\n-                IF bad_choices <> '' THEN\n-                    -- \\\\t is used when converting errors to string\n-                    error := ARRAY[[field_name, 'Invalid choice: {}\\uF8FF\"'\n-                        || replace(bad_choices, E'\\\\t', ' ') || '\"']];\n-                END IF;\n-                clean := ARRAY(\n-                    SELECT c FROM(SELECT unnest(choices) as c) u\n-                    WHERE c = ANY(value));\n-            END;\n+    DECLARE\n+        bad_choices text := array_to_string(ARRAY(\n+            SELECT c FROM(SELECT unnest(value) as c) u\n+            WHERE NOT c = ANY(choices)), ',');\n+    BEGIN\n+        IF bad_choices <> '' THEN\n+            -- \\\\t is used when converting errors to string\n+            error := ARRAY[[field_name, 'Invalid choice: {}\\uF8FF\"'\n+                || replace(bad_choices, E'\\\\t', ' ') || '\"']];\n+        END IF;\n+        clean := ARRAY(\n+            SELECT c FROM(SELECT unnest(choices) as c) u\n+            WHERE c = ANY(value));\n+    END;\n         ''')\n \n     lc.action.datastore_function_create(\n-        name=u'must_be_empty_error',\n+        name='must_be_empty_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'numeric'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF value IS NOT NULL THEN\n-                    RETURN ARRAY[[field_name, 'This field must be empty']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'numeric'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF value IS NOT NULL THEN\n+            RETURN ARRAY[[field_name, 'This field must be empty']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n \n     # A: When sysadmin passes '*' as user_modified, replace with '' and\n@@ -322,168 +337,172 @@ def update_triggers():\n     # C: Otherwise update created+modified dates and replace user with\n     #    current user\n     lc.action.datastore_function_create(\n-        name=u'update_record_modified_created_trigger',\n+        name='update_record_modified_created_trigger',\n         or_replace=True,\n-        rettype=u'trigger',\n-        definition=u'''\n-            DECLARE\n-                req_record_modified timestamp := NEW.record_modified;\n-                req_user_modified text := NEW.user_modified;\n-                username text NOT NULL := (SELECT username\n-                    FROM datastore_user LIMIT 1);\n-                sysadmin boolean NOT NULL := (SELECT sysadmin\n-                    FROM datastore_user LIMIT 1);\n-            BEGIN\n-                IF NOT sysadmin THEN\n-                    NEW.record_created := NULL;\n-                    req_record_modified := NULL;\n-                    req_user_modified := NULL;\n-                END IF;\n-                IF TG_OP = 'INSERT' THEN\n-                    IF req_user_modified = '*' THEN\n-                        NEW.user_modified := '';\n-                        NEW.record_created := NULL;\n-                        NEW.record_modified := NULL;\n-                        RETURN NEW;\n-                    END IF;\n-                    IF NEW.record_created IS NULL THEN\n-                        NEW.record_created := now() at time zone 'utc';\n-                    END IF;\n-                    IF NEW.record_modified IS NULL THEN\n-                        NEW.record_modified := NEW.record_created;\n-                    END IF;\n-                    IF (req_user_modified = '') IS NOT FALSE THEN\n-                        NEW.user_modified := username;\n-                    END IF;\n-                    RETURN NEW;\n-                END IF;\n+        rettype='trigger',\n+        definition='''\n+    DECLARE\n+        req_record_modified timestamp := NEW.record_modified;\n+        req_user_modified text := NEW.user_modified;\n+        username text NOT NULL := (SELECT username\n+            FROM datastore_user LIMIT 1);\n+        sysadmin boolean NOT NULL := (SELECT sysadmin\n+            FROM datastore_user LIMIT 1);\n+    BEGIN\n+        IF NOT sysadmin THEN\n+            NEW.record_created := NULL;\n+            req_record_modified := NULL;\n+            req_user_modified := NULL;\n+        END IF;\n+        IF TG_OP = 'INSERT' THEN\n+            IF req_user_modified = '*' THEN\n+                NEW.user_modified := '';\n+                NEW.record_created := NULL;\n+                NEW.record_modified := NULL;\n+                RETURN NEW;\n+            END IF;\n+            IF NEW.record_created IS NULL THEN\n+                NEW.record_created := now() at time zone 'utc';\n+            END IF;\n+            IF NEW.record_modified IS NULL THEN\n+                NEW.record_modified := NEW.record_created;\n+            END IF;\n+            IF (req_user_modified = '') IS NOT FALSE THEN\n+                NEW.user_modified := username;\n+            END IF;\n+            RETURN NEW;\n+        END IF;\n \n-                IF req_user_modified = '*' THEN\n-                    NEW.user_modified := '';\n-                    NEW.record_created := NULL;\n-                    NEW.record_modified := NULL;\n-                    IF OLD = NEW THEN\n-                        RETURN NULL;\n-                    END IF;\n-                    RETURN NEW;\n-                END IF;\n+        IF req_user_modified = '*' THEN\n+            NEW.user_modified := '';\n+            NEW.record_created := NULL;\n+            NEW.record_modified := NULL;\n+            IF OLD = NEW THEN\n+                RETURN NULL;\n+            END IF;\n+            RETURN NEW;\n+        END IF;\n \n-                IF NEW.record_created IS NULL THEN\n-                    NEW.record_created := OLD.record_created;\n-                END IF;\n-                IF NEW.record_modified IS NULL THEN\n-                    NEW.record_modified := OLD.record_modified;\n-                END IF;\n-                IF (req_user_modified = '') IS NOT FALSE THEN\n-                    NEW.user_modified := OLD.user_modified;\n-                END IF;\n-                IF OLD = NEW THEN\n-                    RETURN NULL;\n-                END IF;\n-                IF req_record_modified IS NULL THEN\n-                    NEW.record_modified := now() at time zone 'utc';\n-                ELSE\n-                    NEW.record_modified := req_record_modified;\n-                END IF;\n-                IF (req_user_modified = '') IS NOT FALSE THEN\n-                    NEW.user_modified := username;\n-                ELSE\n-                    NEW.user_modified := req_user_modified;\n-                END IF;\n-                RETURN NEW;\n-            END;\n+        IF NEW.record_created IS NULL THEN\n+            NEW.record_created := OLD.record_created;\n+        END IF;\n+        IF NEW.record_modified IS NULL THEN\n+            NEW.record_modified := OLD.record_modified;\n+        END IF;\n+        IF (req_user_modified = '') IS NOT FALSE THEN\n+            NEW.user_modified := OLD.user_modified;\n+        END IF;\n+        IF OLD = NEW THEN\n+            RETURN NULL;\n+        END IF;\n+        IF req_record_modified IS NULL THEN\n+            NEW.record_modified := now() at time zone 'utc';\n+        ELSE\n+            NEW.record_modified := req_record_modified;\n+        END IF;\n+        IF (req_user_modified = '') IS NOT FALSE THEN\n+            NEW.user_modified := username;\n+        ELSE\n+            NEW.user_modified := req_user_modified;\n+        END IF;\n+        RETURN NEW;\n+    END;\n             ''')\n \n     lc.action.datastore_function_create(\n-        name=u'protect_user_votes_trigger',\n+        name='protect_user_votes_trigger',\n         or_replace=True,\n-        rettype=u'trigger',\n-        definition=u'''\n-            DECLARE\n-                req_user_votes int := NEW.user_votes;\n-                sysadmin boolean NOT NULL := (SELECT sysadmin\n-                    FROM datastore_user LIMIT 1);\n-            BEGIN\n-                IF NOT sysadmin THEN\n-                    req_user_votes := NULL;\n-                END IF;\n+        rettype='trigger',\n+        definition='''\n+    DECLARE\n+        req_user_votes int := NEW.user_votes;\n+        sysadmin boolean NOT NULL := (SELECT sysadmin\n+            FROM datastore_user LIMIT 1);\n+    BEGIN\n+        IF NOT sysadmin THEN\n+            req_user_votes := NULL;\n+        END IF;\n \n-                IF req_user_votes IS NULL AND TG_OP = 'UPDATE' THEN\n-                    NEW.user_votes := OLD.user_votes;\n-                ELSE\n-                    NEW.user_votes = req_user_votes;\n-                END IF;\n+        IF req_user_votes IS NULL AND TG_OP = 'UPDATE' THEN\n+            NEW.user_votes := OLD.user_votes;\n+        ELSE\n+            NEW.user_votes = req_user_votes;\n+        END IF;\n \n-                IF NEW.user_votes IS NULL THEN\n-                    NEW.user_votes := 0;\n-                END IF;\n-                RETURN NEW;\n-            END;\n+        IF NEW.user_votes IS NULL THEN\n+            NEW.user_votes := 0;\n+        END IF;\n+        RETURN NEW;\n+    END;\n             ''')\n \n     lc.action.datastore_function_create(\n-        name=u'truthy_to_yn',\n+        name='truthy_to_yn',\n         or_replace=True,\n-        arguments=[{u'argname': u'value', u'argtype': u'text'}],\n-        rettype=u'text',\n-        definition=u'''\n-            DECLARE\n-                truthy boolean := value ~*\n-                    '[[:<:]](true|t|vrai|v|1|yes|y|oui|o)[[:>:]]';\n-                falsy boolean := value ~*\n-                    '[[:<:]](false|f|faux|0|no|n|non)[[:>:]]';\n-            BEGIN\n-                IF truthy AND NOT falsy THEN\n-                    RETURN 'Y';\n-                ELSIF falsy AND NOT truthy THEN\n-                    RETURN 'N';\n-                ELSE\n-                    RETURN NULL;\n-                END IF;\n-            END;\n+        arguments=[{'argname': 'value', 'argtype': 'text'}],\n+        rettype='text',\n+        definition='''\n+    DECLARE\n+        truthy boolean := value ~*\n+            '[[:<:]](true|t|vrai|v|1|yes|y|oui|o)[[:>:]]';\n+        falsy boolean := value ~*\n+            '[[:<:]](false|f|faux|0|no|n|non)[[:>:]]';\n+    BEGIN\n+        IF truthy AND NOT falsy THEN\n+            RETURN 'Y';\n+        ELSIF falsy AND NOT truthy THEN\n+            RETURN 'N';\n+        ELSE\n+            RETURN NULL;\n+        END IF;\n+    END;\n             ''')\n \n     lc.action.datastore_function_create(\n-        name=u'int_na_nd_error',\n+        name='int_na_nd_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value', u'argtype': u'text'},\n-            {u'argname': u'field_name', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            DECLARE\n-                value text := value;\n-            BEGIN\n-                IF value ~ '^-?[0-9]+$' THEN\n-                    IF value::int < 0 THEN\n-                        RETURN ARRAY[[field_name, 'This value must not be negative']];\n-                    END IF;\n-                ELSE\n-                    IF value != 'NA' AND value != 'ND' THEN\n-                        RETURN ARRAY[[field_name, 'This field must be either a number, \"NA\", or \"ND\"']];\n-                    END IF;\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value', 'argtype': 'text'},\n+            {'argname': 'field_name', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    DECLARE\n+        value text := value;\n+    BEGIN\n+        IF value ~ '^-?[0-9]+$' THEN\n+            IF value::int < 0 THEN\n+                RETURN ARRAY[[field_name,\n+                'This value must not be negative']];\n+            END IF;\n+        ELSE\n+            IF value != 'NA' AND value != 'ND' THEN\n+                RETURN ARRAY[[field_name,\n+                'This field must be either a number, \"NA\", or \"ND\"']];\n+            END IF;\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')\n \n     lc.action.datastore_function_create(\n-        name=u'both_languages_error',\n+        name='both_languages_error',\n         or_replace=True,\n         arguments=[\n-            {u'argname': u'value_en', u'argtype': u'text'},\n-            {u'argname': u'field_name_en', u'argtype': u'text'},\n-            {u'argname': u'value_fr', u'argtype': u'text'},\n-            {u'argname': u'field_name_fr', u'argtype': u'text'}],\n-        rettype=u'_text',\n-        definition=u'''\n-            BEGIN\n-                IF (value_en = '') IS NOT FALSE AND NOT((value_fr = '') IS NOT FALSE) THEN\n-                  RETURN ARRAY[[field_name_en, 'This text must be provided in both languages']];\n-                END IF;\n-                IF (value_fr = '') IS NOT FALSE AND NOT((value_en = '') IS NOT FALSE) THEN\n-                  RETURN ARRAY[[field_name_fr, 'This text must be provided in both languages']];\n-                END IF;\n-                RETURN NULL;\n-            END;\n+            {'argname': 'value_en', 'argtype': 'text'},\n+            {'argname': 'field_name_en', 'argtype': 'text'},\n+            {'argname': 'value_fr', 'argtype': 'text'},\n+            {'argname': 'field_name_fr', 'argtype': 'text'}],\n+        rettype='_text',\n+        definition='''\n+    BEGIN\n+        IF (value_en = '') IS NOT FALSE AND NOT((value_fr = '') IS NOT FALSE) THEN\n+            RETURN ARRAY[[field_name_en,\n+            'This text must be provided in both languages']];\n+        END IF;\n+        IF (value_fr = '') IS NOT FALSE AND NOT((value_en = '') IS NOT FALSE) THEN\n+            RETURN ARRAY[[field_name_fr,\n+            'This text must be provided in both languages']];\n+        END IF;\n+        RETURN NULL;\n+    END;\n         ''')"
                },
                {
                    "sha": "af5de413ba4e5c1564c0bc896e41fca61241fa3c",
                    "filename": "ckanext/canada/urlsafe.py",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 28,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/b40473c7fdbde84396daddefd2473e16455539b0/ckanext%2Fcanada%2Furlsafe.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/b40473c7fdbde84396daddefd2473e16455539b0/ckanext%2Fcanada%2Furlsafe.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Furlsafe.py?ref=b40473c7fdbde84396daddefd2473e16455539b0",
                    "patch": "@@ -1,28 +0,0 @@\n-# -*- coding: utf-8 -*-\n-\n-import codecs\n-import re\n-\n-def url_part_escape(orig):\n-    \"\"\"\n-    simple encoding for url-parts where all non-alphanumerics are\n-    wrapped in e.g. _xxyyzz_ blocks w/hex UTF-8 xx, yy, zz values\n-\n-    used for safely including arbitrary unicode as part of a url path\n-    all returned characters will be in [a-zA-Z0-9_-]\n-    \"\"\"\n-    return '_'.join(\n-        codecs.encode(s.encode('utf-8'), 'hex').decode('ascii') if i % 2 else s\n-        for i, s in enumerate(\n-            re.split(u'([^-a-zA-Z0-9]+)', orig)\n-        )\n-    )\n-\n-def url_part_unescape(urlpart):\n-    \"\"\"\n-    reverse url_part_escape\n-    \"\"\"\n-    return ''.join(\n-        codecs.decode(s, 'hex').decode('utf-8') if i % 2 else s\n-        for i, s in enumerate(urlpart.split('_'))\n-    )"
                },
                {
                    "sha": "62d23aeea0e53b0df632e3b7a237f4577daeb682",
                    "filename": "ckanext/canada/validators.py",
                    "status": "modified",
                    "additions": 169,
                    "deletions": 80,
                    "changes": 249,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fvalidators.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fvalidators.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fvalidators.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,11 +1,22 @@\n # -*- coding: utf-8 -*-\n+from typing import Any, cast\n+from ckan.types import Context, FlattenKey, FlattenDataDict, FlattenErrorDict\n \n import re\n import unicodedata\n \n from six import text_type\n \n-from ckan.plugins.toolkit import _, get_action, ValidationError, ObjectNotFound, config\n+from ckan.plugins.toolkit import (\n+    _,\n+    get_action,\n+    ValidationError,\n+    ObjectNotFound,\n+    config,\n+    get_validator,\n+    Invalid,\n+    missing\n+)\n from ckan.lib.navl.validators import StopOnError\n from ckan.authz import is_sysadmin\n from ckan import model\n@@ -18,9 +29,7 @@\n from datetime import datetime\n \n from ckan.lib.helpers import date_str_to_datetime\n-from ckantoolkit import get_validator, Invalid, missing\n from ckanext.fluent.validators import fluent_text_output, LANG_SUFFIX\n-from ckan.logic import ValidationError\n from ckanext.security.resource_upload_validator import (\n     validate_upload_type, validate_upload_presence\n )\n@@ -32,7 +41,10 @@\n MAX_TAG_LENGTH = 140  # because twitter\n \n \n-def protect_portal_release_date(key, data, errors, context):\n+def protect_portal_release_date(key: FlattenKey,\n+                                data: FlattenDataDict,\n+                                errors: FlattenErrorDict,\n+                                context: Context):\n     \"\"\"\n     Ensure the portal_release_date is not changed by an unauthorized user.\n     \"\"\"\n@@ -57,19 +69,21 @@ def protect_portal_release_date(key, data, errors, context):\n         return\n \n     errors[key].append(\"Cannot change value of key from '%s' to '%s'. \"\n-        'This key is read-only' % (original, value))\n+                       'This key is read-only' % (original, value))\n \n     raise StopOnError\n \n \n-def user_read_only(key, data, errors, context):\n+def user_read_only(key: FlattenKey,\n+                   data: FlattenDataDict,\n+                   errors: FlattenErrorDict,\n+                   context: Context):\n     # sysadmins are free to change fields as they like\n     if is_sysadmin(context['user']) and data[key] is not missing:\n         return\n \n     assert len(key) == 1, 'only package fields supported user_read_only (not %r)' % key\n \n-    original = ''\n     package = context.get('package')\n     if not package and data[key] is not missing:\n         errors[key].append(\"Only sysadmin may set this value\")\n@@ -81,26 +95,29 @@ def user_read_only(key, data, errors, context):\n         data[key] = package.extras.get(key[0], '')\n \n \n-def user_read_only_json(key, data, errors, context):\n+def user_read_only_json(key: FlattenKey,\n+                        data: FlattenDataDict,\n+                        errors: FlattenErrorDict,\n+                        context: Context):\n     # sysadmins are free to change fields as they like\n     if is_sysadmin(context['user']) and data[key] is not missing:\n         return\n \n     assert len(key) == 1, 'only package fields supported user_read_only (not %r)' % key\n \n-    original = ''\n     package = context.get('package')\n     if not package and data[key] is not missing:\n         errors[key].append(\"Only sysadmin may set this value\")\n         raise StopOnError\n \n     if hasattr(package, key[0]):\n         data[key] = json.loads(getattr(package, key[0]))\n-    else:\n-        data[key] = json.loads(package.extras.get(key[0], 'None'))\n+    elif package and hasattr(package, 'extras'):\n+        # type_ignore_reason: checking attribute\n+        data[key] = json.loads(package.extras.get(key[0], 'null'))\n \n \n-def canada_tags(value, context):\n+def canada_tags(value: Any, context: Context):\n     \"\"\"\n     Accept\n     - unicode graphical (printable) characters\n@@ -115,32 +132,32 @@ def canada_tags(value, context):\n     value = value.strip()\n     if len(value) < MIN_TAG_LENGTH:\n         raise Invalid(\n-            _(u'Tag \"%s\" length is less than minimum %s')\n+            _('Tag \"%s\" length is less than minimum %s')\n             % (value, MIN_TAG_LENGTH))\n     if len(value) > MAX_TAG_LENGTH:\n         raise Invalid(\n-            _(u'Tag \"%s\" length is more than maximum %i')\n+            _('Tag \"%s\" length is more than maximum %i')\n             % (value, MAX_TAG_LENGTH))\n-    if u'  ' in value:\n+    if '  ' in value:\n         raise Invalid(\n-            _(u'Tag \"%s\" may not contain consecutive spaces') % (value,))\n+            _('Tag \"%s\" may not contain consecutive spaces') % (value,))\n \n-    caution = re.sub(r'[\\w ]*', u'', value)\n+    caution = re.sub(r'[\\w ]*', '', value)\n     for ch in caution:\n         category = unicodedata.category(ch)\n         if category.startswith('C'):\n             raise Invalid(\n-                _(u'Tag \"%s\" may not contain unprintable character U+%04x')\n+                _('Tag \"%s\" may not contain unprintable character U+%04x')\n                 % (value, ord(ch)))\n         if category.startswith('Z'):\n             raise Invalid(\n-                _(u'Tag \"%s\" may not contain separator charater U+%04x')\n+                _('Tag \"%s\" may not contain separator charater U+%04x')\n                 % (value, ord(ch)))\n \n     return value\n \n \n-def canada_validate_generate_uuid(value):\n+def canada_validate_generate_uuid(value: Any):\n     \"\"\"\n     Accept UUID-shaped values or generate a uuid for this\n     dataset early so that it may be copied into the name field.\n@@ -152,13 +169,14 @@ def canada_validate_generate_uuid(value):\n     except ValueError:\n         raise Invalid(_(\"Badly formed hexadecimal UUID string\"))\n \n-#pattern from https://html.spec.whatwg.org/#e-mail-state-(type=email)\n-email_pattern = re.compile(r\"^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9]\"\\\n-                           \"(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9]\"\\\n-                           \"(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\")\n \n+# pattern from https://html.spec.whatwg.org/#e-mail-state-(type=email)\n+email_pattern = re.compile(r\"^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9]\"\n+                           r\"(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9]\"\n+                           r\"(?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\")\n \n-def email_validator(value):\n+\n+def email_validator(value: Any):\n     if value:\n         try:\n             if not email_pattern.match(value):\n@@ -168,7 +186,7 @@ def email_validator(value):\n     return value\n \n \n-def geojson_validator(value):\n+def geojson_validator(value: Any):\n     if value:\n         try:\n             # accept decoded geojson too\n@@ -184,18 +202,23 @@ def geojson_validator(value):\n         return json.dumps(value)\n     return value\n \n-def canada_copy_from_org_name(key, data, errors, context):\n+\n+def canada_copy_from_org_name(key: FlattenKey,\n+                              data: FlattenDataDict,\n+                              errors: FlattenErrorDict,\n+                              context: Context):\n     \"\"\"\n     When org name at publication not provided, copy from owner_org\n     \"\"\"\n     value = data[key]\n-    if json.loads(value) not in ({}, {'en':'', 'fr':''}):\n+    if json.loads(value) not in ({}, {'en': '', 'fr': ''}):\n         return\n     org_id = data[('owner_org',)]\n     if not org_id:\n         return\n     try:\n-        org = get_action('organization_show')(dict(context), {'id': org_id})\n+        org = get_action('organization_show')(cast(Context, dict(context)),\n+                                              {'id': org_id})\n     except ObjectNotFound:\n         return\n \n@@ -205,7 +228,10 @@ def canada_copy_from_org_name(key, data, errors, context):\n     })\n \n \n-def canada_maintainer_email_default(key, data, errors, context):\n+def canada_maintainer_email_default(key: FlattenKey,\n+                                    data: FlattenDataDict,\n+                                    errors: FlattenErrorDict,\n+                                    context: Context):\n     \"\"\"\n     Set to open-ouvert@tbs-sct.gc.ca if not given and no contact form given\n     \"\"\"\n@@ -215,7 +241,10 @@ def canada_maintainer_email_default(key, data, errors, context):\n         data[key] = 'open-ouvert@tbs-sct.gc.ca'\n \n \n-def canada_sort_prop_status(key, data, errors, context):\n+def canada_sort_prop_status(key: FlattenKey,\n+                            data: FlattenDataDict,\n+                            errors: FlattenErrorDict,\n+                            context: Context):\n     \"\"\"\n     sort the status composite values by date in ascending order\n     \"\"\"\n@@ -242,17 +271,24 @@ def canada_sort_prop_status(key, data, errors, context):\n         data[('status', newmap[f[1]]) + f[2:]] = move[f]\n \n \n-def no_future_date(key, data, errors, context):\n+def no_future_date(key: FlattenKey,\n+                   data: FlattenDataDict,\n+                   errors: FlattenErrorDict,\n+                   context: Context):\n     ready = data.get(('ready_to_publish',))\n     if not ready or ready == 'false':\n         return\n     value = data.get(key)\n     if value and value > datetime.today():\n-        raise Invalid(_(\"Date may not be in the future when this record is marked ready to publish\"))\n+        raise Invalid(_(\"Date may not be in the future when \"\n+                        \"this record is marked ready to publish\"))\n     return value\n \n \n-def canada_org_title_translated_save(key, data, errors, context):\n+def canada_org_title_translated_save(key: FlattenKey,\n+                                     data: FlattenDataDict,\n+                                     errors: FlattenErrorDict,\n+                                     context: Context):\n     \"\"\"Saves a piped string into the core title field.\n     E.g. \"<English Title> | <French Title>\"\n \n@@ -271,9 +307,13 @@ def canada_org_title_translated_save(key, data, errors, context):\n         raise StopOnError\n \n \n-def canada_org_title_translated_output(key, data, errors, context):\n+def canada_org_title_translated_output(key: FlattenKey,\n+                                       data: FlattenDataDict,\n+                                       errors: FlattenErrorDict,\n+                                       context: Context):\n     \"\"\"\n-    Return a value for the title field in organization schema using a multilingual dict in the form EN | FR.\n+    Return a value for the title field in organization\n+    schema using a multilingual dict in the form EN | FR.\n     \"\"\"\n     data[key] = fluent_text_output(data[key])\n \n@@ -284,9 +324,13 @@ def canada_org_title_translated_output(key, data, errors, context):\n         data[new_key] = data[key]['en'] + ' | ' + data[key]['fr']\n \n \n-def protect_reporting_requirements(key, data, errors, context):\n+def protect_reporting_requirements(key: FlattenKey,\n+                                   data: FlattenDataDict,\n+                                   errors: FlattenErrorDict,\n+                                   context: Context):\n     \"\"\"\n-    Ensure the reporting_requirements field is not changed by an unauthorized user.\n+    Ensure the reporting_requirements field is not\n+    changed by an unauthorized user.\n     \"\"\"\n     if is_sysadmin(context['user']):\n         return\n@@ -309,61 +353,78 @@ def protect_reporting_requirements(key, data, errors, context):\n         raise StopOnError\n \n \n-def ati_email_validate(key, data, errors, context):\n+def ati_email_validate(key: FlattenKey,\n+                       data: FlattenDataDict,\n+                       errors: FlattenErrorDict,\n+                       context: Context):\n     \"\"\"\n-    If ATI is checked for the reporting_requirements field, ati_email field becomes mandatory\n+    If ATI is checked for the reporting_requirements\n+    field, ati_email field becomes mandatory\n     \"\"\"\n     if 'ati' in data[key] and not data[('ati_email',)]:\n-        errors[('ati_email',)].append(\"ATI email is required for organizations with ATI selected as a reporting requirement\")\n+        errors[('ati_email',)].append(\n+            \"ATI email is required for organizations \"\n+            \"with ATI selected as a reporting requirement\")\n         raise StopOnError\n \n-def isodate(value, context):\n+\n+def isodate(value: Any, context: Context):\n     if isinstance(value, datetime):\n         return value\n     if value == '':\n         return None\n     try:\n         date = date_str_to_datetime(value)\n-    except (TypeError, ValueError) as e:\n+    except (TypeError, ValueError):\n         raise Invalid(_('Date format incorrect. Expecting YYYY-MM-DD'))\n     return date\n \n-def string_safe(value, context):\n+\n+def string_safe(value: Any, context: Context):\n     if isinstance(value, text_type):\n         return value\n     elif isinstance(value, bytes):\n         # bytes only arrive when core ckan or plugins call\n         # actions from Python code\n         try:\n-            return value.decode(u'utf8')\n+            return value.decode('utf8')\n         except UnicodeDecodeError:\n-            return value.decode(u'cp1252')\n+            return value.decode('cp1252')\n     else:\n         raise Invalid(_('Must be a Unicode string value'))\n \n-def string_safe_stop(key, data, errors, context):\n+\n+def string_safe_stop(key: FlattenKey,\n+                     data: FlattenDataDict,\n+                     errors: FlattenErrorDict,\n+                     context: Context):\n     value = data.get(key)\n     if isinstance(value, text_type):\n-        return value\n+        data[key] = value\n+        return\n     elif isinstance(value, bytes):\n         # bytes only arrive when core ckan or plugins call\n         # actions from Python code\n         try:\n-            return value.decode(u'utf8')\n+            data[key] = value.decode('utf8')\n+            return\n         except UnicodeDecodeError:\n-            return value.decode(u'cp1252')\n+            data[key] = value.decode('cp1252')\n+            return\n     else:\n         errors[key].append(_('Must be a Unicode string value'))\n         raise StopOnError\n \n-def json_string(value, context):\n+\n+def json_string(value: Any, context: Context):\n     try:\n         json.loads(value)\n     except ValueError:\n         raise Invalid(_('Must be a JSON string'))\n     return value\n \n-def json_string_has_en_fr_keys(value, context):\n+\n+def json_string_has_en_fr_keys(value: Any, context: Context):\n     try:\n         decodedValue = json.loads(value)\n         if \"en\" not in decodedValue:\n@@ -375,7 +436,7 @@ def json_string_has_en_fr_keys(value, context):\n     return value\n \n \n-def canada_output_none(value):\n+def canada_output_none(value: Any):\n     \"\"\"\n     A custom output validator.\n \n@@ -384,7 +445,10 @@ def canada_output_none(value):\n     return None\n \n \n-def canada_security_upload_type(key, data, errors, context):\n+def canada_security_upload_type(key: FlattenKey,\n+                                data: FlattenDataDict,\n+                                errors: FlattenErrorDict,\n+                                context: Context):\n     url = data.get(key[:-1] + ('url',))\n     upload = data.get(key[:-1] + ('upload',))\n     resource = {\n@@ -397,11 +461,15 @@ def canada_security_upload_type(key, data, errors, context):\n         # allow a fully empty Resource\n         if not url and not upload:\n             return\n-        error = e.error_dict['File'][0]\n+        # type_ignore_reason: incomplete typing\n+        error = e.error_dict['File'][0]  # type: ignore\n         raise Invalid(_(error))\n \n \n-def canada_security_upload_presence(key, data, errors, context):\n+def canada_security_upload_presence(key: FlattenKey,\n+                                    data: FlattenDataDict,\n+                                    errors: FlattenErrorDict,\n+                                    context: Context):\n     url = data.get(key[:-1] + ('url',))\n     upload = data.get(key[:-1] + ('upload',))\n     resource = {\n@@ -414,11 +482,15 @@ def canada_security_upload_presence(key, data, errors, context):\n         # allow a fully empty Resource\n         if not url and not upload:\n             return\n-        error = e.error_dict['File'][0]\n+        # type_ignore_reason: incomplete typing\n+        error = e.error_dict['File'][0]  # type: ignore\n         raise Invalid(_(error))\n \n \n-def canada_static_charset_tabledesigner(key, data, errors, context):\n+def canada_static_charset_tabledesigner(key: FlattenKey,\n+                                        data: FlattenDataDict,\n+                                        errors: FlattenErrorDict,\n+                                        context: Context):\n     \"\"\"\n     Always sets to UTF-8 if TableDesigner\n     \"\"\"\n@@ -427,7 +499,10 @@ def canada_static_charset_tabledesigner(key, data, errors, context):\n         data[key] = 'UTF-8'\n \n \n-def canada_static_rtype_tabledesigner(key, data, errors, context):\n+def canada_static_rtype_tabledesigner(key: FlattenKey,\n+                                      data: FlattenDataDict,\n+                                      errors: FlattenErrorDict,\n+                                      context: Context):\n     \"\"\"\n     Always sets to dataset if TableDesigner\n     \"\"\"\n@@ -436,7 +511,10 @@ def canada_static_rtype_tabledesigner(key, data, errors, context):\n         data[key] = 'dataset'\n \n \n-def canada_guess_resource_format(key, data, errors, context):\n+def canada_guess_resource_format(key: FlattenKey,\n+                                 data: FlattenDataDict,\n+                                 errors: FlattenErrorDict,\n+                                 context: Context):\n     \"\"\"\n     Guesses the resource format based on the url if missing.\n     Guesses the resource format based on url change.\n@@ -457,17 +535,18 @@ def canada_guess_resource_format(key, data, errors, context):\n         if not url:\n             return\n         try:\n-            mimetype = get_action('canada_guess_mimetype')(context, {\"url\": url})\n+            mimetype = get_action('canada_guess_mimetype')(\n+                context, {\"url\": url})\n             data[key] = mimetype\n-        except ValidationError as e:\n+        except ValidationError:\n             # could not guess the format, use `unknown` for now\n             data[key] = 'unknown'\n             pass\n-            #TODO: write script/test to loop file extensions\n+            # TODO: write script/test to loop file extensions\n             #      and check if we can guess them. We need to always\n             #      set this to something...\n-            #errors[key].append(e.error_dict['format'])\n-            #raise StopOnError\n+            # errors[key].append(e.error_dict['format'])\n+            # raise StopOnError\n \n     # if there is a resource id, then it is an update.\n     # we can check if the url field value has changed.\n@@ -484,20 +563,24 @@ def canada_guess_resource_format(key, data, errors, context):\n         # ckan core will dictize save Resource urls with `rsplit`\n         if current_url != new_url and current_url != new_url.rsplit('/', 1)[-1]:\n             try:\n-                mimetype = get_action('canada_guess_mimetype')(context, {\"url\": new_url})\n+                mimetype = get_action('canada_guess_mimetype')(\n+                    context, {\"url\": new_url})\n                 data[key] = mimetype\n-            except ValidationError as e:\n+            except ValidationError:\n                 # could not guess the format, use `unknown` for now\n                 data[key] = 'unknown'\n                 pass\n-                #TODO: write script/test to loop file extensions\n+                # TODO: write script/test to loop file extensions\n                 #      and check if we can guess them. We need to always\n                 #      set this to something...\n-                #errors[key].append(e.error_dict['format'])\n-                #raise StopOnError\n+                # errors[key].append(e.error_dict['format'])\n+                # raise StopOnError\n \n \n-def protect_registry_access(key, data, errors, context):\n+def protect_registry_access(key: FlattenKey,\n+                            data: FlattenDataDict,\n+                            errors: FlattenErrorDict,\n+                            context: Context):\n     \"\"\"\n     Ensure the registry_access field is not changed by an unauthorized user.\n     \"\"\"\n@@ -506,6 +589,7 @@ def protect_registry_access(key, data, errors, context):\n \n     original = ''\n     org_id = data.get(key[:-1] + ('id',))\n+    org = None\n     if org_id:\n         org = model.Group.get(org_id)\n     if org:\n@@ -520,18 +604,22 @@ def protect_registry_access(key, data, errors, context):\n         return\n     else:\n         errors[key].append(_(\"Cannot change value of registry_access field\"\n-                           \" from '%s' to '%s'. This field is read-only.\" %\n-                           (original, value)))\n+                             \" from '%s' to '%s'. This field is read-only.\" %\n+                             (original, value)))\n         raise StopOnError\n \n \n-def limit_resources_per_dataset(key, data, errors, context):\n+def limit_resources_per_dataset(key: FlattenKey,\n+                                data: FlattenDataDict,\n+                                errors: FlattenErrorDict,\n+                                context: Context):\n     \"\"\"\n     Limits the number of resources per dataset.\n     \"\"\"\n     package_id = data.get(key[:-1] + ('id',))\n \n-    max_resource_count = config.get('ckanext.canada.max_resources_per_dataset', None)\n+    max_resource_count = config.get(\n+        'ckanext.canada.max_resources_per_dataset', None)\n     if not max_resource_count:\n         return\n \n@@ -553,9 +641,10 @@ def limit_resources_per_dataset(key, data, errors, context):\n             # no resources are being added, allow for metadata updates\n             return\n \n-        errors[('resource_count',)] = [_('You can only add up to {max_resource_count} resources to a dataset. '\n-                                         'You can segment your resources across multiple datasets or merge your '\n-                                         'data to limit the number of resources. Please contact '\n-                                         'open-ouvert@tbs-sct.gc.ca if you need further assistance.')\n-                                        .format(max_resource_count=max_resource_count)]\n+        errors[('resource_count',)] = [\n+            _('You can only add up to {max_resource_count} resources to a dataset. '\n+              'You can segment your resources across multiple datasets or merge your '\n+              'data to limit the number of resources. Please contact '\n+              'open-ouvert@tbs-sct.gc.ca if you need further assistance.').format(\n+                  max_resource_count=max_resource_count)]\n         raise StopOnError"
                },
                {
                    "sha": "fa32b695ac9ecf5728214bc51f9e0c6bf004472e",
                    "filename": "ckanext/canada/view.py",
                    "status": "modified",
                    "additions": 358,
                    "deletions": 235,
                    "changes": 593,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fview.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/ckanext%2Fcanada%2Fview.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/ckanext%2Fcanada%2Fview.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -1,3 +1,5 @@\n+import re\n+import codecs\n import json\n import decimal\n from pytz import timezone, utc\n@@ -9,6 +11,9 @@\n import traceback\n from functools import partial\n \n+from typing import Optional, Union, Any, cast, Dict, List, Tuple\n+from ckan.types import Context, Response\n+\n from ckan.config.middleware.flask_app import csrf\n \n from ckan.plugins.toolkit import (\n@@ -42,7 +47,7 @@\n     CreateView as ResourceCreateView\n )\n from ckan.views.user import RegisterView as UserRegisterView\n-from ckan.views.api import(\n+from ckan.views.api import (\n     API_DEFAULT_VERSION,\n     API_MAX_VERSION,\n     _finish_ok,\n@@ -56,10 +61,13 @@\n from ckan.authz import is_sysadmin\n from ckan.logic import (\n     parse_params,\n+    tuplize_dict,\n+    clean_dict,\n     ValidationError,\n     NotFound,\n     NotAuthorized\n )\n+from ckan.lib.navl.dictization_functions import unflatten\n \n from ckanext.recombinant.datatypes import canonicalize\n from ckanext.recombinant.tables import get_chromo\n@@ -70,19 +78,17 @@\n \n from flask import Blueprint, make_response\n \n-from ckanext.canada.urlsafe import url_part_unescape, url_part_escape\n from ckanext.canada.helpers import canada_date_str_to_datetime\n \n from io import StringIO\n \n+\n BOM = \"\\N{bom}\"\n+MAX_JOB_QUEUE_LIST_SIZE = 25\n \n-from logging import getLogger\n \n log = getLogger(__name__)\n \n-MAX_JOB_QUEUE_LIST_SIZE = 25\n-\n canada_views = Blueprint('canada', __name__)\n ottawa_tz = timezone('America/Montreal')\n \n@@ -91,15 +97,41 @@ class IntentionalServerError(Exception):\n     pass\n \n \n+def _url_part_escape(orig: str) -> str:\n+    \"\"\"\n+    simple encoding for url-parts where all non-alphanumerics are\n+    wrapped in e.g. _xxyyzz_ blocks w/hex UTF-8 xx, yy, zz values\n+\n+    used for safely including arbitrary unicode as part of a url path\n+    all returned characters will be in [a-zA-Z0-9_-]\n+    \"\"\"\n+    return '_'.join(\n+        codecs.encode(s.encode('utf-8'), 'hex').decode('ascii') if i % 2 else s\n+        for i, s in enumerate(\n+            re.split(r'([^-a-zA-Z0-9]+)', orig)\n+        )\n+    )\n+\n+\n+def _url_part_unescape(urlpart: str) -> str:\n+    \"\"\"\n+    reverse url_part_escape\n+    \"\"\"\n+    return ''.join(\n+        codecs.decode(s, 'hex').decode('utf-8') if i % 2 else s\n+        for i, s in enumerate(urlpart.split('_'))\n+    )\n+\n+\n @canada_views.route('/user/logged_in', methods=['GET'])\n def logged_in():\n     # redirect if needed\n-    came_from = request.args.get(u'came_from', u'')\n+    came_from = request.args.get('came_from', '')\n     if h.url_is_local(came_from):\n         return h.redirect_to(str(came_from))\n \n     if g.user:\n-        user_dict = get_action('user_show')(None, {'id': g.user})\n+        user_dict = get_action('user_show')(cast(Context, {}), {'id': g.user})\n \n         h.flash_success(\n             _('<strong>Note</strong><br>{0} is now logged in').format(\n@@ -112,55 +144,57 @@ def logged_in():\n \n         return h.redirect_to('canada.home')\n     else:\n-        err = _(u'Login failed. Bad username or password.')\n+        err = _('Login failed. Bad username or password.')\n         h.flash_error(err)\n         return h.redirect_to('user.login')\n \n \n-def _get_package_type_from_dict(package_id, package_type='dataset'):\n+def _get_package_type_from_dict(package_id: str,\n+                                package_type:\n+                                    Optional[Union[str, Any]] = 'dataset') -> str:\n     try:\n-        context = {\n-            u'model': model,\n-            u'session': model.Session,\n-            u'user': g.user,\n-            u'auth_user_obj': g.userobj\n-        }\n-        pkg_dict = get_action(u'package_show')(\n-            dict(context, for_view=True), {\n-                u'id': package_id\n-            }\n-        )\n+        context = cast(Context, {'model': model,\n+                                 'session': model.Session,\n+                                 'user': g.user,\n+                                 'auth_user_obj': g.userobj,\n+                                 'for_view': True})\n+        pkg_dict = get_action('package_show')(context, {'id': package_id})\n         return pkg_dict['type']\n     except (NotAuthorized, NotFound):\n-        return package_type\n+        return package_type  # type: ignore\n \n \n-def canada_prevent_pd_views(uri, package_type):\n-    uri = uri.split('/')\n+def canada_prevent_pd_views(uri: str, package_type: str) -> Union[Response, str]:\n+    uri_parts = uri.split('/')\n     id = None\n-    if uri[0]:\n-        if uri[0] == 'activity':  # allow activity route\n-            return package_activity(package_type, uri[1])\n-        id = uri[0]\n+    if uri_parts[0]:\n+        if uri_parts[0] == 'activity':  # allow activity route\n+            return package_activity(package_type)\n+        id = uri_parts[0]\n         package_type = _get_package_type_from_dict(id, package_type)\n     if package_type in h.recombinant_get_types():\n         return type_redirect(package_type, id)\n     return abort(404)\n \n \n class CanadaDatasetEditView(DatasetEditView):\n-    def post(self, package_type, id):\n+    def post(self, package_type: str, id: str):\n         response = super(CanadaDatasetEditView, self).post(package_type, id)\n         if hasattr(response, 'status_code'):\n-            if response.status_code == 200 or response.status_code == 302:\n+            # type_ignore_reason: checking attribute\n+            if (\n+              response.status_code == 200 or  # type: ignore\n+              response.status_code == 302):  # type: ignore\n                 context = self._prepare()\n-                pkg_dict = get_action(u'package_show')(\n-                    dict(context, for_view=True), {\n-                        u'id': id\n+                pkg_dict = get_action('package_show')(\n+                    cast(Context, dict(context, for_view=True)), {\n+                        'id': id\n                     }\n                 )\n                 if pkg_dict['type'] == 'prop':\n-                    h.flash_success(_(u'The status has been added/updated for this suggested dataset. This update will be reflected on open.canada.ca shortly.'))\n+                    h.flash_success(_('The status has been added/updated for this '\n+                                      'suggested dataset. This update will be '\n+                                      'reflected on open.canada.ca shortly.'))\n                 else:\n                     h.flash_success(\n                         _(\"Your dataset %s has been saved.\")\n@@ -169,47 +203,61 @@ def post(self, package_type, id):\n \n \n class CanadaDatasetCreateView(DatasetCreateView):\n-    def post(self, package_type):\n+    def post(self, package_type: str):\n         response = super(CanadaDatasetCreateView, self).post(package_type)\n         if hasattr(response, 'status_code'):\n-            if response.status_code == 200 or response.status_code == 302:\n-                h.flash_success(_(u'Dataset added.'))\n+            # type_ignore_reason: checking attribute\n+            if (\n+              response.status_code == 200 or  # type: ignore\n+              response.status_code == 302):  # type: ignore\n+                h.flash_success(_('Dataset added.'))\n         return response\n \n \n class CanadaResourceEditView(ResourceEditView):\n-    def post(self, package_type, id, resource_id):\n-        response = super(CanadaResourceEditView, self).post(package_type, id, resource_id)\n+    def post(self, package_type: str, id: str, resource_id: str):\n+        response = super(CanadaResourceEditView, self).post(\n+            package_type, id, resource_id)\n         if hasattr(response, 'status_code'):\n-            if response.status_code == 200 or response.status_code == 302:\n-                h.flash_success(_(u'Resource updated.'))\n+            # type_ignore_reason: checking attribute\n+            if (\n+              response.status_code == 200 or  # type: ignore\n+              response.status_code == 302):  # type: ignore\n+                h.flash_success(_('Resource updated.'))\n         return response\n \n \n class CanadaResourceCreateView(ResourceCreateView):\n-    def post(self, package_type, id):\n+    def post(self, package_type: str, id: str):\n         response = super(CanadaResourceCreateView, self).post(package_type, id)\n         if hasattr(response, 'status_code'):\n-            if response.status_code == 200 or response.status_code == 302:\n-                h.flash_success(_(u'Resource added.'))\n+            # type_ignore_reason: checking attribute\n+            if (\n+              response.status_code == 200 or  # type: ignore\n+              response.status_code == 302):  # type: ignore\n+                h.flash_success(_('Resource added.'))\n         return response\n \n \n class CanadaUserRegisterView(UserRegisterView):\n     def post(self):\n-        params = parse_params(request.form)\n-        email=params.get('email', '')\n-        fullname=params.get('fullname', '')\n-        username=params.get('name', '')\n-        phoneno=params.get('phoneno', '')\n-        dept=params.get('department', '')\n+        data = clean_dict(unflatten(tuplize_dict(parse_params(request.form))))\n+        email = data.get('email', '')\n+        fullname = data.get('fullname', '')\n+        username = data.get('name', '')\n+        phoneno = data.get('phoneno', '')\n+        dept = data.get('department', '')\n         response = super(CanadaUserRegisterView, self).post()\n         if hasattr(response, 'status_code'):\n-            if response.status_code == 200 or response.status_code == 302:\n+            # type_ignore_reason: checking attribute\n+            if (\n+              response.status_code == 200 or  # type: ignore\n+              response.status_code == 302):  # type: ignore\n                 if not config.get('ckanext.canada.suppress_user_emails', False):\n                     # redirected after successful user create\n                     import ckan.lib.mailer\n-                    # checks if there is a custom function \"notify_ckan_user_create\" in the mailer (added by ckanext-gcnotify)\n+                    # checks if there is a custom function \"notify_ckan_user_create\"\n+                    # in the mailer (added by ckanext-gcnotify)\n                     getattr(\n                         ckan.lib.mailer,\n                         \"notify_ckan_user_create\",\n@@ -225,8 +273,8 @@ def post(self):\n \n \n canada_views.add_url_rule(\n-    u'/user/register',\n-    view_func=CanadaUserRegisterView.as_view(str(u'register'))\n+    '/user/register',\n+    view_func=CanadaUserRegisterView.as_view(str('register'))\n )\n \n \n@@ -237,12 +285,10 @@ def recover_username():\n         # is monkey patched in GC Notify so we need that loaded\n         return abort(404)\n \n-    context = {\n-        'model': model,\n-        'session': model.Session,\n-        'user': g.user,\n-        'auth_user_obj': g.userobj\n-    }\n+    context = cast(Context, {'model': model,\n+                             'session': model.Session,\n+                             'user': g.user,\n+                             'auth_user_obj': g.userobj})\n     try:\n         check_access('request_reset', context)\n     except NotAuthorized:\n@@ -256,7 +302,7 @@ def recover_username():\n \n         log.info('Username recovery requested for email \"{}\"'.format(email))\n \n-        context = {'model': model, 'user': g.user, 'ignore_auth': True}\n+        context = cast(Context, {'model': model, 'user': g.user, 'ignore_auth': True})\n         username_list = []\n \n         user_list = get_action('user_list')(context, {'email': email})\n@@ -272,7 +318,9 @@ def recover_username():\n                      .format(email))\n             try:\n                 # see: ckanext.gcnotify.mailer.send_username_recovery\n-                mailer.send_username_recovery(email, username_list)\n+                if hasattr(mailer, 'send_username_recovery'):\n+                    # type_ignore_reason: checking attribute\n+                    mailer.send_username_recovery(email, username_list)  # type: ignore\n             except mailer.MailerException as e:\n                 # SMTP is not configured correctly or the server is\n                 # temporarily unavailable\n@@ -291,7 +339,7 @@ def recover_username():\n     return render('user/recover_username.html', {})\n \n \n-def canada_search(package_type):\n+def canada_search(package_type: str):\n     if g.is_registry and not g.user:\n         return abort(403)\n     if not g.is_registry and package_type in h.recombinant_get_types():\n@@ -304,7 +352,7 @@ def fivehundred():\n     raise IntentionalServerError()\n \n \n-def _get_choice_fields(resource_name):\n+def _get_choice_fields(resource_name: str) -> Dict[str, Any]:\n     separator = ' : ' if h.lang() == 'fr' else ': '\n     choice_fields = {}\n     for datastore_id, choices in h.recombinant_choice_fields(resource_name).items():\n@@ -328,7 +376,9 @@ def _get_choice_fields(resource_name):\n \n \n @canada_views.route('/group/bulk_process/<id>', methods=['GET', 'POST'])\n-def canada_group_bulk_process(id, group_type='group', is_organization=False, data=None):\n+def canada_group_bulk_process(id: str, group_type: str = 'group',\n+                              is_organization: Optional[bool] = False,\n+                              data: Optional[Dict[str, Any]] = None):\n     \"\"\"\n     Redirects the Group bulk action endpoint as it does not support\n     the IPackageController and IResourceController implementations.\n@@ -337,16 +387,19 @@ def canada_group_bulk_process(id, group_type='group', is_organization=False, dat\n \n \n @canada_views.route('/organization/bulk_process/<id>', methods=['GET', 'POST'])\n-def canada_organization_bulk_process(id, group_type='organization', is_organization=True, data=None):\n+def canada_organization_bulk_process(id: str, group_type: str = 'organization',\n+                                     is_organization: Optional[bool] = True,\n+                                     data: Optional[Dict[str, Any]] = None):\n     \"\"\"\n     Redirects the Organization bulk action endpoint as it does not support\n     the IPackageController and IResourceController implementations.\n     \"\"\"\n     return h.redirect_to('%s.read' % group_type, id=id)\n \n \n-@canada_views.route('/create-pd-record/<owner_org>/<resource_name>', methods=['GET', 'POST'])\n-def create_pd_record(owner_org, resource_name):\n+@canada_views.route('/create-pd-record/<owner_org>/<resource_name>',\n+                    methods=['GET', 'POST'])\n+def create_pd_record(owner_org: str, resource_name: str):\n     lc = LocalCKAN(username=g.user)\n \n     try:\n@@ -391,30 +444,48 @@ def create_pd_record(owner_org, resource_name):\n         except ValidationError as ve:\n             if 'records' in ve.error_dict:\n                 try:\n+                    # type_ignore_reason: incomplete typing\n                     err = dict({\n                         k: list(format_trigger_error(v))\n-                        for (k, v) in ve.error_dict['records'][0].items()\n+                        for (k, v) in\n+                        ve.error_dict['records'][0].items()  # type: ignore\n                     }, **err)\n                 except AttributeError:\n-                    if 'duplicate key value violates unique constraint' in ve.error_dict['records'][0]:\n+                    # type_ignore_reason: incomplete typing\n+                    if (\n+                      'duplicate key value violates unique constraint' in\n+                      ve.error_dict['records'][0]):  # type: ignore\n                         err = dict({\n                             k: [_(\"This record already exists\")]\n                             for k in pk_fields\n                         }, **err)\n-                    elif 'violates foreign key constraint' in ve.error_dict['records'][0]:\n-                        error_message = chromo.get('datastore_constraint_errors', {}).get('upsert', 'Something went wrong, your record was not created. Please contact support.')\n+                    # type_ignore_reason: incomplete typing\n+                    elif (\n+                      'violates foreign key constraint' in\n+                      ve.error_dict['records'][0]):  # type: ignore\n+                        error_message = chromo.get(\n+                            'datastore_constraint_errors', {}).get(\n+                                'upsert', 'Something went wrong, your '\n+                                          'record was not created. Please '\n+                                          'contact support.')\n                         error_summary = _(error_message)\n                     else:\n-                        log.warning('Failed to create %s record for org %s:\\n%s', resource_name, owner_org, traceback.format_exc())\n-                        error_summary = _('Something went wrong, your record was not created. Please contact support.')\n-            elif ve.error_dict.get('info', {}).get('pgcode', '') == '23505':\n+                        log.warning('Failed to create %s record for org %s:\\n%s',\n+                                    resource_name, owner_org, traceback.format_exc())\n+                        error_summary = _('Something went wrong, your record '\n+                                          'was not created. Please contact support.')\n+            # type_ignore_reason: incomplete typing\n+            elif ve.error_dict.get(\n+                    'info', {}).get('pgcode', '') == '23505':  # type: ignore\n                 err = dict({\n                     k: [_(\"This record already exists\")]\n                     for k in pk_fields\n                 }, **err)\n             else:\n-                log.warning('Failed to create %s record for org %s:\\n%s', resource_name, owner_org, traceback.format_exc())\n-                error_summary = _('Something went wrong, your record was not created. Please contact support.')\n+                log.warning('Failed to create %s record for org %s:\\n%s',\n+                            resource_name, owner_org, traceback.format_exc())\n+                error_summary = _('Something went wrong, your record '\n+                                  'was not created. Please contact support.')\n \n         if err or error_summary:\n             return render('recombinant/create_pd_record.html',\n@@ -424,12 +495,13 @@ def create_pd_record(owner_org, resource_name):\n                               'chromo_title': chromo['title'],\n                               'choice_fields': choice_fields,\n                               'owner_org': rcomb['owner_org'],\n-                              'pkg_dict': {},  # prevent rendering error on parent template\n+                              # prevent rendering error on parent template\n+                              'pkg_dict': {},\n                               'errors': err,\n                               'error_summary': error_summary,\n                           })\n \n-        h.flash_notice(_(u'Record Created'))\n+        h.flash_notice(_('Record Created'))\n \n         return h.redirect_to(\n             'recombinant.preview_table',\n@@ -449,9 +521,10 @@ def create_pd_record(owner_org, resource_name):\n                   })\n \n \n-@canada_views.route('/update-pd-record/<owner_org>/<resource_name>/<pk>', methods=['GET', 'POST'])\n-def update_pd_record(owner_org, resource_name, pk):\n-    pk = [url_part_unescape(p) for p in pk.split(',')]\n+@canada_views.route('/update-pd-record/<owner_org>/<resource_name>/<pk>',\n+                    methods=['GET', 'POST'])\n+def update_pd_record(owner_org: str, resource_name: str, pk: str):\n+    pk_list = [_url_part_unescape(p) for p in pk.split(',')]\n \n     lc = LocalCKAN(username=g.user)\n \n@@ -471,7 +544,7 @@ def update_pd_record(owner_org, resource_name, pk):\n \n     choice_fields = _get_choice_fields(resource_name)\n     pk_fields = aslist(chromo['datastore_primary_key'])\n-    pk_filter = dict(zip(pk_fields, pk))\n+    pk_filter = dict(zip(pk_fields, pk_list))\n \n     records = lc.action.datastore_search(\n         resource_id=res['id'],\n@@ -505,34 +578,37 @@ def update_pd_record(owner_org, resource_name, pk):\n         try:\n             lc.action.datastore_upsert(\n                 resource_id=res['id'],\n-                #method='update',    FIXME not raising ValidationErrors\n+                # method='update',    FIXME not raising ValidationErrors\n                 records=[{k: None if k in err else v for (k, v) in data.items()}],\n                 dry_run=bool(err))\n         except ValidationError as ve:\n             try:\n+                # type_ignore_reason: incomplete typing\n                 err = dict({\n                     k: list(format_trigger_error(v))\n-                    for (k, v) in ve.error_dict['records'][0].items()\n+                    for (k, v) in ve.error_dict['records'][0].items()  # type: ignore\n                 }, **err)\n             except AttributeError:\n-                log.warning('Failed to update %s record for org %s:\\n%s', resource_name, owner_org, traceback.format_exc())\n-                error_summary = _('Something went wrong, your record was not updated. Please contact support.')\n+                log.warning('Failed to update %s record for org %s:\\n%s',\n+                            resource_name, owner_org, traceback.format_exc())\n+                error_summary = _('Something went wrong, your record '\n+                                  'was not updated. Please contact support.')\n \n         if err or error_summary:\n             return render('recombinant/update_pd_record.html',\n-                extra_vars={\n-                    'data': data,\n-                    'resource_name': resource_name,\n-                    'chromo_title': chromo['title'],\n-                    'choice_fields': choice_fields,\n-                    'pk_fields': pk_fields,\n-                    'owner_org': rcomb['owner_org'],\n-                    'pkg_dict': {},  # prevent rendering error on parent template\n-                    'errors': err,\n-                    'error_summary': error_summary,\n-                })\n-\n-        h.flash_notice(_(u'Record %s Updated') % u','.join(pk) )\n+                          extra_vars={\n+                              'data': data,\n+                              'resource_name': resource_name,\n+                              'chromo_title': chromo['title'],\n+                              'choice_fields': choice_fields,\n+                              'pk_fields': pk_fields,\n+                              'owner_org': rcomb['owner_org'],\n+                              # prevent rendering error on parent template\n+                              'pkg_dict': {},\n+                              'errors': err,\n+                              'error_summary': error_summary})\n+\n+        h.flash_notice(_('Record %s Updated') % ','.join(pk_list))\n \n         return h.redirect_to(\n             'recombinant.preview_table',\n@@ -542,7 +618,9 @@ def update_pd_record(owner_org, resource_name, pk):\n \n     data = {}\n     for f in chromo['fields']:\n-        if not f.get('import_template_include', True) or f.get('published_resource_computed_field', False):\n+        if (\n+          not f.get('import_template_include', True) or\n+          f.get('published_resource_computed_field', False)):\n             continue\n         val = record[f['datastore_id']]\n         if val and f.get('datastore_type') == 'money':\n@@ -554,26 +632,27 @@ def update_pd_record(owner_org, resource_name, pk):\n             data[f['datastore_id']] = val\n \n     return render('recombinant/update_pd_record.html',\n-        extra_vars={\n-            'data': data,\n-            'resource_name': resource_name,\n-            'chromo_title': chromo['title'],\n-            'choice_fields': choice_fields,\n-            'pk_fields': pk_fields,\n-            'owner_org': rcomb['owner_org'],\n-            'pkg_dict': {},  # prevent rendering error on parent template\n-            'errors': {},\n-            })\n+                  extra_vars={\n+                      'data': data,\n+                      'resource_name': resource_name,\n+                      'chromo_title': chromo['title'],\n+                      'choice_fields': choice_fields,\n+                      'pk_fields': pk_fields,\n+                      'owner_org': rcomb['owner_org'],\n+                      # prevent rendering error on parent template\n+                      'pkg_dict': {},\n+                      'errors': {},\n+                  })\n \n \n @canada_views.route('/recombinant/<resource_name>', methods=['GET'])\n-def type_redirect(resource_name, dataset_id=None):\n+def type_redirect(resource_name: str, dataset_id: Optional[str] = None):\n     orgs = h.organizations_available('read')\n \n     if not orgs:\n         abort(404, _('No organizations found'))\n     try:\n-        chromo = get_chromo(resource_name)\n+        get_chromo(resource_name)\n     except RecombinantException:\n         abort(404, _('Recombinant resource_name not found'))\n \n@@ -586,7 +665,8 @@ def type_redirect(resource_name, dataset_id=None):\n \n     if dataset_id:\n         try:\n-            dataset = get_action('package_show')({'user': g.user}, {'id': dataset_id})\n+            dataset = get_action('package_show')(\n+                {'user': g.user}, {'id': dataset_id})\n         except NotAuthorized:\n             return abort(403)\n         except NotFound:\n@@ -602,8 +682,9 @@ def type_redirect(resource_name, dataset_id=None):\n                                    owner_org=owner_org_name))\n \n \n-@canada_views.route('/recombinant/delete-selected-records/<resource_id>', methods=['GET', 'POST'])\n-def delete_selected_records(resource_id):\n+@canada_views.route('/recombinant/delete-selected-records/<resource_id>',\n+                    methods=['GET', 'POST'])\n+def delete_selected_records(resource_id: str):\n     lc = LocalCKAN(username=g.user)\n \n     if not h.check_access('datastore_records_delete',\n@@ -633,7 +714,7 @@ def delete_selected_records(resource_id):\n                           'dataset': dataset,\n                           'resource': res,\n                           'num': len(records),\n-                          'select_delete': ';'.join(records) })\n+                          'select_delete': ';'.join(records)})\n \n     records = ''.join(records).split(';')\n \n@@ -657,7 +738,11 @@ def delete_selected_records(resource_id):\n             except ValidationError as e:\n                 if 'foreign_constraints' in e.error_dict:\n                     chromo = get_chromo(res['name'])\n-                    error_message = chromo.get('datastore_constraint_errors', {}).get('delete', e.error_dict['foreign_constraints'][0])\n+                    # type_ignore_reason: no typing from chromo yamls\n+                    error_message = chromo.get(\n+                        'datastore_constraint_errors', {}).get(\n+                            'delete',\n+                            e.error_dict['foreign_constraints'][0])  # type: ignore\n                     h.flash_error(_(error_message))\n                     return h.redirect_to('recombinant.preview_table',\n                                          resource_name=res['name'],\n@@ -673,7 +758,11 @@ def delete_selected_records(resource_id):\n     )\n \n \n-def _clean_check_type_errors(post_data, fields, pk_fields, choice_fields):\n+def _clean_check_type_errors(post_data: Dict[str, Any],\n+                             fields: List[Dict[str, Any]],\n+                             pk_fields: List[str],\n+                             choice_fields: Dict[str, Any]) -> \\\n+                                Tuple[Dict[str, Any], Dict[str, Any]]:\n     \"\"\"\n     clean posted data and check type errors, add type error messages\n     to errors dict returned. This is required because type errors on any\n@@ -690,12 +779,14 @@ def _clean_check_type_errors(post_data, fields, pk_fields, choice_fields):\n \n     for f in fields:\n         f_id = f['datastore_id']\n-        if not f.get('import_template_include', True) or f.get('published_resource_computed_field', False):\n+        if (\n+          not f.get('import_template_include', True) or\n+          f.get('published_resource_computed_field', False)):\n             continue\n         else:\n             val = post_data.get(f['datastore_id'], '')\n             if isinstance(val, list):\n-                val = u','.join(val)\n+                val = ','.join(val)\n             val = canonicalize(\n                 val,\n                 f['datastore_type'],\n@@ -706,12 +797,12 @@ def _clean_check_type_errors(post_data, fields, pk_fields, choice_fields):\n                     try:\n                         decimal.Decimal(val)\n                     except decimal.InvalidOperation:\n-                        err[f['datastore_id']] = [_(u'Number required')]\n+                        err[f['datastore_id']] = [_('Number required')]\n                 elif f['datastore_type'] == 'int':\n                     try:\n                         int(val)\n                     except ValueError:\n-                        err[f['datastore_id']] = [_(u'Integer required')]\n+                        err[f['datastore_id']] = [_('Integer required')]\n             data[f['datastore_id']] = val\n \n     return data, err\n@@ -736,7 +827,8 @@ def home():\n def links():\n     if not g.is_registry:\n         return h.redirect_to('dataset.search')\n-    return render('home/quick_links.html', extra_vars={'is_sysadmin': is_sysadmin(g.user)})\n+    return render('home/quick_links.html',\n+                  extra_vars={'is_sysadmin': is_sysadmin(g.user)})\n \n \n @canada_views.route('/ckan-admin/publish', methods=['GET', 'POST'])\n@@ -758,13 +850,16 @@ def ckanadmin_publish_datasets():\n         abort(403, _('Not authorized to see this page'))\n \n     lc = LocalCKAN(username=g.user)\n-    params = parse_params(request.form)\n+    data = clean_dict(unflatten(tuplize_dict(parse_params(request.form))))\n \n-    publish_date = params.get('publish_date')\n+    publish_date = data.get('publish_date', '')\n+    if not publish_date:\n+        h.flash_error(_('Invalid publish date'))\n+        return h.redirect_to('canada.ckanadmin_publish')\n     publish_date = date_str_to_datetime(publish_date).strftime(\"%Y-%m-%d %H:%M:%S\")\n \n     # get a list of package id's from the for POST data\n-    publish_packages = params.get('publish', [])\n+    publish_packages = data.get('publish', [])\n     if isinstance(publish_packages, string_types):\n         publish_packages = [publish_packages]\n     count = len(publish_packages)\n@@ -775,7 +870,7 @@ def ckanadmin_publish_datasets():\n         )\n \n     # flash notice that records are published\n-    h.flash_notice(str(count) + _(u' record(s) published.'))\n+    h.flash_notice(str(count) + _(' record(s) published.'))\n \n     # return us to the publishing interface\n     return h.redirect_to('canada.ckanadmin_publish')\n@@ -792,11 +887,13 @@ def ckanadmin_job_queue():\n         abort(403, _('Not authorized to see this page'))\n \n     warning = False\n-    if jobs and datetime.strptime(jobs[0]['created'], '%Y-%m-%dT%H:%M:%S') < (datetime.now() - timedelta(minutes=18)):\n+    if (\n+      jobs and datetime.strptime(jobs[0]['created'], '%Y-%m-%dT%H:%M:%S') <\n+      (datetime.now() - timedelta(minutes=18))):\n         warning = True\n \n     return render('admin/jobs.html', extra_vars={'job_list': jobs,\n-                                                 'warning': warning,})\n+                                                 'warning': warning})\n \n \n @canada_views.route('/help', methods=['GET'])\n@@ -806,14 +903,18 @@ def view_help():\n     return render('help.html', extra_vars={})\n \n \n-@canada_views.route('/datatable/<resource_name>/<resource_id>', methods=['GET', 'POST'])\n+@canada_views.route('/datatable/<resource_name>/<resource_id>',\n+                    methods=['GET', 'POST'])\n @csrf.exempt\n-def datatable(resource_name, resource_id):\n+def datatable(resource_name: str, resource_id: str):\n     params = parse_params(request.form)\n-    draw = int(params['draw'])\n+    # type_ignore_reason: datatable param draw is int\n+    draw = int(params['draw'])  # type: ignore\n     search_text = str(params['search[value]'])\n-    offset = int(params['start'])\n-    limit = int(params['length'])\n+    # type_ignore_reason: datatable param start is int\n+    offset = int(params['start'])  # type: ignore\n+    # type_ignore_reason: datatable param length is int\n+    limit = int(params['length'])  # type: ignore\n \n     chromo = h.recombinant_get_chromo(resource_name)\n     lc = LocalCKAN(username=g.user)\n@@ -840,31 +941,34 @@ def datatable(resource_name, resource_id):\n             continue\n         cols.append(f['datastore_id'])\n         fids.append(f['datastore_id'])\n-    prefix_cols = 2 if chromo.get('edit_form', False) and can_edit else 1  # Select | (Edit) | ...\n+    # Select | (Edit) | ...\n+    prefix_cols = 2 if chromo.get('edit_form', False) and can_edit else 1\n \n     sort_list = []\n     i = 0\n     while True:\n-        if u'order[%d][column]' % i not in params:\n+        if 'order[%d][column]' % i not in params:\n             break\n-        sort_by_num = int(params[u'order[%d][column]' % i])\n+        # type_ignore_reason: datatable param 'order[%d][column] is int\n+        sort_by_num = int(params['order[%d][column]' % i])  # type: ignore\n         sort_order = (\n-            u'desc' if params[u'order[%d][dir]' % i] == u'desc'\n-            else u'asc')\n-        sort_list.append(cols[sort_by_num - prefix_cols] + u' ' + sort_order + u' nulls last')\n+            'desc' if params['order[%d][dir]' % i] == 'desc'\n+            else 'asc')\n+        sort_list.append(\n+            cols[sort_by_num - prefix_cols] + ' ' + sort_order + ' nulls last')\n         i += 1\n \n     response = lc.action.datastore_search(\n         q=search_text,\n         resource_id=resource_id,\n         offset=offset,\n         limit=limit,\n-        sort=u', '.join(sort_list),\n+        sort=', '.join(sort_list),\n     )\n \n     aadata = [\n-        [u'<input type=\"checkbox\">'] +\n-        [datatablify(row.get(colname, u''), colname, chromo) for colname in cols]\n+        ['<input type=\"checkbox\">'] +\n+        [datatablify(row.get(colname, ''), colname, chromo) for colname in cols]\n         for row in response['records']]\n \n     if chromo.get('edit_form', False) and can_edit:\n@@ -873,13 +977,13 @@ def datatable(resource_name, resource_id):\n         pkids = [fids.index(k) for k in aslist(chromo['datastore_primary_key'])]\n         for row in aadata:\n             row.insert(1, (\n-                    u'<a href=\"{0}\" aria-label=\"' + _(\"Edit\") + '\">'\n-                    u'<i class=\"fa fa-lg fa-edit\" aria-hidden=\"true\"></i></a>').format(\n+                    '<a href=\"{0}\" aria-label=\"' + _(\"Edit\") + '\">'\n+                    '<i class=\"fa fa-lg fa-edit\" aria-hidden=\"true\"></i></a>').format(\n                     h.url_for(\n                         'canada.update_pd_record',\n                         owner_org=pkg['organization']['name'],\n                         resource_name=resource_name,\n-                        pk=','.join(url_part_escape(row[i+1]) for i in pkids)\n+                        pk=','.join(_url_part_escape(row[i+1]) for i in pkids)\n                     )\n                 )\n             )\n@@ -892,7 +996,7 @@ def datatable(resource_name, resource_id):\n     })\n \n \n-def datatablify(v, colname, chromo):\n+def datatablify(v: Any, colname: str, chromo: Dict[str, Any]) -> str:\n     '''\n     format value from datastore v for display in a datatable preview\n     '''\n@@ -902,13 +1006,13 @@ def datatablify(v, colname, chromo):\n             chromo_field = f\n             break\n     if v is None:\n-        return u''\n+        return ''\n     if v is True:\n-        return u'TRUE'\n+        return 'TRUE'\n     if v is False:\n-        return u'FALSE'\n+        return 'FALSE'\n     if isinstance(v, list):\n-        return u', '.join(str(e) for e in v)\n+        return ', '.join(str(e) for e in v)\n     if colname in ('record_created', 'record_modified') and v:\n         return canada_date_str_to_datetime(v).replace(tzinfo=utc).astimezone(\n             ottawa_tz).strftime('%Y-%m-%d %H:%M:%S %Z')\n@@ -920,7 +1024,7 @@ def datatablify(v, colname, chromo):\n \n \n @canada_views.route('/fgpv-vpgf/<pkg_id>', methods=['GET'])\n-def fgpv_vpgf(pkg_id):\n+def fgpv_vpgf(pkg_id: str):\n     return render('fgpv_vpgf/index.html', extra_vars={\n         'pkg_id': pkg_id,\n     })\n@@ -933,13 +1037,13 @@ def organization_autocomplete():\n     organization_list = []\n \n     if q:\n-        context = {'user': g.user, 'model': model, 'ignore_auth': True}\n+        context = cast(Context, {'user': g.user, 'model': model, 'ignore_auth': True})\n         data_dict = {'q': q, 'limit': limit}\n         organization_list = get_action(\n             'organization_autocomplete'\n         )(context, data_dict)\n \n-    def _org_key(org):\n+    def _org_key(org: Dict[str, Any]) -> str:\n         return org['title'].split(' | ')[-1 if lang() == 'fr' else 0]\n \n     return_list = [{\n@@ -951,12 +1055,14 @@ def _org_key(org):\n     return _finish_ok(return_list)\n \n \n-@canada_views.route('/api/<int(min=1, max=2):ver>/action/<logic_function>', methods=['GET', 'POST'])\n-@canada_views.route('/api/action/<logic_function>', methods=[u'GET', u'POST'])\n+@canada_views.route('/api/<int(min=1, max=2):ver>/action/<logic_function>',\n+                    methods=['GET', 'POST'])\n+@canada_views.route('/api/action/<logic_function>', methods=['GET', 'POST'])\n @canada_views.route('/api/<int(min=3, max={0}):ver>/action/<logic_function>'.format(\n-                    API_MAX_VERSION), methods=[u'GET', u'POST'])\n-def action(logic_function, ver=API_DEFAULT_VERSION):\n-    u'''Main endpoint for the action API (v3)\n+                    API_MAX_VERSION), methods=['GET', 'POST'])\n+def action(logic_function: str,\n+           ver: int = API_DEFAULT_VERSION):\n+    '''Main endpoint for the action API (v3)\n \n     Creates a dict with the incoming request data and calls the appropiate\n     logic function. Returns a JSON response with the following keys:\n@@ -967,35 +1073,38 @@ def action(logic_function, ver=API_DEFAULT_VERSION):\n         * ``result``: The output of the action, generally an Object or an Array\n \n     Canada Fork:\n-        We keep version 1 and 2 endpoints just incase any systems are still using that.\n-        We also have -1 to version to return the context and request_data for extra logging.\n-        And if the request is a POST request, we want to not authorize any PD type.\n+        We keep version 1 and 2 endpoints just incase any systems\n+        are still using that. We also have -1 to version to return the\n+        context and request_data for extra logging. And if the request is a\n+        POST request, we want to not authorize any PD type.\n     '''\n     try:\n         function = get_action(logic_function)\n     except Exception:\n         return api_view_action(logic_function, ver)\n \n     try:\n-        side_effect_free = getattr(function, u'side_effect_free', False)\n+        side_effect_free = getattr(function, 'side_effect_free', False)\n         request_data = _get_request_data(try_url_params=side_effect_free)\n     except Exception:\n         return api_view_action(logic_function, ver)\n \n-    if not isinstance(request_data, dict):\n+    if not request_data:\n         return api_view_action(logic_function, ver)\n \n-    context = {u'model': model, u'session': model.Session, u'user': g.user,\n-               u'api_version': ver, u'auth_user_obj': g.userobj}\n+    context = cast(Context, {'model': model, 'session': model.Session,\n+                             'user': g.user, 'api_version': ver,\n+                             'auth_user_obj': g.userobj})\n \n-    return_dict = {u'help': h.url_for(u'api.action',\n-                                      logic_function=u'help_show',\n-                                      ver=ver,\n-                                      name=logic_function,\n-                                      _external=True,)}\n+    return_dict = {'help': h.url_for('api.action',\n+                                     logic_function='help_show',\n+                                     ver=ver,\n+                                     name=logic_function,\n+                                     _external=True)}\n \n     # extra logging here\n-    id = request_data.get('id', request_data.get('package_id', request_data.get('resource_id')))\n+    id = request_data.get('id', request_data.get(\n+        'package_id', request_data.get('resource_id')))\n     pkg_dict = _get_package_from_api_request(logic_function, id, context)\n     if pkg_dict:\n         _log_api_access(request_data, pkg_dict)\n@@ -1005,48 +1114,55 @@ def action(logic_function, ver=API_DEFAULT_VERSION):\n         package_type = pkg_dict.get('type') if pkg_dict \\\n             else request_data.get('package_type', request_data.get('type'))\n         if package_type and package_type in h.recombinant_get_types():\n-            return_dict[u'error'] = {u'__type': u'Authorization Error',\n-                                    u'message': _(u'Access denied')}\n-            return_dict[u'success'] = False\n+            return_dict['error'] = {'__type': 'Authorization Error',\n+                                    'message': _('Access denied')}\n+            return_dict['success'] = False\n \n-            return _finish(403, return_dict, content_type=u'json')\n+            return _finish(403, return_dict, content_type='json')\n \n     return api_view_action(logic_function, ver)\n \n \n-def _get_package_from_api_request(logic_function, id, context):\n-    # type: (str, str, dict) -> dict|None\n+def _get_package_from_api_request(logic_function: str,\n+                                  id: str,\n+                                  context: Context) -> Optional[Dict[str, Any]]:\n     \"\"\"\n     Tries to return the package for an API request\n     \"\"\"\n     if not id:\n         return None\n-    if logic_function.startswith('group') \\\n-    or logic_function.startswith('organization') \\\n-    or logic_function.startswith('urser'):\n+    if (\n+      logic_function.startswith('group') or\n+      logic_function.startswith('organization') or\n+      logic_function.startswith('urser')):\n         return None\n-    if logic_function.startswith('resource') \\\n-    or logic_function.startswith('datastore'):\n+    if (\n+      logic_function.startswith('resource') or\n+      logic_function.startswith('datastore')):\n         try:\n-            res_dict = get_action(u'resource_show')(context, {u'id': id})\n+            res_dict = get_action('resource_show')(context, {'id': id})\n             id = res_dict['package_id']\n         except (NotAuthorized, NotFound):\n             pass\n     try:\n-        pkg_dict = get_action(u'package_show')(context, {u'id': id})\n+        pkg_dict = get_action('package_show')(context, {'id': id})\n         return pkg_dict\n     except (NotAuthorized, NotFound):\n         return None\n \n \n-def _log_api_access(request_data, pkg_dict):\n+def _log_api_access(request_data: Dict[str, Any], pkg_dict: Dict[str, Any]):\n     org = model.Group.get(pkg_dict.get('owner_org'))\n-    g.log_extra = u'org={o} type={t} id={i}'.format(\n-        o=org.name,\n+    if not org:\n+        org_name = 'Unknown'\n+    else:\n+        org_name = org.name\n+    g.log_extra = 'org={o} type={t} id={i}'.format(\n+        o=org_name,\n         t=pkg_dict.get('type'),\n         i=pkg_dict.get('id'))\n     if 'resource_id' in request_data:\n-        g.log_extra += u' rid={0}'.format(request_data['resource_id'])\n+        g.log_extra += ' rid={0}'.format(request_data['resource_id'])\n \n \n def notice_no_access():\n@@ -1074,7 +1190,11 @@ def notice_no_access():\n           'open-ouvert@tbs-sct.gc.ca</a>'), True)\n \n \n-def notify_ckan_user_create(email, fullname, username, phoneno, dept):\n+def notify_ckan_user_create(email: str,\n+                            fullname: str,\n+                            username: str,\n+                            phoneno: str,\n+                            dept: str):\n     \"\"\"\n     Send an e-mail notification about new users that register on the site to\n     the configured recipient and to the new user\n@@ -1097,8 +1217,8 @@ def notify_ckan_user_create(email, fullname, username, phoneno, dept):\n                 ),\n                 config['canada.notification_new_user_email'],\n                 (\n-                    u'New Registry Account Created / Nouveau compte'\n-                    u' cr\\u00e9\\u00e9 dans le registre de Gouvernement ouvert'\n+                    'New Registry Account Created / Nouveau compte'\n+                    ' cr\\u00e9\\u00e9 dans le registre de Gouvernement ouvert'\n                 ),\n                 render(\n                     'user/new_user_email.html',\n@@ -1107,7 +1227,7 @@ def notify_ckan_user_create(email, fullname, username, phoneno, dept):\n             )\n     except ckan.lib.mailer.MailerException as m:\n         log = getLogger('ckanext')\n-        log.error(m.message)\n+        log.error(getattr(m, 'message', None))\n \n     try:\n         xtra_vars = {\n@@ -1121,8 +1241,8 @@ def notify_ckan_user_create(email, fullname, username, phoneno, dept):\n             fullname or email,\n             email,\n             (\n-                u'Welcome to the Open Government Registry / '\n-                u'Bienvenue au Registre de Gouvernement Ouvert'\n+                'Welcome to the Open Government Registry / '\n+                'Bienvenue au Registre de Gouvernement Ouvert'\n             ),\n             render(\n                 'user/user_welcome_email.html',\n@@ -1131,34 +1251,33 @@ def notify_ckan_user_create(email, fullname, username, phoneno, dept):\n         )\n     except (ckan.lib.mailer.MailerException, socket_error) as m:\n         log = getLogger('ckanext')\n-        log.error(m.message)\n+        log.error(getattr(m, 'message', None))\n \n \n @canada_views.route('/organization/member_dump/<id>', methods=['GET'])\n-def organization_member_dump(id):\n-    records_format = u'csv'\n+def organization_member_dump(id: str):\n+    records_format = 'csv'\n \n     org_dict = model.Group.get(id)\n     if not org_dict:\n-        abort(404, _(u'Organization not found'))\n+        abort(404, _('Organization not found'))\n \n-    context = {u'model': model,\n-                u'session': model.Session,\n-                u'user': g.user}\n+    context = cast(Context, {'model': model,\n+                             'session': model.Session,\n+                             'user': g.user})\n \n     try:\n-        check_access('organization_member_create', context, {u'id': id})\n+        check_access('organization_member_create', context, {'id': id})\n     except NotAuthorized:\n-        abort(404,\n-             _(u'Not authorized to access {org_name} members download'\n-                .format(org_name=org_dict.title)))\n+        abort(404, _('Not authorized to access {org_name} members download'.format(\n+            org_name=org_dict.title)))\n \n     try:\n-        members = get_action(u'member_list')(context, {\n-            u'id': id,\n-            u'object_type': u'user',\n-            u'records_format': records_format,\n-            u'include_total': False,\n+        members = get_action('member_list')(context, {\n+            'id': id,\n+            'object_type': 'user',\n+            'records_format': records_format,\n+            'include_total': False,\n         })\n     except NotFound:\n         abort(404, _('Members not found'))\n@@ -1179,51 +1298,54 @@ def organization_member_dump(id):\n     output_stream.write(BOM)\n     csv.writer(output_stream).writerows(results)\n \n-    file_name = u'{org_id}-{members}'.format(\n+    file_name = '{org_id}-{members}'.format(\n             org_id=org_dict.name,\n-            members=_(u'members'))\n+            members=_('members'))\n \n     output_stream.seek(0)\n     response = make_response(output_stream.read())\n     output_stream.close()\n-    content_disposition = u'attachment; filename=\"{name}.csv\"'.format(\n+    content_disposition = 'attachment; filename=\"{name}.csv\"'.format(\n                                     name=file_name)\n     content_type = b'text/csv; charset=utf-8'\n-    response.headers['Content-Type'] = content_type\n+    # type_ignore_reason: bytes allowed and expected in CKAN\n+    response.headers['Content-Type'] = content_type  # type: ignore\n     response.headers['Content-Disposition'] = content_disposition\n \n     return response\n \n \n @canada_views.route('/organization/members/<id>', methods=['GET', 'POST'])\n-def members(id):\n+def members(id: str):\n     \"\"\"\n     Copied from core. Permissions for Editors to view members in GET.\n     \"\"\"\n     extra_vars = {}\n     set_org(True)\n-    context = {u'model': model, u'session': model.Session, u'user': g.user}\n+    context = cast(Context, {'model': model, 'session': model.Session, 'user': g.user})\n \n     try:\n-        data_dict = {u'id': id}\n+        data_dict: Dict[str, Any] = {'id': id}\n         if request.method == 'POST':\n-            auth_action = u'group_edit_permissions'\n+            auth_action = 'group_edit_permissions'\n         else:\n-            auth_action = u'view_org_members'\n+            auth_action = 'view_org_members'\n         check_access(auth_action, context, data_dict)\n-        members = get_action(u'member_list')(context, {\n-            u'id': id,\n-            u'object_type': u'user'\n+        members = get_action('member_list')(context, {\n+            'id': id,\n+            'object_type': 'user'\n         })\n         data_dict['include_datasets'] = False\n-        group_dict = get_action(u'organization_show')(context, data_dict)\n+        group_dict = get_action('organization_show')(context, data_dict)\n     except NotFound:\n-        abort(404, _(u'Organization not found'))\n+        abort(404, _('Organization not found'))\n     except NotAuthorized:\n         if request.method == 'POST':\n-            error_message = _(u'User %r not authorized to edit members of %s') % (g.user, id)\n+            error_message = _('User %r not authorized to edit members of %s') % \\\n+                (g.user, id)\n         else:\n-            error_message = _(u'User %r not authorized to view members of %s') % (g.user, id)\n+            error_message = _('User %r not authorized to view members of %s') % \\\n+                (g.user, id)\n         abort(403, error_message)\n \n     # TODO: Remove\n@@ -1233,11 +1355,11 @@ def members(id):\n     g.group_dict = group_dict\n \n     extra_vars = {\n-        u\"members\": members,\n-        u\"group_dict\": group_dict,\n-        u\"group_type\": 'organization'\n+        \"members\": members,\n+        \"group_dict\": group_dict,\n+        \"group_type\": 'organization'\n     }\n-    return render(u'organization/members.html', extra_vars)\n+    return render('organization/members.html', extra_vars)\n \n \n @canada_views.route('/ckan-admin', methods=['GET'], strict_slashes=False)\n@@ -1255,7 +1377,7 @@ def ckan_admin_index():\n         if admin.name == site_id:\n             continue\n         sysadmins.append(admin.name)\n-    return render(u'admin/index.html', extra_vars={'sysadmins': sysadmins})\n+    return render('admin/index.html', extra_vars={'sysadmins': sysadmins})\n \n \n @canada_views.route('/ckan-admin/config', methods=['GET', 'POST'])\n@@ -1281,11 +1403,12 @@ def ckan_admin_portal_sync():\n     start = limit * (page_number - 1)\n     extra_vars = {}\n \n-    out_of_sync_packages = get_action('list_out_of_sync_packages')({'user': g.user}, {'limit': limit, 'start': start})\n+    out_of_sync_packages = get_action('list_out_of_sync_packages')(\n+        {'user': g.user}, {'limit': limit, 'start': start})\n     extra_vars['out_of_sync_packages'] = out_of_sync_packages\n \n-    def _basic_pager_uri(page, text):\n-        return  h.url_for('canada.ckan_admin_portal_sync', page=page)\n+    def _basic_pager_uri(page: Union[int, str], text: str):\n+        return h.url_for('canada.ckan_admin_portal_sync', page=page)\n     pager_url = partial(_basic_pager_uri, page=page_number, text='')\n \n     extra_vars['page'] = Page("
                },
                {
                    "sha": "2cc8e7e3f3ea29e9c26d626ccdbbf048efa55e5e",
                    "filename": "package-lock.json",
                    "status": "added",
                    "additions": 66,
                    "deletions": 0,
                    "changes": 66,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/package-lock.json",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/package-lock.json",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/package-lock.json?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,66 @@\n+{\n+  \"name\": \"ckanext-canada\",\n+  \"version\": \"1.0.0\",\n+  \"lockfileVersion\": 2,\n+  \"requires\": true,\n+  \"packages\": {\n+    \"\": {\n+      \"version\": \"1.0.0\",\n+      \"license\": \"MIT\",\n+      \"devDependencies\": {\n+        \"pyright\": \"1.1.386\"\n+      }\n+    },\n+    \"node_modules/fsevents\": {\n+      \"version\": \"2.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n+      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n+      \"dev\": true,\n+      \"hasInstallScript\": true,\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n+      }\n+    },\n+    \"node_modules/pyright\": {\n+      \"version\": \"1.1.386\",\n+      \"resolved\": \"https://registry.npmjs.org/pyright/-/pyright-1.1.386.tgz\",\n+      \"integrity\": \"sha512-mpVeXb12CtDC5EIm6lbrEjD6tD/qIpRSmkYZB16Vl5xWgYvFcgAFKgbCBSiy9D1h4eQBmqAP/9oFatmZ2hjTPw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"fsevents\": \"~2.3.3\"\n+      },\n+      \"bin\": {\n+        \"pyright\": \"index.js\",\n+        \"pyright-langserver\": \"langserver.index.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14.0.0\"\n+      },\n+      \"optionalDependencies\": {\n+        \"fsevents\": \"~2.3.3\"\n+      }\n+    }\n+  },\n+  \"dependencies\": {\n+    \"fsevents\": {\n+      \"version\": \"2.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n+      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n+      \"dev\": true,\n+      \"optional\": true\n+    },\n+    \"pyright\": {\n+      \"version\": \"1.1.386\",\n+      \"resolved\": \"https://registry.npmjs.org/pyright/-/pyright-1.1.386.tgz\",\n+      \"integrity\": \"sha512-mpVeXb12CtDC5EIm6lbrEjD6tD/qIpRSmkYZB16Vl5xWgYvFcgAFKgbCBSiy9D1h4eQBmqAP/9oFatmZ2hjTPw==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"fsevents\": \"~2.3.3\"\n+      }\n+    }\n+  }\n+}"
                },
                {
                    "sha": "0c863385bbc40dc32e2bc4d44866b11dea3002f5",
                    "filename": "package.json",
                    "status": "added",
                    "additions": 21,
                    "deletions": 0,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/package.json",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/package.json",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/package.json?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,21 @@\n+{\n+  \"name\": \"ckanext-canada\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"CKAN Canada Plugin\",\n+  \"dependencies\": {},\n+  \"devDependencies\": {\n+    \"pyright\": \"1.1.386\"\n+  },\n+  \"scripts\": {},\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"git+https://github.com/open-data/ckanext-canada.git\"\n+  },\n+  \"keywords\": [],\n+  \"author\": \"\",\n+  \"license\": \"MIT\",\n+  \"bugs\": {\n+    \"url\": \"https://github.com/open-data/ckanext-canada/issues\"\n+  },\n+  \"homepage\": \"https://github.com/open-data/ckanext-canada#readme\"\n+}"
                },
                {
                    "sha": "64d49c9f788602fe603a72ecea4ce647a2b8445e",
                    "filename": "pyproject.toml",
                    "status": "added",
                    "additions": 87,
                    "deletions": 0,
                    "changes": 87,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/pyproject.toml",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/pyproject.toml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/pyproject.toml?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -0,0 +1,87 @@\n+[tool.pyright]\n+pythonVersion = \"3.7\"\n+include = [\"ckanext\"]\n+exclude = [\n+    \"**/tests\",\n+    \"**/migration\",\n+]\n+extraPaths = [\n+  \"../../lib/python3.9/site-packages\",\n+  \"../.\",\n+  \"../ckan\",\n+  \"../ckanapi\",\n+  \"../ckantoolkit\",\n+  \"../frictionless-py\",\n+  \"../frictionless\",\n+  \"../ckanext-cloudstorage\",\n+  \"../ckanext-dcat\",\n+  \"../ckanext-dsaudit\",\n+  \"../ckanext-fluent\",\n+  \"../ckanext-gcnotify\",\n+  \"../ckanext-recombinant\",\n+  \"../ckanext-scheming\",\n+  \"../ckanext-security\",\n+  \"../ckanext-validation\",\n+  \"../ckanext-xloader\",\n+]\n+strict = []\n+strictParameterNoneValue = true\n+reportFunctionMemberAccess = true\n+reportMissingImports = true\n+reportMissingModuleSource = true\n+reportMissingTypeStubs = false\n+reportImportCycles = false\n+reportUnusedImport = true\n+reportUnusedClass = true\n+reportUnusedFunction = true\n+reportUnusedVariable = true\n+reportDuplicateImport = true\n+reportOptionalSubscript = true\n+reportOptionalMemberAccess = true\n+reportOptionalCall = true\n+reportOptionalIterable = true\n+reportOptionalContextManager = true\n+reportOptionalOperand = true\n+reportTypedDictNotRequiredAccess = false\n+reportConstantRedefinition = true\n+reportIncompatibleMethodOverride = false\n+reportIncompatibleVariableOverride = true\n+reportOverlappingOverload = true\n+reportUntypedFunctionDecorator = false\n+reportUnknownParameterType = true\n+reportUnknownArgumentType = false\n+reportUnknownLambdaType = false\n+reportUnknownMemberType = false\n+reportMissingTypeArgument = true\n+reportInvalidTypeVarUse = true\n+reportCallInDefaultInitializer = true\n+reportUnknownVariableType = false\n+reportUntypedBaseClass = true\n+reportUnnecessaryIsInstance = true\n+reportUnnecessaryCast = true\n+reportUnnecessaryComparison = true\n+reportAssertAlwaysTrue = true\n+reportSelfClsParameterName = true\n+reportUnusedCallResult = false\n+useLibraryCodeForTypes = true\n+reportGeneralTypeIssues = true\n+reportPropertyTypeMismatch = true\n+reportWildcardImportFromLibrary = true\n+reportUntypedClassDecorator = false\n+reportUntypedNamedTuple = true\n+reportPrivateUsage = false\n+reportPrivateImportUsage = true\n+reportInconsistentConstructor = true\n+reportMissingSuperCall = false\n+reportUninitializedInstanceVariable = false\n+reportInvalidStringEscapeSequence = true\n+reportMissingParameterType = true\n+reportImplicitStringConcatenation = false\n+reportUndefinedVariable = true\n+reportUnboundVariable = true\n+reportInvalidStubStatement = true\n+reportIncompleteStub = true\n+reportUnsupportedDunderAll = true\n+reportUnusedCoroutine = true\n+reportUnnecessaryTypeIgnoreComment = true\n+reportMatchNotExhaustive = true"
                },
                {
                    "sha": "c8022627e230e6de3fed7c3fde2ed70dd0df9c53",
                    "filename": "requirements.txt",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/requirements.txt",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/requirements.txt",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/requirements.txt?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -4,7 +4,6 @@ geojson==2.3.0\n geomet==0.2.0.post2\n docopt\n pyyaml==6.0.1\n-ckantoolkit\n pytz\n babel\n rdflib-jsonld\n@@ -13,3 +12,4 @@ configparser>=3.5.0\n openpyxl==2.6.4\n python-dateutil==2.8.2  # 2.9.0 breaks stuff in PY2 (March 1 2024)\n beautifulsoup4==4.8.2\n+typing_extensions==4.12.2"
                },
                {
                    "sha": "800bec9301b5cacdb1c2a6dc779eae9bd57162cc",
                    "filename": "setup.cfg",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 0,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/setup.cfg",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/setup.cfg",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/setup.cfg?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -18,3 +18,13 @@ output_dir = ckanext/canada/i18n\n domain = ckanext-canada\n directory = ckanext/canada/i18n\n statistics = true\n+\n+[flake8]\n+max-complexity = 100\n+max-line-length = 88\n+count = true\n+exit-zero = true\n+statistics = true\n+per-file-ignores =\n+  ckanext/canada/strings.py:E501\n+  ckanext/canada/tests/*:E501"
                },
                {
                    "sha": "0a9ec0ac939ad7b0d9a2e2f15728998292cceb67",
                    "filename": "setup.py",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 6,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/ckanext-canada/blob/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/setup.py",
                    "raw_url": "https://github.com/open-data/ckanext-canada/raw/19ab9b00ca8101f718c86a8c8aa82be5c38c6756/setup.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-canada/contents/setup.py?ref=19ab9b00ca8101f718c86a8c8aa82be5c38c6756",
                    "patch": "@@ -23,12 +23,12 @@\n     ],\n     entry_points=\"\"\"\n     [ckan.plugins]\n-    canada_internal=ckanext.canada.plugins:DataGCCAInternal\n-    canada_public=ckanext.canada.plugins:DataGCCAPublic\n-    canada_forms=ckanext.canada.plugins:DataGCCAForms\n-    canada_datasets=ckanext.canada.plugins:CanadaDatasetsPlugin\n-    canada_security=ckanext.canada.plugins:CanadaSecurityPlugin\n-    canada_theme=ckanext.canada.plugins:CanadaThemePlugin\n+    canada_internal=ckanext.canada.plugin:CanadaInternalPlugin\n+    canada_public=ckanext.canada.plugin:CanadaPublicPlugin\n+    canada_forms=ckanext.canada.plugin:CanadaFormsPlugin\n+    canada_datasets=ckanext.canada.plugin:CanadaDatasetsPlugin\n+    canada_security=ckanext.canada.plugin:CanadaSecurityPlugin\n+    canada_theme=ckanext.canada.plugin:CanadaThemePlugin\n \n     [babel.extractors]\n     ckan = ckan.lib.extract:extract_ckan"
                }
            ]
        },
        "ckanext-dcat": {
            "url": "https://api.github.com/repos/open-data/ckanext-dcat/compare/65be4ae51aa566d65e0db2fd41ee608bac9233c9...e91851c80c243f1acb5abc234d87e5b529394243",
            "html_url": "https://github.com/open-data/ckanext-dcat/compare/65be4ae51aa566d65e0db2fd41ee608bac9233c9...e91851c80c243f1acb5abc234d87e5b529394243",
            "permalink_url": "https://github.com/open-data/ckanext-dcat/compare/open-data:65be4ae...open-data:e91851c",
            "diff_url": "https://github.com/open-data/ckanext-dcat/compare/65be4ae51aa566d65e0db2fd41ee608bac9233c9...e91851c80c243f1acb5abc234d87e5b529394243.diff",
            "patch_url": "https://github.com/open-data/ckanext-dcat/compare/65be4ae51aa566d65e0db2fd41ee608bac9233c9...e91851c80c243f1acb5abc234d87e5b529394243.patch",
            "base_commit": {
                "sha": "65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                "node_id": "C_kwDOBSea59oAKDY1YmU0YWU1MWFhNTY2ZDY1ZTBkYjJmZDQxZWU2MDhiYWM5MjMzYzk",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-10T16:24:47Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-10T16:24:47Z"
                    },
                    "message": "feat(misc): changelog;\n\n- Added changelog.",
                    "tree": {
                        "sha": "e96ff674abfb4f0314181f010a1990dc0c111d9c",
                        "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/trees/e96ff674abfb4f0314181f010a1990dc0c111d9c"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                "html_url": "https://github.com/open-data/ckanext-dcat/commit/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "c71562611ed584459149f6a62413c83fd5729824",
                        "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/c71562611ed584459149f6a62413c83fd5729824",
                        "html_url": "https://github.com/open-data/ckanext-dcat/commit/c71562611ed584459149f6a62413c83fd5729824"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                "node_id": "C_kwDOBSea59oAKDY1YmU0YWU1MWFhNTY2ZDY1ZTBkYjJmZDQxZWU2MDhiYWM5MjMzYzk",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-10T16:24:47Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-10T16:24:47Z"
                    },
                    "message": "feat(misc): changelog;\n\n- Added changelog.",
                    "tree": {
                        "sha": "e96ff674abfb4f0314181f010a1990dc0c111d9c",
                        "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/trees/e96ff674abfb4f0314181f010a1990dc0c111d9c"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                "html_url": "https://github.com/open-data/ckanext-dcat/commit/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "c71562611ed584459149f6a62413c83fd5729824",
                        "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/c71562611ed584459149f6a62413c83fd5729824",
                        "html_url": "https://github.com/open-data/ckanext-dcat/commit/c71562611ed584459149f6a62413c83fd5729824"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 3,
            "behind_by": 0,
            "total_commits": 3,
            "commits": [
                {
                    "sha": "3250c674bb05cead3f9ecaa6fe0a04169d07792c",
                    "node_id": "C_kwDOBSea59oAKDMyNTBjNjc0YmIwNWNlYWQzZjllY2FhNmZlMGEwNDE2OWQwNzc5MmM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:54:27Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:54:27Z"
                        },
                        "message": "removal(dev): ckantoolkit;\n\n- Use `ckan.plugins.toolkit`",
                        "tree": {
                            "sha": "d8c1e3188768993033a68ffed201a8f9e4a9b626",
                            "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/trees/d8c1e3188768993033a68ffed201a8f9e4a9b626"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/commits/3250c674bb05cead3f9ecaa6fe0a04169d07792c",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/3250c674bb05cead3f9ecaa6fe0a04169d07792c",
                    "html_url": "https://github.com/open-data/ckanext-dcat/commit/3250c674bb05cead3f9ecaa6fe0a04169d07792c",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/3250c674bb05cead3f9ecaa6fe0a04169d07792c/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                            "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                            "html_url": "https://github.com/open-data/ckanext-dcat/commit/65be4ae51aa566d65e0db2fd41ee608bac9233c9"
                        }
                    ]
                },
                {
                    "sha": "14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7",
                    "node_id": "C_kwDOBSea59oAKDE0Y2ZiZjA5NDNiN2U2YjFmNWExZmU5NTI1YjA4Mjc5YWUwZjhlZTc",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:57:29Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:57:29Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "90b05208249b576ae2b741a6fa866438ec683f69",
                            "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/trees/90b05208249b576ae2b741a6fa866438ec683f69"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/commits/14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7",
                    "html_url": "https://github.com/open-data/ckanext-dcat/commit/14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "3250c674bb05cead3f9ecaa6fe0a04169d07792c",
                            "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/3250c674bb05cead3f9ecaa6fe0a04169d07792c",
                            "html_url": "https://github.com/open-data/ckanext-dcat/commit/3250c674bb05cead3f9ecaa6fe0a04169d07792c"
                        }
                    ]
                },
                {
                    "sha": "e91851c80c243f1acb5abc234d87e5b529394243",
                    "node_id": "C_kwDOBSea59oAKGU5MTg1MWM4MGMyNDNmMWFjYjVhYmMyMzRkODdlNWI1MjkzOTQyNDM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2025-01-24T16:02:12Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-24T16:02:12Z"
                        },
                        "message": "Merge pull request #7 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                        "tree": {
                            "sha": "90b05208249b576ae2b741a6fa866438ec683f69",
                            "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/trees/90b05208249b576ae2b741a6fa866438ec683f69"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-dcat/git/commits/e91851c80c243f1acb5abc234d87e5b529394243",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnk7mECRC1aQ7uu5UhlAAA5j8QAHLuACQgFoJXnqqr2X3SZbE5\ngRarXBijF7sqS5Mpm6F8g8gRruB5qcws1DkRGOT+LpFZqOnFc1fTAJ0AHfLsd1HK\nGMNWYnKo3fu/WRM3LcdzKNtdDUvNr6i03t13qr6Lpxh2ycDhN+7J071P9k2kJaVJ\nOaN4P0qY8tA+QMc1reK9bOIjsbYYWG7q3vOhdqarSwVhfNHEW6lX80eXif1F2xfd\nEFdveAVumnoFdcnvjd08pGd7qxZ8DyucL4iNKvvCnV+6ESo+3dAeHu4pxGiWPzRu\nGTUl1RHwqooGqV00tpw3//vdelO6JEnG15ZjmBjky/YozNgo7yOIStKuYLYazZ4Z\ndSDCiyhJTwPF9Ea5pdpcVfNI5P2WDkCg4790QByV0xVlhukeLZDJJkOibkOM61U5\nzj8vEr4MyvjzFRpR0RHx+pEmvFyu5FpWA+/MVNtE0HZPUtSgPvAUeVcgyFOHT49x\n8OgNKm4/BApxsQeujVbG14BOeQ2ANnIPX4IoLfvzYjTqGsGPgmxKzKskK5NgCA40\n8OQYhqDv3aYUQiOYCcV5lwn2M4HQC+CEtnstNEVnHMQoJy1Net/mLNuH6/KD3ax8\n+gv5LCViNsQrdpHOGI3NeKvBezuV3TYDrQxSdEK0NQjPRXiHv4htNnQ4+5XzSrPP\nKQJw8LwOLj/JBmttegBG\n=SQ1G\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 90b05208249b576ae2b741a6fa866438ec683f69\nparent 65be4ae51aa566d65e0db2fd41ee608bac9233c9\nparent 14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737734532 -0500\ncommitter GitHub <noreply@github.com> 1737734532 -0500\n\nMerge pull request #7 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                            "verified_at": "2025-01-24T16:07:15Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/e91851c80c243f1acb5abc234d87e5b529394243",
                    "html_url": "https://github.com/open-data/ckanext-dcat/commit/e91851c80c243f1acb5abc234d87e5b529394243",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/e91851c80c243f1acb5abc234d87e5b529394243/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                            "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/65be4ae51aa566d65e0db2fd41ee608bac9233c9",
                            "html_url": "https://github.com/open-data/ckanext-dcat/commit/65be4ae51aa566d65e0db2fd41ee608bac9233c9"
                        },
                        {
                            "sha": "14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7",
                            "url": "https://api.github.com/repos/open-data/ckanext-dcat/commits/14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7",
                            "html_url": "https://github.com/open-data/ckanext-dcat/commit/14cfbf0943b7e6b1f5a1fe9525b08279ae0f8ee7"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "00d6b668083daabe472103fe395061cc28d973b0",
                    "filename": "changes/7.canada.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/changes%2F7.canada.changes",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/changes%2F7.canada.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/changes%2F7.canada.changes?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -0,0 +1 @@\n+Use `ckan.plugins.toolkit` instead of `ckantoolkit`"
                },
                {
                    "sha": "0d77860fe9cef71a058aa3ceabe910778cf25be7",
                    "filename": "ckanext/dcat/blueprints.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fblueprints.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fblueprints.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Fblueprints.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -1,7 +1,8 @@\n # -*- coding: utf-8 -*-\n from flask import Blueprint, jsonify, make_response\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from ckan.views.dataset import CreateView\n "
                },
                {
                    "sha": "84b28b7dc1215a1938cfa6c8a057d8b0fd762abe",
                    "filename": "ckanext/dcat/harvesters/base.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fharvesters%2Fbase.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fharvesters%2Fbase.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Fharvesters%2Fbase.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -8,7 +8,8 @@\n from ckan import plugins as p\n from ckan import model\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n import ckan.plugins.toolkit as toolkit\n \n from ckanext.harvest.harvesters import HarvesterBase"
                },
                {
                    "sha": "95efa1da50bf22dd0949eabb9549ae967603cb01",
                    "filename": "ckanext/dcat/logic.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Flogic.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Flogic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Flogic.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -3,7 +3,8 @@\n import json\n \n import six\n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n from dateutil.parser import parse as dateutil_parse\n \n from ckan.plugins import toolkit"
                },
                {
                    "sha": "8800872f9cf508964d1109a3b908dc7da87e0325",
                    "filename": "ckanext/dcat/plugins/__init__.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fplugins%2F__init__.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fplugins%2F__init__.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Fplugins%2F__init__.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -5,7 +5,8 @@\n \n import six\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from ckan import plugins as p\n try:"
                },
                {
                    "sha": "01cd9d5d897de3133a5be75f16744f46e5002ab8",
                    "filename": "ckanext/dcat/plugins/pylons_plugin.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fplugins%2Fpylons_plugin.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fplugins%2Fpylons_plugin.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Fplugins%2Fpylons_plugin.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -1,6 +1,7 @@\n # -*- coding: utf-8 -*-\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n import ckan.plugins as p\n \n import ckanext.dcat.utils as utils"
                },
                {
                    "sha": "f0f07deda347d24be9b270d89a0d0ffdcff9b02a",
                    "filename": "ckanext/dcat/processors.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fprocessors.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fprocessors.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Fprocessors.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -8,7 +8,8 @@\n import json\n from pkg_resources import iter_entry_points\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n import rdflib\n import rdflib.parser"
                },
                {
                    "sha": "d18e9b8efa8f9e37d7f19bff1029423a32fedc42",
                    "filename": "ckanext/dcat/profiles.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fprofiles.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Fprofiles.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Fprofiles.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -8,7 +8,8 @@\n \n from dateutil.parser import parse as parse_date\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n import rdflib\n from rdflib import URIRef, BNode, Literal"
                },
                {
                    "sha": "614b28030c1ff893a58e3cf9623d7584c64c4953",
                    "filename": "ckanext/dcat/tests/test_base_parser.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_base_parser.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_base_parser.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_base_parser.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -3,7 +3,8 @@\n \n import pytest\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from rdflib import Graph, URIRef, Literal\n from rdflib.namespace import Namespace, RDF"
                },
                {
                    "sha": "02e2fe8e505c77ee75e35d8f3bcb8913761abbd3",
                    "filename": "ckanext/dcat/tests/test_base_serializer.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_base_serializer.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_base_serializer.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_base_serializer.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -1,6 +1,7 @@\n from builtins import str\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from rdflib import URIRef, Literal\n from rdflib.namespace import Namespace, RDF"
                },
                {
                    "sha": "caa274b3fba8ce0d2380b425d9080cdea2af4a03",
                    "filename": "ckanext/dcat/tests/test_blueprints.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_blueprints.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_blueprints.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_blueprints.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -11,7 +11,8 @@\n from ckan import plugins as p\n \n from rdflib import Graph\n-from ckantoolkit.tests import factories\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.tests import factories\n \n from ckanext.dcat.processors import RDFParser\n from ckanext.dcat.profiles import RDF, DCAT"
                },
                {
                    "sha": "cef611e29ee93fd09059acbed1776bff82899cba",
                    "filename": "ckanext/dcat/tests/test_euro_dcatap_2_profile_parse.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_2_profile_parse.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_2_profile_parse.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_2_profile_parse.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -12,8 +12,9 @@\n \n from ckan.plugins import toolkit\n \n-from ckantoolkit import config\n-from ckantoolkit.tests import helpers, factories\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n+from ckan.tests import helpers, factories\n \n from ckanext.dcat.processors import RDFParser, RDFSerializer\n from ckanext.dcat.profiles import (DCAT, DCT, ADMS, LOCN, SKOS, GSP, RDFS,"
                },
                {
                    "sha": "1f04c7381853c69c6555332c00b7a7970fe05a4c",
                    "filename": "ckanext/dcat/tests/test_euro_dcatap_2_profile_serialize.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 2,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_2_profile_serialize.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_2_profile_serialize.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_2_profile_serialize.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -6,15 +6,17 @@\n \n import pytest\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from dateutil.parser import parse as parse_date\n from rdflib import URIRef, BNode, Literal\n from rdflib.namespace import RDF\n \n from geomet import wkt\n \n-from ckantoolkit.tests import helpers, factories\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.tests import helpers, factories\n \n from ckanext.dcat import utils\n from ckanext.dcat.processors import RDFSerializer"
                },
                {
                    "sha": "8391dc455184a2fd645991e5ee6717825409dbe8",
                    "filename": "ckanext/dcat/tests/test_euro_dcatap_profile_parse.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_profile_parse.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_profile_parse.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_profile_parse.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -9,8 +9,9 @@\n \n from ckan.plugins import toolkit\n \n-from ckantoolkit import config\n-from ckantoolkit.tests import helpers, factories\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n+from ckan.tests import helpers, factories\n \n from ckanext.dcat.processors import RDFParser, RDFSerializer\n from ckanext.dcat.profiles import (DCAT, DCT, ADMS, LOCN, SKOS, GSP, RDFS,"
                },
                {
                    "sha": "e795d5017b01d9c116418e4e6cb2b572947a7c98",
                    "filename": "ckanext/dcat/tests/test_euro_dcatap_profile_serialize.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 3,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_profile_serialize.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_profile_serialize.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_euro_dcatap_profile_serialize.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -4,20 +4,22 @@\n \n import pytest\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from dateutil.parser import parse as parse_date\n from rdflib import URIRef, BNode, Literal\n from rdflib.namespace import RDF\n \n from geomet import wkt\n \n-from ckantoolkit.tests import helpers, factories\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.tests import helpers, factories\n \n from ckanext.dcat import utils\n from ckanext.dcat.processors import RDFSerializer\n from ckanext.dcat.profiles import (DCAT, DCT, ADMS, XSD, VCARD, FOAF, SCHEMA,\n-                                   SKOS, LOCN, GSP, OWL, SPDX, GEOJSON_IMT, \n+                                   SKOS, LOCN, GSP, OWL, SPDX, GEOJSON_IMT,\n                                    DISTRIBUTION_LICENSE_FALLBACK_CONFIG)\n from ckanext.dcat.utils import DCAT_EXPOSE_SUBCATALOGS\n from ckanext.dcat.tests.utils import BaseSerializeTest"
                },
                {
                    "sha": "ccc41c15102cced1474ce762ffe2b008e27d58dd",
                    "filename": "ckanext/dcat/tests/test_harvester.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_harvester.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_harvester.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_harvester.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -15,8 +15,9 @@\n     from mock import patch\n \n import ckan.plugins as p\n-from ckantoolkit import config\n-from ckantoolkit.tests import helpers\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n+from ckan.tests import helpers\n \n import ckanext.harvest.model as harvest_model\n from ckanext.harvest import queue"
                },
                {
                    "sha": "6476eca364bb49c9b4355d5190684d858b0ae1aa",
                    "filename": "ckanext/dcat/tests/test_json_harvester.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_json_harvester.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_json_harvester.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_json_harvester.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -8,7 +8,8 @@\n except ImportError:\n     from mock import patch\n \n-from ckantoolkit.tests import helpers\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.tests import helpers\n \n import ckan.tests.factories as factories\n "
                },
                {
                    "sha": "12280d8c0fea0a8fdfdefffedf3b919ae33f0d68",
                    "filename": "ckanext/dcat/tests/test_logic.py",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_logic.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_logic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_logic.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -10,8 +10,9 @@\n \n from ckan.plugins import toolkit\n \n-from ckantoolkit import config\n-from ckantoolkit.tests import helpers, factories\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n+from ckan.tests import helpers, factories\n \n \n from ckanext.dcat.logic import _pagination_info"
                },
                {
                    "sha": "4d61ce8659e7837f01760042bbb94c1d24c442cb",
                    "filename": "ckanext/dcat/tests/test_schemaorg_profile_serialize.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 2,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_schemaorg_profile_serialize.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Ftests%2Ftest_schemaorg_profile_serialize.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Ftests%2Ftest_schemaorg_profile_serialize.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -3,13 +3,15 @@\n \n import pytest\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from dateutil.parser import parse as parse_date\n from rdflib import URIRef, BNode, Literal\n from rdflib.namespace import RDF\n \n-from ckantoolkit.tests import helpers, factories\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.tests import helpers, factories\n \n from ckanext.dcat import utils\n from ckanext.dcat.processors import RDFSerializer"
                },
                {
                    "sha": "66920a46fcaf481c28eeb358dc042b855a4ab100",
                    "filename": "ckanext/dcat/urls.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Furls.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Furls.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Furls.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -1,6 +1,7 @@\n import six\n from ckan.plugins import toolkit as tk\n-from ckantoolkit import url_for as core_url_for\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import url_for as core_url_for\n \n \n def url_for(*args, **kwargs):"
                },
                {
                    "sha": "bad66e47d13443cb6a64eec30abef0b4ba4e5a3c",
                    "filename": "ckanext/dcat/utils.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Futils.py",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/ckanext%2Fdcat%2Futils.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/ckanext%2Fdcat%2Futils.py?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -7,8 +7,8 @@\n import re\n import operator\n \n-\n-from ckantoolkit import config, h\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config, h\n \n try:\n     # CKAN >= 2.6"
                },
                {
                    "sha": "d4e64bfc17fc767c0c085f15ee94c638ae1b81ff",
                    "filename": "requirements-py2.txt",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/requirements-py2.txt",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/requirements-py2.txt",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/requirements-py2.txt?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -1,6 +1,7 @@\n rdflib==5.0.0\n rdflib-jsonld==0.5.0\n geomet>=0.2.0\n-ckantoolkit>=0.0.7\n+# (canada fork only): ckan.plugins.toolkit\n+# ckantoolkit>=0.0.7\n future>=0.18.2\n six"
                },
                {
                    "sha": "cef383c0e325ff8715479c5a94cbafb510871975",
                    "filename": "requirements.txt",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-dcat/blob/e91851c80c243f1acb5abc234d87e5b529394243/requirements.txt",
                    "raw_url": "https://github.com/open-data/ckanext-dcat/raw/e91851c80c243f1acb5abc234d87e5b529394243/requirements.txt",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-dcat/contents/requirements.txt?ref=e91851c80c243f1acb5abc234d87e5b529394243",
                    "patch": "@@ -1,5 +1,6 @@\n rdflib==6.1.1\n geomet>=0.2.0\n-ckantoolkit>=0.0.7\n+# (canada fork only): ckan.plugins.toolkit\n+# ckantoolkit>=0.0.7\n future>=0.18.2\n six"
                }
            ]
        },
        "ckanext-fluent": {
            "url": "https://api.github.com/repos/ckan/ckanext-fluent/compare/1c29c017b9dd2a7a86051eb7c0416135bf078292...4e9340a934050e937bed49e6009d0971d880410a",
            "html_url": "https://github.com/ckan/ckanext-fluent/compare/1c29c017b9dd2a7a86051eb7c0416135bf078292...4e9340a934050e937bed49e6009d0971d880410a",
            "permalink_url": "https://github.com/ckan/ckanext-fluent/compare/ckan:1c29c01...ckan:4e9340a",
            "diff_url": "https://github.com/ckan/ckanext-fluent/compare/1c29c017b9dd2a7a86051eb7c0416135bf078292...4e9340a934050e937bed49e6009d0971d880410a.diff",
            "patch_url": "https://github.com/ckan/ckanext-fluent/compare/1c29c017b9dd2a7a86051eb7c0416135bf078292...4e9340a934050e937bed49e6009d0971d880410a.patch",
            "base_commit": {
                "sha": "1c29c017b9dd2a7a86051eb7c0416135bf078292",
                "node_id": "C_kwDOAWiV8NoAKDFjMjljMDE3YjlkZDJhN2E4NjA1MWViN2MwNDE2MTM1YmYwNzgyOTI",
                "commit": {
                    "author": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-06-27T23:03:01Z"
                    },
                    "committer": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-06-27T23:03:01Z"
                    },
                    "message": "document example schema",
                    "tree": {
                        "sha": "4553961b86b9c0bace2524f01254ae12155989a9",
                        "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/trees/4553961b86b9c0bace2524f01254ae12155989a9"
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                "html_url": "https://github.com/ckan/ckanext-fluent/commit/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                "comments_url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292/comments",
                "author": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "26181fd9e8a14bfef0adfe0bdb01c82d9c6cd08c",
                        "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/26181fd9e8a14bfef0adfe0bdb01c82d9c6cd08c",
                        "html_url": "https://github.com/ckan/ckanext-fluent/commit/26181fd9e8a14bfef0adfe0bdb01c82d9c6cd08c"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "1c29c017b9dd2a7a86051eb7c0416135bf078292",
                "node_id": "C_kwDOAWiV8NoAKDFjMjljMDE3YjlkZDJhN2E4NjA1MWViN2MwNDE2MTM1YmYwNzgyOTI",
                "commit": {
                    "author": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-06-27T23:03:01Z"
                    },
                    "committer": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-06-27T23:03:01Z"
                    },
                    "message": "document example schema",
                    "tree": {
                        "sha": "4553961b86b9c0bace2524f01254ae12155989a9",
                        "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/trees/4553961b86b9c0bace2524f01254ae12155989a9"
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                "html_url": "https://github.com/ckan/ckanext-fluent/commit/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                "comments_url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292/comments",
                "author": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "26181fd9e8a14bfef0adfe0bdb01c82d9c6cd08c",
                        "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/26181fd9e8a14bfef0adfe0bdb01c82d9c6cd08c",
                        "html_url": "https://github.com/ckan/ckanext-fluent/commit/26181fd9e8a14bfef0adfe0bdb01c82d9c6cd08c"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 2,
            "behind_by": 0,
            "total_commits": 2,
            "commits": [
                {
                    "sha": "3391457b4b9b82a670ff5665f1baf0b94d810302",
                    "node_id": "C_kwDOAWiV8NoAKDMzOTE0NTdiNGI5YjgyYTY3MGZmNTY2NWYxYmFmMGI5NGQ4MTAzMDI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:11:38Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:11:38Z"
                        },
                        "message": "removal(dev): ckantoolkit;\n\n- Use `ckan.plugins.toolkit`",
                        "tree": {
                            "sha": "008532e4030add0e6c74b5f9dccbc93995b15db0",
                            "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/trees/008532e4030add0e6c74b5f9dccbc93995b15db0"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/commits/3391457b4b9b82a670ff5665f1baf0b94d810302",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/3391457b4b9b82a670ff5665f1baf0b94d810302",
                    "html_url": "https://github.com/ckan/ckanext-fluent/commit/3391457b4b9b82a670ff5665f1baf0b94d810302",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/3391457b4b9b82a670ff5665f1baf0b94d810302/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1c29c017b9dd2a7a86051eb7c0416135bf078292",
                            "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                            "html_url": "https://github.com/ckan/ckanext-fluent/commit/1c29c017b9dd2a7a86051eb7c0416135bf078292"
                        }
                    ]
                },
                {
                    "sha": "4e9340a934050e937bed49e6009d0971d880410a",
                    "node_id": "C_kwDOAWiV8NoAKDRlOTM0MGE5MzQwNTBlOTM3YmVkNDllNjAwOWQwOTcxZDg4MDQxMGE",
                    "commit": {
                        "author": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2025-01-24T15:38:27Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-24T15:38:27Z"
                        },
                        "message": "Merge pull request #53 from JVickery-TBS/removal/ckantoolkit\n\nUse `ckan.plugin.toolkit` Over `ckantoolkit`",
                        "tree": {
                            "sha": "008532e4030add0e6c74b5f9dccbc93995b15db0",
                            "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/trees/008532e4030add0e6c74b5f9dccbc93995b15db0"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-fluent/git/commits/4e9340a934050e937bed49e6009d0971d880410a",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnk7PzCRC1aQ7uu5UhlAAA/bgQAECjfzJ7Zukzpmz+l6dNuvGV\n4lY7xNCk1dnnlLsa3vafJR/SApapfkTsQzDky8BTR6EPFATDurbbytt+IH5di2KV\nSC3fJqbVlf8Fxsw0AFpWGhp4UPFL2iMAImxFFZyrLY3gQdfV5AQjxU4WzsjrciV9\nvm6RkLX7oQm+FkHevPvnNCbUQAY5BOKyEXoNX2YMB+qT9KKS8JxPxqrlwgP/9Pxj\n22CL+nuP2sw2zY+EJCAwN+er28rI2ggTGfj0qiD8IjboyrlxJcDFARHW1u1X63Ai\n12/yB2P6ocwVYkZ6npqa8bEY2/qN3EURQb0ADYx3ypEculrhvl2bLkLeCZW2nIPF\nHsacgET/Be5RtlScmdPoMvCxg+e0MJCvGpyU3t6LJ0oCHIfqt67a78WZO1kq+uT9\ngyUEkpnb/AIkUjt3ljYPdYDiJFCV3vjGkW1yprATt0CQGUzNmwqLWx8Azws86CCy\nP52eerd4HWHdzaVtbFYpUE/QBlWb2Sj2dRpkOPZs72M9v/HLATsc5+BY7QV86Sv1\nDobt3o+DVo+b/hk9VXzVyOZwLcAfwyZK+C5lt4YPRi0BvR/D5TX+rmPhDbVUutX7\nKU1tUW+XvGwFDHVimdWCpe1fbTefrUePFaXmaednzoqijqeOqmr5qAGfJWY9IGfE\nVL/FImxdXOF3iFy1OvVr\n=dAqe\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 008532e4030add0e6c74b5f9dccbc93995b15db0\nparent 1c29c017b9dd2a7a86051eb7c0416135bf078292\nparent 3391457b4b9b82a670ff5665f1baf0b94d810302\nauthor Ian Ward <ian@excess.org> 1737733107 -0500\ncommitter GitHub <noreply@github.com> 1737733107 -0500\n\nMerge pull request #53 from JVickery-TBS/removal/ckantoolkit\n\nUse `ckan.plugin.toolkit` Over `ckantoolkit`",
                            "verified_at": "2025-01-24T15:43:30Z"
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/4e9340a934050e937bed49e6009d0971d880410a",
                    "html_url": "https://github.com/ckan/ckanext-fluent/commit/4e9340a934050e937bed49e6009d0971d880410a",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/4e9340a934050e937bed49e6009d0971d880410a/comments",
                    "author": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1c29c017b9dd2a7a86051eb7c0416135bf078292",
                            "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/1c29c017b9dd2a7a86051eb7c0416135bf078292",
                            "html_url": "https://github.com/ckan/ckanext-fluent/commit/1c29c017b9dd2a7a86051eb7c0416135bf078292"
                        },
                        {
                            "sha": "3391457b4b9b82a670ff5665f1baf0b94d810302",
                            "url": "https://api.github.com/repos/ckan/ckanext-fluent/commits/3391457b4b9b82a670ff5665f1baf0b94d810302",
                            "html_url": "https://github.com/ckan/ckanext-fluent/commit/3391457b4b9b82a670ff5665f1baf0b94d810302"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "465e861e2aa8401411bf552fb10f1a5904eca045",
                    "filename": "ckanext/fluent/validators.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 2,
                    "changes": 3,
                    "blob_url": "https://github.com/ckan/ckanext-fluent/blob/4e9340a934050e937bed49e6009d0971d880410a/ckanext%2Ffluent%2Fvalidators.py",
                    "raw_url": "https://github.com/ckan/ckanext-fluent/raw/4e9340a934050e937bed49e6009d0971d880410a/ckanext%2Ffluent%2Fvalidators.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-fluent/contents/ckanext%2Ffluent%2Fvalidators.py?ref=4e9340a934050e937bed49e6009d0971d880410a",
                    "patch": "@@ -2,8 +2,7 @@\n import re\n import six\n \n-from ckan.plugins.toolkit import missing, get_validator, Invalid\n-from ckantoolkit import config, _\n+from ckan.plugins.toolkit import missing, get_validator, Invalid, config, _\n \n from ckanext.fluent.helpers import (\n     fluent_form_languages, fluent_alternate_languages)"
                },
                {
                    "sha": "4ca83298a8b7c2b701a34bed29e8261dcf1f351c",
                    "filename": "requirements.txt",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/ckan/ckanext-fluent/blob/4e9340a934050e937bed49e6009d0971d880410a/requirements.txt",
                    "raw_url": "https://github.com/ckan/ckanext-fluent/raw/4e9340a934050e937bed49e6009d0971d880410a/requirements.txt",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-fluent/contents/requirements.txt?ref=4e9340a934050e937bed49e6009d0971d880410a",
                    "patch": "@@ -1,3 +1,2 @@\n -e git+https://github.com/ckan/ckanext-scheming.git#egg=ckanext-scheming\n six\n-ckantoolkit>=0.0.7"
                }
            ]
        },
        "ckanext-recombinant": {
            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/compare/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a...5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
            "html_url": "https://github.com/open-data/ckanext-recombinant/compare/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a...5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
            "permalink_url": "https://github.com/open-data/ckanext-recombinant/compare/open-data:1d4ea1f...open-data:5c30d7a",
            "diff_url": "https://github.com/open-data/ckanext-recombinant/compare/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a...5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6.diff",
            "patch_url": "https://github.com/open-data/ckanext-recombinant/compare/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a...5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6.patch",
            "base_commit": {
                "sha": "1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                "node_id": "C_kwDOAMR_-NoAKDFkNGVhMWZmNWUxZmEyZWI4YWZjN2UzODg4YmQ3MDMwNjI1NTFiN2E",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "97247789+JVickery-TBS@users.noreply.github.com",
                        "date": "2025-01-17T16:02:13Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2025-01-17T16:02:13Z"
                    },
                    "message": "Merge pull request #131 from open-data/feature/split-ds-errors\n\nSplit \\\\uF8FF at a Logic Level",
                    "tree": {
                        "sha": "d6a43a6ca3225cdfa220afd84fbe5c9896b78307",
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/d6a43a6ca3225cdfa220afd84fbe5c9896b78307"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnin8FCRC1aQ7uu5UhlAAAuvsQAFP9l4k8GGmbSn/25pb6D/RZ\nGNgBWnkmXlFWAqm5zAu37cwksqBecQtw5AtgqJVIJqekItmnTZlX/u87djwpqXaz\ngeDkUadXu7OgJveK8QOxfGmUjBiPgIuJb2gMShaoOpFbQwR84LGEo+ePu2270oJo\nReURcZlg0nvumcz9N0TMP3vf2yVJXWT40/fmXmhaOoh+qDG7MvNWPasYfzwmvKlu\nFvUQpX92o6yBwPIu9u9fVHLX970pQhoTArkIDeTxX+aVK2mpedFNgnoDmAbuO+KY\nX/4AGT2w2+6/4ANhw4WUCUD7eF9yqp5I7nL8R+qj1eiSIx0ebILsHrnlmcotaeUh\nAOA7BxlrE6KkRih5LitaE0XHGltIY+q78oA/AAgI+j89bkkqjpLzkXW9F0MIHXFi\nmyjX5TdxXbt7l25jxyclJKj0q25PCXL2PGDjP+TY5fzMO0fBTLO+bd7B6UQ0wEO+\nDfw+TGZXsMN2TXi7AFvu1JSLvQd0FphAPnYVMYjOsrCQv1rktA2rejpLNJ+nKtiB\nM13Y9vw9gd8QloF0zstp+q8QeLiwerWanloM52u+iQ0pfa6z81kYeGCsQuMzK5YA\n0WyXqotvN1gRKHgeL7p7vKKFwLAH5Lvmta/WOJCbfBYgBP2cKi2zlNlwsYQ1JNJA\nOFfD0XwXDH6JzGUSXDZm\n=Egnd\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree d6a43a6ca3225cdfa220afd84fbe5c9896b78307\nparent 7d2e5baf3dbb617dec32b4bc96887563638e42d1\nparent 527f3beb8dd8acca6b2b74d05de794ec7bd67598\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737129733 -0500\ncommitter GitHub <noreply@github.com> 1737129733 -0500\n\nMerge pull request #131 from open-data/feature/split-ds-errors\n\nSplit \\\\uF8FF at a Logic Level",
                        "verified_at": "2025-01-17T16:02:23Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                "html_url": "https://github.com/open-data/ckanext-recombinant/commit/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "7d2e5baf3dbb617dec32b4bc96887563638e42d1",
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/7d2e5baf3dbb617dec32b4bc96887563638e42d1",
                        "html_url": "https://github.com/open-data/ckanext-recombinant/commit/7d2e5baf3dbb617dec32b4bc96887563638e42d1"
                    },
                    {
                        "sha": "527f3beb8dd8acca6b2b74d05de794ec7bd67598",
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/527f3beb8dd8acca6b2b74d05de794ec7bd67598",
                        "html_url": "https://github.com/open-data/ckanext-recombinant/commit/527f3beb8dd8acca6b2b74d05de794ec7bd67598"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                "node_id": "C_kwDOAMR_-NoAKDFkNGVhMWZmNWUxZmEyZWI4YWZjN2UzODg4YmQ3MDMwNjI1NTFiN2E",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "97247789+JVickery-TBS@users.noreply.github.com",
                        "date": "2025-01-17T16:02:13Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2025-01-17T16:02:13Z"
                    },
                    "message": "Merge pull request #131 from open-data/feature/split-ds-errors\n\nSplit \\\\uF8FF at a Logic Level",
                    "tree": {
                        "sha": "d6a43a6ca3225cdfa220afd84fbe5c9896b78307",
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/d6a43a6ca3225cdfa220afd84fbe5c9896b78307"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnin8FCRC1aQ7uu5UhlAAAuvsQAFP9l4k8GGmbSn/25pb6D/RZ\nGNgBWnkmXlFWAqm5zAu37cwksqBecQtw5AtgqJVIJqekItmnTZlX/u87djwpqXaz\ngeDkUadXu7OgJveK8QOxfGmUjBiPgIuJb2gMShaoOpFbQwR84LGEo+ePu2270oJo\nReURcZlg0nvumcz9N0TMP3vf2yVJXWT40/fmXmhaOoh+qDG7MvNWPasYfzwmvKlu\nFvUQpX92o6yBwPIu9u9fVHLX970pQhoTArkIDeTxX+aVK2mpedFNgnoDmAbuO+KY\nX/4AGT2w2+6/4ANhw4WUCUD7eF9yqp5I7nL8R+qj1eiSIx0ebILsHrnlmcotaeUh\nAOA7BxlrE6KkRih5LitaE0XHGltIY+q78oA/AAgI+j89bkkqjpLzkXW9F0MIHXFi\nmyjX5TdxXbt7l25jxyclJKj0q25PCXL2PGDjP+TY5fzMO0fBTLO+bd7B6UQ0wEO+\nDfw+TGZXsMN2TXi7AFvu1JSLvQd0FphAPnYVMYjOsrCQv1rktA2rejpLNJ+nKtiB\nM13Y9vw9gd8QloF0zstp+q8QeLiwerWanloM52u+iQ0pfa6z81kYeGCsQuMzK5YA\n0WyXqotvN1gRKHgeL7p7vKKFwLAH5Lvmta/WOJCbfBYgBP2cKi2zlNlwsYQ1JNJA\nOFfD0XwXDH6JzGUSXDZm\n=Egnd\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree d6a43a6ca3225cdfa220afd84fbe5c9896b78307\nparent 7d2e5baf3dbb617dec32b4bc96887563638e42d1\nparent 527f3beb8dd8acca6b2b74d05de794ec7bd67598\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737129733 -0500\ncommitter GitHub <noreply@github.com> 1737129733 -0500\n\nMerge pull request #131 from open-data/feature/split-ds-errors\n\nSplit \\\\uF8FF at a Logic Level",
                        "verified_at": "2025-01-17T16:02:23Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                "html_url": "https://github.com/open-data/ckanext-recombinant/commit/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "7d2e5baf3dbb617dec32b4bc96887563638e42d1",
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/7d2e5baf3dbb617dec32b4bc96887563638e42d1",
                        "html_url": "https://github.com/open-data/ckanext-recombinant/commit/7d2e5baf3dbb617dec32b4bc96887563638e42d1"
                    },
                    {
                        "sha": "527f3beb8dd8acca6b2b74d05de794ec7bd67598",
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/527f3beb8dd8acca6b2b74d05de794ec7bd67598",
                        "html_url": "https://github.com/open-data/ckanext-recombinant/commit/527f3beb8dd8acca6b2b74d05de794ec7bd67598"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 10,
            "behind_by": 0,
            "total_commits": 10,
            "commits": [
                {
                    "sha": "c51b17f2d72439fc9166e0268b74b62b4b414696",
                    "node_id": "C_kwDOAMR_-NoAKGM1MWIxN2YyZDcyNDM5ZmM5MTY2ZTAyNjhiNzRiNjJiNGI0MTQ2OTY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-02T16:20:17Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-02T16:20:17Z"
                        },
                        "message": "feat(dev): linting;\n\n- Flake8 and pyright.",
                        "tree": {
                            "sha": "800eb688647dc35811756de0a63081cc2cbba677",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/800eb688647dc35811756de0a63081cc2cbba677"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/c51b17f2d72439fc9166e0268b74b62b4b414696",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/c51b17f2d72439fc9166e0268b74b62b4b414696",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/c51b17f2d72439fc9166e0268b74b62b4b414696",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/c51b17f2d72439fc9166e0268b74b62b4b414696/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "dc3dc2c637556926cf7209f76fd652c213cc89e1",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/dc3dc2c637556926cf7209f76fd652c213cc89e1",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/dc3dc2c637556926cf7209f76fd652c213cc89e1"
                        }
                    ]
                },
                {
                    "sha": "29a343aad77545a12831e9852925b6fc54d00427",
                    "node_id": "C_kwDOAMR_-NoAKDI5YTM0M2FhZDc3NTQ1YTEyODMxZTk4NTI5MjViNmZjNTRkMDA0Mjc",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-02T16:24:08Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-02T16:24:08Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file",
                        "tree": {
                            "sha": "af208b115edf1c377a9fd2f768f75e8479758ddd",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/af208b115edf1c377a9fd2f768f75e8479758ddd"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/29a343aad77545a12831e9852925b6fc54d00427",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/29a343aad77545a12831e9852925b6fc54d00427",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/29a343aad77545a12831e9852925b6fc54d00427",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/29a343aad77545a12831e9852925b6fc54d00427/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "c51b17f2d72439fc9166e0268b74b62b4b414696",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/c51b17f2d72439fc9166e0268b74b62b4b414696",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/c51b17f2d72439fc9166e0268b74b62b4b414696"
                        }
                    ]
                },
                {
                    "sha": "0d41f06966080d7da792da6e4054d1b5ce7c38a6",
                    "node_id": "C_kwDOAMR_-NoAKDBkNDFmMDY5NjYwODBkN2RhNzkyZGE2ZTQwNTRkMWI1Y2U3YzM4YTY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-02T16:25:15Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-02T16:25:15Z"
                        },
                        "message": "feat(dev): linting;\n\n- Flake8 and pyright.",
                        "tree": {
                            "sha": "4b227f225540377a736cd01452993858a6d0ce69",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/4b227f225540377a736cd01452993858a6d0ce69"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/0d41f06966080d7da792da6e4054d1b5ce7c38a6",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/0d41f06966080d7da792da6e4054d1b5ce7c38a6",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/0d41f06966080d7da792da6e4054d1b5ce7c38a6",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/0d41f06966080d7da792da6e4054d1b5ce7c38a6/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "29a343aad77545a12831e9852925b6fc54d00427",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/29a343aad77545a12831e9852925b6fc54d00427",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/29a343aad77545a12831e9852925b6fc54d00427"
                        }
                    ]
                },
                {
                    "sha": "007fe9ee193f2a46659dfbd637a6cdca89638a54",
                    "node_id": "C_kwDOAMR_-NoAKDAwN2ZlOWVlMTkzZjJhNDY2NTlkZmJkNjM3YTZjZGNhODk2MzhhNTQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-07T19:00:36Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-07T19:00:36Z"
                        },
                        "message": "feat(dev): linting;\n\n- Flake8 and pyright.",
                        "tree": {
                            "sha": "25b808a9249364844f3a70f4a86fd1011e9b676b",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/25b808a9249364844f3a70f4a86fd1011e9b676b"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/007fe9ee193f2a46659dfbd637a6cdca89638a54",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/007fe9ee193f2a46659dfbd637a6cdca89638a54",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/007fe9ee193f2a46659dfbd637a6cdca89638a54",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/007fe9ee193f2a46659dfbd637a6cdca89638a54/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "0d41f06966080d7da792da6e4054d1b5ce7c38a6",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/0d41f06966080d7da792da6e4054d1b5ce7c38a6",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/0d41f06966080d7da792da6e4054d1b5ce7c38a6"
                        }
                    ]
                },
                {
                    "sha": "6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5",
                    "node_id": "C_kwDOAMR_-NoAKDZiMGYzNDE2MzdmNWM3Y2E5YzEwZWZiM2Q0MTgyYmZhY2JmMWIyYTU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2025-01-17T20:48:53Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-17T20:48:53Z"
                        },
                        "message": "Merge branch 'master' into changes/linting",
                        "tree": {
                            "sha": "086df63136b40386b47d74ce13ca922eda1905ae",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/086df63136b40386b47d74ce13ca922eda1905ae"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnisI2CRC1aQ7uu5UhlAAAZy8QAD2f5V45neWkJcZR74TIJwvr\n3lohnd3PfEpZF69I9CZf/ZZ5rpOF5LEJ1i1CFr2rf9zS/scQkGYvhCr779HwGx6P\n4JccQbf6XLLfAfck8DI/r42r9FHE88H72y9KaTB+t2uIRwLZI6vh+/032PL6ePew\nZfqkxQboZ3q3QXDEYUyiplI7c0Vxx828/BGf5wlQE8xGZImk7oX1g1POPE78ZqVG\nG4xMnPLfZj7+zoo9Y/EAUKkEyvNkhdJTp/WgCWfFPYjUpxjfzzY7abfBHvBfMiUr\nP6bcqDklhUUdKgMryjqqd+7LJGEvdtHJOzMBkRghvnCk1wT/VdZESB2AdIzdq6l5\nsaShFBTrwBqKRuW1TYGlxoNdqyftacUujMSOKK/emAZIcOk7wszSNREsxNp/f+Ox\nk/YB1EeoslMBZtTlt9Mk9icD3wiwVd98xuNTJl4CsY8sQc12aIcGT/+KQ923CK7d\nlqTBuDwPXSo8E4caCsHfOFRsmwV3URx3wmmFF9BUMC9u2VJa7L9G9yFslivwA4s9\n9H9YAQFJkJcXjF/ZoNB7uw/rrcVvN975cNidailfUyVWxAphVXgakE8rpe6e13de\nkLoXDeDtc4C2uMyvoZCnoT5/cIkG0uoXQ2f10n88qfGK2HyGQXP6vO5JYRigWzih\n+0AdO4PIOQFk3X0lrmV8\n=6Gv9\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 086df63136b40386b47d74ce13ca922eda1905ae\nparent 007fe9ee193f2a46659dfbd637a6cdca89638a54\nparent 1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737146933 -0500\ncommitter GitHub <noreply@github.com> 1737146933 -0500\n\nMerge branch 'master' into changes/linting",
                            "verified_at": "2025-01-17T20:48:58Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "007fe9ee193f2a46659dfbd637a6cdca89638a54",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/007fe9ee193f2a46659dfbd637a6cdca89638a54",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/007fe9ee193f2a46659dfbd637a6cdca89638a54"
                        },
                        {
                            "sha": "1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a"
                        }
                    ]
                },
                {
                    "sha": "0619c9430b45f9c909f18f157fd275de55878167",
                    "node_id": "C_kwDOAMR_-NoAKDA2MTljOTQzMGI0NWY5YzkwOWYxOGYxNTdmZDI3NWRlNTU4NzgxNjc",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T20:50:39Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T20:50:39Z"
                        },
                        "message": "fix(syntax): import;\n\n- Missing import.",
                        "tree": {
                            "sha": "19473d2198067929235ab281986b88b073e24a35",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/19473d2198067929235ab281986b88b073e24a35"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/0619c9430b45f9c909f18f157fd275de55878167",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/0619c9430b45f9c909f18f157fd275de55878167",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/0619c9430b45f9c909f18f157fd275de55878167",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/0619c9430b45f9c909f18f157fd275de55878167/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/6b0f341637f5c7ca9c10efb3d4182bfacbf1b2a5"
                        }
                    ]
                },
                {
                    "sha": "ae4ae7294d96e4402c6e13918f50600a62ad624d",
                    "node_id": "C_kwDOAMR_-NoAKGFlNGFlNzI5NGQ5NmU0NDAyYzZlMTM5MThmNTA2MDBhNjJhZDYyNGQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T21:03:37Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T21:03:37Z"
                        },
                        "message": "feat(dev): lint;\n\n- Pyright for merge.",
                        "tree": {
                            "sha": "5432abf5a571b955221c6ff57cc52a4b7c016adf",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/5432abf5a571b955221c6ff57cc52a4b7c016adf"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/ae4ae7294d96e4402c6e13918f50600a62ad624d",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/ae4ae7294d96e4402c6e13918f50600a62ad624d",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/ae4ae7294d96e4402c6e13918f50600a62ad624d",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/ae4ae7294d96e4402c6e13918f50600a62ad624d/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "0619c9430b45f9c909f18f157fd275de55878167",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/0619c9430b45f9c909f18f157fd275de55878167",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/0619c9430b45f9c909f18f157fd275de55878167"
                        }
                    ]
                },
                {
                    "sha": "18459418afd92a0728cb5ddd9bc1f32f186267c4",
                    "node_id": "C_kwDOAMR_-NoAKDE4NDU5NDE4YWZkOTJhMDcyOGNiNWRkZDliYzFmMzJmMTg2MjY3YzQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T21:04:54Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T21:04:54Z"
                        },
                        "message": "revert(syntax): r <-> u;\n\n- Raw back to string.",
                        "tree": {
                            "sha": "b628ea8c4277a7f63fec3332471772499008c956",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/b628ea8c4277a7f63fec3332471772499008c956"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/18459418afd92a0728cb5ddd9bc1f32f186267c4",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/18459418afd92a0728cb5ddd9bc1f32f186267c4",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/18459418afd92a0728cb5ddd9bc1f32f186267c4",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/18459418afd92a0728cb5ddd9bc1f32f186267c4/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "ae4ae7294d96e4402c6e13918f50600a62ad624d",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/ae4ae7294d96e4402c6e13918f50600a62ad624d",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/ae4ae7294d96e4402c6e13918f50600a62ad624d"
                        }
                    ]
                },
                {
                    "sha": "9a1144999bdf5110b8221af0ab3332f0e98d1a7f",
                    "node_id": "C_kwDOAMR_-NoAKDlhMTE0NDk5OWJkZjUxMTBiODIyMWFmMGFiMzMzMmYwZTk4ZDFhN2Y",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T21:08:23Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-17T21:08:23Z"
                        },
                        "message": "fix(typing): comment;\n\n- Type ignore.",
                        "tree": {
                            "sha": "e29df33975acdc3124727c17b880866b25f1965f",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/e29df33975acdc3124727c17b880866b25f1965f"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/9a1144999bdf5110b8221af0ab3332f0e98d1a7f",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/9a1144999bdf5110b8221af0ab3332f0e98d1a7f",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/9a1144999bdf5110b8221af0ab3332f0e98d1a7f",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/9a1144999bdf5110b8221af0ab3332f0e98d1a7f/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "18459418afd92a0728cb5ddd9bc1f32f186267c4",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/18459418afd92a0728cb5ddd9bc1f32f186267c4",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/18459418afd92a0728cb5ddd9bc1f32f186267c4"
                        }
                    ]
                },
                {
                    "sha": "5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "node_id": "C_kwDOAMR_-NoAKDVjMzBkN2E1MGNlNDJhODA5NjlkM2U2ZDQ3YWQyZDhjMjA4M2JjZjY",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2025-01-27T14:28:06Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-27T14:28:06Z"
                        },
                        "message": "Merge pull request #134 from open-data/changes/linting\n\nCKAN Coding Standards",
                        "tree": {
                            "sha": "e29df33975acdc3124727c17b880866b25f1965f",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/trees/e29df33975acdc3124727c17b880866b25f1965f"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-recombinant/git/commits/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnl5f2CRC1aQ7uu5UhlAAAPIYQAG138r7SS/iWoRzQXAltG6Uy\ncl3QL/Q/76pwfe9Vj8c1nP6dZYPBkwAdQ8zhMZ53veuUttQH8Bcp07VBiHOqGv0C\nasD9lW+YQ/LdxRzTb0AoAHyQt2zqWzGr21hbEQwSpZAlpLKXyPG1g4H+F8gdJHnz\noq/1k6Qqn9z0u37ZUFaIwXwqb4oIjy1QcWOy6j2Tfv/wUj6yOt068Dn2XxZVM4Mj\nwkGwUkYRLw18UElXRAnW5hi3URTll9NmvYgTwj7XmpcWFQFAQa70ky+bDTMb4NNp\nQKBOVUOipY/wILTev6xKW/Q/M9ZjJZAk74jyoES9Ba1MOmzfeNxUslKGpuXOLdRr\n9U4PUL60zcT+SkzOwf7BCzVYFLNpW0J/W7gZcDaQI27Hws3cAdbagSUsYl/XK2Wz\nPX5L2qDo9Yt8v8h5O8qD5cvF6+RcjO+Vwr6IidlYp83TIeJZawd7RbcIerEkPLyn\nEznu8w8n/BLrInujU8kchaZR6N0R73o9f/cvTLPL+mwG/pRUySzKq9aBRw2Ek76k\nkQ5h+yVJqmoSCZPUMyes1vyakBH80dl+X9vUw/rqNy0rwyCR2hh85IqOs/cLWG5Y\nUs4QVcY3Pb9uiD3IYkG0OqZIFKyQHqstvuxUZNsTK8IabYeE+VyhKVtmmFGX9jzX\n3ktAbU60m3P45gP5Ux6a\n=swye\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree e29df33975acdc3124727c17b880866b25f1965f\nparent 1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a\nparent 9a1144999bdf5110b8221af0ab3332f0e98d1a7f\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737988086 -0500\ncommitter GitHub <noreply@github.com> 1737988086 -0500\n\nMerge pull request #134 from open-data/changes/linting\n\nCKAN Coding Standards",
                            "verified_at": "2025-01-27T14:28:17Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "html_url": "https://github.com/open-data/ckanext-recombinant/commit/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/1d4ea1ff5e1fa2eb8afc7e3888bd703062551b7a"
                        },
                        {
                            "sha": "9a1144999bdf5110b8221af0ab3332f0e98d1a7f",
                            "url": "https://api.github.com/repos/open-data/ckanext-recombinant/commits/9a1144999bdf5110b8221af0ab3332f0e98d1a7f",
                            "html_url": "https://github.com/open-data/ckanext-recombinant/commit/9a1144999bdf5110b8221af0ab3332f0e98d1a7f"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "cc04dc146575d1719705248838f04503cb3a6bb8",
                    "filename": ".github/workflows/flake8.yml",
                    "status": "added",
                    "additions": 22,
                    "deletions": 0,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/.github%2Fworkflows%2Fflake8.yml",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/.github%2Fworkflows%2Fflake8.yml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/.github%2Fworkflows%2Fflake8.yml?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -0,0 +1,22 @@\n+name: Lint\n+on: [pull_request]\n+\n+permissions:\n+  contents: read\n+\n+jobs:\n+  lint:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+      - uses: actions/setup-python@v2\n+        with:\n+          python-version: '3.9'\n+      - name: Install requirements\n+        run: pip install flake8 pycodestyle\n+      - name: Check syntax\n+        # Stop the build if there are Python syntax errors or undefined names\n+        run: flake8 --show-source\n+\n+      - name: Warnings\n+        run: flake8"
                },
                {
                    "sha": "adad2d902bcd3b072594b4392062fbe5280dc26c",
                    "filename": ".github/workflows/pyright.yml",
                    "status": "added",
                    "additions": 46,
                    "deletions": 0,
                    "changes": 46,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/.github%2Fworkflows%2Fpyright.yml",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/.github%2Fworkflows%2Fpyright.yml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/.github%2Fworkflows%2Fpyright.yml?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -0,0 +1,46 @@\n+name: Check types\n+on: [pull_request]\n+env:\n+  NODE_VERSION: '18'\n+  PYTHON_VERSION: '3.9'\n+\n+permissions:\n+  contents: read\n+\n+jobs:\n+  typecheck:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - uses: actions/checkout@v2\n+        id: gitcheckout\n+      - uses: actions/setup-python@v2\n+        with:\n+          python-version: ${{ env.PYTHON_VERSION }}\n+      - uses: actions/setup-node@v3\n+        with:\n+          node-version: ${{ env.NODE_VERSION }}\n+      - name: Install python deps\n+        id: pydepends\n+        if: steps.gitcheckout.outcome == 'success'\n+        run: |\n+            python3 -m venv /home/runner/work/app\n+            mkdir -p /home/runner/work/app/src/ckanext-recombinant\n+            cp -R . /home/runner/work/app/src/ckanext-recombinant\n+            source /home/runner/work/app/bin/activate\n+            pip install --upgrade setuptools==70.0.0\n+            pip install --upgrade pip==23.2.1\n+            pip install -e 'git+https://github.com/open-data/ckan@canada-v2.10#egg=ckan' -r 'https://raw.githubusercontent.com/open-data/ckan/canada-v2.10/requirement-setuptools.txt' -r 'https://raw.githubusercontent.com/open-data/ckan/canada-v2.10/requirements.txt' -r 'https://raw.githubusercontent.com/open-data/ckan/canada-v2.10/dev-requirements.txt'\n+            pip install -e 'git+https://github.com/ckan/ckanapi.git#egg=ckanapi' -r 'https://raw.githubusercontent.com/ckan/ckanapi/master/requirements.txt'\n+            pip install -e /home/runner/work/app/src/ckanext-recombinant/. -r /home/runner/work/app/src/ckanext-recombinant/requirements.txt -r /home/runner/work/app/src/ckanext-recombinant/test-requirements.txt\n+            pip install -e 'git+https://github.com/ckan/ckantoolkit.git#egg=ckantoolkit' -r 'https://raw.githubusercontent.com/ckan/ckantoolkit/master/requirements.txt'\n+            find /home/runner/work/app -name '*.pyc' -delete\n+      - name: Install node deps\n+        if: steps.pydepends.outcome == 'success'\n+        run: |\n+          cd /home/runner/work/app/src/ckanext-recombinant\n+          npm ci\n+      - name: Check types\n+        if: steps.pydepends.outcome == 'success'\n+        run: |\n+          cd /home/runner/work/app/src/ckanext-recombinant\n+          npx pyright"
                },
                {
                    "sha": "9fc2a00239e3e9abaad47a99608ed0c3d4f12075",
                    "filename": ".gitignore",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/.gitignore",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/.gitignore",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/.gitignore?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -2,3 +2,4 @@ ckan.log\n *.pyc\n *.egg-info/\n *.mo\n+node_modules/**"
                },
                {
                    "sha": "d09cc072d86c433e165383d3cffca74d639cabd7",
                    "filename": "changes/134.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/changes%2F134.changes",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/changes%2F134.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/changes%2F134.changes?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -0,0 +1 @@\n+Refactor code to meet CKAN and Python coding standards."
                },
                {
                    "sha": "d4a901a0b035ec8e8ba15b5ecd71d93ed3e0372e",
                    "filename": "ckanext/recombinant/auth.py",
                    "status": "modified",
                    "additions": 31,
                    "deletions": 15,
                    "changes": 46,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fauth.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fauth.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fauth.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,46 +1,63 @@\n+from typing import Optional\n+from ckan.types import (\n+    AuthFunction,\n+    Context,\n+    DataDict,\n+    AuthResult\n+)\n+\n from ckan.plugins.toolkit import chained_auth_function, h, _\n-from ckan.model.group import Group\n-from ckanapi import LocalCKAN, ValidationError\n \n \n @chained_auth_function\n-def package_update(up_func, context, data_dict):\n+def package_update(up_func: AuthFunction,\n+                   context: Context,\n+                   data_dict: Optional[DataDict]) -> AuthResult:\n     \"\"\"\n     Recombinant packages and resources should not be\n     editable by users after they have been made.\n \n     Affects update, patch, and delete.\n     \"\"\"\n-    if data_dict and data_dict.get(u'type') in h.recombinant_get_types():\n+    if data_dict and data_dict.get('type') in h.recombinant_get_types():\n         return {'success': False,\n                 'msg': _('User %s not authorized to modify Recombinant type: %s') %\n-                            (str(context[u'user']), data_dict.get(u'type'))}\n-    return up_func(context, data_dict)\n+                        (str(context['user']), data_dict.get('type'))}\n+    # type_ignore_reason: incomplete typing\n+    return up_func(context, data_dict)  # type: ignore\n \n \n @chained_auth_function\n-def package_create(up_func, context, data_dict):\n+def package_create(up_func: AuthFunction,\n+                   context: Context,\n+                   data_dict: Optional[DataDict]) -> AuthResult:\n     \"\"\"\n     If the user has permissions to create packages, they should still\n     be allowed to create the Recombinant packages and resources.\n \n     However, users should not be allowed to create multiple packages\n     of the same type for a single organization.\n     \"\"\"\n-    if data_dict and data_dict.get(u'type') in h.recombinant_get_types():\n+    if data_dict and data_dict.get('type') in h.recombinant_get_types():\n         return {'success': False,\n-                'msg': _('User %s not authorized to create Recombinant packages: %s') %\n-                            (str(context[u'user']), data_dict.get(u'type'))}\n-    return up_func(context, data_dict)\n+                'msg': _('User %s not authorized to create '\n+                         'Recombinant packages: %s') %\n+                        (str(context['user']), data_dict.get('type'))}\n+    # type_ignore_reason: incomplete typing\n+    return up_func(context, data_dict)  # type: ignore\n \n \n @chained_auth_function\n-def datastore_delete(up_func, context, data_dict):\n+def datastore_delete(up_func: AuthFunction,\n+                     context: Context,\n+                     data_dict: Optional[DataDict]) -> AuthResult:\n     \"\"\"\n     Users should not be able to delete a Datestore table for\n     Recombinant types. We only want them to be able to delete rows.\n     \"\"\"\n-    res = context['model'].Resource.get(data_dict.get('resource_id'))\n+    if not data_dict:\n+        data_dict = {}\n+    res = context['model'].Resource.get(data_dict.get('resource_id', ''))\n     pkg = context['model'].Package.get(getattr(res, 'package_id', None))\n     if not res or not pkg or pkg.type not in h.recombinant_get_types():\n         return up_func(context, data_dict)\n@@ -49,6 +66,5 @@ def datastore_delete(up_func, context, data_dict):\n         # we do not want that to happen for Recombinant types.\n         return {'success': False,\n                 'msg': _(\"Cannot delete Datastore for type: %s. \"\n-                         \"Use datastore_records_delete instead.\")\n-                         % pkg.type}\n+                         \"Use datastore_records_delete instead.\") % pkg.type}\n     return up_func(context, data_dict)"
                },
                {
                    "sha": "2b6a42907455c04156701c836b90e7afc82e2785",
                    "filename": "ckanext/recombinant/cli.py",
                    "status": "modified",
                    "additions": 196,
                    "deletions": 83,
                    "changes": 279,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fcli.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fcli.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fcli.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -4,18 +4,25 @@\n import sys\n import json\n \n+from typing import Dict, List, Any, Optional, TextIO\n+\n from ckan.logic import ValidationError\n from ckanapi import LocalCKAN, NotFound\n \n-from ckanext.recombinant.tables import (get_dataset_type_for_resource_name,\n-    get_dataset_types, get_chromo, get_geno, get_target_datasets,\n-    get_resource_names)\n+from ckanext.recombinant.tables import (\n+    get_dataset_type_for_resource_name,\n+    get_dataset_types,\n+    get_chromo,\n+    get_geno,\n+    get_target_datasets,\n+    get_resource_names\n+)\n from ckanext.recombinant.read_csv import csv_data_batch\n from ckanext.recombinant.write_excel import excel_template\n from ckanext.recombinant.logic import _update_triggers\n \n \n-DATASTORE_PAGINATE = 10000 # max records for single datastore query\n+DATASTORE_PAGINATE = 10000  # max records for single datastore query\n \n \n def get_commands():\n@@ -29,11 +36,16 @@ def recombinant():\n     pass\n \n \n-@recombinant.command(short_help=\"Display some information about the status of recombinant datasets.\")\n+@recombinant.command(\n+        short_help=\"Display some information about the \"\n+                   \"status of recombinant datasets.\")\n @click.argument(\"dataset_type\", required=False)\n @click.argument(\"org_name\", required=False)\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def show(dataset_type=None, org_name=None, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def show(dataset_type: Optional[str] = None,\n+         org_name: Optional[str] = None,\n+         verbose: bool = False):\n     \"\"\"\n     Display some information about the status of recombinant datasets\n \n@@ -51,8 +63,11 @@ def show(dataset_type=None, org_name=None, verbose=False):\n     is_flag=True,\n     help=\"All dataset types/resource names\",\n )\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def create_triggers(dataset_type=None, all_types=False, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def create_triggers(dataset_type: Optional[List[str]] = None,\n+                    all_types: bool = False,\n+                    verbose: bool = False):\n     \"\"\"\n     Create and update triggers\n \n@@ -62,16 +77,21 @@ def create_triggers(dataset_type=None, all_types=False, verbose=False):\n     _create_triggers(dataset_type, all_types, verbose=verbose)\n \n \n-@recombinant.command(short_help=\"Delete datastore tables and packages for empty recombinant resources.\")\n+@recombinant.command(\n+        short_help=\"Delete datastore tables and packages \"\n+                   \"for empty recombinant resources.\")\n @click.argument(\"dataset_type\", required=False, nargs=-1)\n @click.option(\n     \"-a\",\n     \"--all-types\",\n     is_flag=True,\n     help=\"All dataset types/resource names\",\n )\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def remove_empty(dataset_type=None, all_types=False, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def remove_empty(dataset_type: Optional[List[str]] = None,\n+                 all_types: bool = False,\n+                 verbose: bool = False):\n     \"\"\"\n     Delete datastore tables and packages for empty recombinant resources\n \n@@ -81,7 +101,8 @@ def remove_empty(dataset_type=None, all_types=False, verbose=False):\n     _remove_empty(dataset_type, all_types, verbose=verbose)\n \n \n-@recombinant.command(short_help=\"Triggers recombinant update for recombinant resources.\")\n+@recombinant.command(\n+        short_help=\"Triggers recombinant update for recombinant resources.\")\n @click.argument(\"dataset_type\", required=False, nargs=-1)\n @click.option(\n     \"-a\",\n@@ -95,8 +116,12 @@ def remove_empty(dataset_type=None, all_types=False, verbose=False):\n     is_flag=True,\n     help=\"Force update of tables (required for changes to only primary keys/indexes)\",\n )\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def update(dataset_type=None, all_types=False, force_update=False, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def update(dataset_type: Optional[List[str]] = None,\n+           all_types: bool = False,\n+           force_update: bool = False,\n+           verbose: bool = False):\n     \"\"\"\n     Triggers recombinant update for recombinant resources\n \n@@ -114,8 +139,11 @@ def update(dataset_type=None, all_types=False, force_update=False, verbose=False\n     is_flag=True,\n     help=\"All dataset types/resource names\",\n )\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def delete(dataset_type=None, all_types=False, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def delete(dataset_type: Optional[List[str]] = None,\n+           all_types: bool = False,\n+           verbose: bool = False):\n     \"\"\"\n     Delete recombinant datasets and all their data\n \n@@ -125,10 +153,13 @@ def delete(dataset_type=None, all_types=False, verbose=False):\n     _delete(dataset_type, all_types, verbose=verbose)\n \n \n-@recombinant.command(short_help=\"Load CSV file(s) rows into recombinant resources datastore.\")\n+@recombinant.command(\n+        short_help=\"Load CSV file(s) rows into recombinant resources datastore.\")\n @click.argument(\"csv_file\", type=click.File('r'), nargs=-1)\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def load_csv(csv_file, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def load_csv(csv_file: List[TextIO],\n+             verbose: bool = False):\n     \"\"\"\n     Load CSV file(s) rows into recombinant resources datastore\n \n@@ -138,7 +169,8 @@ def load_csv(csv_file, verbose=False):\n     _load_csv_files(csv_file, verbose=verbose)\n \n \n-@recombinant.command(short_help=\"Output all datastore data to CSV for given resource names.\")\n+@recombinant.command(\n+        short_help=\"Output all datastore data to CSV for given resource names.\")\n @click.argument(\"resource_name\", required=False, nargs=-1)\n @click.option(\n     \"-a\",\n@@ -153,8 +185,12 @@ def load_csv(csv_file, verbose=False):\n     required=True,\n     help=\"Save CSV files to DIR/RESOURCE_NAME.csv instead of streaming to STDOUT\",\n )\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def combine(resource_name, all_types=False, output_dir=None, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def combine(resource_name: Optional[List[str]],\n+            all_types: bool = False,\n+            output_dir: Optional[str] = None,\n+            verbose: bool = False):\n     \"\"\"\n     Output all datastore data to CSV for given resource names\n \n@@ -165,8 +201,9 @@ def combine(resource_name, all_types=False, output_dir=None, verbose=False):\n \n \n @recombinant.command(short_help=\"Output configured target datasets.\")\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def target_datasets(verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def target_datasets(verbose: bool = False):\n     \"\"\"\n     Find the RecombinantPlugin instance and output its\n     configured target datasets (e.g., ['ati', 'pd', ...])\n@@ -179,8 +216,10 @@ def target_datasets(verbose=False):\n \n @recombinant.command(short_help=\"Output dataset types of recombinant resources.\")\n @click.argument(\"dataset_type\", required=False, nargs=-1)\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def dataset_types(dataset_type=None, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def dataset_types(dataset_type: Optional[List[str]] = None,\n+                  verbose: bool = False):\n     \"\"\"\n     Output dataset types of recombinant resources\n \n@@ -190,10 +229,14 @@ def dataset_types(dataset_type=None, verbose=False):\n     _dataset_types(dataset_type, verbose=verbose)\n \n \n-@recombinant.command(short_help=\"Low-level command to remove datasets with missing datastore tables.\")\n+@recombinant.command(\n+        short_help=\"Low-level command to remove \"\n+                   \"datasets with missing datastore tables.\")\n @click.argument(\"dataset_type\", nargs=-1)\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def remove_broken(dataset_type, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def remove_broken(dataset_type: List[str],\n+                  verbose: bool = False):\n     \"\"\"\n     Low-level command to remove datasets with missing datastore tables\n \n@@ -203,11 +246,16 @@ def remove_broken(dataset_type, verbose=False):\n     _remove_broken(dataset_type, verbose=verbose)\n \n \n-@recombinant.command(short_help=\"Low-level command to run triggers on datasets' datastore tables.\")\n+@recombinant.command(\n+        short_help=\"Low-level command to run triggers on datasets' datastore tables.\")\n @click.argument(\"dataset_type\", nargs=-1)\n-@click.option(\"-a\", \"--all-types\", is_flag=True, type=click.BOOL, help=\"All dataset types/resource names\")\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def run_triggers(dataset_type, all_types=False, verbose=False):\n+@click.option(\"-a\", \"--all-types\", is_flag=True,\n+              type=click.BOOL, help=\"All dataset types/resource names\")\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def run_triggers(dataset_type: List[str],\n+                 all_types: bool = False,\n+                 verbose: bool = False):\n     \"\"\"\n     Low-level command to run triggers on datasets' datastore tables\n \n@@ -217,12 +265,17 @@ def run_triggers(dataset_type, all_types=False, verbose=False):\n     _run_triggers(dataset_type, all_types=all_types, verbose=verbose)\n \n \n-@recombinant.command(short_help=\"Output the recombinant excel template to a file path.\")\n+@recombinant.command(\n+        short_help=\"Output the recombinant excel template to a file path.\")\n @click.argument(\"dataset_type\")\n @click.argument(\"org_name\")\n @click.argument(\"output_file\")\n-@click.option('-v', '--verbose', is_flag=True, type=click.BOOL, help='Increase verbosity.')\n-def template(dataset_type, org_name, output_file, verbose=False):\n+@click.option('-v', '--verbose', is_flag=True,\n+              type=click.BOOL, help='Increase verbosity.')\n+def template(dataset_type: str,\n+             org_name: str,\n+             output_file: str,\n+             verbose: bool = False):\n     \"\"\"\n     Output the recombinant excel template to a file path\n \n@@ -232,12 +285,14 @@ def template(dataset_type, org_name, output_file, verbose=False):\n     _template(dataset_type, org_name, output_file, verbose=verbose)\n \n \n-def _get_orgs():\n+def _get_orgs() -> List[str]:\n     lc = LocalCKAN()\n     return lc.action.organization_list()\n \n \n-def _get_packages(dataset_type, orgs, ignore_errors=False):\n+def _get_packages(dataset_type: str,\n+                  orgs: List[str],\n+                  ignore_errors: bool = False) -> List[Dict[str, Any]]:\n     lc = LocalCKAN()\n     packages = []\n     for o in orgs:\n@@ -252,15 +307,17 @@ def _get_packages(dataset_type, orgs, ignore_errors=False):\n     return packages\n \n \n-def _show(dataset_type, org_name, verbose=False):\n+def _show(dataset_type: Optional[str],\n+          org_name: Optional[str],\n+          verbose: bool = False):\n     \"\"\"\n     Display some information about the status of recombinant datasets\n     \"\"\"\n     orgs = [org_name] if org_name else _get_orgs()\n     types = [dataset_type] if dataset_type else get_dataset_types()\n \n     for dtype in types:\n-        click.echo(u'{geno[title]} ({dtype})'.format(\n+        click.echo('{geno[title]} ({dtype})'.format(\n             geno=get_geno(dtype), dtype=dtype).encode('utf-8'))\n \n         packages = _get_packages(dtype, orgs)\n@@ -282,14 +339,17 @@ def _show(dataset_type, org_name, verbose=False):\n                         if not r['metadata_correct']:\n                             click.echo('   ! metadata needs to be updated')\n \n-        click.echo(' > %d orgs with %d records found' %\n-            (len(orgs), len(packages)))\n+        click.echo(' > %d orgs with %d records found' % (\n+            len(orgs), len(packages)))\n         need_update = sum(1 for p in packages if not p['all_correct'])\n         if need_update:\n             click.echo(' --> %d need to be updated' % need_update)\n \n \n-def _update(dataset_types, all_types=False, force_update=False, verbose=False):\n+def _update(dataset_types: Optional[List[str]],\n+            all_types: bool = False,\n+            force_update: bool = False,\n+            verbose: bool = False):\n     \"\"\"\n     Triggers recombinant update for recombinant resources\n     \"\"\"\n@@ -309,23 +369,31 @@ def _update(dataset_types, all_types=False, force_update=False, verbose=False):\n                     force_update=force_update)\n \n \n-def _expand_dataset_types(dataset_types, all_types=False):\n+def _expand_dataset_types(dataset_types: Optional[List[str]],\n+                          all_types: bool = False) -> List[str]:\n     if all_types:\n         return get_dataset_types()\n     if isinstance(dataset_types, str):\n         return [dataset_types]\n+    if not dataset_types:\n+        return []\n     return dataset_types\n \n \n-def _expand_resource_names(resource_names, all_types=False):\n+def _expand_resource_names(resource_names: Optional[List[str]],\n+                           all_types: bool = False) -> List[str]:\n     if all_types:\n         return get_resource_names()\n     if isinstance(resource_names, str):\n         return [resource_names]\n+    if not resource_names:\n+        return []\n     return resource_names\n \n \n-def _create_triggers(dataset_types, all_types=False, verbose=False):\n+def _create_triggers(dataset_types: Optional[List[str]],\n+                     all_types: bool = False,\n+                     verbose: bool = False):\n     \"\"\"\n     Create and update triggers\n     \"\"\"\n@@ -335,7 +403,9 @@ def _create_triggers(dataset_types, all_types=False, verbose=False):\n             _update_triggers(lc, chromo)\n \n \n-def _remove_empty(dataset_types, all_types=False, verbose=False):\n+def _remove_empty(dataset_types: Optional[List[str]],\n+                  all_types: bool = False,\n+                  verbose: bool = False):\n     \"\"\"\n     Delete datastore tables and packages for empty recombinant resources\n     \"\"\"\n@@ -356,7 +426,9 @@ def _remove_empty(dataset_types, all_types=False, verbose=False):\n                 lc.action.package_delete(id=p['id'])\n \n \n-def _delete(dataset_types, all_types=False, verbose=False):\n+def _delete(dataset_types: Optional[List[str]],\n+            all_types: bool = False,\n+            verbose: bool = False):\n     \"\"\"\n     Delete recombinant datasets and all their data\n     \"\"\"\n@@ -374,11 +446,14 @@ def _delete(dataset_types, all_types=False, verbose=False):\n                 except NotFound:\n                     pass\n                 except ValidationError as e:\n-                    click.echo('failed %s %s -- %s' % (dtype, p['owner_org'], str(e.error_dict)), err=True)\n+                    click.echo('failed %s %s -- %s' % (\n+                        dtype, p['owner_org'],\n+                        str(e.error_dict)), err=True)\n             lc.action.package_delete(id=p['id'])\n \n \n-def _load_csv_files(csv_file_names, verbose=False):\n+def _load_csv_files(csv_file_names: List[TextIO],\n+                    verbose: bool = False) -> int:\n     \"\"\"\n     Load CSV file(s) rows into recombinant resources datastore\n     \"\"\"\n@@ -389,11 +464,11 @@ def _load_csv_files(csv_file_names, verbose=False):\n     return errs\n \n \n-def _load_one_csv_file(name):\n+def _load_one_csv_file(name: str) -> int:\n     \"\"\"\n     Load CSV file rows into recombinant resources datastore\n     \"\"\"\n-    path, csv_name = os.path.split(name)\n+    _path, csv_name = os.path.split(name)\n     assert csv_name.endswith('.csv'), csv_name\n     resource_name = csv_name[:-4]\n     click.echo(resource_name)\n@@ -431,8 +506,9 @@ def _load_one_csv_file(name):\n             return 1\n \n         # convert list values to lists\n-        list_fields = [f['datastore_id']\n-            for f in chromo['fields'] if f['datastore_type'] == '_text' and not f.get('published_resource_computed_field')]\n+        list_fields = [f['datastore_id'] for f in chromo['fields'] if\n+                       f['datastore_type'] == '_text' and\n+                       not f.get('published_resource_computed_field')]\n         if list_fields:\n             for r in records:\n                 for k in list_fields:\n@@ -459,12 +535,13 @@ def _load_one_csv_file(name):\n             except ValidationError as err:\n                 if 'records_row' not in err.error_dict:\n                     raise\n-                bad = err.error_dict['records_row']\n+                # type_ignore_reason: incomplete typing\n+                bad = int(err.error_dict['records_row'])  # type: ignore\n                 errors |= 2\n                 sys.stderr.write(json.dumps([\n                     err.error_dict['records'],\n                     org_name,\n-                    records[offset + bad]]).encode('utf-8') + '\\n')\n+                    records[offset + bad]]) + '\\n')\n                 # retry records that passed validation\n                 good = records[offset: offset+bad]\n                 if good:\n@@ -478,10 +555,16 @@ def _load_one_csv_file(name):\n     return errors\n \n \n-def _combine_csv(target_dir, resource_names, all_types=False, verbose=False):\n+def _combine_csv(target_dir: Optional[str],\n+                 resource_names: Optional[List[str]],\n+                 all_types: bool = False,\n+                 verbose: bool = False):\n     \"\"\"\n     Output all datastore data to CSV for given resource names\n     \"\"\"\n+    if not target_dir:\n+        click.echo('target_dir is not defined')\n+        return 1\n     if not os.path.isdir(target_dir):\n         click.echo('\"{0}\" is not a directory'.format(target_dir))\n         return 1\n@@ -490,16 +573,26 @@ def _combine_csv(target_dir, resource_names, all_types=False, verbose=False):\n     lc = LocalCKAN()\n     for resource_name in _expand_resource_names(resource_names, all_types):\n         if verbose:\n-            click.echo(\"Combining {resource_name} resources into csv file: {file}\".format(resource_name=resource_name,\n-                                                                                          file=os.path.join(target_dir, resource_name + '.csv')))\n+            click.echo(\"Combining {resource_name} resources \"\n+                       \"into csv file: {file}\".format(\n+                           resource_name=resource_name,\n+                           file=os.path.join(target_dir, resource_name + '.csv')))\n         if target_dir:\n             outf = open(os.path.join(target_dir,\n-                resource_name + '.csv'), 'w', encoding='utf-8')\n+                                     resource_name + '.csv'), 'w', encoding='utf-8')\n+        else:\n+            outf = sys.stdout\n         outf.write(\"\\N{bom}\")\n         dataset_type = get_dataset_type_for_resource_name(resource_name)\n+        if not dataset_type:\n+            if verbose:\n+                click.echo(\"Failed to get dataset type!!!\")\n+            continue\n         if verbose:\n-            click.echo(\"Writing packages of type {dataset_type} into csv file: {file}\".format(dataset_type=dataset_type,\n-                                                                                              file=os.path.join(target_dir, resource_name + '.csv')))\n+            click.echo(\"Writing packages of type {dataset_type} \"\n+                       \"into csv file: {file}\".format(\n+                           dataset_type=dataset_type,\n+                           file=os.path.join(target_dir, resource_name + '.csv')))\n         _write_one_csv(\n             lc,\n             _get_packages(dataset_type, orgs),\n@@ -510,11 +603,16 @@ def _combine_csv(target_dir, resource_names, all_types=False, verbose=False):\n             outf.close()\n \n \n-def _write_one_csv(lc, pkgs, chromo, outfile):\n+def _write_one_csv(lc: LocalCKAN,\n+                   pkgs: List[Dict[str, Any]],\n+                   chromo: Dict[str, Any],\n+                   outfile: TextIO):\n     out = csv.writer(outfile)\n-    column_ids = [f['datastore_id'] for f in chromo['fields'] if not f.get('published_resource_computed_field')\n-        ] + chromo.get('csv_org_extras', []) + [\n-        'owner_org', 'owner_org_title']\n+    column_ids = [\n+        f['datastore_id'] for f in chromo['fields'] if\n+        not f.get('published_resource_computed_field')] + \\\n+        chromo.get('csv_org_extras', []) + \\\n+        ['owner_org', 'owner_org_title']\n     out.writerow(column_ids)\n \n     for pkg in pkgs:\n@@ -533,7 +631,7 @@ def _write_one_csv(lc, pkgs, chromo, outfile):\n         if chromo.get('csv_org_extras'):\n             org = lc.action.organization_show(id=pkg['owner_org'])\n             for ename in chromo.get('csv_org_extras', []):\n-                org_extras[ename] = u''\n+                org_extras[ename] = ''\n                 if ename in org:\n                     org_extras[ename] = org[ename]\n                 else:\n@@ -552,7 +650,6 @@ def _write_one_csv(lc, pkgs, chromo, outfile):\n                     resource_id=res['id'],\n                 )\n                 records = result['records']\n-                total = result.get('total')\n             except NotFound:\n                 click.echo('resource {0} table missing for {1}'.format(\n                     chromo['resource_name'], pkg['owner_org']))\n@@ -561,9 +658,10 @@ def _write_one_csv(lc, pkgs, chromo, outfile):\n             for record in records:\n                 record.update(org_extras)\n                 try:\n-                    row = [str(u'' if record[col] is None else\n-                           u','.join(record[col]) if isinstance(record[col], list) else\n-                           record[col]) for col in column_ids]\n+                    row = [str('' if record[col] is None else\n+                               ','.join(record[col]) if\n+                               isinstance(record[col], list) else\n+                               record[col]) for col in column_ids]\n                     out.writerow(['\\r\\n'.join(col.splitlines()) for col in row])\n                 except KeyError:\n                     click.echo('resource {0} table missing keys for {1}'.format(\n@@ -575,13 +673,16 @@ def _write_one_csv(lc, pkgs, chromo, outfile):\n             offs += DATASTORE_PAGINATE\n \n \n-def _remove_broken(target_datasets, verbose=False):\n+def _remove_broken(target_datasets: List[str],\n+                   verbose: bool = False):\n     \"\"\"\n     Low-level command to remove datasets with missing datastore tables\n     \"\"\"\n     lc = LocalCKAN()\n     for dtype in target_datasets:\n-        datasets = lc.action.package_search(q=\"type:%s\" % dtype, include_private=True, rows=5000)\n+        datasets = lc.action.package_search(q=\"type:%s\" % dtype,\n+                                            include_private=True,\n+                                            rows=5000)\n         for d in datasets['results']:\n             for r in d['resources']:\n                 try:\n@@ -593,33 +694,42 @@ def _remove_broken(target_datasets, verbose=False):\n                     break\n \n \n-def _run_triggers(target_datasets, all_types=False, verbose=False):\n+def _run_triggers(target_datasets: List[str],\n+                  all_types: bool = False,\n+                  verbose: bool = False):\n     \"\"\"\n     Low-level command to run triggers on datasets' datastore tables\n     \"\"\"\n     lc = LocalCKAN()\n     for dtype in _expand_dataset_types(target_datasets, all_types):\n-        datasets = lc.action.package_search(q=\"type:%s\" % dtype, include_private=True, rows=5000)\n+        datasets = lc.action.package_search(q=\"type:%s\" % dtype,\n+                                            include_private=True,\n+                                            rows=5000)\n         for d in datasets['results']:\n             for r in d['resources']:\n                 try:\n                     results = lc.action.datastore_run_triggers(resource_id=r['id'])\n-                    click.echo(' '.join([r['name'], d['owner_org'], d['organization']['name'],\n-                               'updated', str(results), 'records']))\n+                    click.echo(' '.join([r['name'],\n+                                         d['owner_org'],\n+                                         d['organization']['name'],\n+                                         'updated', str(results), 'records']))\n                 except ValidationError as e:\n-                    click.echo(' '.join([r['name'], d['owner_org'], d['organization']['name'],\n-                               'failed', str(e.error_dict)]), err=True)\n+                    click.echo(' '.join([r['name'],\n+                                         d['owner_org'],\n+                                         d['organization']['name'],\n+                                         'failed', str(e.error_dict)]), err=True)\n \n \n-def _target_datasets(verbose=False):\n+def _target_datasets(verbose: bool = False):\n     \"\"\"\n     Find the RecombinantPlugin instance and output its\n     configured target datasets (e.g., ['ati', 'pd', ...])\n     \"\"\"\n     click.echo(' '.join(get_target_datasets()))\n \n \n-def _dataset_types(dataset_types, verbose=False):\n+def _dataset_types(dataset_types: Optional[List[str]],\n+                   verbose: bool = False):\n     \"\"\"\n     Output dataset types of recombinant resources\n     \"\"\"\n@@ -628,7 +738,10 @@ def _dataset_types(dataset_types, verbose=False):\n             c['resource_name'] for c in get_geno(t)['resources']))\n \n \n-def _template(dataset_type, org_name, output_file, verbose=False):\n+def _template(dataset_type: str,\n+              org_name: str,\n+              output_file: str,\n+              verbose: bool = False):\n     \"\"\"\n     Output the recombinant excel template to a file path\n     \"\"\""
                },
                {
                    "sha": "9cf368be88a8a55ad1e7613f50053834837115a5",
                    "filename": "ckanext/recombinant/datatypes.py",
                    "status": "modified",
                    "additions": 17,
                    "deletions": 12,
                    "changes": 29,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fdatatypes.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fdatatypes.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fdatatypes.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -3,6 +3,8 @@\n from datetime import datetime\n from decimal import Decimal, InvalidOperation\n \n+from typing import Union, Any\n+\n from ckanext.recombinant.errors import BadExcelData\n \n \n@@ -14,7 +16,8 @@\n #    'default': default value to use if blank\n #    'xl_format': Excel custom format string to apply\n \n-DatastoreType = namedtuple(\n+# type_ignore_reason: incomplete typing\n+DatastoreType = namedtuple(  # type: ignore\n         'DataStoreType',\n         ['tag', 'whole_number', 'xl_format'])\n \n@@ -25,16 +28,18 @@\n     'int': DatastoreType('int', True, 'General'),\n     'bigint': DatastoreType('bigint', True, 'General'),\n     'numeric': DatastoreType('numeric', False, 'General'),\n-    'money': DatastoreType( 'numeric', False, '$#,##0.00'),\n+    'money': DatastoreType('numeric', False, '$#,##0.00'),\n     'text': DatastoreType('text', False, '@'),\n     'boolean': DatastoreType('boolean', False, '@'),\n     '_text': DatastoreType('_text', False, '@'),\n     'timestamp': DatastoreType('timestamp', False, 'General'),\n }\n \n \n-def canonicalize(\n-        dirty, dstore_tag, primary_key, choice_field=False):\n+def canonicalize(dirty: Any,\n+                 dstore_tag: str,\n+                 primary_key: bool,\n+                 choice_field: Union[str, bool] = False) -> Any:\n     \"\"\"\n     Canonicalize dirty input from xlrd to align with\n     recombinant.json datastore type specified in dstore_tag.\n@@ -63,17 +68,17 @@ def canonicalize(\n \n     if dirty is None:\n         # use common value for blank cells\n-        dirty = u\"\"\n+        dirty = \"\"\n \n     if isinstance(dirty, str):\n         if not dirty.strip():\n             # whitespace-only values\n-            dirty = u\"\"\n+            dirty = \"\"\n         # excel, you keep being you\n-        if dirty == u'=FALSE()':\n-            dirty = u'FALSE'\n-        elif dirty == u'=TRUE()':\n-            dirty = u'TRUE'\n+        if dirty == '=FALSE()':\n+            dirty = 'FALSE'\n+        elif dirty == '=TRUE()':\n+            dirty = 'TRUE'\n         if dirty.startswith('='):\n             raise BadExcelData('Formulas are not supported')\n \n@@ -104,7 +109,7 @@ def canonicalize(\n             pass\n \n     if dstore_tag == 'date' and isinstance(dirty, datetime):\n-        return u'%04d-%02d-%02d' % (dirty.year, dirty.month, dirty.day)\n+        return '%04d-%02d-%02d' % (dirty.year, dirty.month, dirty.day)\n \n     dirty = str(dirty)\n \n@@ -117,7 +122,7 @@ def canonicalize(\n     # leads to unpleasantness\n     if primary_key:\n         dirty = dirty.strip()\n-        dirty = re.sub(u'[\\x00-\\x1f]', '', dirty)\n+        dirty = re.sub('[\\x00-\\x1f]', '', dirty)\n \n     if dstore_tag != 'text' and not primary_key and not dirty:\n         return None"
                },
                {
                    "sha": "e5f8988b0bceabecd9e764c8f3c493e75423b472",
                    "filename": "ckanext/recombinant/errors.py",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 4,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ferrors.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ferrors.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Ferrors.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,22 +1,28 @@\n+from typing import List, Any, Generator\n+\n from ckan.plugins.toolkit import _\n \n+\n class RecombinantException(Exception):\n     pass\n \n+\n class RecombinantConfigurationError(Exception):\n     pass\n \n+\n class BadExcelData(Exception):\n-    def __init__(self, message):\n+    def __init__(self, message: Any):\n         self.message = message\n \n \n-def format_trigger_error(error_values: list):\n+def format_trigger_error(error_values: List[str]) -> Generator[str, None, None]:\n     \"\"\"\n     Format PSQL function errors from raised ValidationError exceptions.\n \n-    This method will split the error messages on a unicode private code point (\\\\uF8FF)\n-    in order to do string replacements, allowing i18n support in the framework.\n+    This method will split the error messages on a\n+    unicode private code point (\\\\uF8FF) in order to do string\n+    replacements, allowing i18n support in the framework.\n     \"\"\"\n     for e in error_values:\n         if '\\uF8FF' in e:"
                },
                {
                    "sha": "c588ae31ed4da997d8e4b0a08c1bf63798730214",
                    "filename": "ckanext/recombinant/helpers.py",
                    "status": "modified",
                    "additions": 35,
                    "deletions": 19,
                    "changes": 54,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fhelpers.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fhelpers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fhelpers.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,6 +1,8 @@\n import json\n import os.path\n \n+from typing import Dict, Any, Optional, List\n+\n from ckan.plugins.toolkit import c, config\n from ckan.plugins.toolkit import _ as gettext\n import ckanapi\n@@ -15,7 +17,8 @@\n \n \n # same as scheming_language_text, copied so we don't add the dependency\n-def recombinant_language_text(text, prefer_lang=None):\n+def recombinant_language_text(text: Any,\n+                              prefer_lang: Optional[str] = None) -> str:\n     \"\"\"\n     :param text: {lang: text} dict or text string\n     :param prefer_lang: choose this language version if available\n@@ -24,13 +27,13 @@ def recombinant_language_text(text, prefer_lang=None):\n     language in dict or using gettext if not a dict\n     \"\"\"\n     if not text:\n-        return u''\n+        return ''\n \n     if hasattr(text, 'get'):\n         try:\n             if prefer_lang is None:\n                 prefer_lang = lang()\n-        except:\n+        except Exception:\n             pass  # lang() call will fail when no user language available\n         else:\n             try:\n@@ -44,14 +47,14 @@ def recombinant_language_text(text, prefer_lang=None):\n         except KeyError:\n             pass\n \n-        l, v = sorted(text.items())[0]\n+        _l, v = sorted(text.items())[0]\n         return v\n \n     t = gettext(text)\n     return t\n \n \n-def recombinant_get_chromo(resource_name):\n+def recombinant_get_chromo(resource_name: str) -> Optional[Dict[str, Any]]:\n     \"\"\"\n     Get the resource definition (chromo) for the given resource name\n     \"\"\"\n@@ -60,7 +63,8 @@ def recombinant_get_chromo(resource_name):\n     except RecombinantException:\n         return\n \n-def recombinant_get_geno(dataset_type):\n+\n+def recombinant_get_geno(dataset_type: str) -> Optional[Dict[str, Any]]:\n     \"\"\"\n     Get the dataset definition (geno) for thr given dataset type\n     \"\"\"\n@@ -69,10 +73,12 @@ def recombinant_get_geno(dataset_type):\n     except RecombinantException:\n         return\n \n-def recombinant_get_types():\n+\n+def recombinant_get_types() -> List[str]:\n     return get_dataset_types()\n \n-def recombinant_primary_key_fields(resource_name):\n+\n+def recombinant_primary_key_fields(resource_name: str) -> List[Dict[str, Any]]:\n     try:\n         chromo = get_chromo(resource_name)\n     except RecombinantException:\n@@ -82,7 +88,11 @@ def recombinant_primary_key_fields(resource_name):\n         if f['datastore_id'] in chromo['datastore_primary_key']\n         ]\n \n-def recombinant_example(resource_name, doc_type, indent=2, lang='json'):\n+\n+def recombinant_example(resource_name: str,\n+                        doc_type: str,\n+                        indent: int = 2,\n+                        lang: str = 'json') -> str:\n     \"\"\"\n     Return example data formatted for use in API documentation\n     \"\"\"\n@@ -110,15 +120,17 @@ def recombinant_example(resource_name, doc_type, indent=2, lang='json'):\n \n     if lang == 'pythonargs':\n         return ',\\n'.join(\n-            \"%s%s=%s\" % (left, k, json.dumps(data[k]))\n+            # type_ignore_reason: incomplete typing\n+            \"%s%s=%s\" % (left, k, json.dumps(data[k]))  # type: ignore\n             for k in sorted(data))\n \n     out = json.dumps(data, indent=2, sort_keys=True, ensure_ascii=False)\n     return left[2:] + ('\\n' + left[2:]).join(out.split('\\n')[1:-1])\n \n \n-def recombinant_choice_fields(resource_name, all_languages=False,\n-        prefer_lang=None):\n+def recombinant_choice_fields(resource_name: str,\n+                              all_languages: bool = False,\n+                              prefer_lang: Optional[str] = None) -> Dict[str, Any]:\n     \"\"\"\n     Return a datastore_id: choices dict from the resource definition\n     that contain lists of choices, with labels pre-translated\n@@ -133,18 +145,19 @@ def recombinant_choice_fields(resource_name, all_languages=False,\n     if not chromo:\n         return {}\n \n-    def build_choices(f, choices):\n+    def build_choices(f: Dict[str, Any], choices: Dict[str, Any]):\n         order_expr = f.get('choice_order_expression')\n-        key_fn = None\n         if order_expr:\n             code = compile(order_expr, resource_name, 'eval')\n \n-            def key_fn(v):\n+            def key_fn(v: str) -> Any:\n                 return eval(code, {}, {\n                     'code': v,\n                     'value': choices[v],\n                     'text': recombinant_language_text(choices[v], prefer_lang),\n                 })\n+        else:\n+            key_fn = None  # type: ignore\n \n         exclude_choices = f.get('exclude_choices', [])\n         out[f['datastore_id']] = [\n@@ -163,12 +176,12 @@ def key_fn(v):\n     return out\n \n \n-def _read_choices_file(chromo, f):\n+def _read_choices_file(chromo: Dict[str, Any], f: Dict[str, Any]) -> Dict[str, Any]:\n     with open(os.path.join(chromo['_path'], f['choices_file'])) as cf:\n         return load.load(cf)\n \n \n-def recombinant_show_package(pkg):\n+def recombinant_show_package(pkg: Dict[str, Any]) -> Dict[str, Any]:\n     \"\"\"\n     return recombinant_show results for pkg\n     \"\"\"\n@@ -178,17 +191,20 @@ def recombinant_show_package(pkg):\n         owner_org=pkg['organization']['name'])\n \n \n-def recombinant_get_field(resource_name, datastore_id):\n+def recombinant_get_field(resource_name: str,\n+                          datastore_id: str) -> Optional[Dict[str, Any]]:\n     \"\"\"\n     Return field info from resource name and datastore column id\n     \"\"\"\n     chromo = recombinant_get_chromo(resource_name)\n+    if not chromo:\n+        return\n     for f in chromo['fields']:\n         if f['datastore_id'] == datastore_id:\n             return f\n \n \n-def recombinant_published_resource_chromo(res_id):\n+def recombinant_published_resource_chromo(res_id: str) -> Optional[Dict[str, Any]]:\n     try:\n         resource_name = get_published_resource_resource_name(res_id)\n         return recombinant_get_chromo(resource_name)"
                },
                {
                    "sha": "01a8558d80e6bc4a8b5014a29a5666ac5b235d32",
                    "filename": "ckanext/recombinant/load.py",
                    "status": "modified",
                    "additions": 14,
                    "deletions": 14,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fload.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fload.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fload.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,24 +1,24 @@\n import json\n+import yaml\n \n-try:\n-    import yaml\n-except ImportError:\n-    yaml = None\n+from typing import Union, Dict, Any, TextIO\n \n \n+def load(f: Union[str, bytes, bytearray, TextIO]) -> Dict[str, Any]:\n+    if is_yaml(getattr(f, 'name', '')):\n+        # type_ignore_reason: incomplete typing\n+        return yaml.safe_load(f)  # type: ignore\n+    # type_ignore_reason: incomplete typing\n+    return json.load(f)  # type: ignore\n \n-def load(f):\n-    if is_yaml(f.name):\n-        return yaml.safe_load(f)\n-    return json.load(f)\n \n-\n-def loads(s, url):\n+def loads(s: Union[str, bytes, bytearray, TextIO], url: str) -> Dict[str, Any]:\n     if is_yaml(url):\n-        return yaml.safe_load(s)\n-    return json.loads(s)\n+        # type_ignore_reason: incomplete typing\n+        return yaml.safe_load(s)  # type: ignore\n+    # type_ignore_reason: incomplete typing\n+    return json.loads(s)  # type: ignore\n \n \n-def is_yaml(n):\n-    # import pyyaml only if necessary\n+def is_yaml(n: str) -> bool:\n     return n.endswith(('.yaml', '.yml'))"
                },
                {
                    "sha": "9f587e26fbf415831d9e77b2b462b51e3e0eb0a8",
                    "filename": "ckanext/recombinant/logic.py",
                    "status": "modified",
                    "additions": 101,
                    "deletions": 74,
                    "changes": 175,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Flogic.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Flogic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Flogic.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,6 +1,9 @@\n from six import string_types\n from ckan.plugins.toolkit import _, chained_action, h, side_effect_free\n \n+from typing import Dict, Any, List, Tuple\n+from ckan.types import Context, DataDict, Action, ChainedAction\n+\n from sqlalchemy import and_\n \n from ckanapi import LocalCKAN, NotFound, ValidationError, NotAuthorized\n@@ -9,12 +12,18 @@\n from ckan.common import asbool\n \n from ckanext.recombinant.tables import get_geno, get_chromo\n-from ckanext.recombinant.errors import RecombinantException, RecombinantConfigurationError, format_trigger_error\n+from ckanext.recombinant.errors import (\n+    RecombinantException,\n+    RecombinantConfigurationError,\n+    format_trigger_error\n+)\n from ckanext.recombinant.datatypes import datastore_type\n from ckanext.recombinant.helpers import _read_choices_file\n \n+from ckanext.datastore.backend.postgres import literal_string\n+\n \n-def recombinant_create(context, data_dict):\n+def recombinant_create(context: Context, data_dict: DataDict):\n     '''\n     Create a dataset with datastore table(s) for an organization and\n     recombinant dataset type.\n@@ -25,9 +34,9 @@ def recombinant_create(context, data_dict):\n     lc, geno, results = _action_find_dataset(context, data_dict)\n \n     if results:\n-        raise ValidationError({'owner_org':\n-            _(\"dataset type %s already exists for this organization\")\n-            % data_dict['dataset_type']})\n+        raise ValidationError(\n+            {'owner_org': _(\"dataset type %s already exists for this organization\") %\n+             data_dict['dataset_type']})\n \n     resources = [\n         # dummy url for old ckan compatibility reasons\n@@ -44,7 +53,7 @@ def recombinant_create(context, data_dict):\n     return _update_datastore(lc, geno, dataset)\n \n \n-def recombinant_update(context, data_dict):\n+def recombinant_update(context: Context, data_dict: DataDict):\n     '''\n     Update a dataset's datastore table(s) for an organization and\n     recombinant dataset type.\n@@ -64,7 +73,7 @@ def recombinant_update(context, data_dict):\n         force_update=asbool(data_dict.get('force_update', False)))\n \n \n-def recombinant_show(context, data_dict):\n+def recombinant_show(context: Context, data_dict: DataDict) -> Dict[str, Any]:\n     '''\n     Return the status of a recombinant dataset including all its tables\n     and checking that its metadata is up to date.\n@@ -74,18 +83,15 @@ def recombinant_show(context, data_dict):\n     '''\n     lc, geno, dataset = _action_get_dataset(context, data_dict)\n \n-    chromos = dict(\n-        (chromo['resource_name'], chromo) for chromo in geno['resources'])\n+    chromos = dict((chromo['resource_name'], chromo) for chromo in geno['resources'])\n \n     resources = []\n     resources_correct = True\n \n     for resource in dataset['resources']:\n-        out = {\n-            'id': resource['id'],\n-            'name': resource['name'],\n-            'description': resource['description'],\n-            }\n+        out = {'id': resource['id'],\n+               'name': resource['name'],\n+               'description': resource['description']}\n \n         # migration below will update this\n         metadata_correct = True\n@@ -126,28 +132,33 @@ def recombinant_show(context, data_dict):\n         'id': dataset['id'],\n         'metadata_correct': metadata_correct,\n         'all_correct': (metadata_correct and resources_correct\n-            and len(dataset['resources']) == len(chromos)),\n+                        and len(dataset['resources']) == len(chromos)),\n         'resources': resources,\n         'template_updated': geno.get('template_updated'),\n         }\n \n \n-def _action_find_dataset(context, data_dict):\n+def _action_find_dataset(context: Context, data_dict: DataDict) -> Tuple[\n+        LocalCKAN, Dict[str, Any], List[Dict[str, Any]]]:\n     '''\n     common code for actions that need to check for a dataset based on\n     the dataset type and organization name or id\n     '''\n     dataset_type = get_or_bust(data_dict, 'dataset_type')\n     owner_org = Group.get(get_or_bust(data_dict, 'owner_org'))\n \n+    if not owner_org:\n+        raise ValidationError(\n+            {'owner_org': _(\"Organization not found\")})\n+\n     try:\n         geno = get_geno(dataset_type)\n     except RecombinantException:\n-        raise ValidationError({'dataset_type':\n-            _(\"Recombinant dataset type not found\")})\n+        raise ValidationError(\n+            {'dataset_type': _(\"Recombinant dataset type not found\")})\n \n     fresh_context = {}\n-    if u'ignore_auth' in context:\n+    if 'ignore_auth' in context:\n         fresh_context['ignore_auth'] = context['ignore_auth']\n \n     lc = LocalCKAN(username=context['user'], context=fresh_context)\n@@ -158,7 +169,8 @@ def _action_find_dataset(context, data_dict):\n     return lc, geno, result['results']\n \n \n-def _action_get_dataset(context, data_dict):\n+def _action_get_dataset(context: Context, data_dict: DataDict) -> Tuple[\n+        LocalCKAN, Dict[str, Any], Dict[str, Any]]:\n     '''\n     common code for actions that need to retrieve a dataset based on\n     the dataset type and organization name or id\n@@ -168,14 +180,17 @@ def _action_get_dataset(context, data_dict):\n     if not results:\n         raise NotFound()\n     if len(results) > 1 and not data_dict.get('ignore_errors'):\n-        raise ValidationError({'owner_org':\n-            _(\"Multiple datasets exist for type {0} org {1}\").format(\n-                 data_dict['dataset_type'], data_dict['owner_org'])})\n+        raise ValidationError(\n+            {'owner_org': _(\"Multiple datasets exist for type {0} org {1}\").format(\n+                data_dict['dataset_type'], data_dict['owner_org'])})\n \n     return lc, geno, results[0]\n \n \n-def _update_dataset(lc, geno, dataset, delete_resources=False):\n+def _update_dataset(lc: LocalCKAN,\n+                    geno: Dict[str, Any],\n+                    dataset: Dict[str, Any],\n+                    delete_resources: bool = False) -> Dict[str, Any]:\n     \"\"\"\n     call lc.action.package_update on dataset if necessary to make its\n     metadata match the dataset definition geno\n@@ -185,8 +200,7 @@ def _update_dataset(lc, geno, dataset, delete_resources=False):\n         dataset.update(_dataset_fields(geno))\n         package_update_required = True\n \n-    chromos = dict(\n-        (chromo['resource_name'], chromo) for chromo in geno['resources'])\n+    chromos = dict((chromo['resource_name'], chromo) for chromo in geno['resources'])\n \n     # migrate recombinant1 datasets which had no resource\n     # name to identify resource\n@@ -227,7 +241,10 @@ def _update_dataset(lc, geno, dataset, delete_resources=False):\n     return dataset\n \n \n-def _update_datastore(lc, geno, dataset, force_update=False):\n+def _update_datastore(lc: LocalCKAN,\n+                      geno: Dict[str, Any],\n+                      dataset: Dict[str, Any],\n+                      force_update: bool = False):\n     \"\"\"\n     call lc.action.datastore_create to create tables or add\n     columns to existing datastore tables based on dataset definition\n@@ -247,12 +264,11 @@ def _update_datastore(lc, geno, dataset, force_update=False):\n         except NotFound:\n             pass\n         else:\n-            if not force_update and _datastore_match(\n-                    chromo['fields'], ds['fields']):\n+            if not force_update and _datastore_match(chromo['fields'], ds['fields']):\n                 continue\n             # extra work here to maintain existing fields+ordering\n             # datastore_create rejects our list otherwise\n-            fields = ds['fields'][1:] # trim _id field\n+            fields = ds['fields'][1:]  # trim _id field\n             seen = set(f['id'] for f in fields)\n             for f in datastore_fields(chromo['fields'], datastore_text_types):\n                 if f['id'] not in seen:\n@@ -267,7 +283,8 @@ def _update_datastore(lc, geno, dataset, force_update=False):\n                 for _chromo in geno['resources']:\n                     # try to get the resource id from chromo name\n                     if f_table == _chromo['resource_name']:\n-                        foreign_keys[resource_ids[_chromo['resource_name']]] = field_map\n+                        foreign_keys[resource_ids[_chromo['resource_name']]] = \\\n+                            field_map\n                         break\n                 else:\n                     foreign_keys[f_table] = field_map\n@@ -282,33 +299,38 @@ def _update_datastore(lc, geno, dataset, force_update=False):\n             force=True)\n \n \n-def _update_triggers(lc, chromo):\n+def _update_triggers(lc: LocalCKAN, chromo: Dict[str, Any]) -> List[str]:\n     definitions = dict(chromo.get('trigger_strings', {}))\n     trigger_names = []\n \n     for f in chromo['fields']:\n         if 'choices' in f:\n             if f['datastore_id'] in definitions:\n-                raise RecombinantConfigurationError(\"trigger_string {name} can't be used because that name is required for the {name} field choices\"\n-                                                        .format(name=f['datastore_id']))\n+                raise RecombinantConfigurationError(\n+                    \"trigger_string {name} can't be used because that \"\n+                    \"name is required for the {name} field choices\".format(\n+                        name=f['datastore_id']))\n             definitions[f['datastore_id']] = sorted(f['choices'])\n         elif 'choices_file' in f and '_path' in chromo:\n             if f['datastore_id'] in definitions:\n-                raise RecombinantConfigurationError(\"trigger_string {name} can't be used because that name is required for the {name} field choices\"\n-                                                        .format(name=f['datastore_id']))\n+                raise RecombinantConfigurationError(\n+                    \"trigger_string {name} can't be used because that \"\n+                    \"name is required for the {name} field choices\".format(\n+                        name=f['datastore_id']))\n             definitions[f['datastore_id']] = sorted(_read_choices_file(chromo, f))\n \n     for tr in chromo.get('triggers', []):\n         if isinstance(tr, dict):\n             if len(tr) != 1:\n-                raise RecombinantConfigurationError(\"inline trigger may have only one key: \" + repr(tr.keys()))\n+                raise RecombinantConfigurationError(\n+                    \"inline trigger may have only one key: \" + repr(tr.keys()))\n             ((trname, trcode),) = tr.items()\n             trigger_names.append(trname)\n             try:\n                 lc.action.datastore_function_create(\n                     name=str(trname),\n                     or_replace=True,\n-                    rettype=u'trigger',\n+                    rettype='trigger',\n                     definition=str(trcode).format(**dict(\n                         (dkey, _pg_value(dvalue))\n                         for dkey, dvalue in definitions.items())))\n@@ -319,55 +341,48 @@ def _update_triggers(lc, chromo):\n     return trigger_names\n \n \n-def _pg_value(value):\n-    try:\n-        from ckanext.datastore.backend.postgres import literal_string\n-    except ImportError:\n-        from ckanext.datastore.helpers import literal_string\n-\n+def _pg_value(value: Any) -> str:\n     if isinstance(value, string_types):\n         return literal_string(str(value))\n \n-    return u'ARRAY[' + u','.join(\n-        literal_string(str(c)) for c in value) + u']'\n+    return 'ARRAY[' + ','.join(literal_string(str(c)) for c in value) + ']'\n \n \n-def _dataset_fields(geno):\n+def _dataset_fields(geno: Dict[str, Any]) -> Dict[str, Any]:\n     \"\"\"\n     return the dataset metadata fields created for dataset definition geno\n     \"\"\"\n     return {'title': geno['title'], 'notes': geno.get('notes', '')}\n \n \n-def _dataset_match(geno, dataset):\n+def _dataset_match(geno: Dict[str, Any], dataset: Dict[str, Any]) -> bool:\n     \"\"\"\n     return True if dataset metadata matches expected fields for dataset type dt\n     \"\"\"\n     return all(dataset[k] == v for (k, v) in _dataset_fields(geno).items())\n \n \n-def _resource_fields(chromo):\n+def _resource_fields(chromo: Dict[str, Any]) -> Dict[str, Any]:\n     \"\"\"\n     return the resource metadata fields created for resource definition chromo\n     \"\"\"\n-    return {\n-        'name': chromo['resource_name'],\n-        'description': chromo['title'],\n-        'url_type': u'datastore',\n-        }\n+    return {'name': chromo['resource_name'],\n+            'description': chromo['title'],\n+            'url_type': 'datastore'}\n \n \n-def _resource_match(chromo, resource):\n+def _resource_match(chromo: Dict[str, Any], resource: Dict[str, Any]) -> bool:\n     \"\"\"\n     return True if resource metadatas matches expected fields for sheet r\n     \"\"\"\n     return all(resource[k] == v for (k, v) in _resource_fields(chromo).items())\n \n \n-def datastore_column_type(t, text_types):\n+def datastore_column_type(t: str, text_types: List[str]) -> str:\n     \"\"\"\n     return postgres column type for field type t\n-    if text_types is true return simple types (almost all text) for backwards compatibility\n+    if text_types is true return simple types (almost all text)\n+    for backwards compatibility\n     \"\"\"\n     if text_types:\n         return 'bigint' if datastore_type[t].whole_number else 'text'\n@@ -376,18 +391,19 @@ def datastore_column_type(t, text_types):\n     return 'int' if t in ('year', 'month') else t\n \n \n-def datastore_fields(fs, text_types):\n+def datastore_fields(fs: List[Dict[str, Any]], text_types: List[str]) -> List[\n+        Dict[str, Any]]:\n     \"\"\"\n     return the datastore field definitions for fields fs\n     \"\"\"\n-    return [{\n-        'id': f['datastore_id'],\n-        'type': datastore_column_type(f['datastore_type'], text_types)}\n-        for f in fs\n-        if not f.get('published_resource_computed_field', False)]\n+    return [{'id': f['datastore_id'],\n+             'type': datastore_column_type(\n+                 f['datastore_type'], text_types)}\n+            for f in fs\n+            if not f.get('published_resource_computed_field', False)]\n \n \n-def _datastore_match(fs, fields):\n+def _datastore_match(fs: List[Dict[str, Any]], fields: List[Dict[str, Any]]) -> bool:\n     \"\"\"\n     return True if existing datastore column fields include fields\n     defined in fs.\n@@ -399,20 +415,24 @@ def _datastore_match(fs, fields):\n \n @chained_action\n @side_effect_free\n-def recombinant_datastore_info(up_func, context, data_dict):\n+def recombinant_datastore_info(up_func: Action,\n+                               context: Context,\n+                               data_dict: DataDict) -> ChainedAction:\n     \"\"\"\n-    Wraps datastore_info action to add Recombinant schema info to Recombinant resources and Published resources.\n+    Wraps datastore_info action to add Recombinant schema info\n+    to Recombinant resources and Published resources.\n     \"\"\"\n     info = up_func(context, data_dict)\n     resource_id = data_dict.get('resource_id', data_dict.get('id'))\n     chromo = h.recombinant_published_resource_chromo(resource_id)\n+    package_type = ''\n+    recombinant_resource_name = ''\n     if not chromo:\n         model = context['model']\n         result = model.Session.query(model.Package.type, model.Resource.name).join(\n             model.Resource,\n             and_(model.Resource.package_id == model.Package.id,\n-                model.Resource.id == resource_id)\n-        ).all()\n+                 model.Resource.id == resource_id)).all()\n \n         if result:\n             package_type = result[0][0]\n@@ -431,10 +451,14 @@ def recombinant_datastore_info(up_func, context, data_dict):\n         if field['id'] in keyed_chromo:\n             field['type'] = keyed_chromo[field['id']].get('datastore_type')\n             field['info'] = {\n-                'label_en': h.recombinant_language_text(keyed_chromo[field['id']].get('label'), 'en'),\n-                'label_fr': h.recombinant_language_text(keyed_chromo[field['id']].get('label'), 'fr'),\n-                'notes_en': h.recombinant_language_text(keyed_chromo[field['id']].get('description'), 'en'),\n-                'notes_fr': h.recombinant_language_text(keyed_chromo[field['id']].get('description'), 'fr'),\n+                'label_en': h.recombinant_language_text(\n+                    keyed_chromo[field['id']].get('label'), 'en'),\n+                'label_fr': h.recombinant_language_text(\n+                    keyed_chromo[field['id']].get('label'), 'fr'),\n+                'notes_en': h.recombinant_language_text(\n+                    keyed_chromo[field['id']].get('description'), 'en'),\n+                'notes_fr': h.recombinant_language_text(\n+                    keyed_chromo[field['id']].get('description'), 'fr'),\n                 'type_override': field.get('info', {}).get('type_override', ''),\n                 'datastore_type': field['type']\n             }\n@@ -443,7 +467,9 @@ def recombinant_datastore_info(up_func, context, data_dict):\n \n \n @chained_action\n-def recombinant_datastore_upsert(up_func, context, data_dict):\n+def recombinant_datastore_upsert(up_func: Action,\n+                                 context: Context,\n+                                 data_dict: DataDict) -> ChainedAction:\n     \"\"\"\n     Wraps datastore_upsert action to split Validation Errors with format_trigger_error.\n     \"\"\"\n@@ -453,7 +479,8 @@ def recombinant_datastore_upsert(up_func, context, data_dict):\n         _error_dict = dict(e.error_dict)\n         if 'records' not in _error_dict:\n             raise\n-        _error_dict['records'] = list(_error_dict['records'])\n+        # type_ignore_reason: incomplete typing\n+        _error_dict['records'] = list(_error_dict['records'])  # type: ignore\n         for record_errs in _error_dict['records']:\n             if not isinstance(record_errs, dict):\n                 continue"
                },
                {
                    "sha": "824a3beecfa88ff54000a42c5f808c81a6bcdbd8",
                    "filename": "ckanext/recombinant/plugins.py",
                    "status": "modified",
                    "additions": 123,
                    "deletions": 54,
                    "changes": 177,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fplugins.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fplugins.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fplugins.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,19 +1,48 @@\n import importlib\n import os\n import uuid\n-\n-from ckan.plugins.toolkit import _, get_validator\n+from urllib.request import urlopen\n+from urllib.error import URLError\n+\n+from typing import Optional, Union, Any, Dict, List, Tuple\n+from ckan.types import (\n+    FlattenDataDict,\n+    FlattenErrorDict,\n+    FlattenKey,\n+    Context,\n+    Callable,\n+    Action,\n+    ChainedAction,\n+    AuthFunction,\n+    ChainedAuthFunction,\n+    Schema,\n+    Validator\n+)\n+from ckan.common import CKANConfig\n+\n+from flask import Blueprint\n+from click import Command\n+\n+from ckan.plugins.toolkit import get_validator\n import ckan.plugins as p\n from ckan.lib.plugins import DefaultDatasetForm, DefaultTranslation\n \n-from ckanext.recombinant import logic, tables, helpers, load, views, auth, cli, validators\n+from ckanext.recombinant import (\n+    logic,\n+    tables,\n+    helpers,\n+    load,\n+    views,\n+    auth,\n+    cli,\n+    validators\n+)\n from ckanext.recombinant.errors import RecombinantException\n \n from ckanext.datastore.interfaces import IDataDictionaryForm\n \n \n-class RecombinantPlugin(\n-        p.SingletonPlugin, DefaultDatasetForm, DefaultTranslation):\n+class RecombinantPlugin(p.SingletonPlugin, DefaultDatasetForm, DefaultTranslation):\n     p.implements(tables.IRecombinant)\n     p.implements(p.IConfigurer)\n     p.implements(p.IDatasetForm, inherit=True)\n@@ -26,17 +55,16 @@ class RecombinantPlugin(\n     p.implements(p.IValidators)\n     p.implements(IDataDictionaryForm, inherit=True)\n \n-    def update_config(self, config):\n+    def update_config(self, config: 'CKANConfig'):\n         # add our templates\n         p.toolkit.add_template_directory(config, 'templates')\n         p.toolkit.add_resource('assets', 'recombinant')\n \n         # read our configuration early\n-        self._tables_urls = config.get('recombinant.definitions', \"\"\n-            ).split()\n+        self._tables_urls = config.get('recombinant.definitions', \"\").split()\n         if not self._tables_urls:\n             raise RecombinantException(\"Missing configuration option \"\n-                \"recombinant.definitions\")\n+                                       \"recombinant.definitions\")\n         self._chromos, self._genos = (\n             _load_table_definitions(self._tables_urls))\n         self._published_resource_ids = {}\n@@ -45,32 +73,42 @@ def update_config(self, config):\n             if pubid:\n                 self._published_resource_ids[pubid] = chname\n \n-    def package_types(self):\n+    def package_types(self) -> List[str]:\n         return tables.get_dataset_types()\n \n-    def create_package_schema(self):\n+    def create_package_schema(self) -> Schema:\n         schema = super(RecombinantPlugin, self).create_package_schema()\n         schema['id'] = [generate_uuid]\n         schema['name'] = [value_from_id]\n         schema['resources']['url'] = [p.toolkit.get_validator('ignore_missing')]\n \n         return schema\n \n-    def get_blueprint(self):\n+    def get_blueprint(self) -> List[Blueprint]:\n         return [views.recombinant]\n \n-    def prepare_dataset_blueprint(self, package_type, bp):\n-        bp.add_url_rule('/<id>', 'dataset_redirect', views.dataset_redirect)\n-        bp.add_url_rule('/edit/<id>', 'dataset_edit_redirect', views.dataset_redirect)\n-        bp.add_url_rule('/<id>/dictionary/<resource_id>', 'resource_data_dict_redirect', views.resource_redirect)\n+    def prepare_dataset_blueprint(self, package_type: str, bp: Blueprint):\n+        bp.add_url_rule('/<id>',\n+                        'dataset_redirect',\n+                        views.dataset_redirect)\n+        bp.add_url_rule('/edit/<id>',\n+                        'dataset_edit_redirect',\n+                        views.dataset_redirect)\n+        bp.add_url_rule('/<id>/dictionary/<resource_id>',\n+                        'resource_data_dict_redirect',\n+                        views.resource_redirect)\n         return bp\n \n-    def prepare_resource_blueprint(self, package_type, bp):\n-        bp.add_url_rule('/<resource_id>/edit', 'resource_edit_redirect', views.resource_redirect)\n-        bp.add_url_rule('/<resource_id>', 'resource_view_redirect', views.resource_redirect)\n+    def prepare_resource_blueprint(self, package_type: str, bp: Blueprint):\n+        bp.add_url_rule('/<resource_id>/edit',\n+                        'resource_edit_redirect',\n+                        views.resource_redirect)\n+        bp.add_url_rule('/<resource_id>',\n+                        'resource_view_redirect',\n+                        views.resource_redirect)\n         return bp\n \n-    def get_helpers(self):\n+    def get_helpers(self) -> Dict[str, Callable[..., Any]]:\n         return {\n             'recombinant_language_text': helpers.recombinant_language_text,\n             'recombinant_primary_key_fields':\n@@ -86,7 +124,7 @@ def get_helpers(self):\n                 helpers.recombinant_published_resource_chromo,\n             }\n \n-    def get_actions(self):\n+    def get_actions(self) -> Dict[str, Union[Action, ChainedAction]]:\n         return {\n             'recombinant_create': logic.recombinant_create,\n             'recombinant_update': logic.recombinant_update,\n@@ -96,49 +134,54 @@ def get_actions(self):\n             }\n \n     # IAuthFunctions\n-\n-    def get_auth_functions(self):\n+    def get_auth_functions(self) -> Dict[str, Union[AuthFunction,\n+                                                    ChainedAuthFunction]]:\n         return {\n             'package_update': auth.package_update,\n             'package_create': auth.package_create,\n             'datastore_delete': auth.datastore_delete,\n         }\n \n     # IClick\n-\n-    def get_commands(self):\n+    def get_commands(self) -> List[Command]:\n         return [cli.get_commands()]\n \n     # IValidators\n-\n-    def get_validators(self):\n+    def get_validators(self) -> Dict[str, Validator]:\n         return {\n             'recombinant_foreign_keys': validators.recombinant_foreign_keys,\n         }\n \n     # IDataDictionaryForm\n-\n-    def update_datastore_create_schema(self, schema):\n+    def update_datastore_create_schema(self, schema: Schema) -> Schema:\n         recombinant_foreign_keys_validator = get_validator('recombinant_foreign_keys')\n-        schema['foreign_keys'].append(recombinant_foreign_keys_validator)\n+        if 'foreign_keys' not in schema:\n+            schema['foreign_keys'] = []\n+        # type_ignore_reason: incomplete typing\n+        schema['foreign_keys'].append(  # type: ignore\n+            recombinant_foreign_keys_validator)\n         return schema\n \n \n-def generate_uuid(value):\n+def generate_uuid(value: Any) -> str:\n     \"\"\"\n     Create an id for this dataset earlier than normal.\n     \"\"\"\n     return str(uuid.uuid4())\n \n \n-def value_from_id(key, converted_data, errors, context):\n+def value_from_id(key: FlattenKey,\n+                  converted_data: FlattenDataDict,\n+                  errors: FlattenErrorDict,\n+                  context: Context):\n     \"\"\"\n     Copy the 'id' value from converted_data\n     \"\"\"\n     converted_data[key] = converted_data[('id',)]\n \n \n-def _load_table_definitions(urls):\n+def _load_table_definitions(urls: List[str]) -> Tuple[\n+        Dict[str, Dict[str, Any]], Dict[str, Dict[str, Any]]]:\n     chromos = {}\n     genos = {}\n     dataset_definitions = {}\n@@ -152,21 +195,38 @@ def _load_table_definitions(urls):\n             t = _load_tables_url(url)\n             is_url = True\n \n+        if not t or not p:\n+            continue\n+\n         if t['dataset_type'] in dataset_definitions:\n-            raise RecombinantException('Recombinant dataset_type \"%s\" is already defined in %s. Cannot be redefined in %s.'\n-                                       % (t['dataset_type'], dataset_definitions[t['dataset_type']], url))\n+            raise RecombinantException(\n+                'Recombinant dataset_type \"%s\" is already '\n+                'defined in %s. Cannot be redefined in %s.' %\n+                (t['dataset_type'],\n+                 dataset_definitions[t['dataset_type']],\n+                 url))\n         genos[t['dataset_type']] = t\n         dataset_definitions[t['dataset_type']] = url\n \n         for chromo in t['resources']:\n             if chromo['resource_name'] in resource_definitions:\n-                raise RecombinantException('Recombinant resource_name \"%s\" is already defined in %s. Cannot be redefined in %s.'\n-                                           % (chromo['resource_name'], resource_definitions[chromo['resource_name']], url))\n-            if 'published_resource_id' in chromo and chromo['published_resource_id'] in published_resource_definitions:\n-                raise RecombinantException('Published Resource ID \"%s\" is already defined for \"%s\" in %s. Cannot be redefined in %s.'\n-                                           % (chromo['published_resource_id'],\n-                                              published_resource_definitions[chromo['published_resource_id']]['resource_name'],\n-                                              published_resource_definitions[chromo['published_resource_id']]['url'], url))\n+                raise RecombinantException(\n+                    'Recombinant resource_name \"%s\" is already '\n+                    'defined in %s. Cannot be redefined in %s.' %\n+                    (chromo['resource_name'],\n+                     resource_definitions[chromo['resource_name']],\n+                     url))\n+            if (\n+              'published_resource_id' in chromo and\n+              chromo['published_resource_id'] in published_resource_definitions):\n+                raise RecombinantException(\n+                    'Published Resource ID \"%s\" is already '\n+                    'defined for \"%s\" in %s. Cannot be redefined in %s.' %\n+                    (chromo['published_resource_id'],\n+                     published_resource_definitions[\n+                         chromo['published_resource_id']]['resource_name'],\n+                     published_resource_definitions[\n+                         chromo['published_resource_id']]['url'], url))\n             chromo['dataset_type'] = t['dataset_type']\n             if 'target_dataset' in t:\n                 chromo['target_dataset'] = t['target_dataset']\n@@ -177,21 +237,30 @@ def _load_table_definitions(urls):\n             chromos[chromo['resource_name']] = chromo\n             resource_definitions[chromo['resource_name']] = url\n             if 'published_resource_id' in chromo:\n-                published_resource_definitions[chromo['published_resource_id']] = {'url': url, 'resource_name': chromo['resource_name']}\n+                published_resource_definitions[chromo['published_resource_id']] = {\n+                    'url': url, 'resource_name': chromo['resource_name']}\n             if 'triggers' in chromo:\n                 for trigger in chromo['triggers']:\n                     if isinstance(trigger, dict):\n                         for trigger_name in trigger:\n                             if trigger_name in trigger_definitions:\n-                                raise RecombinantException('Recombinant database trigger \"%s\" is already defined for \"%s\" in %s. Cannot be redefined in %s.'\n-                                                           % (trigger_name, trigger_definitions[trigger_name]['resource_name'],\n-                                                              trigger_definitions[trigger_name]['url'], url))\n-                            trigger_definitions[trigger_name] = {'url': url, 'resource_name': chromo['resource_name']}\n+                                raise RecombinantException(\n+                                    'Recombinant database trigger \"%s\" is already '\n+                                    'defined for \"%s\" in %s. Cannot be '\n+                                    'redefined in %s.' %\n+                                    (trigger_name,\n+                                     trigger_definitions[\n+                                         trigger_name]['resource_name'],\n+                                     trigger_definitions[\n+                                         trigger_name]['url'], url))\n+                            trigger_definitions[trigger_name] = {\n+                                'url': url, 'resource_name': chromo['resource_name']}\n \n     return chromos, genos\n \n \n-def _load_tables_module_path(url):\n+def _load_tables_module_path(url: str) -> Tuple[\n+        Optional[Dict[str, Any]], Optional[str]]:\n     \"\"\"\n     Given a path like \"ckanext.spatialx:my_definition.json\"\n     find the second part relative to the import path of the first\n@@ -207,14 +276,14 @@ def _load_tables_module_path(url):\n     p = os.path.join(p, file_name)\n     if os.path.exists(p):\n         return load.load(open(p)), p\n+    return None, None\n \n \n-def _load_tables_url(url):\n-    import urllib2\n+def _load_tables_url(url: str) -> Optional[Dict[str, Any]]:\n     try:\n-        res = urllib2.urlopen(url)\n+        res = urlopen(url)\n         tables = res.read()\n-    except urllib2.URLError:\n-        raise RecombinantException(\"Could not find recombinant.definitions json config file: %s\" % url )\n-\n+    except URLError:\n+        raise RecombinantException(\n+            \"Could not find recombinant.definitions json config file: %s\" % url)\n     return load.loads(tables, url)"
                },
                {
                    "sha": "e151bf5cf7c80af4ab7fee7d2dd979c0ca1c5fe7",
                    "filename": "ckanext/recombinant/read_csv.py",
                    "status": "modified",
                    "additions": 17,
                    "deletions": 8,
                    "changes": 25,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fread_csv.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fread_csv.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fread_csv.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,9 +1,16 @@\n from unicodecsv import DictReader\n import codecs\n \n+from typing import Any, Dict, Generator, Tuple, List, Optional\n+\n+\n BATCH_SIZE = 15000\n \n-def csv_data_batch(csv_path, chromo, strict=True):\n+\n+def csv_data_batch(csv_path: str,\n+                   chromo: Dict[str, Any],\n+                   strict: bool = True) -> Generator[\n+                       Tuple[Optional[str], List[Dict[str, Any]]], None, None]:\n     \"\"\"\n     Generator of dataset records from csv file\n \n@@ -24,22 +31,24 @@ def csv_data_batch(csv_path, chromo, strict=True):\n             f.seek(0)\n \n         csv_in = DictReader(f)\n-        cols = [\n-            f for f in csv_in.fieldnames\n-            if f not in chromo.get('csv_org_extras', [])]\n+        cols = []\n+        if csv_in.fieldnames:\n+            cols = [\n+                f for f in csv_in.fieldnames\n+                if f not in chromo.get('csv_org_extras', [])]\n \n         if strict:\n-            expected = [f['datastore_id'] for f in chromo['fields'] if not f.get('published_resource_computed_field')\n-                ] + ['owner_org', 'owner_org_title']\n+            expected = [f['datastore_id'] for f in chromo['fields'] if not f.get(\n+                'published_resource_computed_field')] + \\\n+                ['owner_org', 'owner_org_title']\n             assert cols == expected, 'column mismatch:\\n{0}\\n{1}'.format(\n                 cols, expected)\n \n         none_fields = [f['datastore_id'] for f in chromo['fields']\n-            if f['datastore_type'] != 'text']\n+                       if f['datastore_type'] != 'text']\n \n         for row_dict in csv_in:\n             owner_org = row_dict.pop('owner_org')\n-            owner_org_title = row_dict.pop('owner_org_title')\n             if owner_org != current_owner_org:\n                 if records:\n                     yield (current_owner_org, records)"
                },
                {
                    "sha": "b810036c162aee5c59528f165fb027d350cc7e28",
                    "filename": "ckanext/recombinant/read_excel.py",
                    "status": "modified",
                    "additions": 37,
                    "deletions": 19,
                    "changes": 56,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fread_excel.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fread_excel.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fread_excel.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,14 +1,23 @@\n import re\n \n-import openpyxl\n+from openpyxl import load_workbook\n+from openpyxl.worksheet.worksheet import Worksheet\n+\n+from typing import Any, List, Dict, Iterator, Union, Optional, Tuple\n+\n+from werkzeug.datastructures import FileStorage as FlaskFileStorage\n+from cgi import FieldStorage\n \n from ckanext.recombinant.datatypes import canonicalize\n from ckanext.recombinant.errors import BadExcelData\n \n+\n HEADER_ROWS_V2 = 3\n HEADER_ROWS_V3 = 5\n \n-def read_excel(f, file_contents=None):\n+\n+def read_excel(f: Union[str, FlaskFileStorage, FieldStorage],\n+               file_contents: Optional[str] = None) -> Iterator[Any]:\n     \"\"\"\n     Return a generator that opens the excel file f (name or file object)\n     and then produces ((sheet-name, org-name), row1, row2, ...)\n@@ -20,17 +29,20 @@ def read_excel(f, file_contents=None):\n         ...\n     :rtype: generator\n     \"\"\"\n-    wb = openpyxl.load_workbook(f, read_only=True)\n+    wb = load_workbook(f, read_only=True)\n \n     for sheetname in wb.sheetnames:\n         if sheetname == 'reference':\n             return\n-        sheet = wb[sheetname]\n+        # type_ignore_reason: incomplete typing\n+        sheet: Worksheet = wb[sheetname]  # type: ignore\n         rowiter = sheet.rows\n-        organization_row = next(rowiter)\n+        # type_ignore_reason: incomplete typing\n+        organization_row = next(rowiter)  # type: ignore\n \n-        label_row = next(rowiter)\n-        names_row = next(rowiter)\n+        # type_ignore_reason: incomplete typing\n+        next(rowiter)  # type: ignore  /  skip label_row\n+        names_row = next(rowiter)  # type: ignore\n \n         org_name = organization_row[0].value\n         if org_name and names_row[0].value != 'v3':\n@@ -39,13 +51,15 @@ def read_excel(f, file_contents=None):\n                 sheetname,\n                 org_name,\n                 [c.value for c in names_row],\n-                _filter_bumf(rowiter, HEADER_ROWS_V2))\n+                # type_ignore_reason: incomplete typing\n+                _filter_bumf(rowiter, HEADER_ROWS_V2))  # type: ignore\n             continue\n \n-        cstatus_row = next(rowiter)\n-        example_row = next(rowiter)\n+        # type_ignore_reason: incomplete typing\n+        next(rowiter)  # type: ignore  /  skip cstatus_row\n+        example_row = next(rowiter)  # type: ignore\n         if example_row[0].value != 'e.g.' and example_row[0].value != 'ex.':\n-            raise BadExcelData(u'Example record on row 5 is missing')\n+            raise BadExcelData('Example record on row 5 is missing')\n \n         yield (\n             sheetname,\n@@ -54,7 +68,8 @@ def read_excel(f, file_contents=None):\n             _filter_bumf((row[2:] for row in rowiter), HEADER_ROWS_V3))\n \n \n-def _filter_bumf(rowiter, header_rows):\n+def _filter_bumf(rowiter: Iterator[Any],\n+                 header_rows: int) -> Iterator[Any]:\n     i = header_rows\n     for row in rowiter:\n         i += 1\n@@ -66,7 +81,7 @@ def _filter_bumf(rowiter, header_rows):\n             yield i, values\n \n \n-def _is_bumf(value):\n+def _is_bumf(value: Any) -> Union[str, bool]:\n     \"\"\"\n     Return true if this value is filler, en route to skipping over empty lines\n \n@@ -81,7 +96,10 @@ def _is_bumf(value):\n     return value is None\n \n \n-def get_records(rows, fields, primary_key_fields, choice_fields):\n+def get_records(rows: Iterator[Any],\n+                fields: List[Any],\n+                primary_key_fields: List[str],\n+                choice_fields: Dict[str, Any]) -> List[Tuple[Any, Any]]:\n     \"\"\"\n     Truncate/pad empty/missing records to expected row length, canonicalize\n     cell content, and return resulting record list.\n@@ -106,7 +124,7 @@ def get_records(rows, fields, primary_key_fields, choice_fields):\n                 (row[-1] is None or row[-1] == '')):\n             row.pop()\n         while row and (len(row) < len(fields)):\n-            row.append(None) # placeholder: canonicalize once only, below\n+            row.append(None)  # placeholder: canonicalize once only, below\n \n         try:\n             records.append(\n@@ -117,21 +135,21 @@ def get_records(rows, fields, primary_key_fields, choice_fields):\n                         f['datastore_type'],\n                         f['datastore_id'] in primary_key_fields,\n                         choice_fields.get(f['datastore_id'], False)))\n-                for f, v in zip(fields, row))))\n+                    for f, v in zip(fields, row))))\n         except BadExcelData as e:\n-            raise BadExcelData(u'Row {0}:'.format(n) + u' ' + e.message)\n+            raise BadExcelData('Row {0}:'.format(n) + ' ' + e.message)\n \n     return records\n \n \n # XXX remove this function once we upgrade to openpyxl 2.4\n-def unescape(value):\n+def unescape(value: str) -> str:\n     \"\"\"\n     copy of unescape from openpyxl.utils.escape, openpyxl version 2.4.x\n     \"\"\"\n     ESCAPED_REGEX = re.compile(\"_x([0-9A-Fa-f]{4})_\")\n \n-    def _sub(match):\n+    def _sub(match: Any):\n         \"\"\"\n         Callback to unescape chars\n         \"\"\""
                },
                {
                    "sha": "c44f26b7c51e3f393f1348051c18f71449bf1db9",
                    "filename": "ckanext/recombinant/tables.py",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 13,
                    "changes": 29,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ftables.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ftables.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Ftables.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -4,13 +4,18 @@\n \n This module provides access to those definitions.\n \"\"\"\n+from typing import List, Dict, Optional, Any\n \n import ckan.plugins as p\n \n from ckanext.recombinant.errors import RecombinantException\n \n \n class IRecombinant(p.Interface):\n+    _published_resource_ids = {}\n+    _genos = {}\n+    _chromos = {}\n+\n     pass\n \n \n@@ -24,7 +29,7 @@ def _get_plugin():\n         'Recombinant plugin not found. Have you enabled the plugin?')\n \n \n-def get_chromo(resource_name):\n+def get_chromo(resource_name: str) -> Dict[str, Any]:\n     \"\"\"\n     Get the resource definition (chromo) for the given resource name\n     \"\"\"\n@@ -37,46 +42,44 @@ def get_chromo(resource_name):\n         for rname in chromos:\n             if rname.replace('-', '') == resource_name:\n                 return chromos[rname]\n-        raise RecombinantException('resource_name \"%s\" not found'\n-            % resource_name)\n+        raise RecombinantException('resource_name \"%s\" not found' % resource_name)\n \n \n-def get_geno(dataset_type):\n+def get_geno(dataset_type: str) -> Dict[str, Any]:\n     \"\"\"\n     Get the dataset definition (geno) for the given dataset type\n     \"\"\"\n     genos = _get_plugin()._genos\n     try:\n         return genos[dataset_type]\n     except KeyError:\n-        raise RecombinantException('dataset_type \"%s\" not found'\n-            % dataset_type)\n+        raise RecombinantException('dataset_type \"%s\" not found' % dataset_type)\n \n \n-def get_dataset_types():\n+def get_dataset_types() -> List[str]:\n     \"\"\"\n     Get a list of recombinant dataset types\n     \"\"\"\n     return sorted(_get_plugin()._genos)\n \n \n-def get_resource_names():\n+def get_resource_names() -> List[str]:\n     \"\"\"\n     Get a list of recombinant resource names\n     \"\"\"\n     return [chromo['resource_name']\n-        for t in get_dataset_types()\n-        for chromo in get_geno(t)['resources']]\n+            for t in get_dataset_types()\n+            for chromo in get_geno(t)['resources']]\n \n \n-def get_published_resource_resource_name(res_id):\n+def get_published_resource_resource_name(res_id: str) -> str:\n     try:\n         return _get_plugin()._published_resource_ids[res_id]\n     except KeyError:\n         raise RecombinantException('resource id not found')\n \n \n-def get_dataset_type_for_resource_name(resource_name):\n+def get_dataset_type_for_resource_name(resource_name: str) -> Optional[str]:\n     \"\"\"\n     Get the dataset type that contains resource_name,\n     or None if not found\n@@ -87,7 +90,7 @@ def get_dataset_type_for_resource_name(resource_name):\n                 return t\n \n \n-def get_target_datasets():\n+def get_target_datasets() -> List[str]:\n     \"\"\"\n     Find the RecombinantPlugin instance and get its\n     configured target datasets (e.g., ['ati', 'pd', ...])"
                },
                {
                    "sha": "c61e87a6421539fe9fac9ba3805d06e976aec5ef",
                    "filename": "ckanext/recombinant/tests/__init__.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ftests%2F__init__.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ftests%2F__init__.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Ftests%2F__init__.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,6 +1,7 @@\n from ckan.tests.helpers import reset_db\n from ckan.lib.search import clear_all\n \n+\n class RecombinantTestBase(object):\n     @classmethod\n     def setup_method(self, method):"
                },
                {
                    "sha": "fa8955af24390d0ad0a05d8034d56ee86cf7fc44",
                    "filename": "ckanext/recombinant/tests/test_canonicalize.py",
                    "status": "modified",
                    "additions": 28,
                    "deletions": 16,
                    "changes": 44,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ftests%2Ftest_canonicalize.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Ftests%2Ftest_canonicalize.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Ftests%2Ftest_canonicalize.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -5,6 +5,7 @@\n \n from ckanext.recombinant.datatypes import canonicalize, BadExcelData\n \n+\n def test_year():\n     dt = 'year'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -15,8 +16,8 @@ def test_year():\n     assert canonicalize('42.0', dt, False) == '42'\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -25,6 +26,7 @@ def test_year():\n     assert canonicalize('$1,000.50', dt, False) == '$1,000.50'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_month():\n     dt = 'month'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -35,8 +37,8 @@ def test_month():\n     assert canonicalize('42.0', dt, False) == '42'\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -47,6 +49,7 @@ def test_month():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_int():\n     dt = 'int'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -57,8 +60,8 @@ def test_int():\n     assert canonicalize('42.0', dt, False) == '42'\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -69,6 +72,7 @@ def test_int():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_bigint():\n     dt = 'bigint'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -79,8 +83,8 @@ def test_bigint():\n     assert canonicalize('42.0', dt, False) == '42'\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -91,6 +95,7 @@ def test_bigint():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_date():\n     dt = 'date'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -101,8 +106,8 @@ def test_date():\n     assert canonicalize('42.0', dt, False) == '42.0'\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -113,6 +118,7 @@ def test_date():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_timestamp():\n     dt = 'timestamp'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -123,8 +129,8 @@ def test_timestamp():\n     assert canonicalize('42.0', dt, False) == '42.0'\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -135,6 +141,7 @@ def test_timestamp():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_money():\n     dt = 'money'\n     assert canonicalize(2019, dt, False) == '2019.00'\n@@ -147,8 +154,8 @@ def test_money():\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('42.25000001', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0.00'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -159,6 +166,7 @@ def test_money():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_text():\n     dt = 'text'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -181,6 +189,7 @@ def test_text():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_boolean():\n     dt = 'boolean'\n     assert canonicalize(2019, dt, False) == '2019'\n@@ -191,8 +200,8 @@ def test_boolean():\n     assert canonicalize('42.0', dt, False) == '42.0'\n     assert canonicalize('42.25', dt, False) == '42.25'\n     assert canonicalize('0', dt, False) == '0'\n-    assert canonicalize(None, dt, False) == None\n-    assert canonicalize('', dt, False) == None\n+    assert canonicalize(None, dt, False) is None\n+    assert canonicalize('', dt, False) is None\n     assert canonicalize('', dt, True) == ''\n     with pytest.raises(BadExcelData):\n         canonicalize('=1+1', dt, False)\n@@ -203,6 +212,7 @@ def test_boolean():\n     assert canonicalize('=FALSE()', dt, False) == 'FALSE'\n     assert canonicalize('AB,CD,E', dt, False) == 'AB,CD,E'\n \n+\n def test_text_array():\n     dt = '_text'\n     assert canonicalize(2019, dt, False) == ['2019']\n@@ -225,13 +235,15 @@ def test_text_array():\n     assert canonicalize('=FALSE()', dt, False) == ['FALSE']\n     assert canonicalize('AB,CD,E', dt, False) == ['AB', 'CD', 'E']\n \n+\n def test_primary_key():\n     dt = 'text'\n     assert canonicalize('OGP-324', dt, True) == 'OGP-324'\n     assert canonicalize('\\t OGP-324\\n', dt, True) == 'OGP-324'\n     assert canonicalize('OGP-\\r\\n\\r\\n324', dt, True) == 'OGP-324'\n     assert canonicalize('OGP- 324', dt, True) == 'OGP- 324'\n \n+\n def test_choice_field():\n     assert canonicalize('C1 ', 'text', False, False) == 'C1 '\n     assert canonicalize('C1 ', 'text', False, True) == 'C1'"
                },
                {
                    "sha": "1f189ae5765c36787b0649a8ed7ac36b1c74cbc3",
                    "filename": "ckanext/recombinant/validators.py",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 2,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fvalidators.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fvalidators.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fvalidators.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,7 +1,12 @@\n+from ckan.types import FlattenDataDict, FlattenKey, FlattenErrorDict, Context\n+\n from ckan.plugins.toolkit import _, h\n \n \n-def recombinant_foreign_keys(key, data, errors, context):\n+def recombinant_foreign_keys(key: FlattenKey,\n+                             data: FlattenDataDict,\n+                             errors: FlattenErrorDict,\n+                             context: Context):\n     \"\"\"\n     Limit to Recombinant Resources only.\n     \"\"\"\n@@ -11,4 +16,5 @@ def recombinant_foreign_keys(key, data, errors, context):\n     res = context['model'].Resource.get(resource_id)\n     pkg = context['model'].Package.get(getattr(res, 'package_id', None))\n     if not res or not pkg or pkg.type not in h.recombinant_get_types():\n-        errors[key].append(_('Cannot assign foreign keys to a non-recombinant resource.'))\n+        errors[key].append(\n+            _('Cannot assign foreign keys to a non-recombinant resource.'))"
                },
                {
                    "sha": "4700d9f6f012a9ff5dfc3fb489fa802257b7a6f2",
                    "filename": "ckanext/recombinant/views.py",
                    "status": "modified",
                    "additions": 165,
                    "deletions": 112,
                    "changes": 277,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fviews.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fviews.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fviews.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,9 +1,14 @@\n-from flask import Blueprint, Response\n+from flask import Blueprint, Response as FlaskResponse\n from flask_babel import force_locale\n import re\n-from collections import OrderedDict\n import simplejson as json\n \n+from typing import Union, Optional, Dict, Tuple, Any\n+from ckan.types import Response\n+\n+from werkzeug.datastructures import FileStorage as FlaskFileStorage\n+from cgi import FieldStorage\n+\n from logging import getLogger\n \n from ckan.plugins.toolkit import (\n@@ -23,33 +28,39 @@\n from ckan.authz import has_user_permission_for_group_or_org\n \n from ckan.views.dataset import _get_package_type\n-from ckanext.activity.views import package_activity\n \n-from ckanext.recombinant.errors import RecombinantException, BadExcelData, format_trigger_error\n+from ckanext.recombinant.errors import (\n+    RecombinantException,\n+    BadExcelData,\n+    format_trigger_error\n+)\n from ckanext.recombinant.read_excel import read_excel, get_records\n from ckanext.recombinant.write_excel import (\n-    excel_template, excel_data_dictionary, append_data)\n+    excel_template,\n+    excel_data_dictionary,\n+    append_data\n+)\n from ckanext.recombinant.tables import get_chromo, get_geno\n from ckanext.recombinant.helpers import (\n     recombinant_primary_key_fields, recombinant_choice_fields)\n \n from io import BytesIO\n \n from ckanext.datastore.backend import DatastoreBackend\n+from ckanext.datastore.backend.postgres import DatastorePostgresqlBackend\n \n-log = getLogger(__name__)\n-\n-import ckanapi\n+from ckanapi import NotFound, LocalCKAN\n \n \n+log = getLogger(__name__)\n recombinant = Blueprint('recombinant', __name__)\n \n \n @recombinant.route('/recombinant/upload/<id>', methods=['POST'])\n-def upload(id):\n+def upload(id: str) -> Response:\n     package_type = _get_package_type(id)\n     geno = get_geno(package_type)\n-    lc = ckanapi.LocalCKAN(username=g.user)\n+    lc = LocalCKAN(username=g.user)\n     dataset = lc.action.package_show(id=id)\n     org = lc.action.organization_show(id=dataset['owner_org'])\n     dry_run = 'validate' in request.form\n@@ -86,33 +97,34 @@ def upload(id):\n                              resource_name=resource_name,\n                              owner_org=org['name'])\n \n+\n @recombinant.route('/recombinant/delete/<id>/<resource_id>', methods=['POST'])\n-def delete_records(id, resource_id):\n-    lc = ckanapi.LocalCKAN(username=g.user)\n+def delete_records(id: str, resource_id: str) -> Union[str, Response]:\n+    lc = LocalCKAN(username=g.user)\n     filters = {}\n \n-    if not h.check_access('datastore_delete', {'resource_id': resource_id, 'filters': filters}):\n-        return abort(403, _('User {0} not authorized to update resource {1}'\n-                    .format(str(g.user), resource_id)))\n+    if not h.check_access('datastore_delete',\n+                          {'resource_id': resource_id,\n+                           'filters': filters}):\n+        return abort(403, _('User {0} not authorized to update resource {1}'.format(\n+            str(g.user), resource_id)))\n \n-    x_vars = {'filters': filters, 'action': 'edit'}\n     pkg = lc.action.package_show(id=id)\n     res = lc.action.resource_show(id=resource_id)\n     org = lc.action.organization_show(id=pkg['owner_org'])\n \n     dataset = lc.action.recombinant_show(\n         dataset_type=pkg['type'], owner_org=org['name'])\n \n-    def delete_error(err):\n+    def delete_error(err: str) -> str:\n         return render('recombinant/resource_edit.html',\n-            extra_vars={\n-                'delete_errors': [err],\n-                'dataset': dataset,\n-                'dataset_type': dataset['dataset_type'],\n-                'resource': res,\n-                'organization': org,\n-                'filters': filters,\n-                'action': 'edit'})\n+                      extra_vars={'delete_errors': [err],\n+                                  'dataset': dataset,\n+                                  'dataset_type': dataset['dataset_type'],\n+                                  'resource': res,\n+                                  'organization': org,\n+                                  'filters': filters,\n+                                  'action': 'edit'})\n \n     form_text = request.form.get('bulk-delete', '')\n     if not form_text:\n@@ -125,7 +137,8 @@ def delete_error(err):\n     records = iter(form_text.split('\\n'))\n     for r in records:\n         r = r.rstrip('\\r')\n-        def record_fail(err):\n+\n+        def record_fail(err: str) -> str:\n             # move bad record to the top of the pile\n             filters['bulk-delete'] = '\\n'.join(\n                 [r] + list(records) + ok_records)\n@@ -134,8 +147,8 @@ def record_fail(err):\n         split_on = '\\t' if '\\t' in r else ','\n         fields = [f for f in r.split(split_on)]\n         if len(fields) != len(pk_fields):\n-            return record_fail(_('Wrong number of fields, expected {num}')\n-                .format(num=len(pk_fields)))\n+            return record_fail(_('Wrong number of fields, expected {num}').format(\n+                num=len(pk_fields)))\n \n         filters.clear()\n         for f, pkf in zip(fields, pk_fields):\n@@ -150,7 +163,7 @@ def record_fail(err):\n         found = result['records']\n         if not found:\n             return record_fail(_('No matching records found \"%s\"') %\n-                u'\", \"'.join(fields))\n+                               '\", \"'.join(fields))\n         if len(found) > 1:\n             return record_fail(_('Multiple matching records found'))\n \n@@ -163,16 +176,16 @@ def record_fail(err):\n             'recombinant.preview_table',\n             resource_name=res['name'],\n             owner_org=org['name'],)\n-    if not 'confirm' in request.form:\n+    if 'confirm' not in request.form:\n         return render('recombinant/confirm_delete.html',\n-            extra_vars={\n-                'dataset':dataset,\n-                'resource':res,\n-                'num': len(ok_records),\n-                'bulk_delete': u'\\n'.join(ok_records\n-                    # extra blank is needed to prevent field\n-                    # from being completely empty\n-                    + ([''] if '' in ok_records else [])) })\n+                      extra_vars={'dataset': dataset,\n+                                  'resource': res,\n+                                  'num': len(ok_records),\n+                                  'bulk_delete': '\\n'.join(\n+                                      ok_records\n+                                      # extra blank is needed to prevent field\n+                                      # from being completely empty\n+                                      + ([''] if '' in ok_records else []))})\n \n     for f in ok_filters:\n         try:\n@@ -185,9 +198,12 @@ def record_fail(err):\n                 records = []\n                 ok_records = []\n                 chromo = get_chromo(res['name'])\n-                error_message = chromo.get('datastore_constraint_errors', {}).get('delete', e.error_dict['foreign_constraints'][0])\n+                # type_ignore_reason: incomplete typing\n+                error_message = chromo.get('datastore_constraint_errors', {}).get(\n+                    'delete', e.error_dict['foreign_constraints'][0])  # type: ignore\n                 h.flash_error(_(error_message))\n-                return record_fail(_(error_message))\n+                # type_ignore_reason: incomplete typing\n+                return record_fail(_(error_message))  # type: ignore\n             raise\n \n     h.flash_success(_(\"{num} deleted.\").format(num=len(ok_filters)))\n@@ -199,7 +215,7 @@ def record_fail(err):\n         )\n \n \n-def _xlsx_response_headers():\n+def _xlsx_response_headers() -> Tuple[str, str]:\n     \"\"\"\n     Returns tuple of content type and disposition type.\n \n@@ -211,39 +227,42 @@ def _xlsx_response_headers():\n     user_agent_legacy = getattr(request, 'headers', {}).get('User-Agent')\n     user_agent = getattr(request, 'headers', {}).get('Sec-CH-UA', user_agent_legacy)\n     if user_agent and (\n-        \"Microsoft Edge\" in user_agent or\n-        \"Edg/\" in user_agent or\n-        \"EdgA/\" in user_agent\n-        ):\n-            # force the XLSX file to be downloaded in MS Edge,\n-            # and not open in Office Apps Online.\n-            content_type = 'application/octet-stream'\n-            disposition_type = 'attachment'\n+      \"Microsoft Edge\" in user_agent or\n+      \"Edg/\" in user_agent or\n+      \"EdgA/\" in user_agent):\n+        # force the XLSX file to be downloaded in MS Edge,\n+        # and not open in Office Apps Online.\n+        content_type = 'application/octet-stream'\n+        disposition_type = 'attachment'\n     return content_type, disposition_type\n \n \n-@recombinant.route('/recombinant-template/<dataset_type>_<lang>_<owner_org>.xlsx', methods=['GET', 'POST'])\n-def template(dataset_type, lang, owner_org):\n-\n+@recombinant.route('/recombinant-template/<dataset_type>_<lang>_<owner_org>.xlsx',\n+                   methods=['GET', 'POST'])\n+def template(dataset_type: str, lang: str, owner_org: str) -> Response:\n     \"\"\"\n-    POST requests to this endpoint contain primary keys of records that are to be included in the excel file\n+    POST requests to this endpoint contain primary keys of\n+    records that are to be included in the excel file\n+\n     Parameters:\n-        bulk-template -> an array of strings, each string contains primary keys separated by commas\n+        bulk-template -> an array of strings, each string\n+        contains primary keys separated by commas\n+\n         resource_name -> the name of the resource containing the records\n     \"\"\"\n \n     if lang != h.lang():\n         return abort(404, _('Not found'))\n \n-    lc = ckanapi.LocalCKAN(username=g.user)\n+    lc = LocalCKAN(username=g.user)\n     try:\n         dataset = lc.action.recombinant_show(\n             dataset_type=dataset_type,\n             owner_org=owner_org)\n         org = lc.action.organization_show(\n             id=owner_org,\n             include_datasets=False)\n-    except ckanapi.NotFound:\n+    except NotFound:\n         return abort(404, _('Not found'))\n \n     try:\n@@ -253,7 +272,7 @@ def template(dataset_type, lang, owner_org):\n \n     if request.method == 'POST':\n         filters = {}\n-        resource_name = request.form.get('resource_name','' )\n+        resource_name = request.form.get('resource_name', '')\n         for r in dataset['resources']:\n             if r['name'] == resource_name:\n                 resource = r\n@@ -271,16 +290,18 @@ def template(dataset_type, lang, owner_org):\n             for f, pkf in zip(temp, pk_fields):\n                 filters[pkf['datastore_id']] = f\n             try:\n-                result = lc.action.datastore_search(resource_id=resource['id'],filters = filters)\n+                result = lc.action.datastore_search(resource_id=resource['id'],\n+                                                    filters=filters)\n             except NotAuthorized:\n-                return abort(403, _(u'Unauthorized to read resource %s') % resource['id'])\n+                return abort(403, _('Unauthorized to read resource %s') %\n+                             resource['id'])\n             record_data += result['records']\n \n         append_data(book, record_data, chromo)\n \n     blob = BytesIO()\n     book.save(blob)\n-    response = Response(blob.getvalue())\n+    response = FlaskResponse(blob.getvalue())\n     content_type, disposition_type = _xlsx_response_headers()\n     response.headers['Content-Type'] = content_type\n     response.headers['Content-Disposition'] = (\n@@ -292,7 +313,8 @@ def template(dataset_type, lang, owner_org):\n     return response\n \n \n-def _data_dictionary(dataset_type, published_resource=False):\n+def _data_dictionary(dataset_type: str,\n+                     published_resource: bool = False) -> Response:\n     try:\n         geno = get_geno(dataset_type)\n     except RecombinantException:\n@@ -301,7 +323,7 @@ def _data_dictionary(dataset_type, published_resource=False):\n     book = excel_data_dictionary(geno, published_resource=published_resource)\n     blob = BytesIO()\n     book.save(blob)\n-    response = Response(blob.getvalue())\n+    response = FlaskResponse(blob.getvalue())\n     content_type, disposition_type = _xlsx_response_headers()\n     response.headers['Content-Type'] = content_type\n     response.headers['Content-Disposition'] = '{}; filename=\"{}.xlsx\"'.format(\n@@ -311,16 +333,16 @@ def _data_dictionary(dataset_type, published_resource=False):\n \n \n @recombinant.route('/recombinant-dictionary/<dataset_type>')\n-def data_dictionary(dataset_type):\n+def data_dictionary(dataset_type: str) -> Response:\n     return _data_dictionary(dataset_type, published_resource=False)\n \n \n @recombinant.route('/recombinant-published-dictionary/<dataset_type>')\n-def published_data_dictionary(dataset_type):\n+def published_data_dictionary(dataset_type: str) -> Response:\n     return _data_dictionary(dataset_type, published_resource=True)\n \n \n-def _schema_json(dataset_type, published_resource=False):\n+def _schema_json(dataset_type: str, published_resource: bool = False) -> Response:\n     try:\n         geno = get_geno(dataset_type)\n     except RecombinantException:\n@@ -368,7 +390,8 @@ def _schema_json(dataset_type, published_resource=False):\n         for field in chromo['fields']:\n             if not field.get('visible_to_public', True):\n                 continue\n-            if not published_resource and field.get('published_resource_computed_field', False):\n+            if not published_resource and field.get(\n+              'published_resource_computed_field', False):\n                 continue\n             fld = {}\n             resource['fields'].append(fld)\n@@ -413,7 +436,9 @@ def _schema_json(dataset_type, published_resource=False):\n                         field['datastore_id']]\n             resource['example_record'] = example\n \n-    response = Response(json.dumps(schema, indent=2, ensure_ascii=False).encode('utf-8'))\n+    response = Response(json.dumps(schema,\n+                                   indent=2,\n+                                   ensure_ascii=False).encode('utf-8'))\n     response.headers['Content-Type'] = 'application/json'\n     response.headers['Content-Disposition'] = (\n         'inline; filename=\"{0}.json\"'.format(\n@@ -422,23 +447,23 @@ def _schema_json(dataset_type, published_resource=False):\n \n \n @recombinant.route('/recombinant-schema/<dataset_type>.json')\n-def schema_json(dataset_type):\n+def schema_json(dataset_type: str) -> Response:\n     return _schema_json(dataset_type, published_resource=False)\n \n \n @recombinant.route('/recombinant-published-schema/<dataset_type>.json')\n-def published_schema_json(dataset_type):\n+def published_schema_json(dataset_type: str) -> Response:\n     return _schema_json(dataset_type, published_resource=True)\n \n \n @recombinant.route('/recombinant/<resource_name>')\n-def type_redirect(resource_name):\n+def type_redirect(resource_name: str) -> Response:\n     orgs = h.organizations_available('read')\n \n     if not orgs:\n         return abort(404, _('No organizations found'))\n     try:\n-        chromo = get_chromo(resource_name)\n+        get_chromo(resource_name)\n     except RecombinantException:\n         return abort(404, _('Recombinant resource_name not found'))\n \n@@ -449,8 +474,8 @@ def type_redirect(resource_name):\n     )\n \n \n-def dataset_redirect(package_type, id):\n-    lc = ckanapi.LocalCKAN(username=g.user)\n+def dataset_redirect(package_type: str, id: str) -> Response:\n+    lc = LocalCKAN(username=g.user)\n     dataset = lc.action.package_show(id=id)\n     return h.redirect_to(\n         'recombinant.preview_table',\n@@ -459,12 +484,14 @@ def dataset_redirect(package_type, id):\n     )\n \n \n-def resource_redirect(package_type, id, resource_id):\n+def resource_redirect(package_type: str, id: str, resource_id: str) -> Response:\n     return dataset_redirect(package_type, id)\n \n \n @recombinant.route('/recombinant/<resource_name>/<owner_org>', methods=['GET', 'POST'])\n-def preview_table(resource_name, owner_org, errors=None):\n+def preview_table(resource_name: str,\n+                  owner_org: str,\n+                  errors: Optional[Dict[str, Any]] = None) -> Union[str, Response]:\n     if not g.user:\n         return h.redirect_to('user.login')\n \n@@ -478,7 +505,7 @@ def preview_table(resource_name, owner_org, errors=None):\n             owner_org=org_object.name,\n         )\n \n-    lc = ckanapi.LocalCKAN(username=g.user, context={'ignore_auth':True})\n+    lc = LocalCKAN(username=g.user, context={'ignore_auth': True})\n     try:\n         chromo = get_chromo(resource_name)\n     except RecombinantException:\n@@ -487,17 +514,20 @@ def preview_table(resource_name, owner_org, errors=None):\n     if 'create' in request.form or 'refresh' in request.form:\n         # check if the user can update datasets for organization\n         # admin and editors should be able to init recombinant records\n-        if not has_user_permission_for_group_or_org(org_object.id, g.user, 'update_dataset'):\n-            return abort(403, _('User %s not authorized to create packages') % (str(g.user)))\n+        if not has_user_permission_for_group_or_org(org_object.id,\n+                                                    g.user,\n+                                                    'update_dataset'):\n+            return abort(403, _('User %s not authorized to create packages') %\n+                         (str(g.user)))\n         try:\n             # check if the dataset exists\n             dataset = lc.action.recombinant_show(\n                 dataset_type=chromo['dataset_type'], owner_org=owner_org)\n             # check that the resource has errors\n             for _r in dataset['resources']:\n                 if _r['name'] == resource_name and 'error' in _r:\n-                    raise ckanapi.NotFound\n-        except ckanapi.NotFound:\n+                    raise NotFound\n+        except NotFound:\n             try:\n                 if 'create' in request.form:\n                     lc.action.recombinant_create(\n@@ -507,7 +537,7 @@ def preview_table(resource_name, owner_org, errors=None):\n                         dataset_type=chromo['dataset_type'], owner_org=owner_org,\n                         force_update=True)\n             except NotAuthorized as e:\n-                return abort(403, e.message)\n+                return abort(403, e.message or '')\n         return h.redirect_to(\n             'recombinant.preview_table',\n             resource_name=resource_name,\n@@ -517,7 +547,7 @@ def preview_table(resource_name, owner_org, errors=None):\n     try:\n         dataset = lc.action.recombinant_show(\n             dataset_type=chromo['dataset_type'], owner_org=owner_org)\n-    except ckanapi.NotFound:\n+    except NotFound:\n         dataset = None\n     org = lc.action.organization_show(id=owner_org)\n \n@@ -541,7 +571,11 @@ def preview_table(resource_name, owner_org, errors=None):\n         })\n \n \n-def _process_upload_file(lc, dataset, upload_file, geno, dry_run):\n+def _process_upload_file(lc: LocalCKAN,\n+                         dataset: Dict[str, Any],\n+                         upload_file: Union[str, FlaskFileStorage, FieldStorage],\n+                         geno: Dict[str, Any],\n+                         dry_run: bool):\n     \"\"\"\n     Use lc.action.datastore_upsert to load data from upload_file\n \n@@ -558,7 +592,9 @@ def _process_upload_file(lc, dataset, upload_file, geno, dry_run):\n \n     upload_data = read_excel(upload_file)\n     total_records = 0\n-    backend = DatastoreBackend.get_active_backend()\n+    # type_ignore_reason: incomplete typing\n+    backend: DatastorePostgresqlBackend = DatastoreBackend.\\\n+        get_active_backend()  # type: ignore\n     ds_write_connection = backend._get_write_engine().connect()\n     ds_write_transaction = ds_write_connection.begin()\n     try:\n@@ -576,21 +612,23 @@ def _process_upload_file(lc, dataset, upload_file, geno, dry_run):\n                     raise\n                 raise BadExcelData(\n                     _(\"The server encountered a problem processing the file \"\n-                    \"uploaded. Please try copying your data into the latest \"\n-                    \"version of the template and uploading again. If this \"\n-                    \"problem continues, send your Excel file to \"\n-                    \"open-ouvert@tbs-sct.gc.ca so we may investigate.\"))\n+                      \"uploaded. Please try copying your data into the latest \"\n+                      \"version of the template and uploading again. If this \"\n+                      \"problem continues, send your Excel file to \"\n+                      \"open-ouvert@tbs-sct.gc.ca so we may investigate.\"))\n \n             if sheet_name not in expected_sheet_names:\n                 raise BadExcelData(_('Invalid file for this data type. ' +\n-                    'Sheet must be labeled \"{0}\", ' +\n-                    'but you supplied a sheet labeled \"{1}\"').format(\n-                        '\"/\"'.join(sorted(expected_sheet_names)),\n-                        sheet_name))\n+                                     'Sheet must be labeled \"{0}\", ' +\n+                                     'but you supplied a sheet labeled \"{1}\"').format(\n+                                        '\"/\"'.join(sorted(expected_sheet_names)),\n+                                        sheet_name))\n \n-            if not h.check_access('datastore_upsert', {'resource_id': expected_sheet_names[sheet_name]}):\n+            if not h.check_access('datastore_upsert',\n+                                  {'resource_id': expected_sheet_names[sheet_name]}):\n                 return abort(403, _('User {0} not authorized to update resource {1}'\n-                            .format(str(g.user), expected_sheet_names[sheet_name])))\n+                                    .format(str(g.user),\n+                                            expected_sheet_names[sheet_name])))\n \n             if org_name != owner_org:\n                 raise BadExcelData(_(\n@@ -606,14 +644,15 @@ def _process_upload_file(lc, dataset, upload_file, geno, dry_run):\n \n             chromo = get_chromo(sheet_name)\n             expected_columns = [f['datastore_id'] for f in chromo['fields']\n-                if f.get('import_template_include', True) and not f.get('published_resource_computed_field')]\n+                                if f.get('import_template_include', True) and\n+                                not f.get('published_resource_computed_field')]\n             if column_names != expected_columns:\n                 raise BadExcelData(\n                     _(\"This template is out of date. \"\n-                    \"Please try copying your data into the latest \"\n-                    \"version of the template and uploading again. If this \"\n-                    \"problem continues, send your Excel file to \"\n-                    \"open-ouvert@tbs-sct.gc.ca so we may investigate.\"))\n+                      \"Please try copying your data into the latest \"\n+                      \"version of the template and uploading again. If this \"\n+                      \"problem continues, send your Excel file to \"\n+                      \"open-ouvert@tbs-sct.gc.ca so we may investigate.\"))\n \n             pk = chromo.get('datastore_primary_key', [])\n             choice_fields = {\n@@ -624,7 +663,9 @@ def _process_upload_file(lc, dataset, upload_file, geno, dry_run):\n \n             records = get_records(\n                 rows,\n-                [f for f in chromo['fields'] if f.get('import_template_include', True) and not f.get('published_resource_computed_field')],\n+                [f for f in chromo['fields'] if f.get(\n+                    'import_template_include', True) and not f.get(\n+                        'published_resource_computed_field')],\n                 pk,\n                 choice_fields)\n             method = 'upsert' if pk else 'insert'\n@@ -643,33 +684,45 @@ def _process_upload_file(lc, dataset, upload_file, geno, dry_run):\n                 if 'info' in e.error_dict:\n                     # because, where else would you put the error text?\n                     # XXX improve this in datastore, please\n-                    pgerror = e.error_dict['info']['orig'][0].decode('utf-8')\n+                    # type_ignore_reason: incomplete typing\n+                    pgerror = e.error_dict['info']['orig'][0].decode(  # type: ignore\n+                        'utf-8')\n                 else:\n-                    pgerror = e.error_dict['records'][0]\n+                    # type_ignore_reason: incomplete typing\n+                    pgerror = e.error_dict['records'][0]  # type: ignore\n                 if isinstance(pgerror, dict):\n-                    pgerror = u'; '.join(\n-                        (h.recombinant_language_text(h.recombinant_get_field(sheet_name, k)['label']) if h.recombinant_get_field(sheet_name, k) else k) + _(u':') + ' ' + u', '.join(format_trigger_error(v))\n+                    pgerror = '; '.join(\n+                        (h.recombinant_language_text(\n+                            h.recombinant_get_field(sheet_name, k)['label']) if\n+                            h.recombinant_get_field(sheet_name, k) else k) + _(':')\n+                        + ' ' + ', '.join(format_trigger_error(v))\n                         for k, v in pgerror.items())\n                 else:\n                     # remove some postgres-isms that won't help the user\n                     # when we render this as an error in the form\n-                    pgerror = re.sub(r'\\nLINE \\d+:', u'', pgerror)\n-                    pgerror = re.sub(r'\\n *\\^\\n$', u'', pgerror)\n+                    pgerror = re.sub(r'\\nLINE \\d+:', '', pgerror)\n+                    pgerror = re.sub(r'\\n *\\^\\n$', '', pgerror)\n                 if 'records_row' in e.error_dict:\n                     if 'violates foreign key constraint' in pgerror:\n-                        foreign_error = chromo.get('datastore_constraint_errors', {}).get('upsert')\n+                        foreign_error = chromo.get(\n+                            'datastore_constraint_errors', {}).get('upsert')\n                         if foreign_error:\n                             pgerror = _(foreign_error)\n                     elif 'invalid input syntax for type integer' in pgerror:\n                         if ':' in pgerror:\n-                            pgerror = _('Invalid input syntax for type integer: {}').format(pgerror.split(':')[1].strip())\n+                            pgerror = _('Invalid input syntax for type integer: {}')\\\n+                                .format(pgerror.split(':')[1].strip())\n                         else:\n                             pgerror = _('Invalid input syntax for type integer')\n-                    raise BadExcelData(_(u'Sheet {0} Row {1}:').format(\n-                        sheet_name, records[e.error_dict['records_row']][0])\n-                        + u' ' + pgerror)\n+                    raise BadExcelData(\n+                        _('Sheet {0} Row {1}:').format(\n+                            sheet_name,\n+                            # type_ignore_reason: incomplete typing\n+                            records[e.error_dict['records_row']][0])  # type: ignore\n+                        + ' '\n+                        + pgerror)\n                 raise BadExcelData(\n-                    _(u\"Error while importing data: {0}\").format(\n+                    _(\"Error while importing data: {0}\").format(\n                         pgerror))\n         if not total_records:\n             raise BadExcelData(_(\"The template uploaded is empty\"))"
                },
                {
                    "sha": "e525b3f079faee7045efa984031374743ec6206a",
                    "filename": "ckanext/recombinant/write_excel.py",
                    "status": "modified",
                    "additions": 185,
                    "deletions": 120,
                    "changes": 305,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fwrite_excel.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/ckanext%2Frecombinant%2Fwrite_excel.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/ckanext%2Frecombinant%2Fwrite_excel.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -2,13 +2,23 @@\n \"\"\"\n Excel v3 template and data-dictionary generation code\n \"\"\"\n-\n import textwrap\n import string\n-import openpyxl\n+from openpyxl import Workbook\n+from openpyxl.worksheet.worksheet import Worksheet\n+from openpyxl.cell import Cell\n from openpyxl.utils import get_column_letter\n from openpyxl.formatting.rule import FormulaRule\n-from openpyxl.styles import NamedStyle\n+from openpyxl.worksheet.datavalidation import DataValidation\n+from openpyxl.styles import (\n+    NamedStyle,\n+    Alignment,\n+    Protection,\n+    PatternFill,\n+    Font\n+)\n+\n+from typing import Any, Dict, List, Tuple, Optional, Union\n \n from ckanext.recombinant.tables import get_geno\n from ckanext.recombinant.errors import RecombinantException\n@@ -22,6 +32,7 @@\n from datetime import datetime\n from decimal import Decimal\n \n+\n DEFAULT_TEMPLATE_VERSION = 3\n \n HEADER_ROW, HEADER_HEIGHT = 1, 27\n@@ -96,7 +107,8 @@\n     'Font': {'bold': True, 'size': 16}}\n \n \n-def excel_template(dataset_type, org):\n+def excel_template(dataset_type: str,\n+                   org: Dict[str, Any]):\n     \"\"\"\n     return an openpyxl.Workbook object containing the sheet and header fields\n     for passed dataset_type and org. Supports version 3 templates.\n@@ -107,8 +119,9 @@ def excel_template(dataset_type, org):\n     if version < DEFAULT_TEMPLATE_VERSION:\n         raise RecombinantException(_('Unsupported template version: %s') % version)\n \n-    book = openpyxl.Workbook()\n-    sheet = book.active\n+    book = Workbook()\n+    # type_ignore_reason: incomplete typing\n+    sheet: Worksheet = book.active  # type: ignore\n     refs = []\n     choice_ranges = []\n \n@@ -122,7 +135,8 @@ def excel_template(dataset_type, org):\n             sheet.protection.enabled = True\n             sheet.protection.formatRows = False\n             sheet.protection.formatColumns = False\n-        sheet = book.create_sheet()\n+        # type_ignore_reason: incomplete typing\n+        sheet: Worksheet = book.create_sheet()  # type: ignore\n \n     if version == 3:\n         _populate_reference_sheet(sheet, geno, refs)\n@@ -134,44 +148,50 @@ def excel_template(dataset_type, org):\n \n     for i, (chromo, cranges) in enumerate(\n             zip(geno['resources'], choice_ranges), 1):\n-        sheet = book.create_sheet()\n+        # type_ignore_reason: incomplete typing\n+        sheet: Worksheet = book.create_sheet()  # type: ignore\n         _populate_excel_e_sheet(sheet, chromo, cranges)\n         sheet.title = 'e{i}'.format(i=i)\n         sheet.protection.enabled = True\n         sheet.sheet_state = 'hidden'\n-\n-        sheet = book.create_sheet()\n+        # type_ignore_reason: incomplete typing\n+        sheet: Worksheet = book.create_sheet()  # type: ignore\n         _populate_excel_r_sheet(sheet, chromo)\n         sheet.title = 'r{i}'.format(i=i)\n         sheet.protection.enabled = True\n         sheet.sheet_state = 'hidden'\n     return book\n \n \n-def append_data(book, record_data, chromo):\n+def append_data(book: Workbook,\n+                record_data: List[Dict[str, Any]],\n+                chromo: Dict[str, Any]):\n \n     \"\"\"\n     fills rows of an openpyxl.Workbook with selected data from a datastore resource\n     \"\"\"\n-    sheet = book[chromo['resource_name']]\n+    # type_ignore_reason: incomplete typing\n+    sheet: Worksheet = book[chromo['resource_name']]  # type: ignore\n     current_row = DATA_FIRST_ROW\n     for record in record_data:\n         for col_num, field in template_cols_fields(chromo):\n-            item = datastore_type_format(record[field['datastore_id']], field['datastore_type'])\n+            item = datastore_type_format(\n+                record[field['datastore_id']], field['datastore_type'])\n             sheet.cell(row=current_row, column=col_num).value = item\n         current_row += 1\n \n     return book\n \n \n-def datastore_type_format(value, datastore_type):\n+def datastore_type_format(value: Any,\n+                          datastore_type: str) -> Optional[Any]:\n \n     if value is None:\n         return None\n \n     numeric_types = ['money', 'year', 'int', 'bigint', 'numeric']\n     if isinstance(value, list):\n-        item = u', '.join(str(e) for e in value)\n+        item = ', '.join(str(e) for e in value)\n     elif datastore_type == 'date':\n         item = datetime.strptime(value, \"%Y-%m-%d\").date()\n     elif datastore_type == 'timestamp':\n@@ -187,32 +207,25 @@ def datastore_type_format(value, datastore_type):\n     return item\n \n \n-def excel_data_dictionary(geno, published_resource=False):\n+def excel_data_dictionary(geno: Dict[str, Any],\n+                          published_resource: bool = False):\n     \"\"\"\n     return an openpyxl.Workbook object containing the field reference\n     from geno, one sheet per language\n     \"\"\"\n-    book = openpyxl.Workbook()\n-    sheet = book.active\n-\n-    style1 = {\n-        'PatternFill': {\n-            'patternType': 'solid',\n-            'fgColor': 'FFFFF056'},\n-        'Font': {\n-            'bold': True}}\n-    style2 = {\n-        'PatternFill': {\n-            'patternType': 'solid',\n-            'fgColor': 'FFDFE2DB'}}\n+    book = Workbook()\n+    # type_ignore_reason: incomplete typing\n+    sheet: Worksheet = book.active  # type: ignore\n \n     _build_styles(book, geno)\n     _locales_offered = config.get('ckan.locales_offered', ['en'])\n     if not isinstance(_locales_offered, list):\n         _locales_offered = _locales_offered.split()\n     for lang in _locales_offered:\n-        if sheet is None:\n-            sheet = book.create_sheet()\n+        # type_ignore_reason: incomplete typing\n+        if sheet is None:  # type: ignore\n+            # type_ignore_reason: incomplete typing\n+            sheet: Worksheet = book.create_sheet()  # type: ignore\n \n         sheet.title = lang.upper()\n         request.environ['CKAN_LANG'] = lang  # needed for recombinant_language_text\n@@ -225,45 +238,51 @@ def excel_data_dictionary(geno, published_resource=False):\n                 for field in chromo['fields']:\n                     if not field.get('import_template_include', True):\n                         continue\n-                    if not published_resource and field.get('published_resource_computed_field', False):\n+                    if not published_resource and field.get(\n+                      'published_resource_computed_field', False):\n                         continue\n                     _append_field_ref_rows(refs, field, link=None)\n \n                     if field['datastore_id'] in choice_fields:\n                         full_text_choices = (\n                             field['datastore_type'] != '_text' and field.get(\n-                            'excel_full_text_choices', False))\n+                                'excel_full_text_choices', False))\n                         _append_field_choices_rows(\n                             refs,\n                             choice_fields[field['datastore_id']],\n                             full_text_choices=full_text_choices)\n \n             _populate_reference_sheet(sheet, geno, refs)\n-            sheet = None\n+            # type_ignore_reason: incomplete typing\n+            sheet = None  # type: ignore\n \n     return book\n \n \n-def estimate_width_from_length(length):\n+def estimate_width_from_length(length: int) -> float:\n     range1 = max(length, ESTIMATE_WIDTH_MULTIPLE_1_CHARS)\n     range2 = length - range1\n     return (\n         range1 * ESTIMATE_WIDTH_MULTIPLE_1 +\n         range2 * ESTIMATE_WIDTH_MULTIPLE_2)\n \n-def estimate_width(text):\n+\n+def estimate_width(text: str) -> float:\n     return max(estimate_width_from_length(len(s)) for s in str(text).split('\\n'))\n \n-def wrap_text_to_width(text, width):\n+\n+def wrap_text_to_width(text: str,\n+                       width: int) -> str:\n     # assuming width > ESTIMATE_WIDTH_MULTIPLE_1_CHARS\n-    width -= ESTIMATE_WIDTH_MULTIPLE_1_CHARS * ESTIMATE_WIDTH_MULTIPLE_1\n-    cwidth = width // ESTIMATE_WIDTH_MULTIPLE_2 + ESTIMATE_WIDTH_MULTIPLE_1_CHARS\n+    calc_width = width - (ESTIMATE_WIDTH_MULTIPLE_1_CHARS * ESTIMATE_WIDTH_MULTIPLE_1)\n+    cwidth = calc_width // ESTIMATE_WIDTH_MULTIPLE_2 + ESTIMATE_WIDTH_MULTIPLE_1_CHARS\n     return '\\n'.join(\n-        '\\n'.join(textwrap.wrap(line, cwidth))\n+        '\\n'.join(textwrap.wrap(line, int(cwidth)))\n         for line in str(text).split('\\n'))\n \n \n-def _build_styles(book, geno):\n+def _build_styles(book: Workbook,\n+                  geno: Dict[str, Any]):\n     \"\"\"\n     Add styles to workbook\n     \"\"\"\n@@ -285,7 +304,13 @@ def _build_styles(book, geno):\n     build_named_style(book, 'reco_ref_value', REF_VALUE_STYLE)\n \n \n-def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n+def _populate_excel_sheet(book: Workbook,\n+                          sheet: Worksheet,\n+                          geno: Dict[str, Any],\n+                          chromo: Dict[str, Any],\n+                          org: Dict[str, Any],\n+                          refs: List[Tuple[Optional[str], List[Any]]],\n+                          resource_num: int) -> Dict[str, Any]:\n     \"\"\"\n     Format openpyxl sheet for the resource definition chromo and org.\n     (Version 3)\n@@ -325,7 +350,7 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n         sheet,\n         DATA_FIRST_ROW,\n         RPAD_COL_NUM,\n-        u'=IF(r{rnum}!{col}{row},\"\",\"▶\")'.format(\n+        '=IF(r{rnum}!{col}{row},\"\",\"▶\")'.format(\n             rnum=resource_num,\n             col=RPAD_COL,\n             row=DATA_FIRST_ROW),\n@@ -336,25 +361,28 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n         HEADER_ROW,\n         DATA_FIRST_COL_NUM,\n         recombinant_language_text(chromo['title'])\n-            + u' \\N{em dash} ' + org_title_lang_hack(org['title']),\n+        + ' \\N{em dash} ' + org_title_lang_hack(org['title']),\n         'reco_header')\n \n     sheet.cell(row=CODE_ROW, column=1).value = 'v3'  # template version\n     # allow only upload to this org\n     sheet.cell(row=CODE_ROW, column=2).value = org['name']\n \n     cheadings_dimensions = sheet.row_dimensions[CHEADINGS_ROW]\n-    cheadings_default_height = cheadings_dimensions.height if cheadings_dimensions.height \\\n-            else sheet.sheet_format.customHeight if sheet.sheet_format.customHeight \\\n-            else sheet.sheet_format.defaultRowHeight\n+    cheadings_default_height = cheadings_dimensions.height if \\\n+        cheadings_dimensions.height \\\n+        else sheet.sheet_format.customHeight if sheet.sheet_format.customHeight \\\n+        else sheet.sheet_format.defaultRowHeight\n \n     choice_fields = recombinant_choice_fields(chromo['resource_name'])\n+    col_letter = 'C'\n \n     for col_num, field in template_cols_fields(chromo):\n         field_heading = recombinant_language_text(\n             field.get('excel_heading', field['label'])).strip()\n+        # type_ignore_reason: incomplete typing\n         cheadings_dimensions.height = max(\n-            cheadings_default_height + CHEADINGS_HEIGHT,\n+            cheadings_default_height + CHEADINGS_HEIGHT,  # type: ignore\n             field_heading.count('\\n') * LINE_HEIGHT + CHEADINGS_HEIGHT)\n \n         col_heading_style = 'reco_cheading'\n@@ -387,7 +415,7 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n             sheet,\n             EXAMPLE_ROW,\n             col_num,\n-            u','.join(example) if isinstance(example, list) else example,\n+            ','.join(example) if isinstance(example, list) else example,\n             'reco_example')\n \n         col_letter = get_column_letter(col_num)\n@@ -398,8 +426,8 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n             CSTATUS_ROW,\n             col_num,\n             '=IF(e{rnum}!{col}{row}>0,HYPERLINK(\"#{col}\"&e{rnum}!{col}{row},\"\")'\n-                ',IF(r{rnum}!{col}{row}>0,HYPERLINK(\"#{col}\"&r{rnum}!{col}{row},\"\"),\"\"))'\n-                .format(rnum=resource_num, col=col_letter, row=CSTATUS_ROW),\n+            ',IF(r{rnum}!{col}{row}>0,HYPERLINK(\"#{col}\"&r{rnum}!{col}{row},\"\"),\"\"))'\n+            .format(rnum=resource_num, col=col_letter, row=CSTATUS_ROW),\n             col_heading_style)\n \n         col = sheet.column_dimensions[col_letter]\n@@ -414,12 +442,12 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n             rowN=DATA_FIRST_ROW + data_num_rows - 1)\n \n         xl_format = datastore_type[field['datastore_type']].xl_format\n-        alignment = openpyxl.styles.Alignment(wrap_text=True)\n+        alignment = Alignment(wrap_text=True)\n         col_style = NamedStyle(\n             name='reco_{0}{1}'.format(resource_num, col_letter),\n             number_format=xl_format,\n             alignment=alignment,\n-            protection=openpyxl.styles.Protection(locked=False))\n+            protection=Protection(locked=False))\n         book.add_named_style(col_style)\n         for (c,) in sheet[validation_range]:\n             c.style = col_style.name\n@@ -433,7 +461,7 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n         if field['datastore_id'] in choice_fields:\n             full_text_choices = (\n                 field['datastore_type'] != '_text' and field.get(\n-                'excel_full_text_choices', False))\n+                    'excel_full_text_choices', False))\n             ref1 = len(refs) + REF_FIRST_ROW\n             max_choice_width = _append_field_choices_rows(\n                 refs,\n@@ -447,16 +475,16 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n                 # expand example\n                 for ck, cv in choice_fields[field['datastore_id']]:\n                     if ck == example:\n-                        ex_cell.value = u\"{0}: {1}\".format(ck, cv)\n+                        ex_cell.value = \"{0}: {1}\".format(ck, cv)\n                         break\n \n             choice_range = 'reference!${col}${ref1}:${col}${refN}'.format(\n                 col=REF_KEY_COL, ref1=ref1, refN=refN)\n             user_choice_range = field.get('excel_choice_range_formula')\n             if user_choice_range:\n                 choice_keys = set(\n-                    key for (_i, key, _i, _i) in string.Formatter().parse(user_choice_range)\n-                    if key != 'range' and key != 'range_top')\n+                    key for (_i, key, _i, _i) in string.Formatter().parse(\n+                        user_choice_range) if key != 'range' and key != 'range_top')\n                 choice_values = {}\n                 if choice_keys:\n                     choice_values = {\n@@ -473,18 +501,17 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n \n             choices = [c[0] for c in choice_fields[field['datastore_id']]]\n             if field['datastore_type'] != '_text':\n-                v = openpyxl.worksheet.datavalidation.DataValidation(\n+                v = DataValidation(\n                     type=\"list\",\n                     formula1=user_choice_range or choice_range,\n                     allow_blank=True)\n-                v.errorTitle = u'Invalid choice'\n-                valid_keys = u', '.join(str(c) for c in choices)\n+                v.errorTitle = 'Invalid choice'\n+                valid_keys = ', '.join(str(c) for c in choices)\n                 if len(valid_keys) < 40:\n-                    v.error = (u'Please enter one of the valid keys: '\n-                        + valid_keys)\n+                    v.error = ('Please enter one of the valid keys: ' + valid_keys)\n                 else:\n-                    v.error = (u'Please enter one of the valid keys shown on '\n-                        'sheet \"reference\" rows {0}-{1}'.format(ref1, refN))\n+                    v.error = ('Please enter one of the valid keys shown on '\n+                               'sheet \"reference\" rows {0}-{1}'.format(ref1, refN))\n                 sheet.add_data_validation(v)\n                 v.add(validation_range)\n \n@@ -515,9 +542,9 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n         # jump to first error/required cell in row\n         sheet.cell(row=i, column=RSTATUS_COL_NUM).value = (\n             '=IF(e{rnum}!{col}{row}>0,'\n-                'HYPERLINK(\"#\"&ADDRESS({row},e{rnum}!{col}{row}),\"\"),'\n-                'IF(r{rnum}!{col}{row}>0,'\n-                    'HYPERLINK(\"#\"&ADDRESS({row},r{rnum}!{col}{row}),\"\"),\"\"))'\n+            'HYPERLINK(\"#\"&ADDRESS({row},e{rnum}!{col}{row}),\"\"),'\n+            'IF(r{rnum}!{col}{row}>0,'\n+            'HYPERLINK(\"#\"&ADDRESS({row},r{rnum}!{col}{row}),\"\"),\"\"))'\n             .format(rnum=resource_num, col=RSTATUS_COL, row=i))\n \n     sheet.column_dimensions[RSTATUS_COL].width = RSTATUS_WIDTH\n@@ -534,20 +561,30 @@ def _populate_excel_sheet(book, sheet, geno, chromo, org, refs, resource_num):\n \n     # trying to set the active cell (not working yet)\n     select = \"{col}{row}\".format(col=DATA_FIRST_COL, row=DATA_FIRST_ROW)\n-    sheet.sheet_view.selection[0].activeCell = select\n-    sheet.sheet_view.selection[0].sqref = select\n+    # type_ignore_reason: incomplete typing\n+    sheet.sheet_view.selection[0].activeCell = select  # type: ignore\n+    sheet.sheet_view.selection[0].sqref = select  # type: ignore\n \n     return cranges\n \n-def _append_resource_ref_header(geno, refs, rnum):\n-    # Add resource titles for all resources except the first one (unless if it has a different name)\n+\n+def _append_resource_ref_header(geno: Dict[str, Any],\n+                                refs: List[Tuple[Optional[str], List[Any]]],\n+                                rnum: int):\n+    \"\"\"\n+    Add resource titles for all resources except\n+    the first one (unless if it has a different name)\n+    \"\"\"\n     if rnum == 1 and geno['resources'][rnum-1]['title'] == geno['title']:\n         return\n     refs.append((None, []))\n     resource_title = recombinant_language_text(geno['resources'][rnum-1]['title'])\n     refs.append(('resource_title', [resource_title]))\n \n-def _append_field_ref_rows(refs, field, link):\n+\n+def _append_field_ref_rows(refs: List[Tuple[Optional[str], List[Any]]],\n+                           field: Dict[str, Any],\n+                           link: Optional[str]):\n     refs.append((None, []))\n     label = recombinant_language_text(field['label'])\n     refs.append(('title', [(link, label) if link else label]))\n@@ -558,7 +595,7 @@ def _append_field_ref_rows(refs, field, link):\n         refs.append(('attr', [\n             _('Description'),\n             recombinant_language_text(field['description'])]))\n-    if field.get('obligation'):  # for old yaml files (merged with validation in new ones)\n+    if field.get('obligation'):\n         refs.append(('attr', [\n             _('Obligation'),\n             recombinant_language_text(field['obligation'])]))\n@@ -570,7 +607,7 @@ def _append_field_ref_rows(refs, field, link):\n         refs.append(('attr', [\n             _('Validation'),\n             recombinant_language_text(field['validation'])]))\n-    if field.get('format_type'):  # for old yaml files (merged with validation in new ones)\n+    if field.get('format_type'):\n         refs.append(('attr', [\n             _('Format'),\n             recombinant_language_text(field['format_type'])]))\n@@ -579,25 +616,34 @@ def _append_field_ref_rows(refs, field, link):\n             _('Character Limit'),\n             field['max_chars']]))\n \n-def _append_field_choices_rows(refs, choices, full_text_choices):\n+\n+def _append_field_choices_rows(refs: List[Tuple[Optional[str], List[Any]]],\n+                               choices: Dict[str, Any],\n+                               full_text_choices: bool):\n     refs.append(('choice heading', [_('Values')]))\n     max_length = 0\n     for key, value in choices:\n         if full_text_choices:\n-            choice = [u'{0}: {1}'.format(key, value)]\n+            choice = ['{0}: {1}'.format(key, value)]\n         elif str(key) == value:\n             choice = [str(key)]\n         else:\n             choice = [str(key), value]\n-        refs.append(('choice' if not full_text_choices else 'choice_full_text', choice))\n+        refs.append(('choice' if not full_text_choices else\n+                     'choice_full_text', choice))\n         max_length = max(max_length, len(choice[0]))  # used for full_text_choices\n     return estimate_width_from_length(max_length)\n \n-def _populate_reference_sheet(sheet, geno, refs):\n+\n+def _populate_reference_sheet(sheet: Worksheet,\n+                              geno: Dict[str, Any],\n+                              refs: List[Tuple[Optional[str], List[Any]]]):\n     field_count = 1\n \n-    header1_style = dict(DEFAULT_HEADER_STYLE, **geno.get('excel_header_style', {}))\n-    header2_style = dict(DEFAULT_REF_HEADER2_STYLE, **geno.get('excel_header_style', {}))\n+    header1_style = dict(DEFAULT_HEADER_STYLE, **geno.get(\n+        'excel_header_style', {}))\n+    header2_style = dict(DEFAULT_REF_HEADER2_STYLE, **geno.get(\n+        'excel_header_style', {}))\n     fill_cell(\n         sheet,\n         REF_HEADER1_ROW,\n@@ -632,6 +678,7 @@ def _populate_reference_sheet(sheet, geno, refs):\n             field_count = 1\n         else:\n             link = None\n+            value = None\n             if len(ref_line) == 2:\n                 value = wrap_text_to_width(ref_line[1], REF_VALUE_WIDTH).strip()\n                 ref_line = [ref_line[0], value]\n@@ -644,12 +691,12 @@ def _populate_reference_sheet(sheet, geno, refs):\n                 sheet.cell(row=row_number, column=cnum).value = (\n                     cval.strip().replace('\\n', '\\r\\n'))\n \n-            if len(ref_line) == 2:\n+            if len(ref_line) == 2 and value:\n                 sheet.row_dimensions[row_number].height = LINE_HEIGHT + (\n                     value.count('\\n') * LINE_HEIGHT)\n \n-            key_cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM)\n-            value_cell = sheet.cell(row=row_number, column=REF_VALUE_COL_NUM)\n+            key_cell: Cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM)\n+            value_cell: Cell = sheet.cell(row=row_number, column=REF_VALUE_COL_NUM)\n \n             if style == 'title':\n                 sheet.merge_cells(REF_FIELD_NUM_MERGE.format(row=row_number))\n@@ -660,20 +707,20 @@ def _populate_reference_sheet(sheet, geno, refs):\n                     REF_FIELD_NUM_COL_NUM,\n                     field_count,\n                     'reco_ref_number')\n-                title_cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM)\n+                title_cell: Cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM)\n                 if link:\n                     title_cell.hyperlink = link\n                 title_cell.style = 'reco_ref_title'\n                 sheet.row_dimensions[row_number].height = REF_FIELD_TITLE_HEIGHT\n                 field_count += 1\n             elif style == 'choice':\n-                pad_cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM - 1)\n+                pad_cell: Cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM - 1)\n                 pad_cell.style = 'reco_example'\n                 key_cell.style = 'reco_example'\n                 value_cell.style = 'reco_example'\n             elif style == 'choice_full_text':\n                 sheet.merge_cells(REF_FIELD_TITLE_MERGE.format(row=row_number))\n-                pad_cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM - 1)\n+                pad_cell: Cell = sheet.cell(row=row_number, column=REF_KEY_COL_NUM - 1)\n                 pad_cell.style = 'reco_example'\n                 key_cell.style = 'reco_example'\n                 value_cell.style = 'reco_example'\n@@ -694,7 +741,9 @@ def _populate_reference_sheet(sheet, geno, refs):\n     sheet.column_dimensions[REF_VALUE_COL].width = REF_VALUE_WIDTH\n \n \n-def _populate_excel_e_sheet(sheet, chromo, cranges):\n+def _populate_excel_e_sheet(sheet: Worksheet,\n+                            chromo: Dict[str, Any],\n+                            cranges: Dict[str, Any]):\n     \"\"\"\n     Populate the \"error\" calculation excel worksheet\n \n@@ -759,7 +808,7 @@ def _populate_excel_e_sheet(sheet, chromo, cranges):\n                 fmla = 'FALSE()'\n             fmla = user_fmla.replace('{default_formula}', '(' + fmla + ')')\n \n-        if field.get('excel_error_cell_filter_formula'):\n+        if field.get('excel_error_cell_filter_formula') and fmla:\n             fmla = fmla.replace(\n                 '{cell}', '(' + field.get('excel_error_cell_filter_formula') + ')')\n \n@@ -773,7 +822,7 @@ def _populate_excel_e_sheet(sheet, chromo, cranges):\n                     top=DATA_FIRST_ROW)\n                 for cn, f in template_cols_fields(chromo)\n                 if f['datastore_id'] in chromo['datastore_primary_key']\n-                ) +')>1'\n+                ) + ')>1'\n             fmla = ('OR(' + fmla + ',' + pk_fmla + ')') if fmla else pk_fmla\n \n         if not fmla:\n@@ -782,6 +831,7 @@ def _populate_excel_e_sheet(sheet, chromo, cranges):\n         fmla_keys = set(\n             key for (_i, key, _i, _i) in string.Formatter().parse(fmla)\n             if key != 'cell' and key != 'default_formula')\n+        fmla_values = {}\n         if fmla_keys:\n             fmla_values = {\n                 f['datastore_id']: \"'{sheet}'!{col}{{num}}\".format(\n@@ -824,7 +874,8 @@ def _populate_excel_e_sheet(sheet, chromo, cranges):\n                 row=i))\n \n \n-def _populate_excel_r_sheet(sheet, chromo):\n+def _populate_excel_r_sheet(sheet: Worksheet,\n+                            chromo: Dict[str, Any]):\n     \"\"\"\n     Populate the \"required\" calculation excel worksheet\n \n@@ -845,7 +896,7 @@ def _populate_excel_r_sheet(sheet, chromo):\n         pk_field = field['datastore_id'] in chromo['datastore_primary_key']\n \n         if fmla:\n-            fmla = '={has_data}*({cell}=\"\")*(' + fmla +')'\n+            fmla = '={has_data}*({cell}=\"\")*(' + fmla + ')'\n         elif pk_field or field.get('excel_required', False):\n             fmla = '={has_data}*({cell}=\"\")'\n         else:\n@@ -902,7 +953,12 @@ def _populate_excel_r_sheet(sheet, chromo):\n                 colZ=col,\n                 row=i))\n \n-def fill_cell(sheet, row, column, value, style):\n+\n+def fill_cell(sheet: Worksheet,\n+              row: int,\n+              column: int,\n+              value: Any,\n+              style: Union[str, Dict[str, Any]]):\n     \"\"\"\n     :param sheet: worksheet\n     :param row: 1-based row number\n@@ -911,17 +967,19 @@ def fill_cell(sheet, row, column, value, style):\n     :param style: style name as string or dict for apply_style\n     :return: None\n     \"\"\"\n-    c = sheet.cell(row=row, column=column)\n+    c: Cell = sheet.cell(row=row, column=column)\n     if isinstance(value, str):\n-        value = value.replace(u'\\n', u'\\r\\n')\n+        value = value.replace('\\n', '\\r\\n')\n     c.value = value\n     if isinstance(style, str):\n         c.style = style\n     else:\n         apply_style(c, style)\n \n \n-def build_named_style(book, name, config):\n+def build_named_style(book: Workbook,\n+                      name: str,\n+                      config: Dict[str, Any]):\n     \"\"\"\n     :param book: workbook to assign style\n     :param name: style name\n@@ -933,7 +991,8 @@ def build_named_style(book, name, config):\n     book.add_named_style(style)\n \n \n-def apply_style(target, config):\n+def apply_style(target: Union[Cell, NamedStyle],\n+                config: Dict[str, Any]):\n     \"\"\"\n     apply style from config to target\n \n@@ -943,16 +1002,16 @@ def apply_style(target, config):\n     \"\"\"\n     pattern_fill = config.get('PatternFill')\n     if pattern_fill:\n-        target.fill = openpyxl.styles.PatternFill(**pattern_fill)\n+        target.fill = PatternFill(**pattern_fill)\n     font = config.get('Font')\n     if font:\n-        target.font = openpyxl.styles.Font(**font)\n+        target.font = Font(**font)\n     alignment = config.get('Alignment')\n     if alignment:\n-        target.alignment = openpyxl.styles.Alignment(**alignment)\n+        target.alignment = Alignment(**alignment)\n \n \n-def org_title_lang_hack(title):\n+def org_title_lang_hack(title: str):\n     \"\"\"\n     Canada site is using title to store \"{en title name} | {fr title name}\"\n     this hack displays the correct one (one day soon we'll fix this, promise)\n@@ -962,29 +1021,35 @@ def org_title_lang_hack(title):\n     except TypeError:\n         lang = 'en'\n     if lang == 'fr':\n-        return title.split(u' | ')[-1]\n-    return title.split(u' | ')[0]\n+        return title.split(' | ')[-1]\n+    return title.split(' | ')[0]\n \n-def template_cols_fields(chromo):\n+\n+def template_cols_fields(chromo: Dict[str, Any]):\n     ''' (col_num, field) ... for fields in template'''\n     return enumerate(\n         (f for f in chromo['fields'] if f.get(\n-            'import_template_include', True) and not f.get('published_resource_computed_field')), DATA_FIRST_COL_NUM)\n+            'import_template_include', True) and not f.get(\n+                'published_resource_computed_field')), DATA_FIRST_COL_NUM)\n+\n \n-def _add_conditional_formatting(\n-        sheet, col_letter, resource_num, error_style, required_style,\n-        data_num_rows):\n+def _add_conditional_formatting(sheet: Worksheet,\n+                                col_letter: str,\n+                                resource_num: int,\n+                                error_style: Dict[str, Any],\n+                                required_style: Dict[str, Any],\n+                                data_num_rows: int):\n     '''\n     Error and required cell hilighting based on e/r sheets\n     '''\n-    error_fill = openpyxl.styles.PatternFill(\n+    error_fill = PatternFill(\n         bgColor=error_style['PatternFill']['fgColor'],\n         **error_style['PatternFill'])\n-    error_font = openpyxl.styles.Font(**error_style['Font'])\n-    required_fill = openpyxl.styles.PatternFill(\n+    error_font = Font(**error_style['Font'])\n+    required_fill = PatternFill(\n         bgColor=required_style['PatternFill']['fgColor'],\n         **required_style['PatternFill'])\n-    required_font = openpyxl.styles.Font(**required_style['Font'])\n+    required_font = Font(**required_style['Font'])\n \n     sheet.conditional_formatting.add(\n         '{col}{row1}:{col}{rowN}'.format(\n@@ -996,9 +1061,9 @@ def _add_conditional_formatting(\n                 rnum=resource_num,\n                 colA=RSTATUS_COL,\n                 row1=DATA_FIRST_ROW)],\n-        stopIfTrue=True,\n-        fill=required_fill,\n-        font=required_font))\n+                stopIfTrue=True,\n+                fill=required_fill,\n+                font=required_font))\n     sheet.conditional_formatting.add(\n         '{colA}{row1}:{colZ}{rowN}'.format(\n             colA=RSTATUS_COL,\n@@ -1011,9 +1076,9 @@ def _add_conditional_formatting(\n                 rnum=resource_num,\n                 colA=RSTATUS_COL,\n                 row1=CSTATUS_ROW)],\n-        stopIfTrue=True,\n-        fill=error_fill,\n-        font=error_font))\n+                stopIfTrue=True,\n+                fill=error_fill,\n+                font=error_font))\n     sheet.conditional_formatting.add(\n         '{colA}{row1}:{colZ}{rowN}'.format(\n             colA=DATA_FIRST_COL,\n@@ -1026,6 +1091,6 @@ def _add_conditional_formatting(\n                 rnum=resource_num,\n                 colA=DATA_FIRST_COL,\n                 row1=CSTATUS_ROW)],\n-        stopIfTrue=True,\n-        fill=required_fill,\n-        font=required_font))\n+                stopIfTrue=True,\n+                fill=required_fill,\n+                font=required_font))"
                },
                {
                    "sha": "a45dddddff1006da9f48bd1ef476668933da8310",
                    "filename": "package-lock.json",
                    "status": "added",
                    "additions": 66,
                    "deletions": 0,
                    "changes": 66,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/package-lock.json",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/package-lock.json",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/package-lock.json?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -0,0 +1,66 @@\n+{\n+  \"name\": \"ckanext-recombinant\",\n+  \"version\": \"1.0.0\",\n+  \"lockfileVersion\": 2,\n+  \"requires\": true,\n+  \"packages\": {\n+    \"\": {\n+      \"version\": \"1.0.0\",\n+      \"license\": \"MIT\",\n+      \"devDependencies\": {\n+        \"pyright\": \"1.1.386\"\n+      }\n+    },\n+    \"node_modules/fsevents\": {\n+      \"version\": \"2.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n+      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n+      \"dev\": true,\n+      \"hasInstallScript\": true,\n+      \"optional\": true,\n+      \"os\": [\n+        \"darwin\"\n+      ],\n+      \"engines\": {\n+        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n+      }\n+    },\n+    \"node_modules/pyright\": {\n+      \"version\": \"1.1.386\",\n+      \"resolved\": \"https://registry.npmjs.org/pyright/-/pyright-1.1.386.tgz\",\n+      \"integrity\": \"sha512-mpVeXb12CtDC5EIm6lbrEjD6tD/qIpRSmkYZB16Vl5xWgYvFcgAFKgbCBSiy9D1h4eQBmqAP/9oFatmZ2hjTPw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"fsevents\": \"~2.3.3\"\n+      },\n+      \"bin\": {\n+        \"pyright\": \"index.js\",\n+        \"pyright-langserver\": \"langserver.index.js\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=14.0.0\"\n+      },\n+      \"optionalDependencies\": {\n+        \"fsevents\": \"~2.3.3\"\n+      }\n+    }\n+  },\n+  \"dependencies\": {\n+    \"fsevents\": {\n+      \"version\": \"2.3.3\",\n+      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\n+      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\n+      \"dev\": true,\n+      \"optional\": true\n+    },\n+    \"pyright\": {\n+      \"version\": \"1.1.386\",\n+      \"resolved\": \"https://registry.npmjs.org/pyright/-/pyright-1.1.386.tgz\",\n+      \"integrity\": \"sha512-mpVeXb12CtDC5EIm6lbrEjD6tD/qIpRSmkYZB16Vl5xWgYvFcgAFKgbCBSiy9D1h4eQBmqAP/9oFatmZ2hjTPw==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"fsevents\": \"~2.3.3\"\n+      }\n+    }\n+  }\n+}"
                },
                {
                    "sha": "24379d062f9e48e9d9d10700295c483740d7f04e",
                    "filename": "package.json",
                    "status": "added",
                    "additions": 21,
                    "deletions": 0,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/package.json",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/package.json",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/package.json?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -0,0 +1,21 @@\n+{\n+  \"name\": \"ckanext-recombinant\",\n+  \"version\": \"1.0.0\",\n+  \"description\": \"CKAN Recombinant Plugin\",\n+  \"dependencies\": {},\n+  \"devDependencies\": {\n+    \"pyright\": \"1.1.386\"\n+  },\n+  \"scripts\": {},\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"git+https://github.com/open-data/ckanext-recombinant.git\"\n+  },\n+  \"keywords\": [],\n+  \"author\": \"\",\n+  \"license\": \"MIT\",\n+  \"bugs\": {\n+    \"url\": \"https://github.com/open-data/ckanext-recombinant/issues\"\n+  },\n+  \"homepage\": \"https://github.com/open-data/ckanext-recombinant#readme\"\n+}"
                },
                {
                    "sha": "483d1af410850045e7af31026a16a8851cb147eb",
                    "filename": "pyproject.toml",
                    "status": "added",
                    "additions": 76,
                    "deletions": 0,
                    "changes": 76,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/pyproject.toml",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/pyproject.toml",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/pyproject.toml?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -0,0 +1,76 @@\n+[tool.pyright]\n+pythonVersion = \"3.7\"\n+include = [\"ckanext\"]\n+exclude = [\n+    \"**/tests\",\n+    \"**/migration\",\n+]\n+extraPaths = [\n+  \"../../lib/python3.9/site-packages\",\n+  \"../.\",\n+  \"../ckan\",\n+  \"../ckanapi\",\n+  \"../ckantoolkit\",\n+  \"../ckanext-recombinant\",\n+]\n+strict = []\n+strictParameterNoneValue = true\n+reportFunctionMemberAccess = true\n+reportMissingImports = true\n+reportMissingModuleSource = true\n+reportMissingTypeStubs = false\n+reportImportCycles = false\n+reportUnusedImport = true\n+reportUnusedClass = true\n+reportUnusedFunction = true\n+reportUnusedVariable = true\n+reportDuplicateImport = true\n+reportOptionalSubscript = true\n+reportOptionalMemberAccess = true\n+reportOptionalCall = true\n+reportOptionalIterable = true\n+reportOptionalContextManager = true\n+reportOptionalOperand = true\n+reportTypedDictNotRequiredAccess = false\n+reportConstantRedefinition = true\n+reportIncompatibleMethodOverride = false\n+reportIncompatibleVariableOverride = true\n+reportOverlappingOverload = true\n+reportUntypedFunctionDecorator = false\n+reportUnknownParameterType = true\n+reportUnknownArgumentType = false\n+reportUnknownLambdaType = false\n+reportUnknownMemberType = false\n+reportMissingTypeArgument = true\n+reportInvalidTypeVarUse = true\n+reportCallInDefaultInitializer = true\n+reportUnknownVariableType = false\n+reportUntypedBaseClass = true\n+reportUnnecessaryIsInstance = true\n+reportUnnecessaryCast = true\n+reportUnnecessaryComparison = true\n+reportAssertAlwaysTrue = true\n+reportSelfClsParameterName = true\n+reportUnusedCallResult = false\n+useLibraryCodeForTypes = true\n+reportGeneralTypeIssues = true\n+reportPropertyTypeMismatch = true\n+reportWildcardImportFromLibrary = true\n+reportUntypedClassDecorator = false\n+reportUntypedNamedTuple = true\n+reportPrivateUsage = false\n+reportPrivateImportUsage = true\n+reportInconsistentConstructor = true\n+reportMissingSuperCall = false\n+reportUninitializedInstanceVariable = false\n+reportInvalidStringEscapeSequence = true\n+reportMissingParameterType = true\n+reportImplicitStringConcatenation = false\n+reportUndefinedVariable = true\n+reportUnboundVariable = true\n+reportInvalidStubStatement = true\n+reportIncompleteStub = true\n+reportUnsupportedDunderAll = true\n+reportUnusedCoroutine = true\n+reportUnnecessaryTypeIgnoreComment = true\n+reportMatchNotExhaustive = true"
                },
                {
                    "sha": "b37a217bfbc48465634e093b62635b57560f063b",
                    "filename": "setup.cfg",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 0,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/setup.cfg",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/setup.cfg",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/setup.cfg?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -18,3 +18,12 @@ output_dir = ckanext/recombinant/i18n\n domain = ckanext-recombinant\n directory = ckanext/recombinant/i18n\n statistics = true\n+\n+[flake8]\n+max-complexity = 100\n+max-line-length = 88\n+count = true\n+exit-zero = true\n+statistics = true\n+per-file-ignores =\n+  ckanext/recombinant/tests/*:E501"
                },
                {
                    "sha": "634d3da57b8ccac666b0566214403c3ab661c90d",
                    "filename": "setup.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 5,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/ckanext-recombinant/blob/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/setup.py",
                    "raw_url": "https://github.com/open-data/ckanext-recombinant/raw/5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6/setup.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-recombinant/contents/setup.py?ref=5c30d7a50ce42a80969d3e6d47ad2d8c2083bcf6",
                    "patch": "@@ -1,16 +1,16 @@\n from setuptools import setup, find_packages\n-import sys, os\n \n version = '2.0.0dev'\n \n setup(\n     name='ckanext-recombinant',\n     version=version,\n     description=\"Create datastore tables for organizations and \"\n-        \"provide combined output\",\n+                \"provide combined output\",\n     long_description=\"\"\"\n     \"\"\",\n-    classifiers=[], # Get strings from http://pypi.python.org/pypi?%3Aaction=list_classifiers\n+    # Get strings from http://pypi.python.org/pypi?%3Aaction=list_classifiers\n+    classifiers=[],\n     keywords='',\n     author='Government of Canada',\n     author_email='Michel.Gendron@statcan.gc.ca',\n@@ -23,8 +23,7 @@\n     install_requires=[\n         # -*- Extra requirements: -*-\n     ],\n-    entry_points=\\\n-    \"\"\"\n+    entry_points=\"\"\"\n     [ckan.plugins]\n     recombinant=ckanext.recombinant.plugins:RecombinantPlugin\n "
                }
            ]
        },
        "ckanext-scheming": {
            "url": "https://api.github.com/repos/ckan/ckanext-scheming/compare/5ce30cf2856aee97fa7b49de46847f8119dad355...49527ec191254a2f457b44daf870ca08e9c1a1ea",
            "html_url": "https://github.com/ckan/ckanext-scheming/compare/5ce30cf2856aee97fa7b49de46847f8119dad355...49527ec191254a2f457b44daf870ca08e9c1a1ea",
            "permalink_url": "https://github.com/ckan/ckanext-scheming/compare/ckan:5ce30cf...ckan:49527ec",
            "diff_url": "https://github.com/ckan/ckanext-scheming/compare/5ce30cf2856aee97fa7b49de46847f8119dad355...49527ec191254a2f457b44daf870ca08e9c1a1ea.diff",
            "patch_url": "https://github.com/ckan/ckanext-scheming/compare/5ce30cf2856aee97fa7b49de46847f8119dad355...49527ec191254a2f457b44daf870ca08e9c1a1ea.patch",
            "base_commit": {
                "sha": "5ce30cf2856aee97fa7b49de46847f8119dad355",
                "node_id": "C_kwDOAMK9BNoAKDVjZTMwY2YyODU2YWVlOTdmYTdiNDlkZTQ2ODQ3ZjgxMTlkYWQzNTU",
                "commit": {
                    "author": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-11-08T16:59:52Z"
                    },
                    "committer": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-11-08T16:59:52Z"
                    },
                    "message": "2.9 unsupported, update readme for validators",
                    "tree": {
                        "sha": "1cd7ce8cdb5037ad1296dccd15991b899f77a5ec",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/1cd7ce8cdb5037ad1296dccd15991b899f77a5ec"
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                "html_url": "https://github.com/ckan/ckanext-scheming/commit/5ce30cf2856aee97fa7b49de46847f8119dad355",
                "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355/comments",
                "author": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                        "html_url": "https://github.com/ckan/ckanext-scheming/commit/172c2c40c957fa691bbcad1f7e053f11b77c9dc1"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "5ce30cf2856aee97fa7b49de46847f8119dad355",
                "node_id": "C_kwDOAMK9BNoAKDVjZTMwY2YyODU2YWVlOTdmYTdiNDlkZTQ2ODQ3ZjgxMTlkYWQzNTU",
                "commit": {
                    "author": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-11-08T16:59:52Z"
                    },
                    "committer": {
                        "name": "Ian Ward",
                        "email": "ian@excess.org",
                        "date": "2024-11-08T16:59:52Z"
                    },
                    "message": "2.9 unsupported, update readme for validators",
                    "tree": {
                        "sha": "1cd7ce8cdb5037ad1296dccd15991b899f77a5ec",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/1cd7ce8cdb5037ad1296dccd15991b899f77a5ec"
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                "html_url": "https://github.com/ckan/ckanext-scheming/commit/5ce30cf2856aee97fa7b49de46847f8119dad355",
                "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355/comments",
                "author": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "wardi",
                    "id": 153258,
                    "node_id": "MDQ6VXNlcjE1MzI1OA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/wardi",
                    "html_url": "https://github.com/wardi",
                    "followers_url": "https://api.github.com/users/wardi/followers",
                    "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                    "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                    "organizations_url": "https://api.github.com/users/wardi/orgs",
                    "repos_url": "https://api.github.com/users/wardi/repos",
                    "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/wardi/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/172c2c40c957fa691bbcad1f7e053f11b77c9dc1",
                        "html_url": "https://github.com/ckan/ckanext-scheming/commit/172c2c40c957fa691bbcad1f7e053f11b77c9dc1"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 5,
            "behind_by": 0,
            "total_commits": 5,
            "commits": [
                {
                    "sha": "d59a87d931e74f2341ef9a7385757a03830afdae",
                    "node_id": "C_kwDOAMK9BNoAKGQ1OWE4N2Q5MzFlNzRmMjM0MWVmOWE3Mzg1NzU3YTAzODMwYWZkYWU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:35:57Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:35:57Z"
                        },
                        "message": "removal(dev): ckantoolkit;\n\n- Use `ckan.plugins.toolkit`",
                        "tree": {
                            "sha": "d5ede58bb247e5a0794286ba37ff372a464cc758",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/d5ede58bb247e5a0794286ba37ff372a464cc758"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/d59a87d931e74f2341ef9a7385757a03830afdae",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/d59a87d931e74f2341ef9a7385757a03830afdae",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/d59a87d931e74f2341ef9a7385757a03830afdae",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/d59a87d931e74f2341ef9a7385757a03830afdae/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "5ce30cf2856aee97fa7b49de46847f8119dad355",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/5ce30cf2856aee97fa7b49de46847f8119dad355"
                        }
                    ]
                },
                {
                    "sha": "4dcd859b5a544ed857f3fe0b748d3b73d9fce723",
                    "node_id": "C_kwDOAMK9BNoAKDRkY2Q4NTliNWE1NDRlZDg1N2YzZmUwYjc0OGQzYjczZDlmY2U3MjM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:38:10Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:38:10Z"
                        },
                        "message": "fix(tests): py bump;\n\n- Bump python version `3.7` -> `3.9`",
                        "tree": {
                            "sha": "e492b2480e3edad9f9ea8b78cd4024a92005c443",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/e492b2480e3edad9f9ea8b78cd4024a92005c443"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/4dcd859b5a544ed857f3fe0b748d3b73d9fce723",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/4dcd859b5a544ed857f3fe0b748d3b73d9fce723",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/4dcd859b5a544ed857f3fe0b748d3b73d9fce723",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/4dcd859b5a544ed857f3fe0b748d3b73d9fce723/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "d59a87d931e74f2341ef9a7385757a03830afdae",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/d59a87d931e74f2341ef9a7385757a03830afdae",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/d59a87d931e74f2341ef9a7385757a03830afdae"
                        }
                    ]
                },
                {
                    "sha": "cc391336521a0aa9f9a5e06fc080657b799281ca",
                    "node_id": "C_kwDOAMK9BNoAKGNjMzkxMzM2NTIxYTBhYTlmOWE1ZTA2ZmMwODA2NTdiNzk5MjgxY2E",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:43:35Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T17:43:35Z"
                        },
                        "message": "removal(dev): ckantoolkit;\n\n- Use `ckan.plugins.toolkit`",
                        "tree": {
                            "sha": "654e65d0d57f4d6591933a39723a442ad9318fe9",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/654e65d0d57f4d6591933a39723a442ad9318fe9"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/cc391336521a0aa9f9a5e06fc080657b799281ca",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/cc391336521a0aa9f9a5e06fc080657b799281ca",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/cc391336521a0aa9f9a5e06fc080657b799281ca",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/cc391336521a0aa9f9a5e06fc080657b799281ca/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "4dcd859b5a544ed857f3fe0b748d3b73d9fce723",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/4dcd859b5a544ed857f3fe0b748d3b73d9fce723",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/4dcd859b5a544ed857f3fe0b748d3b73d9fce723"
                        }
                    ]
                },
                {
                    "sha": "0ecb9f539089933351f683503237c8e92e04a8be",
                    "node_id": "C_kwDOAMK9BNoAKDBlY2I5ZjUzOTA4OTkzMzM1MWY2ODM1MDMyMzdjOGU5MmUwNGE4YmU",
                    "commit": {
                        "author": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2025-01-23T20:13:50Z"
                        },
                        "committer": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2025-01-23T20:13:50Z"
                        },
                        "message": "fix for None text on org create button",
                        "tree": {
                            "sha": "e053fd37552615c8bf8455de83a8de0e38324329",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/e053fd37552615c8bf8455de83a8de0e38324329"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/0ecb9f539089933351f683503237c8e92e04a8be",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/0ecb9f539089933351f683503237c8e92e04a8be",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/0ecb9f539089933351f683503237c8e92e04a8be",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/0ecb9f539089933351f683503237c8e92e04a8be/comments",
                    "author": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "5ce30cf2856aee97fa7b49de46847f8119dad355",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/5ce30cf2856aee97fa7b49de46847f8119dad355",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/5ce30cf2856aee97fa7b49de46847f8119dad355"
                        }
                    ]
                },
                {
                    "sha": "49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "node_id": "C_kwDOAMK9BNoAKDQ5NTI3ZWMxOTEyNTRhMmY0NTdiNDRkYWY4NzBjYTA4ZTljMWExZWE",
                    "commit": {
                        "author": {
                            "name": "Ian Ward",
                            "email": "ian@excess.org",
                            "date": "2025-01-24T15:41:12Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-24T15:41:12Z"
                        },
                        "message": "Merge pull request #432 from JVickery-TBS/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                        "tree": {
                            "sha": "25240c853bda8803979a90c7f269d155a906518a",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/trees/25240c853bda8803979a90c7f269d155a906518a"
                        },
                        "url": "https://api.github.com/repos/ckan/ckanext-scheming/git/commits/49527ec191254a2f457b44daf870ca08e9c1a1ea",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnk7SYCRC1aQ7uu5UhlAAAyqAQAFqULka8DGbAd5pJ/fNDQU4W\nMteyjbz6fml5l7nW0wPxpKyfs2RVhTM6sUE/eSAaCUXMCfIV/vyluaCwbcnuQrO5\nkQvyYglhQx/BGavBJDy4Y2iTuCMjphbpc8J4YLtkmqcagRqbwu7lE6O4c0NWyGd0\ngatYquLn1yD7wm8RSdZ9kl9VcWtMAjjQ2SnM2FJJjHC1+z8EatNCy1giGBOECDcG\njhEUI1xQ62vmiQunCKG2ZGtrtPLFpAAQ1fuW0X7Y7OANpFatjNXteaLamE+7OAmk\njNheMTpIIpmuCEzMgfn+7I22EHCVUA4xRmUKBHFyc7uwO3XG7ETR8BgGv7KEDvoY\nNsNVWqU5AzVl4uKMsDDWh2YKcu2FZsEVEc/MSq8Mxx/64jcm5Z0viJ1cmZDMrKLd\nQjzudkFo55BBsay79nVmD7ZqhOyW1PQVLmjuz3uWNdF2vAVucewsxcPz0G52xs0t\n1gRGiKFRGxpElTh4rnNwnzJhUAwYgmYIQA4xmKqs44S4sy4ALCSE2OoSrWxuM8cU\nbfBNfEjmVc1mKhGGfjJNN1n640s+JKysfu9FuhHT5CWF00XcuzFt4QaWZWKTQ/kN\n3ZOd1wjpwOkpYBffoV1LMzjggiYyAUPqsDPHdNAJLsZTW8n6abFfhEtaeSn4Tgm4\nQCOQ91KsjNRxL2fyDgya\n=f1OF\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 25240c853bda8803979a90c7f269d155a906518a\nparent 0ecb9f539089933351f683503237c8e92e04a8be\nparent cc391336521a0aa9f9a5e06fc080657b799281ca\nauthor Ian Ward <ian@excess.org> 1737733272 -0500\ncommitter GitHub <noreply@github.com> 1737733272 -0500\n\nMerge pull request #432 from JVickery-TBS/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                            "verified_at": "2025-01-24T15:46:15Z"
                        }
                    },
                    "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "html_url": "https://github.com/ckan/ckanext-scheming/commit/49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "comments_url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/49527ec191254a2f457b44daf870ca08e9c1a1ea/comments",
                    "author": {
                        "login": "wardi",
                        "id": 153258,
                        "node_id": "MDQ6VXNlcjE1MzI1OA==",
                        "avatar_url": "https://avatars.githubusercontent.com/u/153258?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/wardi",
                        "html_url": "https://github.com/wardi",
                        "followers_url": "https://api.github.com/users/wardi/followers",
                        "following_url": "https://api.github.com/users/wardi/following{/other_user}",
                        "gists_url": "https://api.github.com/users/wardi/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/wardi/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/wardi/subscriptions",
                        "organizations_url": "https://api.github.com/users/wardi/orgs",
                        "repos_url": "https://api.github.com/users/wardi/repos",
                        "events_url": "https://api.github.com/users/wardi/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/wardi/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "0ecb9f539089933351f683503237c8e92e04a8be",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/0ecb9f539089933351f683503237c8e92e04a8be",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/0ecb9f539089933351f683503237c8e92e04a8be"
                        },
                        {
                            "sha": "cc391336521a0aa9f9a5e06fc080657b799281ca",
                            "url": "https://api.github.com/repos/ckan/ckanext-scheming/commits/cc391336521a0aa9f9a5e06fc080657b799281ca",
                            "html_url": "https://github.com/ckan/ckanext-scheming/commit/cc391336521a0aa9f9a5e06fc080657b799281ca"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "f191bb81012d349cf31143fc3aa1f5abdf547995",
                    "filename": ".github/workflows/test.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/.github%2Fworkflows%2Ftest.yml",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/.github%2Fworkflows%2Ftest.yml",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/.github%2Fworkflows%2Ftest.yml?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -7,7 +7,7 @@ jobs:\n       - uses: actions/checkout@v4\n       - uses: actions/setup-python@v5\n         with:\n-          python-version: '3.7'\n+          python-version: '3.9'\n       - name: Install requirements\n         run: pip install flake8 pycodestyle\n       - name: Check syntax"
                },
                {
                    "sha": "18d09daae329635ad9e9dede604b2c9dbd923ef5",
                    "filename": "ckanext/scheming/helpers.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 5,
                    "changes": 6,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Fhelpers.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Fhelpers.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Fhelpers.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -7,7 +7,7 @@\n import six\n \n from jinja2 import Environment\n-from ckantoolkit import config, _\n+from ckan.plugins.toolkit import config, _, h\n \n from ckanapi import LocalCKAN, NotFound, NotAuthorized\n \n@@ -24,7 +24,6 @@ def helper(fn):\n def lang():\n     # access this function late in case ckan\n     # is not set up fully when importing this module\n-    from ckantoolkit import h\n     return h.lang()\n \n \n@@ -77,7 +76,6 @@ def scheming_field_choices(field):\n     if 'choices' in field:\n         return field['choices']\n     if 'choices_helper' in field:\n-        from ckantoolkit import h\n         choices_fn = getattr(h, field['choices_helper'])\n         return choices_fn(field)\n \n@@ -409,8 +407,6 @@ def scheming_render_from_string(source, **kwargs):\n     # Temporary solution for rendering defaults and including the CKAN\n     # helpers. The core CKAN lib does not include a string rendering\n     # utility that works across 2.6-2.8.\n-    from ckantoolkit import h\n-\n     env = Environment(autoescape=True)\n     template = env.from_string(\n         source,"
                },
                {
                    "sha": "79e027ad1755272132966d08979aa2b039d18f22",
                    "filename": "ckanext/scheming/logic.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Flogic.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Flogic.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Flogic.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -1,4 +1,4 @@\n-from ckantoolkit import get_or_bust, side_effect_free, ObjectNotFound\n+from ckan.plugins.toolkit import get_or_bust, side_effect_free, ObjectNotFound\n \n from ckanext.scheming.helpers import (\n     scheming_dataset_schemas, scheming_get_dataset_schema,"
                },
                {
                    "sha": "a81aa54fe3d305339564dcd79c66aa15ba555353",
                    "filename": "ckanext/scheming/plugins.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Fplugins.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Fplugins.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Fplugins.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -22,7 +22,7 @@\n except ImportError:  # CKAN <= 2.5\n     core_helper_functions = None\n \n-from ckantoolkit import (\n+from ckan.plugins.toolkit import (\n     DefaultDatasetForm,\n     DefaultGroupForm,\n     DefaultOrganizationForm,"
                },
                {
                    "sha": "aecf8af2eac38e35e04ef22582acbce3ebb8e3fe",
                    "filename": "ckanext/scheming/templates/scheming/organization/group_form.html",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Forganization%2Fgroup_form.html",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Forganization%2Fgroup_form.html",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftemplates%2Fscheming%2Forganization%2Fgroup_form.html?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -45,13 +45,13 @@\n             {% block save_text %}\n               {%- if action == \"edit\" -%}\n                 {%- if 'humanize_entity_type' in h -%}\n-                  {{ h.humanize_entity_type('organization', group_type, 'update label') }}\n+                  {{ h.humanize_entity_type('organization', group_type, 'update label') or _('Update Organization') }}\n                 {%- else -%}\n                   {{ _('Update Organization') }}\n                 {%- endif -%}\n               {%- else -%}\n                 {%- if 'humanize_entity_type' in h -%}\n-                  {{ h.humanize_entity_type('organization', group_type, 'create label') }}\n+                  {{ h.humanize_entity_type('organization', group_type, 'create label') or _('Create Organization') }}\n                 {%- else -%}\n                   {{ _('Create Organization') }}\n                 {%- endif -%}"
                },
                {
                    "sha": "55694e62eed95d269cbbb1b6ba66ac7228df8c25",
                    "filename": "ckanext/scheming/tests/test_dataset_display.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_dataset_display.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_dataset_display.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftests%2Ftest_dataset_display.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -1,6 +1,6 @@\n import pytest\n import six\n-from ckantoolkit.tests.factories import Sysadmin, Dataset\n+from ckan.tests.factories import Sysadmin, Dataset\n \n \n @pytest.mark.usefixtures(\"clean_db\")"
                },
                {
                    "sha": "831f0c0600d75dfdb2b9b6cb82afad704430aff1",
                    "filename": "ckanext/scheming/tests/test_form.py",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 17,
                    "changes": 35,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_form.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_form.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftests%2Ftest_form.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -1,36 +1,37 @@\n import json\n \n import pytest\n-import ckantoolkit\n from bs4 import BeautifulSoup\n \n-from ckantoolkit.tests.factories import Dataset\n-from ckantoolkit.tests.helpers import call_action\n+from ckan.plugins.toolkit import check_ckan_version, h\n+\n+from ckan.tests.factories import Dataset\n+from ckan.tests.helpers import call_action\n \n \n @pytest.fixture\n def sysadmin_env():\n     try:\n-        from ckantoolkit.tests.factories import SysadminWithToken\n+        from ckan.tests.factories import SysadminWithToken\n         user = SysadminWithToken()\n         return {'Authorization': user['token']}\n     except ImportError:\n         # ckan <= 2.9\n-        from ckantoolkit.tests.factories import Sysadmin\n+        from ckan.tests.factories import Sysadmin\n         user = Sysadmin()\n         return {\"REMOTE_USER\": user[\"name\"].encode(\"ascii\")}\n \n \n def _get_package_new_page(app, env, type_='test-schema'):\n-    if ckantoolkit.check_ckan_version(min_version=\"2.10.0\"):\n+    if check_ckan_version(min_version=\"2.10.0\"):\n         return app.get(url=\"/{0}/new\".format(type_), headers=env)\n     else:\n         return app.get(url=\"/{0}/new\".format(type_), extra_environ=env)\n \n \n def _get_package_update_page(app, id, env):\n \n-    if ckantoolkit.check_ckan_version(min_version=\"2.10.0\"):\n+    if check_ckan_version(min_version=\"2.10.0\"):\n         return app.get(url=\"/test-schema/edit/{}\".format(id), headers=env)\n     else:\n         return app.get(url=\"/test-schema/edit/{}\".format(id), extra_environ=env)\n@@ -39,7 +40,7 @@ def _get_package_update_page(app, id, env):\n def _get_resource_new_page(app, id, env):\n     url = '/dataset/{}/resource/new'.format(id)\n \n-    if ckantoolkit.check_ckan_version(min_version=\"2.10.0\"):\n+    if check_ckan_version(min_version=\"2.10.0\"):\n         return app.get(url, headers=env)\n     else:\n         return app.get(url, extra_environ=env)\n@@ -48,31 +49,31 @@ def _get_resource_new_page(app, id, env):\n def _get_resource_update_page(app, id, resource_id, env):\n     url = '/dataset/{}/resource/{}/edit'.format(id, resource_id)\n \n-    if ckantoolkit.check_ckan_version(min_version=\"2.10.0\"):\n+    if check_ckan_version(min_version=\"2.10.0\"):\n         return app.get(url, headers=env)\n     else:\n         return app.get(url, extra_environ=env)\n \n \n def _get_organization_new_page(app, env, type_=\"organization\"):\n \n-    if ckantoolkit.check_ckan_version(min_version=\"2.10.0\"):\n+    if check_ckan_version(min_version=\"2.10.0\"):\n         return app.get(url=\"/{0}/new\".format(type_), headers=env)\n     else:\n         return app.get(url=\"/{0}/new\".format(type_), extra_environ=env)\n \n \n def _get_group_new_page(app, env, type_=\"group\"):\n \n-    if ckantoolkit.check_ckan_version(min_version=\"2.10.0\"):\n+    if check_ckan_version(min_version=\"2.10.0\"):\n         return app.get(url=\"/{0}/new\".format(type_), headers=env)\n     else:\n         return app.get(url=\"/{0}/new\".format(type_), extra_environ=env)\n \n \n def _get_organization_form(html):\n     # FIXME: add an id to this form\n-    if ckantoolkit.check_ckan_version(min_version=\"2.11.0a0\"):\n+    if check_ckan_version(min_version=\"2.11.0a0\"):\n         form = BeautifulSoup(html).select(\"form\")[2]\n     else:\n         form = BeautifulSoup(html).select(\"form\")[1]\n@@ -85,7 +86,7 @@ def _get_group_form(html):\n \n def _post_data(app, url, data, env):\n     try:\n-        if ckantoolkit.check_ckan_version(min_version=\"2.11.0a0\"):\n+        if check_ckan_version(min_version=\"2.11.0a0\"):\n             app.post(url, headers=env, data=data, follow_redirects=False)\n         else:\n             app.post(\n@@ -267,7 +268,7 @@ def test_resource_form_create(self, app, sysadmin_env):\n \n         response = _get_resource_new_page(app, dataset[\"id\"], sysadmin_env)\n \n-        url = ckantoolkit.h.url_for(\n+        url = h.url_for(\n             \"test-schema_resource.new\", id=dataset[\"id\"]\n         )\n         if not url.startswith('/'):  # ckan < 2.9\n@@ -310,7 +311,7 @@ def test_resource_form_update(self, app, sysadmin_env):\n             \"textarea[name=a_resource_json_field]\"\n         ).text == json.dumps(value, indent=2)\n \n-        url = ckantoolkit.h.url_for(\n+        url = h.url_for(\n             \"test-schema_resource.edit\",\n             id=dataset[\"id\"],\n             resource_id=dataset[\"resources\"][0][\"id\"],\n@@ -405,7 +406,7 @@ def test_resource_form_create(self, app, sysadmin_env):\n \n         response = _get_resource_new_page(app, dataset[\"id\"], sysadmin_env)\n \n-        url = ckantoolkit.h.url_for(\n+        url = h.url_for(\n             \"test-subfields_resource.new\", id=dataset[\"id\"]\n         )\n         if not url.startswith('/'):  # ckan < 2.9\n@@ -444,7 +445,7 @@ def test_resource_form_update(self, app, sysadmin_env):\n         assert 'selected' in opt7d[1].attrs\n         assert 'selected' not in opt7d[2].attrs  # blank subfields\n \n-        url = ckantoolkit.h.url_for(\n+        url = h.url_for(\n             \"test-schema_resource.edit\",\n             id=dataset[\"id\"],\n             resource_id=dataset[\"resources\"][0][\"id\"],"
                },
                {
                    "sha": "d82212d80416fdbfcb5f14170ecb03ea4cf28353",
                    "filename": "ckanext/scheming/tests/test_form_snippets.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_form_snippets.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_form_snippets.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftests%2Ftest_form_snippets.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -9,8 +9,6 @@\n     # old way\n     from jinja2 import Markup\n \n-import ckantoolkit\n-\n \n def render_form_snippet(name, data=None, extra_args=None, errors=None, **kwargs):\n     field = {\"field_name\": \"test\", \"label\": \"Test\"}"
                },
                {
                    "sha": "bd8a34b697d9c65a6f2024355b10b9c70cbad582",
                    "filename": "ckanext/scheming/tests/test_group_display.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_group_display.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_group_display.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftests%2Ftest_group_display.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -1,5 +1,5 @@\n import pytest\n-from ckantoolkit.tests.factories import Sysadmin, Organization, Group\n+from ckan.tests.factories import Sysadmin, Organization, Group\n \n \n @pytest.mark.usefixtures(\"clean_db\")"
                },
                {
                    "sha": "a4670090e3cb6122cd3471e5ffa29a4159e72838",
                    "filename": "ckanext/scheming/tests/test_validation.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_validation.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Ftests%2Ftest_validation.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Ftests%2Ftest_validation.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -15,7 +15,7 @@\n     SchemingDatasetsPlugin,\n     SchemingGroupsPlugin,\n )\n-from ckantoolkit import get_validator, navl_validate\n+from ckan.plugins.toolkit import get_validator, navl_validate\n \n ignore_missing = get_validator(\"ignore_missing\")\n not_empty = get_validator(\"not_empty\")"
                },
                {
                    "sha": "7b06c60b31f35ab7353d2fe7d6f6dca0e2330330",
                    "filename": "ckanext/scheming/validation.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Fvalidation.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/ckanext%2Fscheming%2Fvalidation.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/ckanext%2Fscheming%2Fvalidation.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -9,14 +9,13 @@\n \n import ckan.lib.helpers as h\n from ckan.lib.navl.dictization_functions import convert\n-from ckantoolkit import (\n+from ckan.plugins.toolkit import (\n     get_validator,\n     UnknownValidator,\n     missing,\n     Invalid,\n     StopOnError,\n     _,\n-    unicode_safe,\n )\n \n import ckanext.scheming.helpers as sh\n@@ -25,6 +24,7 @@\n OneOf = get_validator('OneOf')\n ignore_missing = get_validator('ignore_missing')\n not_empty = get_validator('not_empty')\n+unicode_safe = get_validator('unicode_safe')\n \n all_validators = {}\n "
                },
                {
                    "sha": "02fc668fc3b649de1bad7b8300b48f3cc986b702",
                    "filename": "setup.py",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/ckan/ckanext-scheming/blob/49527ec191254a2f457b44daf870ca08e9c1a1ea/setup.py",
                    "raw_url": "https://github.com/ckan/ckanext-scheming/raw/49527ec191254a2f457b44daf870ca08e9c1a1ea/setup.py",
                    "contents_url": "https://api.github.com/repos/ckan/ckanext-scheming/contents/setup.py?ref=49527ec191254a2f457b44daf870ca08e9c1a1ea",
                    "patch": "@@ -27,7 +27,6 @@\n     install_requires=[\n         'pyyaml',\n         'ckanapi',\n-        'ckantoolkit>=0.0.7',\n         'pytz',\n         'six',\n     ],"
                }
            ]
        },
        "ckanext-validation": {
            "url": "https://api.github.com/repos/open-data/ckanext-validation/compare/61cc99a59932bcb090e38c201fed1f1375ea6d36...bccc5d6b1bd029a792961975bf9f8cc64b2be955",
            "html_url": "https://github.com/open-data/ckanext-validation/compare/61cc99a59932bcb090e38c201fed1f1375ea6d36...bccc5d6b1bd029a792961975bf9f8cc64b2be955",
            "permalink_url": "https://github.com/open-data/ckanext-validation/compare/open-data:61cc99a...open-data:bccc5d6",
            "diff_url": "https://github.com/open-data/ckanext-validation/compare/61cc99a59932bcb090e38c201fed1f1375ea6d36...bccc5d6b1bd029a792961975bf9f8cc64b2be955.diff",
            "patch_url": "https://github.com/open-data/ckanext-validation/compare/61cc99a59932bcb090e38c201fed1f1375ea6d36...bccc5d6b1bd029a792961975bf9f8cc64b2be955.patch",
            "base_commit": {
                "sha": "61cc99a59932bcb090e38c201fed1f1375ea6d36",
                "node_id": "C_kwDOGU-jZdoAKDYxY2M5OWE1OTkzMmJjYjA5MGUzOGMyMDFmZWQxZjEzNzVlYTZkMzY",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-17T19:31:25Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-17T19:31:25Z"
                    },
                    "message": "fix(verb): verbiage;\n\n- `White list` -> `allowed domains`.",
                    "tree": {
                        "sha": "e92e57962418b4901af00cb6061d3ae22b66d947",
                        "url": "https://api.github.com/repos/open-data/ckanext-validation/git/trees/e92e57962418b4901af00cb6061d3ae22b66d947"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-validation/git/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                "html_url": "https://github.com/open-data/ckanext-validation/commit/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-validation/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "1aac937a4d08bbee7c3b0cc34e7a85ad762d546a",
                        "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/1aac937a4d08bbee7c3b0cc34e7a85ad762d546a",
                        "html_url": "https://github.com/open-data/ckanext-validation/commit/1aac937a4d08bbee7c3b0cc34e7a85ad762d546a"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "61cc99a59932bcb090e38c201fed1f1375ea6d36",
                "node_id": "C_kwDOGU-jZdoAKDYxY2M5OWE1OTkzMmJjYjA5MGUzOGMyMDFmZWQxZjEzNzVlYTZkMzY",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-17T19:31:25Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2024-12-17T19:31:25Z"
                    },
                    "message": "fix(verb): verbiage;\n\n- `White list` -> `allowed domains`.",
                    "tree": {
                        "sha": "e92e57962418b4901af00cb6061d3ae22b66d947",
                        "url": "https://api.github.com/repos/open-data/ckanext-validation/git/trees/e92e57962418b4901af00cb6061d3ae22b66d947"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-validation/git/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                "html_url": "https://github.com/open-data/ckanext-validation/commit/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-validation/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "1aac937a4d08bbee7c3b0cc34e7a85ad762d546a",
                        "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/1aac937a4d08bbee7c3b0cc34e7a85ad762d546a",
                        "html_url": "https://github.com/open-data/ckanext-validation/commit/1aac937a4d08bbee7c3b0cc34e7a85ad762d546a"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 3,
            "behind_by": 0,
            "total_commits": 3,
            "commits": [
                {
                    "sha": "77faee45122ab3343bdc3ba2173146544da9c1d2",
                    "node_id": "C_kwDOGU-jZdoAKDc3ZmFlZTQ1MTIyYWIzMzQzYmRjM2JhMjE3MzE0NjU0NGRhOWMxZDI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:02:10Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:02:10Z"
                        },
                        "message": "removal(dev): ckantoolkit;\n\n- Use `ckan.plugins.toolkit`",
                        "tree": {
                            "sha": "4a2daf930e7859699b31d9109e229d4378159794",
                            "url": "https://api.github.com/repos/open-data/ckanext-validation/git/trees/4a2daf930e7859699b31d9109e229d4378159794"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-validation/git/commits/77faee45122ab3343bdc3ba2173146544da9c1d2",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/77faee45122ab3343bdc3ba2173146544da9c1d2",
                    "html_url": "https://github.com/open-data/ckanext-validation/commit/77faee45122ab3343bdc3ba2173146544da9c1d2",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-validation/commits/77faee45122ab3343bdc3ba2173146544da9c1d2/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "61cc99a59932bcb090e38c201fed1f1375ea6d36",
                            "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                            "html_url": "https://github.com/open-data/ckanext-validation/commit/61cc99a59932bcb090e38c201fed1f1375ea6d36"
                        }
                    ]
                },
                {
                    "sha": "baad1ab99ee58d1945052af84600877e9041e7e0",
                    "node_id": "C_kwDOGU-jZdoAKGJhYWQxYWI5OWVlNThkMTk0NTA1MmFmODQ2MDA4NzdlOTA0MWU3ZTA",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:04:03Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:04:03Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "a91adbc78fd9f07bc207721b68e0d90467c89c64",
                            "url": "https://api.github.com/repos/open-data/ckanext-validation/git/trees/a91adbc78fd9f07bc207721b68e0d90467c89c64"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-validation/git/commits/baad1ab99ee58d1945052af84600877e9041e7e0",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/baad1ab99ee58d1945052af84600877e9041e7e0",
                    "html_url": "https://github.com/open-data/ckanext-validation/commit/baad1ab99ee58d1945052af84600877e9041e7e0",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-validation/commits/baad1ab99ee58d1945052af84600877e9041e7e0/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "77faee45122ab3343bdc3ba2173146544da9c1d2",
                            "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/77faee45122ab3343bdc3ba2173146544da9c1d2",
                            "html_url": "https://github.com/open-data/ckanext-validation/commit/77faee45122ab3343bdc3ba2173146544da9c1d2"
                        }
                    ]
                },
                {
                    "sha": "bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "node_id": "C_kwDOGU-jZdoAKGJjY2M1ZDZiMWJkMDI5YTc5Mjk2MTk3NWJmOWY4Y2M2NGIyYmU5NTU",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2025-01-24T16:03:40Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-24T16:03:40Z"
                        },
                        "message": "Merge pull request #16 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                        "tree": {
                            "sha": "a91adbc78fd9f07bc207721b68e0d90467c89c64",
                            "url": "https://api.github.com/repos/open-data/ckanext-validation/git/trees/a91adbc78fd9f07bc207721b68e0d90467c89c64"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-validation/git/commits/bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnk7ncCRC1aQ7uu5UhlAAAm5oQAHeJa4Bu7cDW7bC4vDA1QdCq\n9ZPbTVHjslOmFzcOKprqaLLpmOv2OolAjc7+Iri4/5GADR3F5Ga+Nwnw+myUNfCv\nU4F+uV//4pOlBz7E63Tsf4VPGkOvzMIJmzZzB7ZO0oDNv/1bzWXyrua/Amuqb2Ca\nP9Xq1ZFbn6GUGZOCs8kBGLsaJCSn30DlcFVgvk7rj9TOJbkTunly/gTaeDZu+q+w\ng4jc82BKCBqPjZTV7PAFLfCk0OV0tvPmaFOA4Ays0Rrsl/g+tIHClG/fbc6Z0d83\nWsxZ/HuUbk7J7zxrvIIej1dpPaLabRT91JK2K2+y+Xsa7m9mReyuDKee4fJvEz0j\n7jkU7ZBojKzRdnu7/KWk9jfJNmxD+3665cI//G8UtmyChIskDhXxfjkiW/GtgJAC\nxSCmB1P3lE7g5Vw+BRZW98NkYjK7zpbEanxI8zdG6aeq2W70rDYoLeQVyvMktmfR\niMZ021a0ggpu/fTDrpTqb9dsRYyH3Gstaf8qTuWieGCD5lj7n2yHihPgCMv6C8C3\nPxY3sp9MgWBSygAxdc4pWF2bp74prDWd32wCdSV6x2JtJORg8M0+Foy4nO/OFjSM\nNvtHjC3gPCFME/yPmo1RxOMzaRRGHoKxUmt8wPYWmGLUCprSVGcVS0v7slHjZCHI\nBvI2dtZdQbKm+uZY6IRN\n=eG9y\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree a91adbc78fd9f07bc207721b68e0d90467c89c64\nparent 61cc99a59932bcb090e38c201fed1f1375ea6d36\nparent baad1ab99ee58d1945052af84600877e9041e7e0\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737734620 -0500\ncommitter GitHub <noreply@github.com> 1737734620 -0500\n\nMerge pull request #16 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                            "verified_at": "2025-01-24T16:08:44Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "html_url": "https://github.com/open-data/ckanext-validation/commit/bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-validation/commits/bccc5d6b1bd029a792961975bf9f8cc64b2be955/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "61cc99a59932bcb090e38c201fed1f1375ea6d36",
                            "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/61cc99a59932bcb090e38c201fed1f1375ea6d36",
                            "html_url": "https://github.com/open-data/ckanext-validation/commit/61cc99a59932bcb090e38c201fed1f1375ea6d36"
                        },
                        {
                            "sha": "baad1ab99ee58d1945052af84600877e9041e7e0",
                            "url": "https://api.github.com/repos/open-data/ckanext-validation/commits/baad1ab99ee58d1945052af84600877e9041e7e0",
                            "html_url": "https://github.com/open-data/ckanext-validation/commit/baad1ab99ee58d1945052af84600877e9041e7e0"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "00d6b668083daabe472103fe395061cc28d973b0",
                    "filename": "changes/16.canada.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/changes%2F16.canada.changes",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/changes%2F16.canada.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/changes%2F16.canada.changes?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -0,0 +1 @@\n+Use `ckan.plugins.toolkit` instead of `ckantoolkit`"
                },
                {
                    "sha": "acd5eb102db2e13c43bb086e91561aeabbf3d31c",
                    "filename": "ckanext/validation/blueprints.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fblueprints.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fblueprints.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fblueprints.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -2,7 +2,7 @@\n \n from flask import Blueprint\n \n-# (canada fork only): ckantoolkit -> toolkit\n+# (canada fork only): ckan.plugins.toolkit\n # (canada fork only): c -> g\n from ckan.plugins.toolkit import g, NotAuthorized, ObjectNotFound, abort, _, render, get_action, h\n "
                },
                {
                    "sha": "c748e1724e54e91068f3a3eb35f3050e4013f86f",
                    "filename": "ckanext/validation/commands.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fcommands.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fcommands.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fcommands.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -5,7 +5,8 @@\n import csv\n \n from ckan.lib.cli import query_yes_no, CkanCommand\n-from ckantoolkit import get_action, config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import get_action, config\n \n from ckanext.validation import settings\n from ckanext.validation.model import create_tables, tables_exist"
                },
                {
                    "sha": "e72c3b3b236eb567c38e85bed9df31d02f93860b",
                    "filename": "ckanext/validation/helpers.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fhelpers.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fhelpers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fhelpers.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -5,7 +5,7 @@\n from six.moves.urllib.parse import urlsplit\n \n from ckan.lib.helpers import url_for_static\n-# (canada fork only): ckantoolkit -> toolkit\n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import url_for, _, config, asbool, literal, h\n # (canada fork only): validation badge\n import ckan.plugins.toolkit as toolkit"
                },
                {
                    "sha": "88e2e6768a12b4b64dfad43e329c88265f22f055",
                    "filename": "ckanext/validation/jobs.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fjobs.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fjobs.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fjobs.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -11,7 +11,7 @@\n \n from ckan.model import Session\n \n-# (canada fork only): ckantoolkit -> toolkit\n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins import toolkit as t\n from ckan.plugins import plugin_loaded\n from ckan.lib.uploader import get_resource_uploader"
                },
                {
                    "sha": "f49943d77a66315de084d3e1f233f1594df298ea",
                    "filename": "ckanext/validation/logic.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Flogic.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Flogic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Flogic.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -18,7 +18,7 @@\n # (canada fork only): capability to use designated queues per resource\n from ckan.lib.jobs import DEFAULT_QUEUE_NAME\n \n-# (canada fork only): ckantoolkit -> toolkit\n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins import toolkit as t\n \n from ckanext.validation.model import Validation"
                },
                {
                    "sha": "5cc82379d429f22a4729549ab4c27ca98b60f8bb",
                    "filename": "ckanext/validation/plugin/__init__.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fplugin%2F__init__.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fplugin%2F__init__.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fplugin%2F__init__.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -7,7 +7,7 @@\n import ckan.plugins as p\n # (canada fork only): i18n support\n from ckan.lib.plugins import DefaultTranslation\n-# (canada fork only): ckantoolkit -> toolkit\n+# (canada fork only): ckan.plugins.toolkit\n import ckan.plugins.toolkit as t\n \n from ckanext.validation import settings"
                },
                {
                    "sha": "b66c789b9dfb47db02e8ff3437ef7d1acf40cce9",
                    "filename": "ckanext/validation/settings.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fsettings.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fsettings.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fsettings.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -1,6 +1,7 @@\n # encoding: utf-8\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n # TODO: configurable\n DEFAULT_SUPPORTED_FORMATS = [u'csv', u'xls', u'xlsx', 'CSV', 'XLS', 'XLSX']  # (canada fork only): uppercase for schema choices"
                },
                {
                    "sha": "6e00ea7b6ed5a62fabe5b915ab747ed24515e739",
                    "filename": "ckanext/validation/tests/fixtures.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ffixtures.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ffixtures.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Ftests%2Ffixtures.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -3,7 +3,8 @@\n from ckan.lib import uploader\n from ckanext.validation.model import create_tables, tables_exist\n \n-import ckantoolkit as t\n+# (canada fork only): ckan.plugins.toolkit\n+import ckan.plugins.toolkit as t\n \n \n @pytest.fixture"
                },
                {
                    "sha": "b7d26e2f3e17c80ed05b688efa49f3c9cc81716c",
                    "filename": "ckanext/validation/tests/test_form.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 3,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_form.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_form.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Ftests%2Ftest_form.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -5,9 +5,10 @@\n \n import pytest\n \n-import ckantoolkit as t\n-from ckantoolkit.tests.factories import Sysadmin, Dataset\n-from ckantoolkit.tests.helpers import (\n+# (canada fork only): ckan.plugins.toolkit\n+import ckan.plugins.toolkit as t\n+from ckan.tests.factories import Sysadmin, Dataset\n+from ckan.tests.helpers import (\n     call_action, _get_test_app\n )\n "
                },
                {
                    "sha": "46c1f3ff85998caf11b73a13f8c38815318de109",
                    "filename": "ckanext/validation/tests/test_helpers.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_helpers.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_helpers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Ftests%2Ftest_helpers.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -3,7 +3,8 @@\n from ckan.tests.helpers import reset_db\n from ckan.tests import factories\n \n-from ckantoolkit import config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config\n \n from ckanext.validation.helpers import (\n     get_validation_badge,"
                },
                {
                    "sha": "6ab802e3b1afb482463dc9fa8a77e3ad0d9e9a95",
                    "filename": "ckanext/validation/tests/test_interfaces.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_interfaces.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_interfaces.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Ftests%2Ftest_interfaces.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -4,7 +4,8 @@\n from ckan import plugins as p\n from ckan.tests import helpers, factories\n \n-import ckantoolkit as t\n+# (canada fork only): ckan.plugins.toolkit\n+import ckan.plugins.toolkit as t\n \n from ckanext.validation.interfaces import IDataValidation\n from ckanext.validation.tests.helpers import VALID_REPORT"
                },
                {
                    "sha": "1d90da4662c6961cead93c26b9f8baf6e209d76d",
                    "filename": "ckanext/validation/tests/test_jobs.py",
                    "status": "modified",
                    "additions": 5,
                    "deletions": 4,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_jobs.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_jobs.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Ftests%2Ftest_jobs.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -3,7 +3,8 @@\n import json\n import io\n \n-import ckantoolkit\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins import toolkit\n \n from ckan.lib.uploader import ResourceUpload\n from ckan.tests.helpers import call_action\n@@ -36,7 +37,7 @@ class TestValidationJob(object):\n     @pytest.mark.ckan_config(\"ckanext.validation.run_on_create_async\", False)\n     @mock.patch(\"ckanext.validation.jobs.validate\", return_value=VALID_REPORT)\n     @mock.patch.object(Session, \"commit\")\n-    @mock.patch.object(ckantoolkit, \"get_action\")\n+    @mock.patch.object(toolkit, \"get_action\")  # (canada fork only): ckan.plugins.toolkit\n     def test_job_run_no_schema(self, mock_get_action, mock_commit, mock_validate):\n \n         org = factories.Organization()\n@@ -57,7 +58,7 @@ def test_job_run_no_schema(self, mock_get_action, mock_commit, mock_validate):\n \n     @mock.patch(\"ckanext.validation.jobs.validate\", return_value=VALID_REPORT)\n     @mock.patch.object(Session, \"commit\")\n-    @mock.patch.object(ckantoolkit, \"get_action\")\n+    @mock.patch.object(toolkit, \"get_action\")  # (canada fork only): ckan.plugins.toolkit\n     def test_job_run_schema(self, mock_get_action, mock_commit, mock_validate):\n \n         org = factories.Organization()\n@@ -88,7 +89,7 @@ def test_job_run_schema(self, mock_get_action, mock_commit, mock_validate):\n         uploader, \"get_resource_uploader\", return_value=mock_get_resource_uploader({})\n     )\n     @mock.patch.object(Session, \"commit\")\n-    @mock.patch.object(ckantoolkit, \"get_action\")\n+    @mock.patch.object(toolkit, \"get_action\")  # (canada fork only): ckan.plugins.toolkit\n     def test_job_run_uploaded_file(\n         self, mock_get_action, mock_commit, mock_uploader, mock_validate\n     ):"
                },
                {
                    "sha": "541a20e064ceabf48e3cab7dc015849c020c7a99",
                    "filename": "ckanext/validation/tests/test_logic.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_logic.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_logic.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Ftests%2Ftest_logic.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -9,7 +9,8 @@\n from ckan.tests.helpers import call_action, call_auth\n from ckan.tests import factories\n \n-import ckantoolkit as t\n+# (canada fork only): ckan.plugins.toolkit\n+import ckan.plugins.toolkit as t\n \n from ckanext.validation.model import Validation\n from ckanext.validation.tests.helpers import ("
                },
                {
                    "sha": "c06eecc29b74c420d4851665d0c33bddb65e1cd9",
                    "filename": "ckanext/validation/tests/test_validators.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_validators.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Ftests%2Ftest_validators.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Ftests%2Ftest_validators.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -1,7 +1,8 @@\n import json\n import pytest\n \n-from ckantoolkit import Invalid\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import Invalid\n \n from ckanext.validation.validators import (\n     resource_schema_validator,"
                },
                {
                    "sha": "9535dca56d20b05da39f7c1413d5214b568639f3",
                    "filename": "ckanext/validation/utils.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Futils.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Futils.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Futils.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -2,7 +2,8 @@\n import logging\n \n from ckan.lib.uploader import ResourceUpload\n-from ckantoolkit import config, asbool\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import config, asbool\n \n \n log = logging.getLogger(__name__)"
                },
                {
                    "sha": "d94e1bb516519a09698126472edcc9d59762cb96",
                    "filename": "ckanext/validation/validators.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fvalidators.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fvalidators.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fvalidators.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -3,7 +3,8 @@\n \n import tableschema\n \n-from ckantoolkit import Invalid, config\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import Invalid, config\n \n \n # Input validators"
                },
                {
                    "sha": "8a3fbaca7dd7e9acf390f6c05d3876b5995b98da",
                    "filename": "ckanext/validation/views.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fviews.py",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/ckanext%2Fvalidation%2Fviews.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/ckanext%2Fvalidation%2Fviews.py?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -2,7 +2,8 @@\n \n from flask import Blueprint\n \n-from ckantoolkit import (\n+# (canada fork only): ckan.plugins.toolkit\n+from ckan.plugins.toolkit import (\n     c, NotAuthorized, ObjectNotFound,\n     abort, _, render, get_action)\n "
                },
                {
                    "sha": "ec48e28a6eb67066d9aaf0f44d60a7f177dc6f24",
                    "filename": "requirements.txt",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/ckanext-validation/blob/bccc5d6b1bd029a792961975bf9f8cc64b2be955/requirements.txt",
                    "raw_url": "https://github.com/open-data/ckanext-validation/raw/bccc5d6b1bd029a792961975bf9f8cc64b2be955/requirements.txt",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-validation/contents/requirements.txt?ref=bccc5d6b1bd029a792961975bf9f8cc64b2be955",
                    "patch": "@@ -1,4 +1,5 @@\n-ckantoolkit>=0.0.3\n+# (canada fork only): ckan.plugins.toolkit\n+# ckantoolkit>=0.0.3\n # (canada fork only): we use a custom frictionless-py fork\n #frictionless==5.0.0b9\n markupsafe==2.0.1"
                }
            ]
        },
        "ckanext-xloader": {
            "url": "https://api.github.com/repos/open-data/ckanext-xloader/compare/e30258719195316ee631c371ec98ad2be6c82ab8...01db872887200de6dfcee07dee92726a4dc12d9c",
            "html_url": "https://github.com/open-data/ckanext-xloader/compare/e30258719195316ee631c371ec98ad2be6c82ab8...01db872887200de6dfcee07dee92726a4dc12d9c",
            "permalink_url": "https://github.com/open-data/ckanext-xloader/compare/open-data:e302587...open-data:01db872",
            "diff_url": "https://github.com/open-data/ckanext-xloader/compare/e30258719195316ee631c371ec98ad2be6c82ab8...01db872887200de6dfcee07dee92726a4dc12d9c.diff",
            "patch_url": "https://github.com/open-data/ckanext-xloader/compare/e30258719195316ee631c371ec98ad2be6c82ab8...01db872887200de6dfcee07dee92726a4dc12d9c.patch",
            "base_commit": {
                "sha": "e30258719195316ee631c371ec98ad2be6c82ab8",
                "node_id": "C_kwDOEKXp19oAKGUzMDI1ODcxOTE5NTMxNmVlNjMxYzM3MWVjOThhZDJiZTZjODJhYjg",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:35:29Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:35:29Z"
                    },
                    "message": "feat(refactor): config name change;\n\n- `max_fts_rows` -> `max_ds_fts_rows`",
                    "tree": {
                        "sha": "85fc282f98e336953d65dce6d757a7eef87db664",
                        "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/trees/85fc282f98e336953d65dce6d757a7eef87db664"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/commits/e30258719195316ee631c371ec98ad2be6c82ab8",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/e30258719195316ee631c371ec98ad2be6c82ab8",
                "html_url": "https://github.com/open-data/ckanext-xloader/commit/e30258719195316ee631c371ec98ad2be6c82ab8",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/e30258719195316ee631c371ec98ad2be6c82ab8/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "090b9417fac5d929732905e5a10cf237139036e0",
                        "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/090b9417fac5d929732905e5a10cf237139036e0",
                        "html_url": "https://github.com/open-data/ckanext-xloader/commit/090b9417fac5d929732905e5a10cf237139036e0"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "e30258719195316ee631c371ec98ad2be6c82ab8",
                "node_id": "C_kwDOEKXp19oAKGUzMDI1ODcxOTE5NTMxNmVlNjMxYzM3MWVjOThhZDJiZTZjODJhYjg",
                "commit": {
                    "author": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:35:29Z"
                    },
                    "committer": {
                        "name": "Jesse Vickery",
                        "email": "jesse.vickery@tbs-sct.gc.ca",
                        "date": "2025-01-21T15:35:29Z"
                    },
                    "message": "feat(refactor): config name change;\n\n- `max_fts_rows` -> `max_ds_fts_rows`",
                    "tree": {
                        "sha": "85fc282f98e336953d65dce6d757a7eef87db664",
                        "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/trees/85fc282f98e336953d65dce6d757a7eef87db664"
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/commits/e30258719195316ee631c371ec98ad2be6c82ab8",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/e30258719195316ee631c371ec98ad2be6c82ab8",
                "html_url": "https://github.com/open-data/ckanext-xloader/commit/e30258719195316ee631c371ec98ad2be6c82ab8",
                "comments_url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/e30258719195316ee631c371ec98ad2be6c82ab8/comments",
                "author": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "JVickery-TBS",
                    "id": 97247789,
                    "node_id": "U_kgDOBcviLQ",
                    "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/JVickery-TBS",
                    "html_url": "https://github.com/JVickery-TBS",
                    "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                    "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                    "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                    "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                    "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                    "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "090b9417fac5d929732905e5a10cf237139036e0",
                        "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/090b9417fac5d929732905e5a10cf237139036e0",
                        "html_url": "https://github.com/open-data/ckanext-xloader/commit/090b9417fac5d929732905e5a10cf237139036e0"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 3,
            "behind_by": 0,
            "total_commits": 3,
            "commits": [
                {
                    "sha": "4d7eafeb0add4776f7aa695eddb4cafc11246ee4",
                    "node_id": "C_kwDOEKXp19oAKDRkN2VhZmViMGFkZDQ3NzZmN2FhNjk1ZWRkYjRjYWZjMTEyNDZlZTQ",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:15:32Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:15:32Z"
                        },
                        "message": "removal(dev): ckantoolkit;\n\n- Use `ckan.plugins.toolkit`",
                        "tree": {
                            "sha": "be21482e33fb2892453ca86c7f3a80886e3c2b53",
                            "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/trees/be21482e33fb2892453ca86c7f3a80886e3c2b53"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/commits/4d7eafeb0add4776f7aa695eddb4cafc11246ee4",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/4d7eafeb0add4776f7aa695eddb4cafc11246ee4",
                    "html_url": "https://github.com/open-data/ckanext-xloader/commit/4d7eafeb0add4776f7aa695eddb4cafc11246ee4",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/4d7eafeb0add4776f7aa695eddb4cafc11246ee4/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "e30258719195316ee631c371ec98ad2be6c82ab8",
                            "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/e30258719195316ee631c371ec98ad2be6c82ab8",
                            "html_url": "https://github.com/open-data/ckanext-xloader/commit/e30258719195316ee631c371ec98ad2be6c82ab8"
                        }
                    ]
                },
                {
                    "sha": "fdbb0cbd3ef81176dcf130721026780f2552d772",
                    "node_id": "C_kwDOEKXp19oAKGZkYmIwY2JkM2VmODExNzZkY2YxMzA3MjEwMjY3ODBmMjU1MmQ3NzI",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:17:03Z"
                        },
                        "committer": {
                            "name": "Jesse Vickery",
                            "email": "jesse.vickery@tbs-sct.gc.ca",
                            "date": "2025-01-21T18:17:03Z"
                        },
                        "message": "feat(misc): changelog;\n\n- Added change log file.",
                        "tree": {
                            "sha": "0e66a19260f57bf11a7e09b4c759a7adf938c043",
                            "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/trees/0e66a19260f57bf11a7e09b4c759a7adf938c043"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/commits/fdbb0cbd3ef81176dcf130721026780f2552d772",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/fdbb0cbd3ef81176dcf130721026780f2552d772",
                    "html_url": "https://github.com/open-data/ckanext-xloader/commit/fdbb0cbd3ef81176dcf130721026780f2552d772",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/fdbb0cbd3ef81176dcf130721026780f2552d772/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "4d7eafeb0add4776f7aa695eddb4cafc11246ee4",
                            "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/4d7eafeb0add4776f7aa695eddb4cafc11246ee4",
                            "html_url": "https://github.com/open-data/ckanext-xloader/commit/4d7eafeb0add4776f7aa695eddb4cafc11246ee4"
                        }
                    ]
                },
                {
                    "sha": "01db872887200de6dfcee07dee92726a4dc12d9c",
                    "node_id": "C_kwDOEKXp19oAKDAxZGI4NzI4ODcyMDBkZTZkZmNlZTA3ZGVlOTI3MjZhNGRjMTJkOWM",
                    "commit": {
                        "author": {
                            "name": "Jesse Vickery",
                            "email": "97247789+JVickery-TBS@users.noreply.github.com",
                            "date": "2025-01-24T16:04:14Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-24T16:04:14Z"
                        },
                        "message": "Merge pull request #33 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                        "tree": {
                            "sha": "0e66a19260f57bf11a7e09b4c759a7adf938c043",
                            "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/trees/0e66a19260f57bf11a7e09b4c759a7adf938c043"
                        },
                        "url": "https://api.github.com/repos/open-data/ckanext-xloader/git/commits/01db872887200de6dfcee07dee92726a4dc12d9c",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnk7n+CRC1aQ7uu5UhlAAAXAEQAKIAY/c3P2sHtCFXQshx37Fu\n/RCXPjyLIWCsAGnV761mgbNNFw6rEdDSmRl7Zje5sD/geFvpggGz37v94eRzecrN\nNcVA1oX2MBIzoMBvAHtnflmxoBCq137zPhaEBq6NXtbiGWoByr5BGnjU1BxnUBwY\nVnUDl+at/knPFoIh2nzeP877u5zuV7UP6Juu+q0Qf4Te1G7ynKTT0/EmpcphkTCV\nC6XLous0LFAhuNeiMxdV5Rb5dMBZp+lpC8yyKWhEkwDLtXTorlPhOzpTm/Xd28Jk\nF76VKXOYkSapdu3AkltS/0UZB9g+OKoLfSjv1sAb+DQL726p1Ms+ZASu8W22Hywp\nrGE8yn64kHUU461+uTYZBUbUmHMZzmvZIUhaihfkApdWLB3AhlnA084DtphTOmzy\nU5V+8VBUx/jyCFOWqgzvL2fJzDOoeZBCnQ6xXzAiF5Fi2fnakih7M61T6JDUGuSR\nF6UsTobxb/r7t+fce7ArM9uVF8+DTUCMGZ0qeFNAHEit5LZXkLzDHGLBz0OCwF9A\nTJa9654iFyHDiFMHqAa6843sGvlqziZRipLImNGFfjH1yQz/SCbgaIEOi5vlF0eY\nTzAa0ra2fICJABBOkldRN2Fl2+EkgHvwY7YojTJB8dpReZMFv5Qaigb78+Na4kLY\ns8S623UxJ5n2Nl9fmS5k\n=y+T0\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree 0e66a19260f57bf11a7e09b4c759a7adf938c043\nparent e30258719195316ee631c371ec98ad2be6c82ab8\nparent fdbb0cbd3ef81176dcf130721026780f2552d772\nauthor Jesse Vickery <97247789+JVickery-TBS@users.noreply.github.com> 1737734654 -0500\ncommitter GitHub <noreply@github.com> 1737734654 -0500\n\nMerge pull request #33 from open-data/removal/ckantoolkit\n\nUse `ckan.plugins.toolkit` Over `ckantoolkit`",
                            "verified_at": "2025-01-24T16:09:17Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/01db872887200de6dfcee07dee92726a4dc12d9c",
                    "html_url": "https://github.com/open-data/ckanext-xloader/commit/01db872887200de6dfcee07dee92726a4dc12d9c",
                    "comments_url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/01db872887200de6dfcee07dee92726a4dc12d9c/comments",
                    "author": {
                        "login": "JVickery-TBS",
                        "id": 97247789,
                        "node_id": "U_kgDOBcviLQ",
                        "avatar_url": "https://avatars.githubusercontent.com/u/97247789?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/JVickery-TBS",
                        "html_url": "https://github.com/JVickery-TBS",
                        "followers_url": "https://api.github.com/users/JVickery-TBS/followers",
                        "following_url": "https://api.github.com/users/JVickery-TBS/following{/other_user}",
                        "gists_url": "https://api.github.com/users/JVickery-TBS/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/JVickery-TBS/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/JVickery-TBS/subscriptions",
                        "organizations_url": "https://api.github.com/users/JVickery-TBS/orgs",
                        "repos_url": "https://api.github.com/users/JVickery-TBS/repos",
                        "events_url": "https://api.github.com/users/JVickery-TBS/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/JVickery-TBS/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "e30258719195316ee631c371ec98ad2be6c82ab8",
                            "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/e30258719195316ee631c371ec98ad2be6c82ab8",
                            "html_url": "https://github.com/open-data/ckanext-xloader/commit/e30258719195316ee631c371ec98ad2be6c82ab8"
                        },
                        {
                            "sha": "fdbb0cbd3ef81176dcf130721026780f2552d772",
                            "url": "https://api.github.com/repos/open-data/ckanext-xloader/commits/fdbb0cbd3ef81176dcf130721026780f2552d772",
                            "html_url": "https://github.com/open-data/ckanext-xloader/commit/fdbb0cbd3ef81176dcf130721026780f2552d772"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "00d6b668083daabe472103fe395061cc28d973b0",
                    "filename": "changes/33.canada.changes",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/changes%2F33.canada.changes",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/changes%2F33.canada.changes",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/changes%2F33.canada.changes?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -0,0 +1 @@\n+Use `ckan.plugins.toolkit` instead of `ckantoolkit`"
                },
                {
                    "sha": "b876579ae5049780703682102f0c400e053af0cc",
                    "filename": "ckanext/xloader/cli.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fcli.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fcli.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Fcli.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -5,6 +5,7 @@\n from ckanext.xloader.command import XloaderCmd\n # (canada fork only): add db init\n from ckanext.xloader.db import init\n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import config\n \n # Click commands for CKAN 2.9 and above"
                },
                {
                    "sha": "36551b37fa9eb2d159df558551fd139cc8c7d6c3",
                    "filename": "ckanext/xloader/command.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fcommand.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fcommand.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Fcommand.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -2,6 +2,7 @@\n \n import sys\n import logging\n+# (canada fork only): ckan.plugins.toolkit\n import ckan.plugins.toolkit as tk\n \n from ckanext.xloader.jobs import xloader_data_into_datastore_"
                },
                {
                    "sha": "94d8892d85652b914a0d6103215ed077e07ba1db",
                    "filename": "ckanext/xloader/helpers.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fhelpers.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fhelpers.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Fhelpers.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -1,3 +1,4 @@\n+# (canada fork only): ckan.plugins.toolkit\n import ckan.plugins.toolkit as toolkit\n from ckanext.xloader.utils import XLoaderFormats\n "
                },
                {
                    "sha": "d6cd0c352108f2027c992002bd8f8035a6e4287c",
                    "filename": "ckanext/xloader/jobs.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fjobs.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fjobs.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Fjobs.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -19,6 +19,7 @@\n import sqlalchemy as sa\n \n import ckan.lib.jobs as rq_jobs\n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import get_action, asbool, enqueue_job, ObjectNotFound, config, asbool\n from ckan.lib.uploader import get_resource_uploader\n "
                },
                {
                    "sha": "e07dcc96ea31f3f414004a05a205af93f905f138",
                    "filename": "ckanext/xloader/loader.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Floader.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Floader.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Floader.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -21,6 +21,7 @@\n from .parser import CSV_SAMPLE_LINES, TypeConverter, CanadaCSVParser\n from .utils import datastore_resource_exists, headers_guess, type_guess\n \n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import config\n \n import ckanext.datastore.backend.postgres as datastore_db"
                },
                {
                    "sha": "93766e9453bf9fed3176bbab710db473c98ce621",
                    "filename": "ckanext/xloader/parser.py",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fparser.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fparser.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Fparser.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -4,9 +4,11 @@\n import re\n import six\n \n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import asbool\n from dateutil.parser import isoparser, parser, ParserError\n \n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import config\n \n from tabulator.parsers.csv import CSVParser"
                },
                {
                    "sha": "b88237387724404d2ab8ce22498e2b042b4b69cc",
                    "filename": "ckanext/xloader/tests/test_action.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Ftests%2Ftest_action.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Ftests%2Ftest_action.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Ftests%2Ftest_action.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -4,6 +4,7 @@\n except ImportError:\n     import mock\n \n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import NotAuthorized\n from ckan.tests import helpers, factories\n "
                },
                {
                    "sha": "b231418e23474239803b0397b628b573c8089c13",
                    "filename": "ckanext/xloader/utils.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Futils.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Futils.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Futils.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -11,6 +11,7 @@\n from decimal import Decimal\n \n import ckan.plugins as p\n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import config\n \n from .job_exceptions import JobError"
                },
                {
                    "sha": "6216ba74f59117c03b87e52b817d838becd3d799",
                    "filename": "ckanext/xloader/views.py",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fviews.py",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/ckanext%2Fxloader%2Fviews.py",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/ckanext%2Fxloader%2Fviews.py?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -1,5 +1,6 @@\n from flask import Blueprint\n \n+# (canada fork only): ckan.plugins.toolkit\n from ckan.plugins.toolkit import _, h, g, render, request, abort, NotAuthorized, get_action, ObjectNotFound\n \n import ckanext.xloader.utils as utils"
                },
                {
                    "sha": "f9bb15f8d84aafb2b50ab0ae3499b2d7f1144f08",
                    "filename": "requirements.txt",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/ckanext-xloader/blob/01db872887200de6dfcee07dee92726a4dc12d9c/requirements.txt",
                    "raw_url": "https://github.com/open-data/ckanext-xloader/raw/01db872887200de6dfcee07dee92726a4dc12d9c/requirements.txt",
                    "contents_url": "https://api.github.com/repos/open-data/ckanext-xloader/contents/requirements.txt?ref=01db872887200de6dfcee07dee92726a4dc12d9c",
                    "patch": "@@ -1,7 +1,8 @@\n-ckantoolkit\n+# (canada fork only): ckan.plugins.toolkit\n+# ckantoolkit\n requests[security]>=2.11.1\n six>=1.12.0\n tabulator==1.53.5\n Unidecode==1.0.22\n python-dateutil>=2.8.2\n-chardet==5.2.0\n\\ No newline at end of file\n+chardet==5.2.0"
                }
            ]
        }
    },
    "django": {
        "oc_search": {
            "url": "https://api.github.com/repos/open-data/oc_search/compare/bca348a8159aed4df65c3c4764ab23ab61c9e75a...a8a9845aaa775a388eef1f1863643e27a7f01e47",
            "html_url": "https://github.com/open-data/oc_search/compare/bca348a8159aed4df65c3c4764ab23ab61c9e75a...a8a9845aaa775a388eef1f1863643e27a7f01e47",
            "permalink_url": "https://github.com/open-data/oc_search/compare/open-data:bca348a...open-data:a8a9845",
            "diff_url": "https://github.com/open-data/oc_search/compare/bca348a8159aed4df65c3c4764ab23ab61c9e75a...a8a9845aaa775a388eef1f1863643e27a7f01e47.diff",
            "patch_url": "https://github.com/open-data/oc_search/compare/bca348a8159aed4df65c3c4764ab23ab61c9e75a...a8a9845aaa775a388eef1f1863643e27a7f01e47.patch",
            "base_commit": {
                "sha": "bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                "node_id": "C_kwDOD-wqodoAKGJjYTM0OGE4MTU5YWVkNGRmNjVjM2M0NzY0YWIyM2FiNjFjOWU3NWE",
                "commit": {
                    "author": {
                        "name": "Ross Thompson",
                        "email": "thriuin@users.noreply.github.com",
                        "date": "2025-01-16T17:20:16Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2025-01-16T17:20:16Z"
                    },
                    "message": "Update process_search_logs.py\n\nRemove unneeded library",
                    "tree": {
                        "sha": "7ceaf1084db837e5597b97343a6e065b6baf7c7a",
                        "url": "https://api.github.com/repos/open-data/oc_search/git/trees/7ceaf1084db837e5597b97343a6e065b6baf7c7a"
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/git/commits/bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJniT/RCRC1aQ7uu5UhlAAAGxIQAKw3mRS9ev/URh5hNyYj2vWw\nkAobmxCiXdd6WhdfivVESERS7cKyLEezed+XVDEGkYK7VUlZ6uajN04LPVlk5vYX\ndURAW3LAG4+Iguf9C31M4yTqzYSlakXHlOUeounUinrhyFR0qxSwwEdckgbQYUHT\nwoMs1OwnAQf0IytZdZEHpONR+bNLg17mW8oamk1fEEqdyNCqmZb0a8agg10hcUWL\n9fUd+590gh1s4sjr4z4j6elDIPa0UEGdxameHa6VqeoQi6QsDfDVYGF/wwSusXPq\nc+j3StCX7Tjgqs+Pf559bKB01w1RJm/VzGVrODdRiRSpT5VNIxxTwwnAeDPNKwpX\n1JCIhm17/iYaWLuiy+P645vQBv7oT0UrCzdUM47jSYf5EU125d7gb4/DzP1CCVtk\nHUGSluS/G5nTl1v0EjOtHBFVVNtUnBbK1R2O85iuw5bOxDIEBUN5JX+zyeiYfWQx\nEGS4QJ95fdlTIXGZ2tGS4R1i7M4gocqdh7A7XG7GeutE5V5tWJp6QQRokiWfYIAI\n2cf4ojnlds3Yzmn37anK2xBjYhwWkfi1/Hq/k9O0y8ZSlkjLCq6XfaBpxM58nFUo\niQ5BH8GGr4fSNSUCbkqwAczjbfx2Mk1AERyC9muC/juqYHkYJ9GOoEMnJphytN30\nkvsXI4fUsxYCyyEIW2dc\n=IsvI\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 7ceaf1084db837e5597b97343a6e065b6baf7c7a\nparent 711c343b347ae2c1785edaa82b9f99ca2424a85b\nauthor Ross Thompson <thriuin@users.noreply.github.com> 1737048016 -0500\ncommitter GitHub <noreply@github.com> 1737048016 -0500\n\nUpdate process_search_logs.py\n\nRemove unneeded library",
                        "verified_at": "2025-01-16T17:25:20Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/oc_search/commits/bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                "html_url": "https://github.com/open-data/oc_search/commit/bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/bca348a8159aed4df65c3c4764ab23ab61c9e75a/comments",
                "author": {
                    "login": "thriuin",
                    "id": 1249972,
                    "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thriuin",
                    "html_url": "https://github.com/thriuin",
                    "followers_url": "https://api.github.com/users/thriuin/followers",
                    "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                    "organizations_url": "https://api.github.com/users/thriuin/orgs",
                    "repos_url": "https://api.github.com/users/thriuin/repos",
                    "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thriuin/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "711c343b347ae2c1785edaa82b9f99ca2424a85b",
                        "url": "https://api.github.com/repos/open-data/oc_search/commits/711c343b347ae2c1785edaa82b9f99ca2424a85b",
                        "html_url": "https://github.com/open-data/oc_search/commit/711c343b347ae2c1785edaa82b9f99ca2424a85b"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                "node_id": "C_kwDOD-wqodoAKGJjYTM0OGE4MTU5YWVkNGRmNjVjM2M0NzY0YWIyM2FiNjFjOWU3NWE",
                "commit": {
                    "author": {
                        "name": "Ross Thompson",
                        "email": "thriuin@users.noreply.github.com",
                        "date": "2025-01-16T17:20:16Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2025-01-16T17:20:16Z"
                    },
                    "message": "Update process_search_logs.py\n\nRemove unneeded library",
                    "tree": {
                        "sha": "7ceaf1084db837e5597b97343a6e065b6baf7c7a",
                        "url": "https://api.github.com/repos/open-data/oc_search/git/trees/7ceaf1084db837e5597b97343a6e065b6baf7c7a"
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/git/commits/bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJniT/RCRC1aQ7uu5UhlAAAGxIQAKw3mRS9ev/URh5hNyYj2vWw\nkAobmxCiXdd6WhdfivVESERS7cKyLEezed+XVDEGkYK7VUlZ6uajN04LPVlk5vYX\ndURAW3LAG4+Iguf9C31M4yTqzYSlakXHlOUeounUinrhyFR0qxSwwEdckgbQYUHT\nwoMs1OwnAQf0IytZdZEHpONR+bNLg17mW8oamk1fEEqdyNCqmZb0a8agg10hcUWL\n9fUd+590gh1s4sjr4z4j6elDIPa0UEGdxameHa6VqeoQi6QsDfDVYGF/wwSusXPq\nc+j3StCX7Tjgqs+Pf559bKB01w1RJm/VzGVrODdRiRSpT5VNIxxTwwnAeDPNKwpX\n1JCIhm17/iYaWLuiy+P645vQBv7oT0UrCzdUM47jSYf5EU125d7gb4/DzP1CCVtk\nHUGSluS/G5nTl1v0EjOtHBFVVNtUnBbK1R2O85iuw5bOxDIEBUN5JX+zyeiYfWQx\nEGS4QJ95fdlTIXGZ2tGS4R1i7M4gocqdh7A7XG7GeutE5V5tWJp6QQRokiWfYIAI\n2cf4ojnlds3Yzmn37anK2xBjYhwWkfi1/Hq/k9O0y8ZSlkjLCq6XfaBpxM58nFUo\niQ5BH8GGr4fSNSUCbkqwAczjbfx2Mk1AERyC9muC/juqYHkYJ9GOoEMnJphytN30\nkvsXI4fUsxYCyyEIW2dc\n=IsvI\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree 7ceaf1084db837e5597b97343a6e065b6baf7c7a\nparent 711c343b347ae2c1785edaa82b9f99ca2424a85b\nauthor Ross Thompson <thriuin@users.noreply.github.com> 1737048016 -0500\ncommitter GitHub <noreply@github.com> 1737048016 -0500\n\nUpdate process_search_logs.py\n\nRemove unneeded library",
                        "verified_at": "2025-01-16T17:25:20Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/oc_search/commits/bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                "html_url": "https://github.com/open-data/oc_search/commit/bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/bca348a8159aed4df65c3c4764ab23ab61c9e75a/comments",
                "author": {
                    "login": "thriuin",
                    "id": 1249972,
                    "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/thriuin",
                    "html_url": "https://github.com/thriuin",
                    "followers_url": "https://api.github.com/users/thriuin/followers",
                    "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                    "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                    "organizations_url": "https://api.github.com/users/thriuin/orgs",
                    "repos_url": "https://api.github.com/users/thriuin/repos",
                    "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/thriuin/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "711c343b347ae2c1785edaa82b9f99ca2424a85b",
                        "url": "https://api.github.com/repos/open-data/oc_search/commits/711c343b347ae2c1785edaa82b9f99ca2424a85b",
                        "html_url": "https://github.com/open-data/oc_search/commit/711c343b347ae2c1785edaa82b9f99ca2424a85b"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 2,
            "behind_by": 0,
            "total_commits": 2,
            "commits": [
                {
                    "sha": "1c465f7870261985b6eb9cb3cb45ab1b409677d4",
                    "node_id": "C_kwDOD-wqodoAKDFjNDY1Zjc4NzAyNjE5ODViNmViOWNiM2NiNDVhYjFiNDA5Njc3ZDQ",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2025-01-23T19:49:46Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2025-01-23T19:49:46Z"
                        },
                        "message": "OPEN-3828: Updating the Python packages to newer versions, compatible with Python 3.12",
                        "tree": {
                            "sha": "d34c39763853c0aeda4c146b0b640f4e6400e3f3",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/d34c39763853c0aeda4c146b0b640f4e6400e3f3"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/1c465f7870261985b6eb9cb3cb45ab1b409677d4",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/1c465f7870261985b6eb9cb3cb45ab1b409677d4",
                    "html_url": "https://github.com/open-data/oc_search/commit/1c465f7870261985b6eb9cb3cb45ab1b409677d4",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/1c465f7870261985b6eb9cb3cb45ab1b409677d4/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "38a2f168addf04579de40a945ed3b3d79d3332aa",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/38a2f168addf04579de40a945ed3b3d79d3332aa",
                            "html_url": "https://github.com/open-data/oc_search/commit/38a2f168addf04579de40a945ed3b3d79d3332aa"
                        }
                    ]
                },
                {
                    "sha": "a8a9845aaa775a388eef1f1863643e27a7f01e47",
                    "node_id": "C_kwDOD-wqodoAKGE4YTk4NDVhYWE3NzVhMzg4ZWVmMWYxODYzNjQzZTI3YTdmMDFlNDc",
                    "commit": {
                        "author": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2025-01-23T20:02:11Z"
                        },
                        "committer": {
                            "name": "thriuin",
                            "email": "ross.thompson@tbs-sct.gc.ca",
                            "date": "2025-01-23T20:02:11Z"
                        },
                        "message": "Merge branch 'master' of https://github.com/open-data/oc_search",
                        "tree": {
                            "sha": "130c2bacfe2fe63817db7e902b7ba8c6738d6462",
                            "url": "https://api.github.com/repos/open-data/oc_search/git/trees/130c2bacfe2fe63817db7e902b7ba8c6738d6462"
                        },
                        "url": "https://api.github.com/repos/open-data/oc_search/git/commits/a8a9845aaa775a388eef1f1863643e27a7f01e47",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/oc_search/commits/a8a9845aaa775a388eef1f1863643e27a7f01e47",
                    "html_url": "https://github.com/open-data/oc_search/commit/a8a9845aaa775a388eef1f1863643e27a7f01e47",
                    "comments_url": "https://api.github.com/repos/open-data/oc_search/commits/a8a9845aaa775a388eef1f1863643e27a7f01e47/comments",
                    "author": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "thriuin",
                        "id": 1249972,
                        "node_id": "MDQ6VXNlcjEyNDk5NzI=",
                        "avatar_url": "https://avatars.githubusercontent.com/u/1249972?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/thriuin",
                        "html_url": "https://github.com/thriuin",
                        "followers_url": "https://api.github.com/users/thriuin/followers",
                        "following_url": "https://api.github.com/users/thriuin/following{/other_user}",
                        "gists_url": "https://api.github.com/users/thriuin/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/thriuin/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/thriuin/subscriptions",
                        "organizations_url": "https://api.github.com/users/thriuin/orgs",
                        "repos_url": "https://api.github.com/users/thriuin/repos",
                        "events_url": "https://api.github.com/users/thriuin/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/thriuin/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "1c465f7870261985b6eb9cb3cb45ab1b409677d4",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/1c465f7870261985b6eb9cb3cb45ab1b409677d4",
                            "html_url": "https://github.com/open-data/oc_search/commit/1c465f7870261985b6eb9cb3cb45ab1b409677d4"
                        },
                        {
                            "sha": "bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                            "url": "https://api.github.com/repos/open-data/oc_search/commits/bca348a8159aed4df65c3c4764ab23ab61c9e75a",
                            "html_url": "https://github.com/open-data/oc_search/commit/bca348a8159aed4df65c3c4764ab23ab61c9e75a"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "564baa4ecaf20b6a02eb5d9048716220bc6a4f39",
                    "filename": "requirements.txt",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 19,
                    "changes": 37,
                    "blob_url": "https://github.com/open-data/oc_search/blob/a8a9845aaa775a388eef1f1863643e27a7f01e47/requirements.txt",
                    "raw_url": "https://github.com/open-data/oc_search/raw/a8a9845aaa775a388eef1f1863643e27a7f01e47/requirements.txt",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/requirements.txt?ref=a8a9845aaa775a388eef1f1863643e27a7f01e47",
                    "patch": "@@ -1,27 +1,26 @@\n-Babel==2.15.0\n-bleach==6.1.0\n-celery==5.3.6\n-ckanapi==4.7\n-django==4.2.13\n-django-celery-beat==2.5.0\n+Babel==2.16.0\n+bleach==6.2.0\n+celery==5.4.0\n+ckanapi==4.8\n+django==4.2.18\n+django-celery-beat==2.7.0\n django-celery-results==2.5.1\n-django-cors-headers==4.3.1\n-django-jazzmin==2.6.0\n+django-cors-headers==4.6.0\n+django-jazzmin==3.0.1\n django-qurl-templatetag==0.0.14\n django-redis-sessions==0.6.2\n django-smuggler==1.0.4\n-email-validator==2.1.0.post1\n+email-validator==2.2.0\n inflection==0.5.1\n-markdown2==2.4.13\n-nltk==3.8.1\n-pandas==2.2.0\n-psycopg2==2.9.9\n-python-dateutil==2.8.2\n-PyYAML==6.0.1\n-redis==5.0.1\n-scikit-learn==1.4.0\n-setuptools>=69.0.3\n+markdown2==2.5.2\n+nltk==3.9\n+pandas==2.2.3\n+psycopg2==2.9.10\n+python-dateutil==2.9.0.post0\n+PyYAML==6.0.2\n+redis==5.2.1\n+setuptools>=75.8.0\n Unidecode==1.3.8\n-uWSGI==2.0.23; sys_platform == 'linux'\n+uWSGI==2.0.28; sys_platform == 'linux'\n #git+https://github.com/thriuin/SolrClient.git@master\n "
                },
                {
                    "sha": "d76b84bf98c18c0f4d5f55347c7ed6e78b704d86",
                    "filename": "search/templatetags/search_extras.py",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 2,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/oc_search/blob/a8a9845aaa775a388eef1f1863643e27a7f01e47/search%2Ftemplatetags%2Fsearch_extras.py",
                    "raw_url": "https://github.com/open-data/oc_search/raw/a8a9845aaa775a388eef1f1863643e27a7f01e47/search%2Ftemplatetags%2Fsearch_extras.py",
                    "contents_url": "https://api.github.com/repos/open-data/oc_search/contents/search%2Ftemplatetags%2Fsearch_extras.py?ref=a8a9845aaa775a388eef1f1863643e27a7f01e47",
                    "patch": "@@ -12,7 +12,6 @@\n import json\n import markdown2\n import re\n-from search.query import url_part_unescape\n \n \n register = template.Library()\n@@ -181,7 +180,10 @@ def strip_paragraph(text):\n \n @register.filter('url_part_unescape')\n def url_part_unescape_filter(value: str):\n-    return url_part_unescape(value)\n+    return ''.join(\n+        bytes.fromhex(s).decode('utf-8') if i % 2 else s\n+        for i, s in enumerate(value.split('_'))\n+    )\n \n \n @register.filter('strip_whitespace')"
                }
            ]
        }
    },
    "drupal": {
        "opengov": {
            "url": "https://api.github.com/repos/open-data/opengov/compare/9e44e51b62992c6ff984418c5a13de70b61ef8b5...62897d7c5f6d35fbf858632c273e0df199eff68a",
            "html_url": "https://github.com/open-data/opengov/compare/9e44e51b62992c6ff984418c5a13de70b61ef8b5...62897d7c5f6d35fbf858632c273e0df199eff68a",
            "permalink_url": "https://github.com/open-data/opengov/compare/open-data:9e44e51...open-data:62897d7",
            "diff_url": "https://github.com/open-data/opengov/compare/9e44e51b62992c6ff984418c5a13de70b61ef8b5...62897d7c5f6d35fbf858632c273e0df199eff68a.diff",
            "patch_url": "https://github.com/open-data/opengov/compare/9e44e51b62992c6ff984418c5a13de70b61ef8b5...62897d7c5f6d35fbf858632c273e0df199eff68a.patch",
            "base_commit": {
                "sha": "9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                "node_id": "C_kwDOCjBKEtoAKDllNDRlNTFiNjI5OTJjNmZmOTg0NDE4YzVhMTNkZTcwYjYxZWY4YjU",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-11-12T19:03:32Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-11-12T19:03:32Z"
                    },
                    "message": "Merge pull request #45 from open-data/drupal/core/10.2.10\n\nsecurity update for drupal/core and contrib modules",
                    "tree": {
                        "sha": "f9e0befa66549345c5a340c6706ce0aaf3846e37",
                        "url": "https://api.github.com/repos/open-data/opengov/git/trees/f9e0befa66549345c5a340c6706ce0aaf3846e37"
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/git/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM6aECRC1aQ7uu5UhlAAA8VQQAGIuW4QDf/SCJ6HM7+jwrbow\nNJlRdpaWN9PVphjj+RaU9K32vHGg16pDf3/BKw3v2Fk/ccqKg5lpEPJRRQsvHOHE\nQRPFv7urb6Hdu5228lGmJ+KIjrYJDzkL3/7WyhPvT+mObeqB0EDJEDGe81kG6Wd8\nsTeBZHJQl7NJHqpq4FdHF+jGkonLd9oREv3ud2MkZ0vNKgahCs32GVN6AwTTEvub\n9eZzvKwjWi3tpu7OxtKWijrG1no05f1OgxF7Wu3VXvyZvmAcqtYLLlshln+Hemch\n8iCZYsjX6mKnkttU0yFHI6oJ4x2xujzM92n6NNFQW9tDCaEbHQIrOtEfDaMHY6GY\nQWPhwRtC20stMYXHV5ex1U+o1pSETlmUDd+gVAokjyc4cz1Y5Fw3Bd8zAZJXF3E6\ngNURBUinRnCxrraLpKEeUbOrtYX0pLrL2eMPTsPTgZYDxVMTgNpWbeNKtysQ7MDe\n/1TKcc3RLyh/ErQ8qOHQJVYrm4BSgjwcS32Pv6XkSVGFUEucMEH+hccqsjsVPYkn\niouFw6fB9iYJEiUetbfxinnzOu2GBxTVx4DUXgq7Iu98iPERUibgaJbGeigG+agZ\nKPQB3qWpt1s77uQa6v8RFTY82fbrY8IGz2kRcoH8IesIlvL/Mi8mbjKMJYLJmBkm\n1ACKc4nSvt+yQUXrLIQF\n=pgg2\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree f9e0befa66549345c5a340c6706ce0aaf3846e37\nparent 96456839d06678aaec74ce56e4942744baf30ce3\nparent ebadab617ddd422fe2445cfc86c5a87cc589a390\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1731438212 -0500\ncommitter GitHub <noreply@github.com> 1731438212 -0500\n\nMerge pull request #45 from open-data/drupal/core/10.2.10\n\nsecurity update for drupal/core and contrib modules",
                        "verified_at": "2024-11-12T19:05:25Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/opengov/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                "html_url": "https://github.com/open-data/opengov/commit/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                "comments_url": "https://api.github.com/repos/open-data/opengov/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "96456839d06678aaec74ce56e4942744baf30ce3",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                        "html_url": "https://github.com/open-data/opengov/commit/96456839d06678aaec74ce56e4942744baf30ce3"
                    },
                    {
                        "sha": "ebadab617ddd422fe2445cfc86c5a87cc589a390",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/ebadab617ddd422fe2445cfc86c5a87cc589a390",
                        "html_url": "https://github.com/open-data/opengov/commit/ebadab617ddd422fe2445cfc86c5a87cc589a390"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                "node_id": "C_kwDOCjBKEtoAKDllNDRlNTFiNjI5OTJjNmZmOTg0NDE4YzVhMTNkZTcwYjYxZWY4YjU",
                "commit": {
                    "author": {
                        "name": "Rabia Sajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2024-11-12T19:03:32Z"
                    },
                    "committer": {
                        "name": "GitHub",
                        "email": "noreply@github.com",
                        "date": "2024-11-12T19:03:32Z"
                    },
                    "message": "Merge pull request #45 from open-data/drupal/core/10.2.10\n\nsecurity update for drupal/core and contrib modules",
                    "tree": {
                        "sha": "f9e0befa66549345c5a340c6706ce0aaf3846e37",
                        "url": "https://api.github.com/repos/open-data/opengov/git/trees/f9e0befa66549345c5a340c6706ce0aaf3846e37"
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/git/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "comment_count": 0,
                    "verification": {
                        "verified": true,
                        "reason": "valid",
                        "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnM6aECRC1aQ7uu5UhlAAA8VQQAGIuW4QDf/SCJ6HM7+jwrbow\nNJlRdpaWN9PVphjj+RaU9K32vHGg16pDf3/BKw3v2Fk/ccqKg5lpEPJRRQsvHOHE\nQRPFv7urb6Hdu5228lGmJ+KIjrYJDzkL3/7WyhPvT+mObeqB0EDJEDGe81kG6Wd8\nsTeBZHJQl7NJHqpq4FdHF+jGkonLd9oREv3ud2MkZ0vNKgahCs32GVN6AwTTEvub\n9eZzvKwjWi3tpu7OxtKWijrG1no05f1OgxF7Wu3VXvyZvmAcqtYLLlshln+Hemch\n8iCZYsjX6mKnkttU0yFHI6oJ4x2xujzM92n6NNFQW9tDCaEbHQIrOtEfDaMHY6GY\nQWPhwRtC20stMYXHV5ex1U+o1pSETlmUDd+gVAokjyc4cz1Y5Fw3Bd8zAZJXF3E6\ngNURBUinRnCxrraLpKEeUbOrtYX0pLrL2eMPTsPTgZYDxVMTgNpWbeNKtysQ7MDe\n/1TKcc3RLyh/ErQ8qOHQJVYrm4BSgjwcS32Pv6XkSVGFUEucMEH+hccqsjsVPYkn\niouFw6fB9iYJEiUetbfxinnzOu2GBxTVx4DUXgq7Iu98iPERUibgaJbGeigG+agZ\nKPQB3qWpt1s77uQa6v8RFTY82fbrY8IGz2kRcoH8IesIlvL/Mi8mbjKMJYLJmBkm\n1ACKc4nSvt+yQUXrLIQF\n=pgg2\n-----END PGP SIGNATURE-----\n",
                        "payload": "tree f9e0befa66549345c5a340c6706ce0aaf3846e37\nparent 96456839d06678aaec74ce56e4942744baf30ce3\nparent ebadab617ddd422fe2445cfc86c5a87cc589a390\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1731438212 -0500\ncommitter GitHub <noreply@github.com> 1731438212 -0500\n\nMerge pull request #45 from open-data/drupal/core/10.2.10\n\nsecurity update for drupal/core and contrib modules",
                        "verified_at": "2024-11-12T19:05:25Z"
                    }
                },
                "url": "https://api.github.com/repos/open-data/opengov/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                "html_url": "https://github.com/open-data/opengov/commit/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                "comments_url": "https://api.github.com/repos/open-data/opengov/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "web-flow",
                    "id": 19864447,
                    "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                    "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/web-flow",
                    "html_url": "https://github.com/web-flow",
                    "followers_url": "https://api.github.com/users/web-flow/followers",
                    "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                    "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                    "organizations_url": "https://api.github.com/users/web-flow/orgs",
                    "repos_url": "https://api.github.com/users/web-flow/repos",
                    "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/web-flow/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "96456839d06678aaec74ce56e4942744baf30ce3",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/96456839d06678aaec74ce56e4942744baf30ce3",
                        "html_url": "https://github.com/open-data/opengov/commit/96456839d06678aaec74ce56e4942744baf30ce3"
                    },
                    {
                        "sha": "ebadab617ddd422fe2445cfc86c5a87cc589a390",
                        "url": "https://api.github.com/repos/open-data/opengov/commits/ebadab617ddd422fe2445cfc86c5a87cc589a390",
                        "html_url": "https://github.com/open-data/opengov/commit/ebadab617ddd422fe2445cfc86c5a87cc589a390"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 4,
            "behind_by": 0,
            "total_commits": 4,
            "commits": [
                {
                    "sha": "303886bbddce03509906e37b89c12ccbeb80f4e7",
                    "node_id": "C_kwDOCjBKEtoAKDMwMzg4NmJiZGRjZTAzNTA5OTA2ZTM3Yjg5YzEyY2NiZWI4MGY0ZTc",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T19:44:16Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T19:44:16Z"
                        },
                        "message": "master: config sync",
                        "tree": {
                            "sha": "3ba8145173728a656ec907d8c719435b6b017d14",
                            "url": "https://api.github.com/repos/open-data/opengov/git/trees/3ba8145173728a656ec907d8c719435b6b017d14"
                        },
                        "url": "https://api.github.com/repos/open-data/opengov/git/commits/303886bbddce03509906e37b89c12ccbeb80f4e7",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/commits/303886bbddce03509906e37b89c12ccbeb80f4e7",
                    "html_url": "https://github.com/open-data/opengov/commit/303886bbddce03509906e37b89c12ccbeb80f4e7",
                    "comments_url": "https://api.github.com/repos/open-data/opengov/commits/303886bbddce03509906e37b89c12ccbeb80f4e7/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                            "html_url": "https://github.com/open-data/opengov/commit/9e44e51b62992c6ff984418c5a13de70b61ef8b5"
                        }
                    ]
                },
                {
                    "sha": "74392206480224f57c02478a1fa392f641a43096",
                    "node_id": "C_kwDOCjBKEtoAKDc0MzkyMjA2NDgwMjI0ZjU3YzAyNDc4YTFmYTM5MmY2NDFhNDMwOTY",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T18:15:59Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T18:15:59Z"
                        },
                        "message": "remove configs for deprecated suggested-dataset feature",
                        "tree": {
                            "sha": "99853563cc79e3a6f3d7696c742719ff13f1e2d5",
                            "url": "https://api.github.com/repos/open-data/opengov/git/trees/99853563cc79e3a6f3d7696c742719ff13f1e2d5"
                        },
                        "url": "https://api.github.com/repos/open-data/opengov/git/commits/74392206480224f57c02478a1fa392f641a43096",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/commits/74392206480224f57c02478a1fa392f641a43096",
                    "html_url": "https://github.com/open-data/opengov/commit/74392206480224f57c02478a1fa392f641a43096",
                    "comments_url": "https://api.github.com/repos/open-data/opengov/commits/74392206480224f57c02478a1fa392f641a43096/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "303886bbddce03509906e37b89c12ccbeb80f4e7",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/303886bbddce03509906e37b89c12ccbeb80f4e7",
                            "html_url": "https://github.com/open-data/opengov/commit/303886bbddce03509906e37b89c12ccbeb80f4e7"
                        }
                    ]
                },
                {
                    "sha": "331a30b94a9143060ebdb793cdf47944db03591a",
                    "node_id": "C_kwDOCjBKEtoAKDMzMWEzMGI5NGE5MTQzMDYwZWJkYjc5M2NkZjQ3OTQ0ZGIwMzU5MWE",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T18:19:41Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T18:19:41Z"
                        },
                        "message": "add changelog for PR# 46",
                        "tree": {
                            "sha": "cc862e657e3071037c8d485a46f309d1e7c95765",
                            "url": "https://api.github.com/repos/open-data/opengov/git/trees/cc862e657e3071037c8d485a46f309d1e7c95765"
                        },
                        "url": "https://api.github.com/repos/open-data/opengov/git/commits/331a30b94a9143060ebdb793cdf47944db03591a",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/commits/331a30b94a9143060ebdb793cdf47944db03591a",
                    "html_url": "https://github.com/open-data/opengov/commit/331a30b94a9143060ebdb793cdf47944db03591a",
                    "comments_url": "https://api.github.com/repos/open-data/opengov/commits/331a30b94a9143060ebdb793cdf47944db03591a/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "74392206480224f57c02478a1fa392f641a43096",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/74392206480224f57c02478a1fa392f641a43096",
                            "html_url": "https://github.com/open-data/opengov/commit/74392206480224f57c02478a1fa392f641a43096"
                        }
                    ]
                },
                {
                    "sha": "62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "node_id": "C_kwDOCjBKEtoAKDYyODk3ZDdjNWY2ZDM1ZmJmODU4NjMyYzI3M2UwZGYxOTllZmY2OGE",
                    "commit": {
                        "author": {
                            "name": "Rabia Sajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T18:19:54Z"
                        },
                        "committer": {
                            "name": "GitHub",
                            "email": "noreply@github.com",
                            "date": "2025-01-29T18:19:54Z"
                        },
                        "message": "Merge pull request #46 from open-data/remove-deprecated-code\n\nremove configs for deprecated suggested-dataset feature",
                        "tree": {
                            "sha": "cc862e657e3071037c8d485a46f309d1e7c95765",
                            "url": "https://api.github.com/repos/open-data/opengov/git/trees/cc862e657e3071037c8d485a46f309d1e7c95765"
                        },
                        "url": "https://api.github.com/repos/open-data/opengov/git/commits/62897d7c5f6d35fbf858632c273e0df199eff68a",
                        "comment_count": 0,
                        "verification": {
                            "verified": true,
                            "reason": "valid",
                            "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsFcBAABCAAQBQJnmnFKCRC1aQ7uu5UhlAAAnzYQAFQr/tEP+fm1KUe3VRiG1+/I\nzHtDmFNAxQiZBwqVl2Wsjm5VTUqvs/WrJJM2zcd8qmEHe45FziJC4NOUWGB/4qw7\nhoIpDfzKLATlddIlg9nNAG9r8PjAfWAr5c/M7SYnGzwD7SNRhVUr42dYd4q3CXrw\nbR75VbO4XSMgKopR8GThc5hm54NPeuv+hOInbt96Puo3LHEyUpXj5Nvp+CkVMcm6\n5SGnTBg3KdklKEQb9jZEbe0DHCICjT3BDCoK0nlaVoCiK5532jQR+mpK4J2OfX1W\nJzFPUOIVBabmgL8N5rZkzYp/MPKtbfP66R7QN3BZgtPr7Eec+Du4c2Re4xXV7ugl\n6//Q4+o4kBknp8vuT7tW9N5ubyUTFQXHIEqrc6bgHdQy+cpYv34obK4pl+bzl/+R\nw6f03CT40qXhZ9FMmwns5hqOxJufQkv5ZTyrJaCCKignyJjMp/8YkAWrLp2nU5nK\ncg58UFbeVUioQS+C34XYWDCtkCOYFsU/Cg2HBjmTNZ1q04IzI40x4bmICjTyFoxM\nIXBJqTF3CthiZlKfkb8MZ7RcbMD7S+DqMqD5FvQy6/luFP2BHgz/wMnV8U3cgib1\nM/ClEBC2q7kRer/UzJphYGyoZEx3CMMB24JZsg0dIwIcTKKm1PJNg8EFN/BBFhjx\neRCSSjJQBuKcv6CCO2LD\n=PJee\n-----END PGP SIGNATURE-----\n",
                            "payload": "tree cc862e657e3071037c8d485a46f309d1e7c95765\nparent 303886bbddce03509906e37b89c12ccbeb80f4e7\nparent 331a30b94a9143060ebdb793cdf47944db03591a\nauthor Rabia Sajjad <rabiasajjad.dev@gmail.com> 1738174794 -0500\ncommitter GitHub <noreply@github.com> 1738174794 -0500\n\nMerge pull request #46 from open-data/remove-deprecated-code\n\nremove configs for deprecated suggested-dataset feature",
                            "verified_at": "2025-01-29T18:21:12Z"
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/opengov/commits/62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "html_url": "https://github.com/open-data/opengov/commit/62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "comments_url": "https://api.github.com/repos/open-data/opengov/commits/62897d7c5f6d35fbf858632c273e0df199eff68a/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "web-flow",
                        "id": 19864447,
                        "node_id": "MDQ6VXNlcjE5ODY0NDQ3",
                        "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/web-flow",
                        "html_url": "https://github.com/web-flow",
                        "followers_url": "https://api.github.com/users/web-flow/followers",
                        "following_url": "https://api.github.com/users/web-flow/following{/other_user}",
                        "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions",
                        "organizations_url": "https://api.github.com/users/web-flow/orgs",
                        "repos_url": "https://api.github.com/users/web-flow/repos",
                        "events_url": "https://api.github.com/users/web-flow/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/web-flow/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "303886bbddce03509906e37b89c12ccbeb80f4e7",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/303886bbddce03509906e37b89c12ccbeb80f4e7",
                            "html_url": "https://github.com/open-data/opengov/commit/303886bbddce03509906e37b89c12ccbeb80f4e7"
                        },
                        {
                            "sha": "331a30b94a9143060ebdb793cdf47944db03591a",
                            "url": "https://api.github.com/repos/open-data/opengov/commits/331a30b94a9143060ebdb793cdf47944db03591a",
                            "html_url": "https://github.com/open-data/opengov/commit/331a30b94a9143060ebdb793cdf47944db03591a"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "1d115cd2c9d4ffef5244b5909dfe17b564f53b41",
                    "filename": "changes/46.removal",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/changes%2F46.removal",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/changes%2F46.removal",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/changes%2F46.removal?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1 @@\n+Remove configuration files for deprecated 'Suggest a dataset' feature."
                },
                {
                    "sha": null,
                    "filename": "config/.htaccess",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 0,
                    "changes": 0,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2F.htaccess",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2F.htaccess",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2F.htaccess?ref=62897d7c5f6d35fbf858632c273e0df199eff68a"
                },
                {
                    "sha": "20d3e84be73fe0606c95d9294383decd4c9f86e8",
                    "filename": "config/core.base_field_override.comment.comment.homepage.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.homepage.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.homepage.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.base_field_override.comment.comment.homepage.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -9,7 +9,7 @@ field_name: homepage\n entity_type: comment\n bundle: comment\n label: Homepage\n-description: 'The comment author''s home page address.'\n+description: \"The comment author's home page address.\"\n required: false\n translatable: false\n default_value: {  }"
                },
                {
                    "sha": "758c3d904d51ad8c58d738e1c00a36cd7090acb9",
                    "filename": "config/core.base_field_override.comment.comment.hostname.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.hostname.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.hostname.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.base_field_override.comment.comment.hostname.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -9,7 +9,7 @@ field_name: hostname\n entity_type: comment\n bundle: comment\n label: Hostname\n-description: 'The comment author''s hostname.'\n+description: \"The comment author's hostname.\"\n required: false\n translatable: false\n default_value: {  }"
                },
                {
                    "sha": "478f86c97621e9ad6289306aef4a07492de3daf7",
                    "filename": "config/core.base_field_override.comment.comment.mail.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.mail.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.mail.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.base_field_override.comment.comment.mail.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -9,7 +9,7 @@ field_name: mail\n entity_type: comment\n bundle: comment\n label: Email\n-description: 'The comment author''s email address.'\n+description: \"The comment author's email address.\"\n required: false\n translatable: false\n default_value: {  }"
                },
                {
                    "sha": "c2300248270c98093ff94c00ab8477f65fea6b2c",
                    "filename": "config/core.base_field_override.comment.comment.name.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.name.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.base_field_override.comment.comment.name.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.base_field_override.comment.comment.name.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -9,7 +9,7 @@ field_name: name\n entity_type: comment\n bundle: comment\n label: Name\n-description: 'The comment author''s name.'\n+description: \"The comment author's name.\"\n required: false\n translatable: false\n default_value:"
                },
                {
                    "sha": "c7efe8f759894767b8b200861a0c9747f43e776f",
                    "filename": "config/core.base_field_override.node.suggested_dataset.title.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 18,
                    "changes": 18,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.base_field_override.node.suggested_dataset.title.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.base_field_override.node.suggested_dataset.title.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.base_field_override.node.suggested_dataset.title.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,18 +0,0 @@\n-uuid: 466c8661-26d7-4b7f-ae58-d7f1cf60f131\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - node.type.suggested_dataset\n-id: node.suggested_dataset.title\n-field_name: title\n-entity_type: node\n-bundle: suggested_dataset\n-label: 'Suggested title of dataset(s)'\n-description: ''\n-required: true\n-translatable: true\n-default_value: {  }\n-default_value_callback: ''\n-settings: {  }\n-field_type: string"
                },
                {
                    "sha": "933e8e880765b66d1eee8b4426796d66ff8cc2fd",
                    "filename": "config/core.entity_form_display.node.suggested_dataset.default.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 163,
                    "changes": 163,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_form_display.node.suggested_dataset.default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_form_display.node.suggested_dataset.default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_form_display.node.suggested_dataset.default.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,163 +0,0 @@\n-uuid: 4a5c7f08-7089-4bfe-9434-f496769bc5a7\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.field.node.suggested_dataset.body\n-    - field.field.node.suggested_dataset.comment\n-    - field.field.node.suggested_dataset.field_dataset_keywords\n-    - field.field.node.suggested_dataset.field_dataset_subject\n-    - field.field.node.suggested_dataset.field_date_published\n-    - field.field.node.suggested_dataset.field_feedback\n-    - field.field.node.suggested_dataset.field_meta_tags\n-    - field.field.node.suggested_dataset.field_organization\n-    - field.field.node.suggested_dataset.field_previousnodeid\n-    - field.field.node.suggested_dataset.field_sd_status\n-    - field.field.node.suggested_dataset.field_status_link\n-    - field.field.node.suggested_dataset.field_vote_up_down\n-    - field.field.node.suggested_dataset.field_webform_submission_id\n-    - node.type.suggested_dataset\n-    - workflows.workflow.editorial\n-  module:\n-    - content_moderation\n-    - datetime\n-    - link\n-    - metatag\n-    - path\n-    - text\n-id: node.suggested_dataset.default\n-targetEntityType: node\n-bundle: suggested_dataset\n-mode: default\n-content:\n-  body:\n-    type: text_textarea_with_summary\n-    weight: 2\n-    region: content\n-    settings:\n-      rows: 9\n-      summary_rows: 3\n-      placeholder: ''\n-      show_summary: false\n-    third_party_settings: {  }\n-  created:\n-    type: datetime_timestamp\n-    weight: 10\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  field_dataset_keywords:\n-    type: string_textfield\n-    weight: 4\n-    region: content\n-    settings:\n-      size: 60\n-      placeholder: ''\n-    third_party_settings: {  }\n-  field_dataset_subject:\n-    type: options_select\n-    weight: 3\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  field_date_published:\n-    type: datetime_default\n-    weight: 7\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  field_feedback:\n-    type: string_textarea\n-    weight: 8\n-    region: content\n-    settings:\n-      rows: 5\n-      placeholder: ''\n-    third_party_settings: {  }\n-  field_meta_tags:\n-    type: metatag_firehose\n-    weight: 15\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  field_organization:\n-    type: options_select\n-    weight: 1\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  field_sd_status:\n-    type: options_select\n-    weight: 5\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  field_status_link:\n-    type: link_default\n-    weight: 6\n-    region: content\n-    settings:\n-      placeholder_url: ''\n-      placeholder_title: ''\n-    third_party_settings: {  }\n-  moderation_state:\n-    type: moderation_state_default\n-    weight: 16\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  path:\n-    type: path\n-    weight: 14\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  promote:\n-    type: boolean_checkbox\n-    weight: 12\n-    region: content\n-    settings:\n-      display_label: true\n-    third_party_settings: {  }\n-  sticky:\n-    type: boolean_checkbox\n-    weight: 13\n-    region: content\n-    settings:\n-      display_label: true\n-    third_party_settings: {  }\n-  title:\n-    type: string_textfield\n-    weight: 0\n-    region: content\n-    settings:\n-      size: 60\n-      placeholder: ''\n-    third_party_settings: {  }\n-  translation:\n-    weight: 11\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-  uid:\n-    type: entity_reference_autocomplete\n-    weight: 9\n-    region: content\n-    settings:\n-      match_operator: CONTAINS\n-      match_limit: 10\n-      size: 60\n-      placeholder: ''\n-    third_party_settings: {  }\n-  url_redirects:\n-    weight: 17\n-    region: content\n-    settings: {  }\n-    third_party_settings: {  }\n-hidden:\n-  comment: true\n-  field_previousnodeid: true\n-  field_vote_up_down: true\n-  field_webform_submission_id: true\n-  langcode: true\n-  status: true"
                },
                {
                    "sha": "08642556253d3425a46b3f6c79eaad6372ecbb7d",
                    "filename": "config/core.entity_form_mode.media.media_library.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_form_mode.media.media_library.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_form_mode.media.media_library.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_form_mode.media.media_library.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -11,5 +11,6 @@ _core:\n   default_config_hash: pkq0uj-IoqEQRBOP_ddUDV0ZJ-dKQ_fLcppsEDF2UO8\n id: media.media_library\n label: 'Media library'\n+description: ''\n targetEntityType: media\n cache: true"
                },
                {
                    "sha": "5c945a5085df3c0c32eea2e7e307f732ceaa2f3d",
                    "filename": "config/core.entity_form_mode.user.register.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_form_mode.user.register.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_form_mode.user.register.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_form_mode.user.register.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: flXhTcp55yLcyy7ZLOhPGKGZobZQJdkAFVWV3LseiuI\n id: user.register\n label: Register\n+description: ''\n targetEntityType: user\n cache: true"
                },
                {
                    "sha": "e0f23d0fb4fd7d5007e30bf1e75fd0099253d5c9",
                    "filename": "config/core.entity_view_display.media.remote_video.default.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 0,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.media.remote_video.default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.media.remote_video.default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.media.remote_video.default.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -20,12 +20,15 @@ content:\n     settings:\n       max_width: 0\n       max_height: 0\n+      loading:\n+        attribute: eager\n     third_party_settings: {  }\n     weight: 0\n     region: content\n hidden:\n   created: true\n   langcode: true\n   name: true\n+  search_api_excerpt: true\n   thumbnail: true\n   uid: true"
                },
                {
                    "sha": "3ed67d1550df78e1d97680877b3a6a95a071c70a",
                    "filename": "config/core.entity_view_display.node.app.teaser.yml",
                    "status": "modified",
                    "additions": 42,
                    "deletions": 0,
                    "changes": 42,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.app.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.app.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.app.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,6 +5,24 @@ dependencies:\n   config:\n     - core.entity_view_mode.node.teaser\n     - field.field.node.app.body\n+    - field.field.node.app.comment\n+    - field.field.node.app.field_app_charge\n+    - field.field.node.app.field_datasets_used\n+    - field.field.node.app.field_date_published\n+    - field.field.node.app.field_developed_by\n+    - field.field.node.app.field_device_formats\n+    - field.field.node.app.field_keywords\n+    - field.field.node.app.field_media\n+    - field.field.node.app.field_meta_tags\n+    - field.field.node.app.field_more_apps_by\n+    - field.field.node.app.field_name\n+    - field.field.node.app.field_previousnodeid\n+    - field.field.node.app.field_ribbon\n+    - field.field.node.app.field_subject\n+    - field.field.node.app.field_submitter_name\n+    - field.field.node.app.field_url\n+    - field.field.node.app.field_vote_average\n+    - field.field.node.app.field_vote_count\n     - node.type.app\n   module:\n     - text\n@@ -22,10 +40,34 @@ content:\n     third_party_settings: {  }\n     weight: 101\n     region: content\n+  content_moderation_control:\n+    weight: -20\n+    settings: {  }\n+    third_party_settings: {  }\n+    region: content\n   links:\n     settings: {  }\n     third_party_settings: {  }\n     weight: 100\n     region: content\n hidden:\n+  comment: true\n+  field_app_charge: true\n+  field_datasets_used: true\n+  field_date_published: true\n+  field_developed_by: true\n+  field_device_formats: true\n+  field_keywords: true\n+  field_media: true\n+  field_meta_tags: true\n+  field_more_apps_by: true\n+  field_name: true\n+  field_previousnodeid: true\n+  field_ribbon: true\n+  field_subject: true\n+  field_submitter_name: true\n+  field_url: true\n+  field_vote_average: true\n+  field_vote_count: true\n   langcode: true\n+  search_api_excerpt: true"
                },
                {
                    "sha": "d97e3c6beb36b1f65aee2995ebe21732e2e1c51a",
                    "filename": "config/core.entity_view_display.node.article.default.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 266,
                    "changes": 266,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_view_display.node.article.default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_view_display.node.article.default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.article.default.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,266 +0,0 @@\n-uuid: 3ca6677c-e390-44f9-aba0-f80c51905e2a\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - core.base_field_override.node.article.created\n-    - core.entity_view_display.comment.comment.default\n-    - field.field.node.article.body\n-    - field.field.node.article.comment\n-    - field.field.node.article.field_blog_author_name\n-    - field.field.node.article.field_media\n-    - field.field.node.article.field_meta_tags\n-    - field.field.node.article.field_previousnodeid\n-    - field.field.node.article.field_tags\n-    - node.type.article\n-    - views.view.blog\n-  content:\n-    - 'block_content:basic:cf8209e7-dbe5-4f66-8146-5fc52de7832d'\n-  module:\n-    - block_content\n-    - bootstrap_layouts\n-    - comment\n-    - layout_builder\n-    - metatag\n-    - taxonomy\n-    - text\n-    - user\n-    - views\n-third_party_settings:\n-  layout_builder:\n-    enabled: true\n-    allow_custom: false\n-    sections:\n-      -\n-        layout_id: bs_2col\n-        layout_settings:\n-          label: ''\n-          context_mapping: {  }\n-          layout:\n-            wrapper: div\n-            classes:\n-              row: row\n-            add_layout_class: 1\n-            attributes: ''\n-          regions:\n-            left:\n-              wrapper: div\n-              classes:\n-                col-md-8: col-md-8\n-              add_region_classes: 1\n-              attributes: ''\n-            right:\n-              wrapper: div\n-              classes:\n-                col-md-4: col-md-4\n-              add_region_classes: 1\n-              attributes: ''\n-        components:\n-          48ef1aff-2ea8-41c6-b506-8e46e7d39367:\n-            uuid: 48ef1aff-2ea8-41c6-b506-8e46e7d39367\n-            region: right\n-            configuration:\n-              id: 'block_content:cf8209e7-dbe5-4f66-8146-5fc52de7832d'\n-              label: 'Pillars - social media'\n-              label_display: '0'\n-              provider: block_content\n-              status: true\n-              info: ''\n-              view_mode: full\n-              context_mapping: {  }\n-            weight: 0\n-            additional: {  }\n-          dda22670-38f6-408a-9526-29c84125ce9a:\n-            uuid: dda22670-38f6-408a-9526-29c84125ce9a\n-            region: left\n-            configuration:\n-              id: 'field_block:node:article:field_blog_author_name'\n-              label: 'Blog author name'\n-              label_display: '0'\n-              provider: layout_builder\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: entity_reference_label\n-                label: hidden\n-                settings:\n-                  link: true\n-                third_party_settings: {  }\n-            weight: -10\n-            additional: {  }\n-          f3b99357-2d6a-4eb7-9960-9b6dd1e5f682:\n-            uuid: f3b99357-2d6a-4eb7-9960-9b6dd1e5f682\n-            region: left\n-            configuration:\n-              id: 'field_block:node:article:created'\n-              label: 'Authored on'\n-              label_display: '0'\n-              provider: layout_builder\n-              context_mapping:\n-                entity: layout_builder.entity\n-                view_mode: view_mode\n-              formatter:\n-                type: timestamp\n-                label: hidden\n-                settings:\n-                  date_format: blog_date\n-                  custom_date_format: 'F j, Y'\n-                  timezone: ''\n-                third_party_settings: {  }\n-            weight: -9\n-            additional: {  }\n-        third_party_settings: {  }\n-      -\n-        layout_id: bs_2col\n-        layout_settings:\n-          label: ''\n-          context_mapping: {  }\n-          layout:\n-            wrapper: div\n-            classes:\n-              row: row\n-            add_layout_class: 1\n-            attributes: ''\n-          regions:\n-            left:\n-              wrapper: div\n-              classes:\n-                col-md-8: col-md-8\n-              add_region_classes: 1\n-              attributes: ''\n-            right:\n-              wrapper: div\n-              classes:\n-                col-md-4: col-md-4\n-              add_region_classes: 1\n-              attributes: ''\n-        components:\n-          414b1588-f28a-465d-a97a-f2fb6103c6e9:\n-            uuid: 414b1588-f28a-465d-a97a-f2fb6103c6e9\n-            region: left\n-            configuration:\n-              id: 'field_block:node:article:body'\n-              label: Body\n-              label_display: '0'\n-              provider: layout_builder\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: text_default\n-                label: hidden\n-                settings: {  }\n-                third_party_settings: {  }\n-            weight: 0\n-            additional: {  }\n-          f21c8364-5705-4785-b35e-4ca6317b5463:\n-            uuid: f21c8364-5705-4785-b35e-4ca6317b5463\n-            region: right\n-            configuration:\n-              id: 'views_block:blog-recent'\n-              label: ''\n-              label_display: visible\n-              provider: views\n-              context_mapping: {  }\n-              views_label: ''\n-              items_per_page: none\n-            weight: 0\n-            additional: {  }\n-        third_party_settings: {  }\n-      -\n-        layout_id: bs_1col\n-        layout_settings:\n-          label: ''\n-          context_mapping: {  }\n-          layout:\n-            wrapper: div\n-            classes:\n-              row: row\n-            add_layout_class: 1\n-            attributes: ''\n-          regions:\n-            main:\n-              wrapper: div\n-              classes:\n-                col-sm-12: col-sm-12\n-              add_region_classes: 1\n-              attributes: ''\n-        components:\n-          d31533d9-32b0-463b-9f2a-aa11e5d47e21:\n-            uuid: d31533d9-32b0-463b-9f2a-aa11e5d47e21\n-            region: main\n-            configuration:\n-              id: 'extra_field_block:node:article:content_moderation_control'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-            weight: 0\n-            additional: {  }\n-        third_party_settings: {  }\n-_core:\n-  default_config_hash: ChmU3AVqDKU32A_fyChG0W9dTRKmVBR58B6OClCLvZI\n-id: node.article.default\n-targetEntityType: node\n-bundle: article\n-mode: default\n-content:\n-  body:\n-    type: text_default\n-    label: hidden\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 1\n-    region: content\n-  comment:\n-    type: comment_default\n-    label: above\n-    settings:\n-      view_mode: default\n-      pager_id: 0\n-    third_party_settings: {  }\n-    weight: 5\n-    region: content\n-  content_moderation_control:\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 0\n-    region: content\n-  field_blog_author_name:\n-    type: entity_reference_label\n-    label: above\n-    settings:\n-      link: true\n-    third_party_settings: {  }\n-    weight: 9\n-    region: left\n-  field_media:\n-    type: entity_reference_entity_view\n-    label: above\n-    settings:\n-      view_mode: default\n-      link: false\n-    third_party_settings: {  }\n-    weight: 8\n-    region: content\n-  field_meta_tags:\n-    type: metatag_empty_formatter\n-    label: above\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 7\n-    region: content\n-  field_tags:\n-    type: entity_reference_rss_category\n-    label: above\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 3\n-    region: content\n-  links:\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 4\n-    region: content\n-hidden:\n-  field_previousnodeid: true\n-  langcode: true\n-  search_api_excerpt: true"
                },
                {
                    "sha": "441be6af7833a5407cbf104c6fa3c3b4e3c7a1c1",
                    "filename": "config/core.entity_view_display.node.commitment.teaser.yml",
                    "status": "modified",
                    "additions": 24,
                    "deletions": 0,
                    "changes": 24,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.commitment.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.commitment.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.commitment.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -7,7 +7,16 @@ dependencies:\n     - field.field.node.commitment.body\n     - field.field.node.commitment.comment\n     - field.field.node.commitment.field_commitment_ambition\n+    - field.field.node.commitment.field_commitment_end_date\n+    - field.field.node.commitment.field_commitment_pillars\n+    - field.field.node.commitment.field_commitment_relevance\n+    - field.field.node.commitment.field_commitment_status\n+    - field.field.node.commitment.field_commitment_tags\n+    - field.field.node.commitment.field_department\n+    - field.field.node.commitment.field_meta_tags\n+    - field.field.node.commitment.field_previousnodeid\n     - field.field.node.commitment.field_reference_landing\n+    - field.field.node.commitment.layout_builder__layout\n     - node.type.commitment\n   module:\n     - text\n@@ -25,6 +34,11 @@ content:\n     third_party_settings: {  }\n     weight: 101\n     region: content\n+  content_moderation_control:\n+    weight: -20\n+    settings: {  }\n+    third_party_settings: {  }\n+    region: content\n   links:\n     settings: {  }\n     third_party_settings: {  }\n@@ -33,5 +47,15 @@ content:\n hidden:\n   comment: true\n   field_commitment_ambition: true\n+  field_commitment_end_date: true\n+  field_commitment_pillars: true\n+  field_commitment_relevance: true\n+  field_commitment_status: true\n+  field_commitment_tags: true\n+  field_department: true\n+  field_meta_tags: true\n+  field_previousnodeid: true\n   field_reference_landing: true\n   langcode: true\n+  layout_builder__layout: true\n+  search_api_excerpt: true"
                },
                {
                    "sha": "170c712ae038547d22f2ec80b720ec126ad35e4f",
                    "filename": "config/core.entity_view_display.node.consultation.teaser.yml",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 0,
                    "changes": 18,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.consultation.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.consultation.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.consultation.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,6 +5,12 @@ dependencies:\n   config:\n     - core.entity_view_mode.node.teaser\n     - field.field.node.consultation.body\n+    - field.field.node.consultation.field_consultation_status\n+    - field.field.node.consultation.field_date\n+    - field.field.node.consultation.field_idea_reference\n+    - field.field.node.consultation.field_meta_tags\n+    - field.field.node.consultation.field_previousnodeid\n+    - field.field.node.consultation.layout_builder__layout\n     - node.type.consultation\n   module:\n     - text\n@@ -22,10 +28,22 @@ content:\n     third_party_settings: {  }\n     weight: 101\n     region: content\n+  content_moderation_control:\n+    weight: -20\n+    settings: {  }\n+    third_party_settings: {  }\n+    region: content\n   links:\n     settings: {  }\n     third_party_settings: {  }\n     weight: 100\n     region: content\n hidden:\n+  field_consultation_status: true\n+  field_date: true\n+  field_idea_reference: true\n+  field_meta_tags: true\n+  field_previousnodeid: true\n   langcode: true\n+  layout_builder__layout: true\n+  search_api_excerpt: true"
                },
                {
                    "sha": "f9eb0240587303d5f68c9f5d6dfbe4a6cf7cc65c",
                    "filename": "config/core.entity_view_display.node.external.teaser.yml",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.external.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.external.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.external.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -16,6 +16,11 @@ targetEntityType: node\n bundle: external\n mode: teaser\n content:\n+  content_moderation_control:\n+    weight: -20\n+    settings: {  }\n+    third_party_settings: {  }\n+    region: content\n   links:\n     settings: {  }\n     third_party_settings: {  }\n@@ -27,3 +32,4 @@ hidden:\n   field_url: true\n   field_uuid: true\n   langcode: true\n+  search_api_excerpt: true"
                },
                {
                    "sha": "9ddda458f2c0a6d2ce977dc09ca71e1687609205",
                    "filename": "config/core.entity_view_display.node.idea.teaser.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 0,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.idea.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.idea.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.idea.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,6 +5,14 @@ dependencies:\n   config:\n     - core.entity_view_mode.node.teaser\n     - field.field.node.idea.body\n+    - field.field.node.idea.comment\n+    - field.field.node.idea.field_idea_permalink\n+    - field.field.node.idea.field_idea_status\n+    - field.field.node.idea.field_idea_submission_name\n+    - field.field.node.idea.field_idea_tags\n+    - field.field.node.idea.field_meta_tags\n+    - field.field.node.idea.field_previousnodeid\n+    - field.field.node.idea.field_vote_up_down\n     - node.type.idea\n   module:\n     - text\n@@ -43,3 +51,4 @@ hidden:\n   field_previousnodeid: true\n   field_vote_up_down: true\n   langcode: true\n+  search_api_excerpt: true"
                },
                {
                    "sha": "101f94b5af885e694e0cde6b2f790ddf9d781254",
                    "filename": "config/core.entity_view_display.node.impact_story.teaser.yml",
                    "status": "modified",
                    "additions": 13,
                    "deletions": 0,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.impact_story.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.impact_story.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.impact_story.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,6 +5,17 @@ dependencies:\n   config:\n     - core.entity_view_mode.node.teaser\n     - field.field.node.impact_story.body\n+    - field.field.node.impact_story.comment\n+    - field.field.node.impact_story.field_dataset_used\n+    - field.field.node.impact_story.field_media\n+    - field.field.node.impact_story.field_ribbon\n+    - field.field.node.impact_story.field_story_impact\n+    - field.field.node.impact_story.field_story_testimonial\n+    - field.field.node.impact_story.field_subject\n+    - field.field.node.impact_story.field_submitter_name\n+    - field.field.node.impact_story.field_thumbnail\n+    - field.field.node.impact_story.field_url\n+    - field.field.node.impact_story.field_vote_up_down\n     - node.type.impact_story\n   module:\n     - text\n@@ -41,6 +52,8 @@ hidden:\n   field_story_testimonial: true\n   field_subject: true\n   field_submitter_name: true\n+  field_thumbnail: true\n+  field_url: true\n   field_vote_up_down: true\n   langcode: true\n   search_api_excerpt: true"
                },
                {
                    "sha": "981ace7b82236b21a25e28435988dbdb681781e3",
                    "filename": "config/core.entity_view_display.node.landing_page.default.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.landing_page.default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.landing_page.default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.landing_page.default.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -103,7 +103,7 @@ third_party_settings:\n             region: content\n             configuration:\n               id: 'block_content:326bf2f7-5bd0-403a-b436-f7dc82ad30f2'\n-              label: 'What''s new in open government?'\n+              label: \"What's new in open government?\"\n               label_display: '0'\n               provider: block_content\n               status: true"
                },
                {
                    "sha": "c013b7dfc1ab0a8d5c819673e406800c3c1e6e81",
                    "filename": "config/core.entity_view_display.node.map.teaser.yml",
                    "status": "modified",
                    "additions": 17,
                    "deletions": 0,
                    "changes": 17,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.map.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.map.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.map.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,6 +5,12 @@ dependencies:\n   config:\n     - core.entity_view_mode.node.teaser\n     - field.field.node.map.body\n+    - field.field.node.map.comment\n+    - field.field.node.map.field_dataset_used\n+    - field.field.node.map.field_developed_by\n+    - field.field.node.map.field_map_key\n+    - field.field.node.map.field_media\n+    - field.field.node.map.field_meta_tags\n     - node.type.map\n   module:\n     - text\n@@ -22,11 +28,22 @@ content:\n     third_party_settings: {  }\n     weight: 101\n     region: content\n+  content_moderation_control:\n+    weight: -20\n+    settings: {  }\n+    third_party_settings: {  }\n+    region: content\n   links:\n     settings: {  }\n     third_party_settings: {  }\n     weight: 100\n     region: content\n hidden:\n+  comment: true\n+  field_dataset_used: true\n+  field_developed_by: true\n+  field_map_key: true\n+  field_media: true\n+  field_meta_tags: true\n   langcode: true\n   search_api_excerpt: true"
                },
                {
                    "sha": "1a076541e3cc50ea4e02b00714d58b5bd14c6931",
                    "filename": "config/core.entity_view_display.node.suggested_dataset.default.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 380,
                    "changes": 380,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_view_display.node.suggested_dataset.default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_view_display.node.suggested_dataset.default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.suggested_dataset.default.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,380 +0,0 @@\n-uuid: a43bcc70-4d37-47a4-898e-5ee288f3306f\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - core.entity_view_display.comment.comment.default\n-    - field.field.node.suggested_dataset.body\n-    - field.field.node.suggested_dataset.comment\n-    - field.field.node.suggested_dataset.field_dataset_keywords\n-    - field.field.node.suggested_dataset.field_dataset_subject\n-    - field.field.node.suggested_dataset.field_date_published\n-    - field.field.node.suggested_dataset.field_feedback\n-    - field.field.node.suggested_dataset.field_meta_tags\n-    - field.field.node.suggested_dataset.field_organization\n-    - field.field.node.suggested_dataset.field_previousnodeid\n-    - field.field.node.suggested_dataset.field_sd_status\n-    - field.field.node.suggested_dataset.field_status_link\n-    - field.field.node.suggested_dataset.field_vote_up_down\n-    - field.field.node.suggested_dataset.field_webform_submission_id\n-    - node.type.suggested_dataset\n-    - webform.webform.vote_up_down\n-  content:\n-    - 'block_content:basic:cf8209e7-dbe5-4f66-8146-5fc52de7832d'\n-  module:\n-    - block_content\n-    - bootstrap_layouts\n-    - comment\n-    - datetime\n-    - layout_builder\n-    - link\n-    - options\n-    - text\n-    - user\n-    - webform\n-third_party_settings:\n-  layout_builder:\n-    enabled: true\n-    allow_custom: false\n-    sections:\n-      -\n-        layout_id: bs_2col\n-        layout_settings:\n-          label: ''\n-          context_mapping: {  }\n-          layout:\n-            wrapper: div\n-            classes:\n-              row: row\n-            add_layout_class: 1\n-            attributes: ''\n-          regions:\n-            left:\n-              wrapper: div\n-              classes:\n-                col-md-8: col-md-8\n-              add_region_classes: 1\n-              attributes: ''\n-            right:\n-              wrapper: div\n-              classes:\n-                col-md-4: col-md-4\n-              add_region_classes: 1\n-              attributes: ''\n-        components:\n-          c584ae24-876f-454e-8c2c-eb6f3b2ed940:\n-            uuid: c584ae24-876f-454e-8c2c-eb6f3b2ed940\n-            region: right\n-            configuration:\n-              id: 'block_content:cf8209e7-dbe5-4f66-8146-5fc52de7832d'\n-              label: 'Pillars - social media'\n-              label_display: '0'\n-              provider: block_content\n-              status: true\n-              info: ''\n-              view_mode: full\n-              context_mapping: {  }\n-            weight: 0\n-            additional: {  }\n-          aae483c8-5f05-4575-8011-f7d448abca4c:\n-            uuid: aae483c8-5f05-4575-8011-f7d448abca4c\n-            region: left\n-            configuration:\n-              id: 'extra_field_block:node:suggested_dataset:content_moderation_control'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-            weight: 0\n-            additional: {  }\n-        third_party_settings: {  }\n-      -\n-        layout_id: bs_2col\n-        layout_settings:\n-          label: ''\n-          context_mapping: {  }\n-          layout:\n-            wrapper: div\n-            classes:\n-              row: row\n-            add_layout_class: 1\n-            attributes: ''\n-          regions:\n-            left:\n-              wrapper: div\n-              classes:\n-                col-sm-3: col-sm-3\n-              add_region_classes: 1\n-              attributes: class|mrgn-tp-md\n-            right:\n-              wrapper: div\n-              classes:\n-                col-sm-9: col-sm-9\n-              add_region_classes: 1\n-              attributes: class|well\n-        components:\n-          ac997583-4154-43ac-b024-b9e45babf456:\n-            uuid: ac997583-4154-43ac-b024-b9e45babf456\n-            region: right\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:body'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: text_default\n-                label: above\n-                settings: {  }\n-                third_party_settings: {  }\n-            weight: -8\n-            additional: {  }\n-          99eae66a-01db-4041-8dde-bd2517e3c1b3:\n-            uuid: 99eae66a-01db-4041-8dde-bd2517e3c1b3\n-            region: left\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:field_status_link'\n-              label: 'Status Link'\n-              label_display: '0'\n-              provider: layout_builder\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: link\n-                label: hidden\n-                settings:\n-                  trim_length: 80\n-                  url_only: false\n-                  url_plain: false\n-                  rel: '0'\n-                  target: '0'\n-                third_party_settings: {  }\n-            weight: -6\n-            additional: {  }\n-          013afe8d-8ea6-44a7-bd40-7a684d347a0b:\n-            uuid: 013afe8d-8ea6-44a7-bd40-7a684d347a0b\n-            region: left\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:field_date_published'\n-              label: 'Dataset released date'\n-              label_display: '0'\n-              provider: layout_builder\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: datetime_default\n-                label: above\n-                settings:\n-                  timezone_override: ''\n-                  format_type: html_date\n-                third_party_settings: {  }\n-            weight: -5\n-            additional: {  }\n-          de281d45-231b-425d-831b-7e3ee54072a6:\n-            uuid: de281d45-231b-425d-831b-7e3ee54072a6\n-            region: right\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:field_organization'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: list_default\n-                label: above\n-                settings: {  }\n-                third_party_settings: {  }\n-            weight: -9\n-            additional: {  }\n-          f100db74-faa0-41ff-ad29-0bda2dd46907:\n-            uuid: f100db74-faa0-41ff-ad29-0bda2dd46907\n-            region: left\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:field_sd_status'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: list_default\n-                label: above\n-                settings: {  }\n-                third_party_settings: {  }\n-            weight: -7\n-            additional: {  }\n-          6f7c3c83-ee0b-45fb-80c2-2e2122a29ef0:\n-            uuid: 6f7c3c83-ee0b-45fb-80c2-2e2122a29ef0\n-            region: left\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:field_dataset_subject'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: list_default\n-                label: above\n-                settings: {  }\n-                third_party_settings: {  }\n-            weight: -4\n-            additional: {  }\n-          8f818792-ff06-4bf4-bfd9-1b1c0fa18444:\n-            uuid: 8f818792-ff06-4bf4-bfd9-1b1c0fa18444\n-            region: left\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:field_dataset_keywords'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: string\n-                label: above\n-                settings:\n-                  link_to_entity: false\n-                third_party_settings: {  }\n-            weight: -3\n-            additional: {  }\n-          f103b731-a779-445b-b1db-4c4f796112f2:\n-            uuid: f103b731-a779-445b-b1db-4c4f796112f2\n-            region: right\n-            configuration:\n-              id: 'field_block:node:suggested_dataset:field_feedback'\n-              label_display: '0'\n-              context_mapping:\n-                entity: layout_builder.entity\n-              formatter:\n-                type: basic_string\n-                label: above\n-                settings: {  }\n-                third_party_settings: {  }\n-            weight: 1\n-            additional: {  }\n-          91e9d935-49ae-4bbb-8c23-9826595afb14:\n-            uuid: 91e9d935-49ae-4bbb-8c23-9826595afb14\n-            region: left\n-            configuration:\n-              id: webform_block\n-              label: Webform\n-              label_display: '0'\n-              provider: webform\n-              context_mapping: {  }\n-              webform_id: vote_up_down\n-              default_data: ''\n-              redirect: false\n-            weight: -2\n-            additional: {  }\n-        third_party_settings: {  }\n-id: node.suggested_dataset.default\n-targetEntityType: node\n-bundle: suggested_dataset\n-mode: default\n-content:\n-  body:\n-    type: text_default\n-    label: above\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 3\n-    region: content\n-  comment:\n-    type: comment_default\n-    label: above\n-    settings:\n-      view_mode: default\n-      pager_id: 0\n-    third_party_settings: {  }\n-    weight: 7\n-    region: content\n-  content_moderation_control:\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: -20\n-    region: content\n-  field_dataset_keywords:\n-    type: string\n-    label: above\n-    settings:\n-      link_to_entity: false\n-    third_party_settings: {  }\n-    weight: 15\n-    region: left\n-  field_dataset_subject:\n-    type: list_default\n-    label: above\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 14\n-    region: left\n-  field_date_published:\n-    type: datetime_default\n-    label: above\n-    settings:\n-      timezone_override: ''\n-      format_type: medium\n-    third_party_settings: {  }\n-    weight: 9\n-    region: content\n-  field_feedback:\n-    type: basic_string\n-    label: above\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 19\n-    region: left\n-  field_organization:\n-    type: list_default\n-    label: above\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 12\n-    region: left\n-  field_previousnodeid:\n-    type: number_integer\n-    label: above\n-    settings:\n-      thousand_separator: ''\n-      prefix_suffix: true\n-    third_party_settings: {  }\n-    weight: 6\n-    region: content\n-  field_sd_status:\n-    type: list_default\n-    label: above\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 13\n-    region: left\n-  field_status_link:\n-    type: link\n-    label: above\n-    settings:\n-      trim_length: 80\n-      url_only: false\n-      url_plain: false\n-      rel: ''\n-      target: ''\n-    third_party_settings: {  }\n-    weight: 5\n-    region: content\n-  field_vote_up_down:\n-    type: number_integer\n-    label: above\n-    settings:\n-      thousand_separator: ''\n-      prefix_suffix: true\n-    third_party_settings: {  }\n-    weight: 8\n-    region: content\n-  field_webform_submission_id:\n-    type: number_integer\n-    label: above\n-    settings:\n-      thousand_separator: ''\n-      prefix_suffix: true\n-    third_party_settings: {  }\n-    weight: 18\n-    region: left\n-  links:\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 0\n-    region: content\n-hidden:\n-  field_meta_tags: true\n-  langcode: true\n-  search_api_excerpt: true"
                },
                {
                    "sha": "e5cf53f30f9d24e61a58418f51fc604c0856e4fd",
                    "filename": "config/core.entity_view_display.node.suggested_dataset.teaser.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 61,
                    "changes": 61,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_view_display.node.suggested_dataset.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fcore.entity_view_display.node.suggested_dataset.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.suggested_dataset.teaser.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,61 +0,0 @@\n-uuid: 5971fa39-64cf-403d-886b-1f8d8fe32a27\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - core.entity_view_mode.node.teaser\n-    - field.field.node.suggested_dataset.body\n-    - field.field.node.suggested_dataset.comment\n-    - field.field.node.suggested_dataset.field_dataset_keywords\n-    - field.field.node.suggested_dataset.field_dataset_subject\n-    - field.field.node.suggested_dataset.field_date_published\n-    - field.field.node.suggested_dataset.field_feedback\n-    - field.field.node.suggested_dataset.field_meta_tags\n-    - field.field.node.suggested_dataset.field_organization\n-    - field.field.node.suggested_dataset.field_previousnodeid\n-    - field.field.node.suggested_dataset.field_sd_status\n-    - field.field.node.suggested_dataset.field_status_link\n-    - field.field.node.suggested_dataset.field_vote_up_down\n-    - field.field.node.suggested_dataset.field_webform_submission_id\n-    - node.type.suggested_dataset\n-  module:\n-    - text\n-    - user\n-id: node.suggested_dataset.teaser\n-targetEntityType: node\n-bundle: suggested_dataset\n-mode: teaser\n-content:\n-  body:\n-    type: text_summary_or_trimmed\n-    label: hidden\n-    settings:\n-      trim_length: 600\n-    third_party_settings: {  }\n-    weight: 101\n-    region: content\n-  content_moderation_control:\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: -20\n-    region: content\n-  links:\n-    settings: {  }\n-    third_party_settings: {  }\n-    weight: 100\n-    region: content\n-hidden:\n-  comment: true\n-  field_dataset_keywords: true\n-  field_dataset_subject: true\n-  field_date_published: true\n-  field_feedback: true\n-  field_meta_tags: true\n-  field_organization: true\n-  field_previousnodeid: true\n-  field_sd_status: true\n-  field_status_link: true\n-  field_vote_up_down: true\n-  field_webform_submission_id: true\n-  langcode: true\n-  search_api_excerpt: true"
                },
                {
                    "sha": "d4679814375a6453ee3869d6201c3f1e0f80ad3e",
                    "filename": "config/core.entity_view_display.node.webform.teaser.yml",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 0,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.webform.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_display.node.webform.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_display.node.webform.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,6 +5,8 @@ dependencies:\n   config:\n     - core.entity_view_mode.node.teaser\n     - field.field.node.webform.body\n+    - field.field.node.webform.field_previousnodeid\n+    - field.field.node.webform.field_webform\n     - node.type.webform\n   module:\n     - text\n@@ -22,10 +24,18 @@ content:\n     third_party_settings: {  }\n     weight: 101\n     region: content\n+  content_moderation_control:\n+    weight: -20\n+    settings: {  }\n+    third_party_settings: {  }\n+    region: content\n   links:\n     settings: {  }\n     third_party_settings: {  }\n     weight: 100\n     region: content\n hidden:\n+  field_previousnodeid: true\n+  field_webform: true\n   langcode: true\n+  search_api_excerpt: true"
                },
                {
                    "sha": "0b25b3a57b78dd4b1abcbbba87632ae5fb6af3b6",
                    "filename": "config/core.entity_view_mode.block.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.block.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.block.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.block.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - block\n id: block.token\n label: Token\n+description: ''\n targetEntityType: block\n cache: true"
                },
                {
                    "sha": "a4094395c9a4129f6b83536df25093560d981cc2",
                    "filename": "config/core.entity_view_mode.block_content.full.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.block_content.full.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.block_content.full.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.block_content.full.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: 4tedlMuvQjDOdvHdw86_e-2Rt78aR7TGFMfOK8Ejppg\n id: block_content.full\n label: Full\n+description: ''\n targetEntityType: block_content\n cache: true"
                },
                {
                    "sha": "f49b752e6d142970fe277f0fd82d2dab2881254f",
                    "filename": "config/core.entity_view_mode.block_content.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.block_content.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.block_content.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.block_content.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - block_content\n id: block_content.token\n label: Token\n+description: ''\n targetEntityType: block_content\n cache: true"
                },
                {
                    "sha": "ef884d2a30841c3b8b5992ad9543e60ec01f1c16",
                    "filename": "config/core.entity_view_mode.comment.full.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.comment.full.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.comment.full.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.comment.full.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: K7eNlfU7NEUajz01wItywZklr2oaPgL6s1_97fmDXLA\n id: comment.full\n label: 'Full comment'\n+description: ''\n targetEntityType: comment\n cache: true"
                },
                {
                    "sha": "5259553c7f47b21321f6ab30113a9cf093cc0982",
                    "filename": "config/core.entity_view_mode.comment.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.comment.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.comment.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.comment.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - comment\n id: comment.token\n label: Token\n+description: ''\n targetEntityType: comment\n cache: true"
                },
                {
                    "sha": "3df911daef74a1a3d81cafda897e85976ecb6078",
                    "filename": "config/core.entity_view_mode.content_moderation_state.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.content_moderation_state.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.content_moderation_state.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.content_moderation_state.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - content_moderation\n id: content_moderation_state.token\n label: Token\n+description: ''\n targetEntityType: content_moderation_state\n cache: true"
                },
                {
                    "sha": "dac0c0058975c414c2d5aeb37262a4dec1c3ca89",
                    "filename": "config/core.entity_view_mode.file.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.file.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.file.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.file.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - file\n id: file.token\n label: Token\n+description: ''\n targetEntityType: file\n cache: true"
                },
                {
                    "sha": "55b5795da9498945096df190aae8f425bd72392f",
                    "filename": "config/core.entity_view_mode.media.full.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.media.full.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.media.full.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.media.full.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: 6NBUEuGmlkClK8Fb76tSMMpO2eZ4LWCBdbUk4z7CuP0\n id: media.full\n label: 'Full content'\n+description: ''\n targetEntityType: media\n cache: true"
                },
                {
                    "sha": "15a8b7c290697ce226d2c3f2211e106fa8a97211",
                    "filename": "config/core.entity_view_mode.media.media_library.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.media.media_library.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.media.media_library.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.media.media_library.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -11,5 +11,6 @@ _core:\n   default_config_hash: pkq0uj-IoqEQRBOP_ddUDV0ZJ-dKQ_fLcppsEDF2UO8\n id: media.media_library\n label: 'Media library'\n+description: ''\n targetEntityType: media\n cache: true"
                },
                {
                    "sha": "e57ebab7d3799bdeaba04daadbbf8083daa00f4c",
                    "filename": "config/core.entity_view_mode.media.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.media.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.media.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.media.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - media\n id: media.token\n label: Token\n+description: ''\n targetEntityType: media\n cache: true"
                },
                {
                    "sha": "60c28b499d5c414d99e120e0819f546365360514",
                    "filename": "config/core.entity_view_mode.menu_link_content.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.menu_link_content.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.menu_link_content.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.menu_link_content.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - menu_link_content\n id: menu_link_content.token\n label: Token\n+description: ''\n targetEntityType: menu_link_content\n cache: true"
                },
                {
                    "sha": "e7dc1ca8dca6b139f083114a291cae90479c6ab7",
                    "filename": "config/core.entity_view_mode.node.full.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.full.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.full.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.node.full.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: ElrtInxGjZd7GaapJ5O9n-ugi2hG2IxFivtgn0tHOsk\n id: node.full\n label: 'Full content'\n+description: ''\n targetEntityType: node\n cache: true"
                },
                {
                    "sha": "87d88bc592ac444447cb1526c31a6b343ea9a864",
                    "filename": "config/core.entity_view_mode.node.print.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.print.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.print.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.node.print.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -11,5 +11,6 @@ _core:\n   default_config_hash: ERjobPGdPFAM9p5cmQIcJzk-0cY-1mE1OV_pKmMlJaE\n id: node.print\n label: Print\n+description: ''\n targetEntityType: node\n cache: true"
                },
                {
                    "sha": "5e34d234a3df83e6a5041586b8c109ad938ddb6f",
                    "filename": "config/core.entity_view_mode.node.rss.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.rss.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.rss.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.node.rss.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: vlYzr-rp2f9NMp-Qlr4sFjlqRq-90mco5-afLNGwCrU\n id: node.rss\n label: RSS\n+description: ''\n targetEntityType: node\n cache: true"
                },
                {
                    "sha": "b4c7e61321823df3f9b0b23c35e2078a425744ef",
                    "filename": "config/core.entity_view_mode.node.search_index.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.search_index.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.search_index.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.node.search_index.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: fVFfJv_GzBRE-wpRHbfD5a3VjnhbEOXG6lvRd3uaccY\n id: node.search_index\n label: 'Search index'\n+description: ''\n targetEntityType: node\n cache: true"
                },
                {
                    "sha": "9a85f042bcb1275080a04e3e5948802df230a544",
                    "filename": "config/core.entity_view_mode.node.search_result.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.search_result.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.search_result.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.node.search_result.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: 6GCOQ-jP2RbdbHA5YWQ6bT8CfGbqrBYKOSC_XY4E3ZM\n id: node.search_result\n label: 'Search result highlighting input'\n+description: ''\n targetEntityType: node\n cache: true"
                },
                {
                    "sha": "9f2d474205df19b606cad1bdb741ffa3c29a146d",
                    "filename": "config/core.entity_view_mode.node.teaser.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.teaser.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.teaser.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.node.teaser.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: Mz9qWr1kUYK0mjRAGDsr5XS6PvtZ24en_7ndt-pyWe4\n id: node.teaser\n label: Teaser\n+description: ''\n targetEntityType: node\n cache: true"
                },
                {
                    "sha": "d8c81f90a77a2bb1bccac7b263243353fd755cec",
                    "filename": "config/core.entity_view_mode.node.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.node.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.node.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - node\n id: node.token\n label: Token\n+description: ''\n targetEntityType: node\n cache: true"
                },
                {
                    "sha": "2b4f378ca6345a3b2049d070d81781a2fe65c06c",
                    "filename": "config/core.entity_view_mode.taxonomy_term.full.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.taxonomy_term.full.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.taxonomy_term.full.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.taxonomy_term.full.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: '-PPKjsNQPvoIDjOuUAvlLocYD976MNjb9Zpgyz5_BWE'\n id: taxonomy_term.full\n label: 'Taxonomy term page'\n+description: ''\n targetEntityType: taxonomy_term\n cache: true"
                },
                {
                    "sha": "9d25d6822b212197810d2b4ccee3d0f2a4eaf2d2",
                    "filename": "config/core.entity_view_mode.taxonomy_term.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.taxonomy_term.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.taxonomy_term.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.taxonomy_term.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - taxonomy\n id: taxonomy_term.token\n label: Token\n+description: ''\n targetEntityType: taxonomy_term\n cache: true"
                },
                {
                    "sha": "92450cc79cab26f81133f7fb0c30e77fd327da83",
                    "filename": "config/core.entity_view_mode.user.compact.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.user.compact.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.user.compact.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.user.compact.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: 71CSAr_LNPcgu6D6jI4INl1KATkahmeyUFBETAWya8g\n id: user.compact\n label: Compact\n+description: ''\n targetEntityType: user\n cache: true"
                },
                {
                    "sha": "b03138ae9de576a74a2d1ed36ff2f2be1ac8c92e",
                    "filename": "config/core.entity_view_mode.user.full.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.user.full.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.user.full.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.user.full.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,5 +8,6 @@ _core:\n   default_config_hash: mQIF_foYjmnVSr9MpcD4CTaJE_FpO1AyDd_DskztGhM\n id: user.full\n label: 'User account'\n+description: ''\n targetEntityType: user\n cache: true"
                },
                {
                    "sha": "6b5cfe37e176987ad30373a2b930831f6eb7a36e",
                    "filename": "config/core.entity_view_mode.user.token.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.user.token.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.entity_view_mode.user.token.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.entity_view_mode.user.token.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,6 @@ dependencies:\n     - user\n id: user.token\n label: Token\n+description: ''\n targetEntityType: user\n cache: true"
                },
                {
                    "sha": "f147b49dc06ab57622209f291d017a2680a7a654",
                    "filename": "config/core.extension.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.extension.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fcore.extension.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fcore.extension.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -67,6 +67,7 @@ module:\n   path: 0\n   path_alias: 0\n   pgsql: 0\n+  phpass: 0\n   redirect: 0\n   redis: 0\n   rest: 0"
                },
                {
                    "sha": "51d89187a8e750c56eef5d0de3b0a5ffa3b526a7",
                    "filename": "config/editor.editor.rich_text.yml",
                    "status": "modified",
                    "additions": 55,
                    "deletions": 9,
                    "changes": 64,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Feditor.editor.rich_text.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Feditor.editor.rich_text.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Feditor.editor.rich_text.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -38,24 +38,70 @@ settings:\n       - '|'\n       - sourceEditing\n   plugins:\n+    ckeditor5_alignment:\n+      enabled_alignments:\n+        - left\n+        - center\n+        - right\n+        - justify\n+    ckeditor5_codeBlock:\n+      languages:\n+        -\n+          label: 'Plain text'\n+          language: plaintext\n+        -\n+          label: C\n+          language: c\n+        -\n+          label: 'C#'\n+          language: cs\n+        -\n+          label: C++\n+          language: cpp\n+        -\n+          label: CSS\n+          language: css\n+        -\n+          label: Diff\n+          language: diff\n+        -\n+          label: HTML\n+          language: html\n+        -\n+          label: Java\n+          language: java\n+        -\n+          label: JavaScript\n+          language: javascript\n+        -\n+          label: PHP\n+          language: php\n+        -\n+          label: Python\n+          language: python\n+        -\n+          label: Ruby\n+          language: ruby\n+        -\n+          label: TypeScript\n+          language: typescript\n+        -\n+          label: XML\n+          language: xml\n     ckeditor5_heading:\n       enabled_headings:\n         - heading2\n         - heading3\n         - heading4\n         - heading5\n         - heading6\n+    ckeditor5_list:\n+      properties:\n+        reversed: true\n+        startIndex: true\n+      multiBlock: true\n     ckeditor5_sourceEditing:\n       allowed_tags: {  }\n-    ckeditor5_list:\n-      reversed: true\n-      startIndex: true\n-    ckeditor5_alignment:\n-      enabled_alignments:\n-        - left\n-        - center\n-        - right\n-        - justify\n     media_media:\n       allow_view_mode_override: false\n image_upload:"
                },
                {
                    "sha": "bab8b408df6a6ebf8eb74e06a6c26691894ef6c8",
                    "filename": "config/editor.editor.webform_default.yml",
                    "status": "added",
                    "additions": 49,
                    "deletions": 0,
                    "changes": 49,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Feditor.editor.webform_default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Feditor.editor.webform_default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Feditor.editor.webform_default.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1,49 @@\n+uuid: 0a569290-eae6-478c-b9cf-6fdfc6f95729\n+langcode: en\n+status: true\n+dependencies:\n+  config:\n+    - filter.format.webform_default\n+  module:\n+    - ckeditor5\n+format: webform_default\n+editor: ckeditor5\n+settings:\n+  toolbar:\n+    items:\n+      - heading\n+      - '|'\n+      - bold\n+      - italic\n+      - subscript\n+      - superscript\n+      - '|'\n+      - specialCharacters\n+      - '|'\n+      - numberedList\n+      - bulletedList\n+      - '|'\n+      - link\n+      - '|'\n+      - indent\n+      - outdent\n+      - '|'\n+      - blockQuote\n+      - '|'\n+      - sourceEditing\n+  plugins:\n+    ckeditor5_heading:\n+      enabled_headings:\n+        - heading2\n+        - heading3\n+        - heading4\n+        - heading5\n+        - heading6\n+    ckeditor5_list:\n+      properties:\n+        reversed: true\n+        startIndex: true\n+      multiBlock: true\n+    ckeditor5_sourceEditing:\n+      allowed_tags: {  }\n+image_upload: {  }"
                },
                {
                    "sha": "607c50cf9395f2731a01e6e7bff2badc3611fc31",
                    "filename": "config/facets.facet.contracts_commodity_type_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_commodity_type_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_commodity_type_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_commodity_type_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: f7fb547b-d207-4cf5-93ec-f776e63debed\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_commodity_type_en\n-name: 'PD Contracts - Commodity Type'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_commodity_type_en\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: commodity_type_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "d81ef219ed64651ac39f5e8547e09a37dbcb13c8",
                    "filename": "config/facets.facet.contracts_commodity_type_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_commodity_type_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_commodity_type_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_commodity_type_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 3257ef63-797f-44a5-b2f7-074ad4b53b9d\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_commodity_type_fr\n-name: 'PD Contracts - Type de marchandises'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_commodity_type_fr\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: commodity_type_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "9d2deb58a542dd3b8c9c1e6f3171b966af647b4f",
                    "filename": "config/facets.facet.contracts_contract_value_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_contract_value_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_contract_value_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_contract_value_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 355639f4-41f0-4c67-92eb-c582ba90b74e\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_contract_value_en\n-name: 'PD Contracts - Contract Value'\n-weight: 1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_contract_value_en\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: contract_value_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "b1dc32f93b4b7509d432f958b5b57b8afadd2213",
                    "filename": "config/facets.facet.contracts_contract_value_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_contract_value_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_contract_value_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_contract_value_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 44b3de9a-820f-4a72-b184-d754e38e5019\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_contract_value_fr\n-name: 'PD Contracts - Valeur du contrat '\n-weight: 2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_contract_value_fr\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: contract_value_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "8b7989ee7f422750e1036896e2d8d2075c3ed91d",
                    "filename": "config/facets.facet.contracts_country_of_origin_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_country_of_origin_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_country_of_origin_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_country_of_origin_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 407b0035-4cc8-4015-b32b-75654aa799ec\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_country_of_origin_en\n-name: 'PD Contracts - Country of Origin'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_country_of_origin_en\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: country_of_origin_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "7a93b1cbde06fbb4be52bf93906db783a693d314",
                    "filename": "config/facets.facet.contracts_country_of_origin_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_country_of_origin_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_country_of_origin_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_country_of_origin_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 988c60e3-7d50-4863-903e-e65774151990\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_country_of_origin_fr\n-name: 'PD Contracts - Pays d''origine'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_country_of_origin_fr\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: country_of_origin_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "2fbf4ccf4960faeabfc632ac46ae21dd79289fba",
                    "filename": "config/facets.facet.contracts_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 5286d135-bff4-4967-bc0b-8e5e7b001d35\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_organization_en\n-name: 'PD Contracts - Organization'\n-weight: -7\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_organization_en\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: org_name_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "2653b5f21e57470519270a19c80565b509929860",
                    "filename": "config/facets.facet.contracts_organization_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_organization_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_organization_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_organization_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 93e6d47c-3242-440a-8be0-2ad8577150a5\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_organization_fr\n-name: 'PD Contracts - Organisation'\n-weight: -6\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_organization_fr\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: org_name_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "de16dfad4ba5c4f62f9d58ff90f8cb6f2f203dd0",
                    "filename": "config/facets.facet.contracts_year_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_year_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_year_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_year_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 0d03f200-a3cc-455a-ab0d-8c331633ac22\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_year_en\n-name: 'PD Contracts - Year'\n-weight: -5\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_year_en\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "9d9948a9b135eeaca741069e678e18c48d15f297",
                    "filename": "config/facets.facet.contracts_year_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_year_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.contracts_year_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.contracts_year_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 1feef121-2bc2-41a9-9f80-54a6a4c78809\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_year_fr\n-name: 'PD Contracts - Année'\n-weight: -4\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: contracts_year_fr\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "6fd30e04ce3246783b940a2908767898a1877057",
                    "filename": "config/facets.facet.grants_agreement_type_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_agreement_type_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_agreement_type_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.grants_agreement_type_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 06834d4a-a671-43b8-8468-d3eec3f3748b\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_grants\n-    - views.view.pd_core_grants\n-  module:\n-    - search_api\n-id: grants_agreement_type_en\n-name: 'PD Grants - Agreement Type'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: grants_agreement_type_en\n-facet_source_id: 'search_api:views_block__pd_core_grants__block_1'\n-field_identifier: agreement_type_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "ce3698e02da37a2e208b847e6cfa71128c7614b5",
                    "filename": "config/facets.facet.grants_agreement_type_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_agreement_type_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_agreement_type_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.grants_agreement_type_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 20a5ab1f-5b78-4fc7-a49c-5ac867e8cee4\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_grants\n-    - views.view.pd_core_grants\n-  module:\n-    - search_api\n-id: grants_agreement_type_fr\n-name: 'PD Grants - Type d’entente'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: grants_agreement_type_fr\n-facet_source_id: 'search_api:views_block__pd_core_grants__block_1'\n-field_identifier: agreement_type_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "e11a346a71d27f8001de49ca5561ecdf73867e62",
                    "filename": "config/facets.facet.grants_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.grants_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: aa05645e-dec5-4ce7-913f-3aebba3057d1\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_grants\n-    - views.view.pd_core_grants\n-  module:\n-    - search_api\n-id: grants_organization_en\n-name: 'PD Grants - Organization'\n-weight: -4\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: grants_organization_en\n-facet_source_id: 'search_api:views_block__pd_core_grants__block_1'\n-field_identifier: org_name_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: ASC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "f1832129c1d2bc09f96d21ee1bb3d3fc5409fd67",
                    "filename": "config/facets.facet.grants_organization_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_organization_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_organization_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.grants_organization_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 12505b4f-c19b-409e-b0f6-e311da198b98\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_grants\n-    - views.view.pd_core_grants\n-  module:\n-    - search_api\n-id: grants_organization_fr\n-name: 'PD Grants - Organisation'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: grants_organization_fr\n-facet_source_id: 'search_api:views_block__pd_core_grants__block_1'\n-field_identifier: org_name_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: ASC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "cc2e6efb0ac1d2b2d9f1695cf92edee7f6db9b79",
                    "filename": "config/facets.facet.grants_year_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_year_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_year_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.grants_year_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: d5f6ae2c-32e5-4a4f-950b-b5e479c18eae\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_grants\n-    - views.view.pd_core_grants\n-  module:\n-    - search_api\n-id: grants_year_en\n-name: 'PD Grants - Year'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: grants_year_en\n-facet_source_id: 'search_api:views_block__pd_core_grants__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "edfc2de6ff8bc2b2bad4039441f8c5638b186adf",
                    "filename": "config/facets.facet.grants_year_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_year_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.grants_year_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.grants_year_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: e30464b9-05ad-45f3-8780-e0a6bb678ffd\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_grants\n-    - views.view.pd_core_grants\n-  module:\n-    - search_api\n-id: grants_year_fr\n-name: 'PD Grants - Année'\n-weight: 1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: grants_year_fr\n-facet_source_id: 'search_api:views_block__pd_core_grants__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "a6a462e15e6019bdc010e5147ae9be0fe538b323",
                    "filename": "config/facets.facet.hospitalityq_nil_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_nil_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_nil_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_nil_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 532aff5d-59e7-4a02-bcb7-45be485d5eec\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_nil_en\n-name: 'PD Hospitality (Q) - Nil Report'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_nil_en\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: report_type_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 0\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "8a99dad1c38bec72a6d429d2b1e1b27274ce98d8",
                    "filename": "config/facets.facet.hospitalityq_nil_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_nil_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_nil_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_nil_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 1dd14b54-de94-4230-a4c1-771d3918cf75\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_nil_fr\n-name: 'PD Hospitality (Q) - Rapport nul'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_nil_fr\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: report_type_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 0\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "688ed7889756a0bb8d50360abb438dbc616870b2",
                    "filename": "config/facets.facet.hospitalityq_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: acb69cbc-2e0b-4439-ac14-64e5044be790\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_organization_en\n-name: 'PD Hospitality (Q) - Organization'\n-weight: -4\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_organization_en\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: org_name_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "29cd99eb2a3b0b45f3584409183e240561a5750b",
                    "filename": "config/facets.facet.hospitalityq_organization_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_organization_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_organization_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_organization_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 9ab23c48-d8e0-4e65-9464-1565ed83c131\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_organization_fr\n-name: 'PD Hospitality (Q) - Organisation'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_organization_fr\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: org_name_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "ac54e2b0562e44b9ae19e06a23df09ceb6ad96f6",
                    "filename": "config/facets.facet.hospitalityq_total_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_total_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_total_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_total_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 38508f6a-5c86-47f5-a86b-5e0431230e11\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_total_en\n-name: 'PD Hospitality (Q) - Total'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_total_en\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: total_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "3dd21b5879ffaa19a441205b123de8ad9894eeb5",
                    "filename": "config/facets.facet.hospitalityq_total_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_total_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_total_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_total_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 0660c27e-3247-4705-ad2e-add960d8ceee\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_total_fr\n-name: 'PD Hospitality (Q) - Total FR'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_total_fr\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: total_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "4a77a718473763dff3972aa809f6396c2518fe06",
                    "filename": "config/facets.facet.hospitalityq_year_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_year_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_year_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_year_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 2c8ce169-f57c-47c1-b64f-ab445d9bc396\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_year_en\n-name: 'PD Hospitality (Q) - Year'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_year_en\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "5f6ddbe470981493b0874beb2c2d850688e38825",
                    "filename": "config/facets.facet.hospitalityq_year_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_year_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.hospitalityq_year_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.hospitalityq_year_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 1500920a-7a7d-4e15-ae84-9335abc9b144\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_year_fr\n-name: 'PD Hospitality (Q) - Année'\n-weight: 1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: hospitalityq_year_fr\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "645b3b150699db42f8bd5d4aa6f9958f57158332",
                    "filename": "config/facets.facet.pd_contracts_multi_agreement_type_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.pd_contracts_multi_agreement_type_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.pd_contracts_multi_agreement_type_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.pd_contracts_multi_agreement_type_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 373457f7-3dae-41fc-a7d7-4307586e73b6\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: pd_contracts_multi_agreement_type_en\n-name: 'PD Contracts - Agreement Type'\n-weight: 3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: pd_contracts_multi_agreement_type_en\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: multi_agreement_type_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "ecae5db3f1d31c6f95ed55ea18902962c4069494",
                    "filename": "config/facets.facet.pd_contracts_multi_agreement_type_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.pd_contracts_multi_agreement_type_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.pd_contracts_multi_agreement_type_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.pd_contracts_multi_agreement_type_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 4782b624-de97-4452-b6cc-cf83801a8f3b\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: pd_contracts_multi_agreement_type_fr\n-name: 'PD Contracts - Type de contrats'\n-weight: 4\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: pd_contracts_multi_agreement_type_fr\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-field_identifier: multi_agreement_type_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "d53c7caf884875ac517d008780ad991572ec1e0f",
                    "filename": "config/facets.facet.reclassification_nil_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_nil_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_nil_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.reclassification_nil_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 9a0fd4fc-aa6a-44e2-a41c-4ff1269184ed\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_reclassification\n-    - views.view.pd_core_reclassification\n-  module:\n-    - search_api\n-id: reclassification_nil_en\n-name: 'PD Reclassification - Nil Report'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: reclassification_nil_en\n-facet_source_id: 'search_api:views_block__pd_core_reclassification__block_1'\n-field_identifier: report_type_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 0\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "4600ef97976d541a254015a3c19a11618ccedb4a",
                    "filename": "config/facets.facet.reclassification_nil_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_nil_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_nil_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.reclassification_nil_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 9d075020-b511-4ed6-8287-19658dc0bd4f\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_reclassification\n-    - views.view.pd_core_reclassification\n-  module:\n-    - search_api\n-id: reclassification_nil_fr\n-name: 'PD Reclassification - Rapport nul'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: reclassification_nil_fr\n-facet_source_id: 'search_api:views_block__pd_core_reclassification__block_1'\n-field_identifier: report_type_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 0\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "968ca716dcdbc0d4b5adfb03cba19a5826c88fcd",
                    "filename": "config/facets.facet.reclassification_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.reclassification_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 1df6c544-3976-4d55-b051-4e2ffb7e348b\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_reclassification\n-    - views.view.pd_core_reclassification\n-  module:\n-    - search_api\n-id: reclassification_organization_en\n-name: 'PD Reclassification - Organization'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: reclassification_organization_en\n-facet_source_id: 'search_api:views_block__pd_core_reclassification__block_1'\n-field_identifier: org_name_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "b81a3f2a4ef640a69739ab2fd86218a1e8ac6002",
                    "filename": "config/facets.facet.reclassification_organization_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_organization_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_organization_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.reclassification_organization_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 0aadeb26-1e2e-4902-9270-a3660b5cab37\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_reclassification\n-    - views.view.pd_core_reclassification\n-  module:\n-    - search_api\n-id: reclassification_organization_fr\n-name: 'PD Reclassification - Organisation'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: reclassification_organization_fr\n-facet_source_id: 'search_api:views_block__pd_core_reclassification__block_1'\n-field_identifier: org_name_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "35829c523c645177879cbc0d209731c224298dd7",
                    "filename": "config/facets.facet.reclassification_year_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_year_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_year_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.reclassification_year_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: f71abd0b-f48b-4c07-b612-fc7c3a20fe91\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_reclassification\n-    - views.view.pd_core_reclassification\n-  module:\n-    - search_api\n-id: reclassification_year_en\n-name: 'PD reclassification - Year'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: reclassification_year_en\n-facet_source_id: 'search_api:views_block__pd_core_reclassification__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "66c361b6eade377d1931b3c59c5825f0b4838aa1",
                    "filename": "config/facets.facet.reclassification_year_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_year_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.reclassification_year_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.reclassification_year_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 17d5fddd-6a04-467d-8ff2-a4ba29db9c10\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_reclassification\n-    - views.view.pd_core_reclassification\n-  module:\n-    - search_api\n-id: reclassification_year_fr\n-name: 'PD Reclassification - Année'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: reclassification_year_fr\n-facet_source_id: 'search_api:views_block__pd_core_reclassification__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "9dc4421a362135834b2416e0f13af201069f5761",
                    "filename": "config/facets.facet.sd_organisation_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 73,
                    "changes": 73,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_organisation_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_organisation_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.sd_organisation_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,73 +0,0 @@\n-uuid: ffb44cc6-cc7f-46a9-b434-4e8b92247c0e\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.drupal_content\n-    - views.view.suggested_dataset\n-  module:\n-    - search_api\n-id: sd_organisation_fr\n-name: 'Suggested Dataset: Organisation'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: sd_organization_fr\n-facet_source_id: 'search_api:views_block__suggested_dataset__block_1'\n-field_identifier: field_organization\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  list_item:\n-    processor_id: list_item\n-    weights:\n-      build: 5\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "128b608f525105c7e0b4da14cc402b65de781034",
                    "filename": "config/facets.facet.sd_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 73,
                    "changes": 73,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.sd_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,73 +0,0 @@\n-uuid: d477e4ae-fb04-48ea-aa2c-31a50d9a594f\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.drupal_content\n-    - views.view.suggested_dataset\n-  module:\n-    - search_api\n-id: sd_organization_en\n-name: 'Suggested Dataset: Organization'\n-weight: -4\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: sd_organization_en\n-facet_source_id: 'search_api:views_block__suggested_dataset__block_1'\n-field_identifier: field_organization\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  list_item:\n-    processor_id: list_item\n-    weights:\n-      build: 5\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "6fc08298c0d34a2e0a519be327705d915e8d610d",
                    "filename": "config/facets.facet.sd_status_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 79,
                    "changes": 79,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_status_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_status_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.sd_status_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,79 +0,0 @@\n-uuid: b5304bcd-8e18-414d-b69a-c7150a90d4fe\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.drupal_content\n-    - views.view.suggested_dataset\n-  module:\n-    - search_api\n-id: sd_status_en\n-name: 'Suggested Dataset: Status'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: sd_status_en\n-facet_source_id: 'search_api:views_block__suggested_dataset__block_1'\n-field_identifier: field_sd_status\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  list_item:\n-    processor_id: list_item\n-    weights:\n-      build: 5\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "51ba374beda6404c7367159a7ebbc2430d3da05d",
                    "filename": "config/facets.facet.sd_status_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 79,
                    "changes": 79,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_status_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_status_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.sd_status_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,79 +0,0 @@\n-uuid: 13bd01d3-c373-4204-8142-02ee9a6c661b\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.drupal_content\n-    - views.view.suggested_dataset\n-  module:\n-    - search_api\n-id: sd_status_fr\n-name: 'Suggested Dataset: État'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: sd_status_fr\n-facet_source_id: 'search_api:views_block__suggested_dataset__block_1'\n-field_identifier: field_sd_status\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  list_item:\n-    processor_id: list_item\n-    weights:\n-      build: 5\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "9c0e53f49581153b4017ad6a47c0e541592b8228",
                    "filename": "config/facets.facet.sd_subject_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 73,
                    "changes": 73,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_subject_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_subject_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.sd_subject_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,73 +0,0 @@\n-uuid: 59046c39-3308-4908-8561-af17a41ae9a3\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.drupal_content\n-    - views.view.suggested_dataset\n-  module:\n-    - search_api\n-id: sd_subject_en\n-name: 'Suggested Dataset: Subject'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: sd_subject_en\n-facet_source_id: 'search_api:views_block__suggested_dataset__block_1'\n-field_identifier: field_dataset_subject\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  list_item:\n-    processor_id: list_item\n-    weights:\n-      build: 5\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "b035d877b0471571e3c573821d55eb5cc7fe5e36",
                    "filename": "config/facets.facet.sd_subject_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 73,
                    "changes": 73,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_subject_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.sd_subject_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.sd_subject_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,73 +0,0 @@\n-uuid: b756c741-265f-4f08-aff0-9260bfc16fd6\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.drupal_content\n-    - views.view.suggested_dataset\n-  module:\n-    - search_api\n-id: sd_subject_fr\n-name: 'Suggested Dataset: Sujet'\n-weight: 1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: sd_subject_fr\n-facet_source_id: 'search_api:views_block__suggested_dataset__block_1'\n-field_identifier: field_dataset_subject\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  list_item:\n-    processor_id: list_item\n-    weights:\n-      build: 5\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "551ecb1270070afbc7b66973c4e65fae7f825a38",
                    "filename": "config/facets.facet.travela_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travela_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 214e84dc-515b-484e-9481-33d2248b366b\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travela\n-    - views.view.pd_core_travela\n-  module:\n-    - search_api\n-id: travela_organization_en\n-name: 'PD Travel Annual - Organization'\n-weight: -4\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travela_organization_en\n-facet_source_id: 'search_api:views_block__pd_core_travela__block_1'\n-field_identifier: org_name_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "e3ac2cf4236b6d9154035f3cdd6fe07543d2e696",
                    "filename": "config/facets.facet.travela_organization_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_organization_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_organization_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travela_organization_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 0ed23dda-2e9a-49b7-b226-e16ecc43d6b8\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travela\n-    - views.view.pd_core_travela\n-  module:\n-    - search_api\n-id: travela_organization_fr\n-name: 'PD Travel Annual - Organisation'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travela_organization_fr\n-facet_source_id: 'search_api:views_block__pd_core_travela__block_1'\n-field_identifier: org_name_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "b0b4fc4b217887b85585fb396456cab08bc82bc2",
                    "filename": "config/facets.facet.travela_total_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_total_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_total_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travela_total_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 765588d0-7186-42b3-8f60-49cddda80b52\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travela\n-    - views.view.pd_core_travela\n-  module:\n-    - search_api\n-id: travela_total_en\n-name: 'PD Travel Annual - Total'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travela_total_en\n-facet_source_id: 'search_api:views_block__pd_core_travela__block_1'\n-field_identifier: total_kdollars_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "86d54831460cc6e76b75eaa1243d990c1c4528b9",
                    "filename": "config/facets.facet.travela_total_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_total_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_total_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travela_total_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: ff86e4bf-adb7-467b-94a0-3884cff843cb\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travela\n-    - views.view.pd_core_travela\n-  module:\n-    - search_api\n-id: travela_total_fr\n-name: 'PD Travel Annual - Total (fr)'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travela_total_fr\n-facet_source_id: 'search_api:views_block__pd_core_travela__block_1'\n-field_identifier: total_kdollars_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "046ffabb0ed0dd49e57a02a6d35184d5fb96e1c7",
                    "filename": "config/facets.facet.travela_year_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_year_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_year_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travela_year_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 01d0be82-5f11-4ea0-a7a6-3bb578d0a1f0\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travela\n-    - views.view.pd_core_travela\n-  module:\n-    - search_api\n-id: travela_year_en\n-name: 'PD Travel Annual - Year'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travela_year_en\n-facet_source_id: 'search_api:views_block__pd_core_travela__block_1'\n-field_identifier: year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "8546724dffa79e5ee7d53f698e98d9b1d5771c5f",
                    "filename": "config/facets.facet.travela_year_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_year_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travela_year_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travela_year_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: bee81001-c12b-4375-b124-e52e40fe20d3\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travela\n-    - views.view.pd_core_travela\n-  module:\n-    - search_api\n-id: travela_year_fr\n-name: 'PD Travel Annual - Année'\n-weight: 1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travela_year_fr\n-facet_source_id: 'search_api:views_block__pd_core_travela__block_1'\n-field_identifier: year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "19421b3d93a28a3a79bb6c7dbd4d5b07f6e40bc3",
                    "filename": "config/facets.facet.travelq_nil_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_nil_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_nil_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_nil_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: 9dfacb0b-73c0-4200-84d9-1ecc53e8e5bf\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_nil_en\n-name: ' PD Travel (Q) - Nil Report'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_nil_en\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: report_type_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 0\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "b243394081750a8153ba2cd8f553159d6e0acf57",
                    "filename": "config/facets.facet.travelq_nil_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 74,
                    "changes": 74,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_nil_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_nil_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_nil_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,74 +0,0 @@\n-uuid: ccad5f60-01a9-43c7-acbe-9cec9937e3e0\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_nil_fr\n-name: 'PD Travel (Q) - Rapport nul'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_nil_fr\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: report_type_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 0\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  count_widget_order:\n-    processor_id: count_widget_order\n-    weights:\n-      sort: 30\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "a81c2f25c7554b81c58cce4c537b6af75bef9751",
                    "filename": "config/facets.facet.travelq_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: d8229f0f-df34-447b-99c1-30a2b5a1fcc2\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_organization_en\n-name: 'PD Travel (Q) - Organization'\n-weight: -4\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_organization_en\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: org_name_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "bc65a42d1f7f0f0083ee7b8576705ea63e626921",
                    "filename": "config/facets.facet.travelq_organization_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_organization_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_organization_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_organization_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: ed5eca7e-e930-42e9-a096-4469df758f0a\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_organization_fr\n-name: 'PD Travel (Q) - Organisation'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_organization_fr\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: org_name_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "f74f758d6dcaff8439929522e350b607bbc2d928",
                    "filename": "config/facets.facet.travelq_total_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_total_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_total_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_total_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 35993fde-3559-4384-a69c-29abd40f7b39\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_total_en\n-name: 'PD Travel (Q) - Total'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_total_en\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: total_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "c7dd4b8783c3e99473568a78897593bec4d83736",
                    "filename": "config/facets.facet.travelq_total_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_total_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_total_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_total_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: c991ef69-5a98-4a9a-ae27-cb8625e7127b\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_total_fr\n-name: 'PD Travel (Q) - Total FR'\n-weight: 1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_total_fr\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: total_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "2a9b8605c6a3890abc2909e986fbf952bb88bd77",
                    "filename": "config/facets.facet.travelq_year_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_year_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_year_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_year_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 3b28a5fa-74db-4654-b5d6-da20d3403cab\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_year_en\n-name: 'PD Travel (Q) - Year'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_year_en\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "e0d4f53175e8a6d3481cf652e37bc33d9561301a",
                    "filename": "config/facets.facet.travelq_year_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_year_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.travelq_year_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.travelq_year_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 41e3972a-6786-41e5-a4f5-a25352275e05\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_year_fr\n-name: 'PD Travel (Q) - Année'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: travelq_year_fr\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "24c6216432fd31b3b9fa710fc5a554ef3f311848",
                    "filename": "config/facets.facet.wrongdoing_organization_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_organization_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_organization_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.wrongdoing_organization_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: abdffe4a-0ca3-40d0-ab27-45aa19d1791f\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_wrongdoing\n-    - views.view.pd_core_wrongdoing\n-  module:\n-    - search_api\n-id: wrongdoing_organization_en\n-name: 'PD Wrongdoing - Organization'\n-weight: -2\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: wrongdoing_organization_en\n-facet_source_id: 'search_api:views_block__pd_core_wrongdoing__block_1'\n-field_identifier: org_name_en\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "a27b37b814cde7f7425e51aee4592621c2d15bee",
                    "filename": "config/facets.facet.wrongdoing_organization_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_organization_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_organization_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.wrongdoing_organization_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 57a60f5d-37e2-4136-8344-2b046587baa1\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_wrongdoing\n-    - views.view.pd_core_wrongdoing\n-  module:\n-    - search_api\n-id: wrongdoing_organization_fr\n-name: 'PD Wrongdoing - Organisation'\n-weight: -3\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: wrongdoing_organization_fr\n-facet_source_id: 'search_api:views_block__pd_core_wrongdoing__block_1'\n-field_identifier: org_name_fr\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: ASC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "d5346c6c131125dc77e0c7c93cb89caba7c562af",
                    "filename": "config/facets.facet.wrongdoing_year_en.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_year_en.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_year_en.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.wrongdoing_year_en.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: e385dd7b-e7f7-4d2a-9478-4848b89faa3c\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_wrongdoing\n-    - views.view.pd_core_wrongdoing\n-  module:\n-    - search_api\n-id: wrongdoing_year_en\n-name: 'PD Wrongdoing - Year'\n-weight: -1\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: wrongdoing_year_en\n-facet_source_id: 'search_api:views_block__pd_core_wrongdoing__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Show less'\n-      show_more_label: 'Show more'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "9d6211070a83e50537af1bc8e6b9d266f6ce6b75",
                    "filename": "config/facets.facet.wrongdoing_year_fr.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 68,
                    "changes": 68,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_year_fr.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets.facet.wrongdoing_year_fr.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets.facet.wrongdoing_year_fr.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,68 +0,0 @@\n-uuid: 60f22606-e750-44bc-aba6-bfb19f8bcb4c\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_wrongdoing\n-    - views.view.pd_core_wrongdoing\n-  module:\n-    - search_api\n-id: wrongdoing_year_fr\n-name: 'PD Wrongdoing - Année'\n-weight: 0\n-min_count: 1\n-missing: false\n-missing_label: others\n-url_alias: wrongdoing_year_fr\n-facet_source_id: 'search_api:views_block__pd_core_wrongdoing__block_1'\n-field_identifier: date_year\n-query_operator: or\n-hard_limit: 0\n-exclude: false\n-use_hierarchy: false\n-keep_hierarchy_parents_active: false\n-hierarchy:\n-  type: taxonomy\n-  config: {  }\n-expand_hierarchy: false\n-enable_parent_when_child_gets_disabled: true\n-widget:\n-  type: checkbox\n-  config:\n-    show_numbers: true\n-    soft_limit: 10\n-    show_reset_link: false\n-    reset_text: 'Show all'\n-    hide_reset_when_no_selection: false\n-    soft_limit_settings:\n-      show_less_label: 'Afficher moins'\n-      show_more_label: 'Afficher plus'\n-empty_behavior:\n-  behavior: none\n-only_visible_when_facet_source_is_visible: false\n-show_only_one_result: false\n-show_title: false\n-processor_configs:\n-  active_widget_order:\n-    processor_id: active_widget_order\n-    weights:\n-      sort: 20\n-    settings:\n-      sort: DESC\n-  display_value_widget_order:\n-    processor_id: display_value_widget_order\n-    weights:\n-      sort: 40\n-    settings:\n-      sort: DESC\n-  hide_non_narrowing_result_processor:\n-    processor_id: hide_non_narrowing_result_processor\n-    weights:\n-      build: 40\n-    settings: {  }\n-  url_processor_handler:\n-    processor_id: url_processor_handler\n-    weights:\n-      pre_query: 50\n-      build: 15\n-    settings: {  }"
                },
                {
                    "sha": "b8ef2baf0a7f17a35fc2c72ea5c5e64cabc376da",
                    "filename": "config/facets_summary.facets_summary.contracts_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 101,
                    "changes": 101,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.contracts_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.contracts_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.contracts_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,101 +0,0 @@\n-uuid: a5e86ab4-c7f2-411c-bfd3-bfd70102c5ff\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_contracts\n-    - views.view.pd_core_contracts\n-  module:\n-    - search_api\n-id: contracts_summary\n-name: 'PD Contracts - Current Search'\n-facet_source_id: 'search_api:views_block__pd_core_contracts__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'There is no current search in progress.'\n-        format: plain_text\n-facets:\n-  contracts_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: false\n-    weight: -10\n-  contracts_organization_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: false\n-    weight: -9\n-  contracts_year_en:\n-    checked: true\n-    label: Year\n-    separator: ', '\n-    show_count: false\n-    weight: -8\n-  contracts_year_fr:\n-    checked: true\n-    label: Année\n-    separator: ', '\n-    show_count: false\n-    weight: -7\n-  contracts_commodity_type_en:\n-    checked: true\n-    label: 'Commodity Type'\n-    separator: ', '\n-    show_count: false\n-    weight: -6\n-  contracts_commodity_type_fr:\n-    checked: true\n-    label: 'Type de marchandises'\n-    separator: ', '\n-    show_count: false\n-    weight: -5\n-  contracts_country_of_origin_en:\n-    checked: true\n-    label: 'Country of Origin'\n-    separator: ', '\n-    show_count: false\n-    weight: -4\n-  contracts_country_of_origin_fr:\n-    checked: true\n-    label: 'Pays d''origine'\n-    separator: ', '\n-    show_count: false\n-    weight: -3\n-  pd_contracts_multi_agreement_type_en:\n-    checked: true\n-    label: 'Agreement Type'\n-    separator: ', '\n-    show_count: false\n-    weight: -2\n-  pd_contracts_multi_agreement_type_fr:\n-    checked: true\n-    label: 'Type de contrats'\n-    separator: ', '\n-    show_count: false\n-    weight: -1\n-  contracts_contract_value_en:\n-    checked: true\n-    label: 'Contract Value'\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  contracts_contract_value_fr:\n-    checked: true\n-    label: 'Valeur du contrat '\n-    separator: ', '\n-    show_count: false\n-    weight: 1"
                },
                {
                    "sha": "c403f2450ed20fcd2ffa63978b698f500ec3953f",
                    "filename": "config/facets_summary.facets_summary.grants_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 65,
                    "changes": 65,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.grants_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.grants_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.grants_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,65 +0,0 @@\n-uuid: 2782e158-049c-4de9-976d-7463cbb43d86\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_grants\n-    - views.view.pd_core_grants\n-  module:\n-    - search_api\n-id: grants_summary\n-name: 'PD Grants - Current Search'\n-facet_source_id: 'search_api:views_block__pd_core_grants__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'There is no current search in progress.'\n-        format: plain_text\n-facets:\n-  grants_agreement_type_en:\n-    checked: true\n-    label: 'Agreement Type'\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  grants_agreement_type_fr:\n-    checked: true\n-    label: 'Type d’entente'\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  grants_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  grants_organization_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  grants_year_en:\n-    checked: true\n-    label: Year\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  grants_year_fr:\n-    checked: true\n-    label: Année\n-    separator: ', '\n-    show_count: false\n-    weight: 0"
                },
                {
                    "sha": "b8feb99ead5436cb027fd87802c9dbdbb4ff51a6",
                    "filename": "config/facets_summary.facets_summary.hospitalityq_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 77,
                    "changes": 77,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.hospitalityq_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.hospitalityq_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.hospitalityq_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,77 +0,0 @@\n-uuid: 6efbda78-1812-47c0-9cb4-21d2ab8835ee\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_hospitalityq\n-    - views.view.pd_core_hospitalityq\n-  module:\n-    - search_api\n-id: hospitalityq_summary\n-name: 'PD Hospitality (Q) - Current Search'\n-facet_source_id: 'search_api:views_block__pd_core_hospitalityq__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'There is no current search in progress.'\n-        format: plain_text\n-facets:\n-  hospitalityq_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  hospitalityq_organization_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  hospitalityq_year_en:\n-    checked: true\n-    label: Year\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  hospitalityq_year_fr:\n-    checked: true\n-    label: Année\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  hospitalityq_total_en:\n-    checked: true\n-    label: Total\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  hospitalityq_total_fr:\n-    checked: true\n-    label: Total\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  hospitalityq_nil_en:\n-    checked: true\n-    label: 'Nothing to report'\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  hospitalityq_nil_fr:\n-    checked: true\n-    label: 'Rien à signaler'\n-    separator: ', '\n-    show_count: false\n-    weight: 0"
                },
                {
                    "sha": "cc967f063d59d74db112875fe465d5dd580d40fd",
                    "filename": "config/facets_summary.facets_summary.reclassification_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 65,
                    "changes": 65,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.reclassification_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.reclassification_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.reclassification_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,65 +0,0 @@\n-uuid: d931ead1-5848-47f5-a241-8a228270680b\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_reclassification\n-    - views.view.pd_core_reclassification\n-  module:\n-    - search_api\n-id: reclassification_summary\n-name: 'PD reclassification - Current Search'\n-facet_source_id: 'search_api:views_block__pd_core_reclassification__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'There is no current search in progress.'\n-        format: plain_text\n-facets:\n-  reclassification_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  reclassification_organization_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  reclassification_year_en:\n-    checked: true\n-    label: Year\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  reclassification_year_fr:\n-    checked: true\n-    label: Année\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  reclassification_nil_en:\n-    checked: true\n-    label: 'Nothing to Report'\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  reclassification_nil_fr:\n-    checked: true\n-    label: 'Rien à signaler'\n-    separator: ', '\n-    show_count: false\n-    weight: 0"
                },
                {
                    "sha": "1d869edac96d1e159a8effa21a02f167da2fa45b",
                    "filename": "config/facets_summary.facets_summary.sd_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 53,
                    "changes": 53,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.sd_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.sd_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.sd_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,53 +0,0 @@\n-uuid: bc649825-5f6e-4b90-b16a-01cf334245e2\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.drupal_content\n-    - views.view.suggested_dataset\n-  module:\n-    - search_api\n-id: sd_summary\n-name: 'Suggested Dataset - Current Search'\n-facet_source_id: 'search_api:views_block__suggested_dataset__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'No results found.'\n-        format: plain_text\n-facets:\n-  sd_organisation_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: true\n-    weight: 0\n-  sd_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: true\n-    weight: 0\n-  sd_status_en:\n-    checked: true\n-    label: Status\n-    separator: ', '\n-    show_count: true\n-    weight: 0\n-  sd_status_fr:\n-    checked: true\n-    label: État\n-    separator: ', '\n-    show_count: true\n-    weight: 0"
                },
                {
                    "sha": "ca34acdf78e7c146179e4cbe0817930f79765322",
                    "filename": "config/facets_summary.facets_summary.travela_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 65,
                    "changes": 65,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.travela_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.travela_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.travela_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,65 +0,0 @@\n-uuid: f5f5302c-bbaf-4d2a-9322-62f04b4a4574\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travela\n-    - views.view.pd_core_travela\n-  module:\n-    - search_api\n-id: travela_summary\n-name: 'PD Travel Annual - Current Search'\n-facet_source_id: 'search_api:views_block__pd_core_travela__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'There is no current search in progress.'\n-        format: plain_text\n-facets:\n-  travela_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: false\n-    weight: -10\n-  travela_organization_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: false\n-    weight: -9\n-  travela_year_en:\n-    checked: true\n-    label: Year\n-    separator: ', '\n-    show_count: false\n-    weight: -8\n-  travela_year_fr:\n-    checked: true\n-    label: Année\n-    separator: ', '\n-    show_count: false\n-    weight: -7\n-  travela_total_en:\n-    checked: true\n-    label: Total\n-    separator: ', '\n-    show_count: false\n-    weight: -6\n-  travela_total_fr:\n-    checked: true\n-    label: Total\n-    separator: ', '\n-    show_count: false\n-    weight: -5"
                },
                {
                    "sha": "55fedd2e42d8993eca64d129091681f7956fc17f",
                    "filename": "config/facets_summary.facets_summary.travelq_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 77,
                    "changes": 77,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.travelq_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.travelq_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.travelq_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,77 +0,0 @@\n-uuid: 9de5228b-fb7f-4975-aaee-2b06938feb35\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_travelq\n-    - views.view.pd_core_travelq\n-  module:\n-    - search_api\n-id: travelq_summary\n-name: 'PD Travel (Q) - Current Search'\n-facet_source_id: 'search_api:views_block__pd_core_travelq__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'There is no current search in progress.'\n-        format: plain_text\n-facets:\n-  travelq_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  travelq_organization_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  travelq_year_en:\n-    checked: true\n-    label: Year\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  travelq_year_fr:\n-    checked: true\n-    label: Année\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  travelq_total_en:\n-    checked: true\n-    label: Total\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  travelq_total_fr:\n-    checked: true\n-    label: Total\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  travelq_nil_en:\n-    checked: true\n-    label: 'Nothing to Report'\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  travelq_nil_fr:\n-    checked: true\n-    label: 'Rien à signaler'\n-    separator: ', '\n-    show_count: false\n-    weight: 0"
                },
                {
                    "sha": "4d15e4b3044ddde9e3043300cdea7d6103599c38",
                    "filename": "config/facets_summary.facets_summary.wrongdoing_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 53,
                    "changes": 53,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.wrongdoing_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffacets_summary.facets_summary.wrongdoing_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffacets_summary.facets_summary.wrongdoing_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,53 +0,0 @@\n-uuid: 4f0ea72c-3f8d-4e9e-8f9b-20bd076949a5\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.index.pd_core_wrongdoing\n-    - views.view.pd_core_wrongdoing\n-  module:\n-    - search_api\n-id: wrongdoing_summary\n-name: 'PD Wrongdoing - Current Search'\n-facet_source_id: 'search_api:views_block__pd_core_wrongdoing__block_1'\n-processor_configs:\n-  reset_facets:\n-    processor_id: reset_facets\n-    weights:\n-      build: '30'\n-    settings:\n-      link_text: 'Clear all filters'\n-      position: before\n-  show_text_when_empty:\n-    processor_id: show_text_when_empty\n-    weights:\n-      build: '10'\n-    settings:\n-      text:\n-        value: 'There is no current search in progress.'\n-        format: plain_text\n-facets:\n-  wrongdoing_organization_en:\n-    checked: true\n-    label: Organization\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  wrongdoing_organization_fr:\n-    checked: true\n-    label: Organisation\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  wrongdoing_year_en:\n-    checked: true\n-    label: Year\n-    separator: ', '\n-    show_count: false\n-    weight: 0\n-  wrongdoing_year_fr:\n-    checked: true\n-    label: Année\n-    separator: ', '\n-    show_count: false\n-    weight: 0"
                },
                {
                    "sha": "fff21f6fcafcb4b174076f920d690a12ec85ed6a",
                    "filename": "config/field.field.node.app.field_vote_average.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffield.field.node.app.field_vote_average.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffield.field.node.app.field_vote_average.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.app.field_vote_average.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -15,7 +15,7 @@ required: false\n translatable: false\n default_value:\n   -\n-    value: !!float 0\n+    value: 0.0\n default_value_callback: ''\n settings:\n   min: null"
                },
                {
                    "sha": "f48270932e9404f76787ac1580f282b71aec175e",
                    "filename": "config/field.field.node.article.field_blog_author_name.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 3,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffield.field.node.article.field_blog_author_name.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffield.field.node.article.field_blog_author_name.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.article.field_blog_author_name.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,7 +5,6 @@ dependencies:\n   config:\n     - field.storage.node.field_blog_author_name\n     - node.type.article\n-    - taxonomy.vocabulary.blog_author\n id: node.article.field_blog_author_name\n field_name: field_blog_author_name\n entity_type: node\n@@ -19,8 +18,7 @@ default_value_callback: ''\n settings:\n   handler: 'default:taxonomy_term'\n   handler_settings:\n-    target_bundles:\n-      blog_author: blog_author\n+    target_bundles: {  }\n     sort:\n       field: name\n       direction: asc"
                },
                {
                    "sha": "bce259e0840fff08444d896d3c50851806f50a0b",
                    "filename": "config/field.field.node.suggested_dataset.body.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.body.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.body.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.body.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,23 +0,0 @@\n-uuid: 8f80600b-5aa0-4683-ab2d-459f6bf2cb77\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.body\n-    - node.type.suggested_dataset\n-  module:\n-    - text\n-id: node.suggested_dataset.body\n-field_name: body\n-entity_type: node\n-bundle: suggested_dataset\n-label: Description\n-description: ''\n-required: true\n-translatable: true\n-default_value: {  }\n-default_value_callback: ''\n-settings:\n-  display_summary: false\n-  required_summary: false\n-field_type: text_with_summary"
                },
                {
                    "sha": "9fa007d0b83ffadaa877649a71f3052e7607cf7a",
                    "filename": "config/field.field.node.suggested_dataset.comment.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 33,
                    "changes": 33,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.comment.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.comment.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.comment.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,33 +0,0 @@\n-uuid: ce4f291f-5b07-46c7-aab6-2e93c4bb500c\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.comment\n-    - node.type.suggested_dataset\n-  module:\n-    - comment\n-id: node.suggested_dataset.comment\n-field_name: comment\n-entity_type: node\n-bundle: suggested_dataset\n-label: Comments\n-description: ''\n-required: false\n-translatable: true\n-default_value:\n-  -\n-    status: 2\n-    cid: 0\n-    last_comment_timestamp: 0\n-    last_comment_name: null\n-    last_comment_uid: 0\n-    comment_count: 0\n-default_value_callback: ''\n-settings:\n-  default_mode: 1\n-  per_page: 200\n-  anonymous: 0\n-  form_location: true\n-  preview: 0\n-field_type: comment"
                },
                {
                    "sha": "8eb562257264b88df3fcd687b9259f501316f629",
                    "filename": "config/field.field.node.suggested_dataset.field_dataset_keywords.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_dataset_keywords.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_dataset_keywords.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_dataset_keywords.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: 64ab1d13-50ee-4030-bf1b-5b5a53ed9610\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_dataset_keywords\n-    - node.type.suggested_dataset\n-id: node.suggested_dataset.field_dataset_keywords\n-field_name: field_dataset_keywords\n-entity_type: node\n-bundle: suggested_dataset\n-label: Keywords\n-description: ''\n-required: true\n-translatable: true\n-default_value:\n-  -\n-    value: dataset\n-default_value_callback: ''\n-settings: {  }\n-field_type: string"
                },
                {
                    "sha": "d4999af4abcc10f4bf4584d9ff6bb2cbbc92c969",
                    "filename": "config/field.field.node.suggested_dataset.field_dataset_subject.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_dataset_subject.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_dataset_subject.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_dataset_subject.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,23 +0,0 @@\n-uuid: 96e8ee85-da0d-4891-8505-b75d316b415a\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_dataset_subject\n-    - node.type.suggested_dataset\n-  module:\n-    - options\n-id: node.suggested_dataset.field_dataset_subject\n-field_name: field_dataset_subject\n-entity_type: node\n-bundle: suggested_dataset\n-label: Subject\n-description: ''\n-required: true\n-translatable: false\n-default_value:\n-  -\n-    value: information_and_communications\n-default_value_callback: ''\n-settings: {  }\n-field_type: list_string"
                },
                {
                    "sha": "eca082a8053744139c5e769c822fdcfe38593230",
                    "filename": "config/field.field.node.suggested_dataset.field_date_published.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_date_published.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_date_published.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_date_published.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: bf84d5fd-c466-4ca6-b08f-1a932e229d28\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_date_published\n-    - node.type.suggested_dataset\n-  module:\n-    - datetime\n-id: node.suggested_dataset.field_date_published\n-field_name: field_date_published\n-entity_type: node\n-bundle: suggested_dataset\n-label: 'Dataset released date'\n-description: ''\n-required: false\n-translatable: false\n-default_value: {  }\n-default_value_callback: ''\n-settings: {  }\n-field_type: datetime"
                },
                {
                    "sha": "4f3ca9a9f633f47df3227e5cc99387826be7e1b4",
                    "filename": "config/field.field.node.suggested_dataset.field_feedback.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 19,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_feedback.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_feedback.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_feedback.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,19 +0,0 @@\n-uuid: 40a1c7f1-443e-4f6b-8018-08813469ddea\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_feedback\n-    - node.type.suggested_dataset\n-id: node.suggested_dataset.field_feedback\n-field_name: field_feedback\n-entity_type: node\n-bundle: suggested_dataset\n-label: Feedback\n-description: ''\n-required: false\n-translatable: true\n-default_value: {  }\n-default_value_callback: ''\n-settings: {  }\n-field_type: string_long"
                },
                {
                    "sha": "5e54f99048083a3891c4b06f66234e9266f28709",
                    "filename": "config/field.field.node.suggested_dataset.field_meta_tags.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_meta_tags.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_meta_tags.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_meta_tags.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: a7d1f77b-9361-461a-8937-481f8f9597e8\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_meta_tags\n-    - node.type.suggested_dataset\n-  module:\n-    - metatag\n-id: node.suggested_dataset.field_meta_tags\n-field_name: field_meta_tags\n-entity_type: node\n-bundle: suggested_dataset\n-label: 'Meta tags'\n-description: ''\n-required: false\n-translatable: true\n-default_value: {  }\n-default_value_callback: ''\n-settings: {  }\n-field_type: metatag"
                },
                {
                    "sha": "5585aa69993d4dc92144b17a20b027512f0692c8",
                    "filename": "config/field.field.node.suggested_dataset.field_organization.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_organization.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_organization.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_organization.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: 0792c27c-dc65-4671-a917-3981205459ef\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_organization\n-    - node.type.suggested_dataset\n-  module:\n-    - options\n-id: node.suggested_dataset.field_organization\n-field_name: field_organization\n-entity_type: node\n-bundle: suggested_dataset\n-label: 'Government institution'\n-description: 'Organization for Suggested Dataset (synced with CKAN)'\n-required: true\n-translatable: false\n-default_value: {  }\n-default_value_callback: ''\n-settings: {  }\n-field_type: list_string"
                },
                {
                    "sha": "734824a2cb13207643c6ef9d7be48121236e85e7",
                    "filename": "config/field.field.node.suggested_dataset.field_previousnodeid.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_previousnodeid.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_previousnodeid.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_previousnodeid.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,23 +0,0 @@\n-uuid: 2a9147c8-1a84-40a2-833e-61eff1b6c7b5\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_previousnodeid\n-    - node.type.suggested_dataset\n-id: node.suggested_dataset.field_previousnodeid\n-field_name: field_previousnodeid\n-entity_type: node\n-bundle: suggested_dataset\n-label: previousNodeId\n-description: ''\n-required: false\n-translatable: true\n-default_value: {  }\n-default_value_callback: ''\n-settings:\n-  min: null\n-  max: null\n-  prefix: ''\n-  suffix: ''\n-field_type: integer"
                },
                {
                    "sha": "e3c3d386985ec04d454f0105c529888db3803fea",
                    "filename": "config/field.field.node.suggested_dataset.field_sd_status.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_sd_status.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_sd_status.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_sd_status.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,23 +0,0 @@\n-uuid: 816d19cd-2c2d-4c76-bb8d-8d8bf226e5b5\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_sd_status\n-    - node.type.suggested_dataset\n-  module:\n-    - options\n-id: node.suggested_dataset.field_sd_status\n-field_name: field_sd_status\n-entity_type: node\n-bundle: suggested_dataset\n-label: Status\n-description: 'Status for Suggested Dataset'\n-required: true\n-translatable: false\n-default_value:\n-  -\n-    value: department_contacted\n-default_value_callback: ''\n-settings: {  }\n-field_type: list_string"
                },
                {
                    "sha": "452c043aa49f0a44f85dbf3725798d57a46bfc10",
                    "filename": "config/field.field.node.suggested_dataset.field_status_link.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_status_link.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_status_link.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_status_link.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,23 +0,0 @@\n-uuid: 99aa93de-1e64-4341-9b34-a1ffd9176d20\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_status_link\n-    - node.type.suggested_dataset\n-  module:\n-    - link\n-id: node.suggested_dataset.field_status_link\n-field_name: field_status_link\n-entity_type: node\n-bundle: suggested_dataset\n-label: 'Status Link'\n-description: ''\n-required: false\n-translatable: true\n-default_value: {  }\n-default_value_callback: ''\n-settings:\n-  title: 1\n-  link_type: 17\n-field_type: link"
                },
                {
                    "sha": "725500e71b9b5d28ce12fb17c48de06cb2d7dfc2",
                    "filename": "config/field.field.node.suggested_dataset.field_vote_up_down.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 25,
                    "changes": 25,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_vote_up_down.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_vote_up_down.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_vote_up_down.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,25 +0,0 @@\n-uuid: 42a8736f-9acb-44e8-ae57-82dad07c9197\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_vote_up_down\n-    - node.type.suggested_dataset\n-id: node.suggested_dataset.field_vote_up_down\n-field_name: field_vote_up_down\n-entity_type: node\n-bundle: suggested_dataset\n-label: Votes\n-description: ''\n-required: false\n-translatable: false\n-default_value:\n-  -\n-    value: 0\n-default_value_callback: ''\n-settings:\n-  min: null\n-  max: null\n-  prefix: ''\n-  suffix: ''\n-field_type: integer"
                },
                {
                    "sha": "aecab669d62d5ade00d6c79ef74970ce94e02ca2",
                    "filename": "config/field.field.node.suggested_dataset.field_webform_submission_id.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_webform_submission_id.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.field.node.suggested_dataset.field_webform_submission_id.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.field.node.suggested_dataset.field_webform_submission_id.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,23 +0,0 @@\n-uuid: 149f7abd-0971-488b-8c94-108bf1ac3099\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.field_webform_submission_id\n-    - node.type.suggested_dataset\n-id: node.suggested_dataset.field_webform_submission_id\n-field_name: field_webform_submission_id\n-entity_type: node\n-bundle: suggested_dataset\n-label: 'Webform Submission Id'\n-description: ''\n-required: false\n-translatable: false\n-default_value: {  }\n-default_value_callback: ''\n-settings:\n-  min: null\n-  max: null\n-  prefix: ''\n-  suffix: ''\n-field_type: integer"
                },
                {
                    "sha": "2d8b50b902cf193ede226b077b15bcfdf84f5175",
                    "filename": "config/field.storage.node.field_dataset_keywords.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_dataset_keywords.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_dataset_keywords.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.storage.node.field_dataset_keywords.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: 089830df-f771-48f3-affd-921933176961\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - node\n-id: node.field_dataset_keywords\n-field_name: field_dataset_keywords\n-entity_type: node\n-type: string\n-settings:\n-  max_length: 255\n-  case_sensitive: false\n-  is_ascii: false\n-module: core\n-locked: false\n-cardinality: 1\n-translatable: true\n-indexes: {  }\n-persist_with_no_fields: false\n-custom_storage: false"
                },
                {
                    "sha": "0a616826b973b04526e43d938857992406f0b62f",
                    "filename": "config/field.storage.node.field_dataset_subject.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_dataset_subject.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_dataset_subject.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.storage.node.field_dataset_subject.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: 28df8cb5-3709-4f48-ab10-cc4350beabf0\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - node\n-    - options\n-id: node.field_dataset_subject\n-field_name: field_dataset_subject\n-entity_type: node\n-type: list_string\n-settings:\n-  allowed_values: {  }\n-  allowed_values_function: get_dataset_subject\n-module: options\n-locked: false\n-cardinality: -1\n-translatable: true\n-indexes: {  }\n-persist_with_no_fields: false\n-custom_storage: false"
                },
                {
                    "sha": "cd273bb2f7e9de9467155cfde80269280926cf61",
                    "filename": "config/field.storage.node.field_feedback.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 19,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_feedback.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_feedback.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.storage.node.field_feedback.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,19 +0,0 @@\n-uuid: 6d7bbc20-7142-4079-bc5d-34ac5c10081a\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - node\n-id: node.field_feedback\n-field_name: field_feedback\n-entity_type: node\n-type: string_long\n-settings:\n-  case_sensitive: false\n-module: core\n-locked: false\n-cardinality: 1\n-translatable: true\n-indexes: {  }\n-persist_with_no_fields: false\n-custom_storage: false"
                },
                {
                    "sha": "ed016c6fe4312650b73cdda889c79d264dfff085",
                    "filename": "config/field.storage.node.field_organization.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_organization.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_organization.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.storage.node.field_organization.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: 4954cb01-4900-4073-b455-6eb173ddc3f5\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - node\n-    - options\n-id: node.field_organization\n-field_name: field_organization\n-entity_type: node\n-type: list_string\n-settings:\n-  allowed_values: {  }\n-  allowed_values_function: read_options_from_json\n-module: options\n-locked: false\n-cardinality: 1\n-translatable: true\n-indexes: {  }\n-persist_with_no_fields: false\n-custom_storage: false"
                },
                {
                    "sha": "a66f87cc2fcf78cc78cb963f70cc16327a3360d8",
                    "filename": "config/field.storage.node.field_sd_status.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 21,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_sd_status.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_sd_status.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.storage.node.field_sd_status.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,21 +0,0 @@\n-uuid: 6e063b4a-af83-4f5d-999b-cd50f84f3186\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - node\n-    - options\n-id: node.field_sd_status\n-field_name: field_sd_status\n-entity_type: node\n-type: list_string\n-settings:\n-  allowed_values: {  }\n-  allowed_values_function: get_suggested_dataset_status\n-module: options\n-locked: false\n-cardinality: 1\n-translatable: true\n-indexes: {  }\n-persist_with_no_fields: false\n-custom_storage: false"
                },
                {
                    "sha": "f88733e221b8298141bb8d29e25ecace6aa0087b",
                    "filename": "config/field.storage.node.field_status_link.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 19,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_status_link.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_status_link.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.storage.node.field_status_link.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,19 +0,0 @@\n-uuid: 51a60850-56b0-4651-bc73-8d23d278fde5\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - link\n-    - node\n-id: node.field_status_link\n-field_name: field_status_link\n-entity_type: node\n-type: link\n-settings: {  }\n-module: link\n-locked: false\n-cardinality: 1\n-translatable: true\n-indexes: {  }\n-persist_with_no_fields: false\n-custom_storage: false"
                },
                {
                    "sha": "2fd446d0abf99b2bd8d1eaa9609fb9c862850769",
                    "filename": "config/field.storage.node.field_webform_submission_id.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 20,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_webform_submission_id.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ffield.storage.node.field_webform_submission_id.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffield.storage.node.field_webform_submission_id.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,20 +0,0 @@\n-uuid: 9eafd5cf-c734-40a5-a521-16287a010aa6\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - node\n-id: node.field_webform_submission_id\n-field_name: field_webform_submission_id\n-entity_type: node\n-type: integer\n-settings:\n-  unsigned: false\n-  size: normal\n-module: core\n-locked: false\n-cardinality: 1\n-translatable: true\n-indexes: {  }\n-persist_with_no_fields: false\n-custom_storage: false"
                },
                {
                    "sha": "448179160128d13790e08fa1a6cd06ea45ce3039",
                    "filename": "config/file.settings.yml",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 0,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffile.settings.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffile.settings.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffile.settings.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,3 +6,10 @@ description:\n icon:\n   directory: core/modules/file/icons\n make_unused_managed_files_temporary: false\n+filename_sanitization:\n+  transliterate: false\n+  replace_whitespace: false\n+  replace_non_alphanumeric: false\n+  deduplicate_separators: false\n+  lowercase: false\n+  replacement_character: '-'"
                },
                {
                    "sha": "924ff2fbb8f6d6ea30f19cb7eccc25d19aec3651",
                    "filename": "config/filter.format.basic_html.yml",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 12,
                    "changes": 30,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.basic_html.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.basic_html.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffilter.format.basic_html.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -10,15 +10,12 @@ name: 'Basic HTML'\n format: basic_html\n weight: -9\n filters:\n-  filter_html:\n-    id: filter_html\n-    provider: filter\n+  editor_file_reference:\n+    id: editor_file_reference\n+    provider: editor\n     status: true\n-    weight: -10\n-    settings:\n-      allowed_html: '<a href hreflang> <em> <strong> <cite> <blockquote cite> <code> <ul type> <ol start type> <li> <dl> <dt> <dd> <h2 id> <h3 id> <h4 id> <h5 id> <h6 id> <p> <br> <span> <img src alt height width data-entity-type data-entity-uuid data-align data-caption>'\n-      filter_html_help: false\n-      filter_html_nofollow: false\n+    weight: 11\n+    settings: {  }\n   filter_align:\n     id: filter_align\n     provider: filter\n@@ -31,15 +28,24 @@ filters:\n     status: true\n     weight: 8\n     settings: {  }\n+  filter_html:\n+    id: filter_html\n+    provider: filter\n+    status: true\n+    weight: -10\n+    settings:\n+      allowed_html: '<a href hreflang> <em> <strong> <cite> <blockquote cite> <code> <ul type> <ol start type> <li> <dl> <dt> <dd> <h2 id> <h3 id> <h4 id> <h5 id> <h6 id> <p> <br> <span> <img src alt height width data-entity-type data-entity-uuid data-align data-caption>'\n+      filter_html_help: false\n+      filter_html_nofollow: false\n   filter_html_image_secure:\n     id: filter_html_image_secure\n     provider: filter\n     status: true\n     weight: 9\n     settings: {  }\n-  editor_file_reference:\n-    id: editor_file_reference\n-    provider: editor\n+  filter_image_lazy_load:\n+    id: filter_image_lazy_load\n+    provider: filter\n     status: true\n-    weight: 11\n+    weight: 12\n     settings: {  }"
                },
                {
                    "sha": "fe6c664321dad2bb25405f5fbd4b6e07975ff4de",
                    "filename": "config/filter.format.full_html.yml",
                    "status": "modified",
                    "additions": 12,
                    "deletions": 16,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.full_html.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.full_html.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffilter.format.full_html.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -4,14 +4,19 @@ status: true\n dependencies:\n   module:\n     - editor\n-    - media\n     - token_filter\n _core:\n   default_config_hash: hewPmBgni9jlDK_IjLxUx1HsTbinK-hdl0lOwjbteIY\n name: 'Full HTML'\n format: full_html\n weight: -9\n filters:\n+  editor_file_reference:\n+    id: editor_file_reference\n+    provider: editor\n+    status: true\n+    weight: 11\n+    settings: {  }\n   filter_align:\n     id: filter_align\n     provider: filter\n@@ -24,12 +29,6 @@ filters:\n     status: true\n     weight: 9\n     settings: {  }\n-  editor_file_reference:\n-    id: editor_file_reference\n-    provider: editor\n-    status: true\n-    weight: 11\n-    settings: {  }\n   filter_html:\n     id: filter_html\n     provider: filter\n@@ -39,19 +38,16 @@ filters:\n       allowed_html: '<a href hreflang> <em> <strong> <cite> <blockquote cite> <code> <ul type> <ol start type> <li> <dl> <dt> <dd> <h2 id> <h3 id> <h4 id> <h5 id> <h6 id>'\n       filter_html_help: true\n       filter_html_nofollow: false\n+  filter_image_lazy_load:\n+    id: filter_image_lazy_load\n+    provider: filter\n+    status: true\n+    weight: 12\n+    settings: {  }\n   token_filter:\n     id: token_filter\n     provider: token_filter\n     status: true\n     weight: 0\n     settings:\n       replace_empty: '0'\n-  media_embed:\n-    id: media_embed\n-    provider: media\n-    status: false\n-    weight: 100\n-    settings:\n-      default_view_mode: default\n-      allowed_view_modes: {  }\n-      allowed_media_types: {  }"
                },
                {
                    "sha": "7c1122cfa0cf66f45dfc9b35cc747bb6f591965c",
                    "filename": "config/filter.format.plain_text.yml",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 6,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.plain_text.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.plain_text.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffilter.format.plain_text.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,6 +8,12 @@ name: 'Plain text'\n format: plain_text\n weight: -8\n filters:\n+  filter_autop:\n+    id: filter_autop\n+    provider: filter\n+    status: true\n+    weight: 0\n+    settings: {  }\n   filter_html_escape:\n     id: filter_html_escape\n     provider: filter\n@@ -21,9 +27,3 @@ filters:\n     weight: 0\n     settings:\n       filter_url_length: 72\n-  filter_autop:\n-    id: filter_autop\n-    provider: filter\n-    status: true\n-    weight: 0\n-    settings: {  }"
                },
                {
                    "sha": "ade4095afd9490937224c2acf8ce4e9f55e849b0",
                    "filename": "config/filter.format.restricted_html.yml",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 6,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.restricted_html.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.restricted_html.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffilter.format.restricted_html.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,6 +8,12 @@ name: 'Restricted HTML'\n format: restricted_html\n weight: -7\n filters:\n+  filter_autop:\n+    id: filter_autop\n+    provider: filter\n+    status: true\n+    weight: 0\n+    settings: {  }\n   filter_html:\n     id: filter_html\n     provider: filter\n@@ -17,12 +23,6 @@ filters:\n       allowed_html: '<a href hreflang> <em> <strong> <cite> <blockquote cite> <code> <ul type> <ol start type> <li> <dl> <dt> <dd> <h2 id> <h3 id> <h4 id> <h5 id> <h6 id>'\n       filter_html_help: true\n       filter_html_nofollow: false\n-  filter_autop:\n-    id: filter_autop\n-    provider: filter\n-    status: true\n-    weight: 0\n-    settings: {  }\n   filter_url:\n     id: filter_url\n     provider: filter"
                },
                {
                    "sha": "c54fa4b698d96b10419fb6d1deb90f39755341e9",
                    "filename": "config/filter.format.rich_text.yml",
                    "status": "modified",
                    "additions": 19,
                    "deletions": 13,
                    "changes": 32,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.rich_text.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.rich_text.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffilter.format.rich_text.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -45,12 +45,6 @@ filters:\n       allowed_html: ''\n       filter_html_help: true\n       filter_html_nofollow: false\n-  filter_htmlcorrector:\n-    id: filter_htmlcorrector\n-    provider: filter\n-    status: false\n-    weight: -44\n-    settings: {  }\n   filter_html_escape:\n     id: filter_html_escape\n     provider: filter\n@@ -63,20 +57,25 @@ filters:\n     status: false\n     weight: -45\n     settings: {  }\n+  filter_htmlcorrector:\n+    id: filter_htmlcorrector\n+    provider: filter\n+    status: false\n+    weight: -44\n+    settings: {  }\n+  filter_image_lazy_load:\n+    id: filter_image_lazy_load\n+    provider: filter\n+    status: true\n+    weight: -42\n+    settings: {  }\n   filter_url:\n     id: filter_url\n     provider: filter\n     status: true\n     weight: -42\n     settings:\n       filter_url_length: 128\n-  token_filter:\n-    id: token_filter\n-    provider: token_filter\n-    status: true\n-    weight: 0\n-    settings:\n-      replace_empty: '0'\n   media_embed:\n     id: media_embed\n     provider: media\n@@ -88,3 +87,10 @@ filters:\n       allowed_media_types:\n         file: file\n         image: image\n+  token_filter:\n+    id: token_filter\n+    provider: token_filter\n+    status: true\n+    weight: 0\n+    settings:\n+      replace_empty: '0'"
                },
                {
                    "sha": "d4c1e091eec7107b38c2a0bf2b6a55685cc4d6fa",
                    "filename": "config/filter.format.webform_default.yml",
                    "status": "added",
                    "additions": 11,
                    "deletions": 0,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.webform_default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Ffilter.format.webform_default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ffilter.format.webform_default.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1,11 @@\n+uuid: db0c67a1-007a-4c51-a413-931501a2940a\n+langcode: en\n+status: true\n+dependencies:\n+  enforced:\n+    module:\n+      - webform\n+name: 'Webform (Default) - DO NOT EDIT'\n+format: webform_default\n+weight: 100\n+filters: {  }"
                },
                {
                    "sha": "bd5bff8cbb7b7cc9278fdaf9c336f460e6007cd9",
                    "filename": "config/language.content_settings.node.suggested_dataset.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 16,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage.content_settings.node.suggested_dataset.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage.content_settings.node.suggested_dataset.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage.content_settings.node.suggested_dataset.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,16 +0,0 @@\n-uuid: daf60942-842d-40b1-bd3f-c3ef2456b619\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - node.type.suggested_dataset\n-  module:\n-    - content_translation\n-third_party_settings:\n-  content_translation:\n-    enabled: true\n-id: node.suggested_dataset\n-target_entity_type_id: node\n-target_bundle: suggested_dataset\n-default_langcode: site_default\n-language_alterable: false"
                },
                {
                    "sha": "a0976788c035b17aad67ccbaa9df2260d3ae46c6",
                    "filename": "config/language.content_settings.taxonomy_term.blog_author.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 16,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage.content_settings.taxonomy_term.blog_author.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage.content_settings.taxonomy_term.blog_author.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage.content_settings.taxonomy_term.blog_author.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,16 +0,0 @@\n-uuid: b08aee5d-2a50-4105-954f-c290ab3cdcbb\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - taxonomy.vocabulary.blog_author\n-  module:\n-    - content_translation\n-third_party_settings:\n-  content_translation:\n-    enabled: true\n-id: taxonomy_term.blog_author\n-target_entity_type_id: taxonomy_term\n-target_bundle: blog_author\n-default_langcode: site_default\n-language_alterable: false"
                },
                {
                    "sha": "9a5d364f96e92ea1aad76925f6d05e60ff7f4c98",
                    "filename": "config/language/fr/block.block.bootstrap_breadcrumbs.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fblock.block.bootstrap_breadcrumbs.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fblock.block.bootstrap_breadcrumbs.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fblock.block.bootstrap_breadcrumbs.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,2 +1,2 @@\n settings:\n-  label: 'Fils d''ariane'\n+  label: \"Fils d'ariane\""
                },
                {
                    "sha": "9a5d364f96e92ea1aad76925f6d05e60ff7f4c98",
                    "filename": "config/language/fr/block.block.claro_breadcrumbs.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fblock.block.claro_breadcrumbs.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fblock.block.claro_breadcrumbs.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fblock.block.claro_breadcrumbs.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,2 +1,2 @@\n settings:\n-  label: 'Fils d''ariane'\n+  label: \"Fils d'ariane\""
                },
                {
                    "sha": "3c412001f438450e259a05fab5f3cebf22c6d4bc",
                    "filename": "config/language/fr/core.base_field_override.node.book.promote.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.book.promote.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.book.promote.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.book.promote.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-label: 'Promu en page d''accueil'\n+label: \"Promu en page d'accueil\"\n settings:\n   on_label: Activé\n   off_label: Désactivé"
                },
                {
                    "sha": "3c412001f438450e259a05fab5f3cebf22c6d4bc",
                    "filename": "config/language/fr/core.base_field_override.node.page.promote.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.page.promote.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.page.promote.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.page.promote.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-label: 'Promu en page d''accueil'\n+label: \"Promu en page d'accueil\"\n settings:\n   on_label: Activé\n   off_label: Désactivé"
                },
                {
                    "sha": "846acaa08234dadd2c4de6fe39f7f91052464698",
                    "filename": "config/language/fr/core.base_field_override.node.suggested_dataset.title.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.suggested_dataset.title.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.suggested_dataset.title.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fcore.base_field_override.node.suggested_dataset.title.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +0,0 @@\n-label: 'Nom du jeu de données'"
                },
                {
                    "sha": "2f21acd8340fc2293341ac85c741ce4af72a18e3",
                    "filename": "config/language/fr/core.entity_form_mode.user.register.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.entity_form_mode.user.register.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.entity_form_mode.user.register.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fcore.entity_form_mode.user.register.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'S''inscrire'\n+label: \"S'inscrire\""
                },
                {
                    "sha": "68596f3c0bcff0af8ff496a5614d955c7c3a629e",
                    "filename": "config/language/fr/core.entity_view_display.node.article.default.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 13,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fcore.entity_view_display.node.article.default.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fcore.entity_view_display.node.article.default.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fcore.entity_view_display.node.article.default.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,13 +0,0 @@\n-third_party_settings:\n-  layout_builder:\n-    sections:\n-      -\n-        components:\n-          f3b99357-2d6a-4eb7-9960-9b6dd1e5f682:\n-            configuration:\n-              label: 'Authored on'\n-      -\n-        components:\n-          414b1588-f28a-465d-a97a-f2fb6103c6e9:\n-            configuration:\n-              label: Body"
                },
                {
                    "sha": "1c4615b6bfc56c9cd2a141637ebd1e6215a65258",
                    "filename": "config/language/fr/core.entity_view_mode.taxonomy_term.full.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.entity_view_mode.taxonomy_term.full.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fcore.entity_view_mode.taxonomy_term.full.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fcore.entity_view_mode.taxonomy_term.full.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Page d''un terme de taxonomie'\n+label: \"Page d'un terme de taxonomie\""
                },
                {
                    "sha": "827adc9298f066d16a7f2cfd817e805b1d873cbd",
                    "filename": "config/language/fr/facets_summary.facets_summary.ati_summary.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.ati_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.ati_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.ati_summary.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,5 +6,5 @@ processor_configs:\n   show_text_when_empty:\n     settings:\n       text:\n-        value: 'Il n''y a pas de recherche en cours.'\n+        value: \"Il n'y a pas de recherche en cours.\"\n         format: plain_text"
                },
                {
                    "sha": "ca3098e922fdfd9937c0b6d179779baf9d003230",
                    "filename": "config/language/fr/facets_summary.facets_summary.contracts_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.contracts_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.contracts_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.contracts_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'PD Contracts - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "cb1905aeb51e3c4dcf2dd8021c7fdbc3dfcb10a5",
                    "filename": "config/language/fr/facets_summary.facets_summary.grants_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.grants_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.grants_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.grants_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'PD Grants - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "2420a7190393abb62119b9a4120eda9d83a23f04",
                    "filename": "config/language/fr/facets_summary.facets_summary.hospitalityq_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.hospitalityq_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.hospitalityq_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.hospitalityq_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'PD Hospitality (Q) - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "befbf29f14b1391f98b9083dd926eef2d94cbd7b",
                    "filename": "config/language/fr/facets_summary.facets_summary.reclassification_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.reclassification_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.reclassification_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.reclassification_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'PD reclassification - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "80da3a2852ca58f107dfc4ae90ff43055fa7a44b",
                    "filename": "config/language/fr/facets_summary.facets_summary.sd_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.sd_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.sd_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.sd_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'SD - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "be79c0069b632912fb0ed9f830d7afdfa636d05b",
                    "filename": "config/language/fr/facets_summary.facets_summary.travela_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.travela_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.travela_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.travela_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'PD Travel Annual - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "aa991b0db16417f3a236e1a77f78bd6efe36d991",
                    "filename": "config/language/fr/facets_summary.facets_summary.travelq_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.travelq_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.travelq_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.travelq_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'PD Travel (Q) - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "5726adf573099840bb1966cdaec2f701c8eae0f5",
                    "filename": "config/language/fr/facets_summary.facets_summary.wrongdoing_summary.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.wrongdoing_summary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.wrongdoing_summary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffacets_summary.facets_summary.wrongdoing_summary.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,10 +0,0 @@\n-name: 'PD Wrongdoing - Recherche en cours'\n-processor_configs:\n-  reset_facets:\n-    settings:\n-      link_text: 'Effacer tous'\n-  show_text_when_empty:\n-    settings:\n-      text:\n-        value: 'Il n''y a pas de recherche en cours.'\n-        format: plain_text"
                },
                {
                    "sha": "11f335b8b279461b0a8c3464f566855cd008b556",
                    "filename": "config/language/fr/field.field.node.app.field_device_formats.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_device_formats.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_device_formats.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_device_formats.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Types d''appareil'\n+label: \"Types d'appareil\""
                },
                {
                    "sha": "875dfe2663074f4ac7cfb6bfdad9a51eb06cc850",
                    "filename": "config/language/fr/field.field.node.app.field_media.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_media.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_media.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_media.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Captures d''écran'\n+label: \"Captures d'écran\""
                },
                {
                    "sha": "514d6eb776c3cc8c8eddd81ab8b62e1e1ff068ca",
                    "filename": "config/language/fr/field.field.node.app.field_more_apps_by.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_more_apps_by.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_more_apps_by.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_more_apps_by.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Plus d''applications par'\n+label: \"Plus d'applications par\""
                },
                {
                    "sha": "602fce2feee67d87ca25ca5c5eb58a1374ba9a94",
                    "filename": "config/language/fr/field.field.node.app.field_submitter_name.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_submitter_name.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_submitter_name.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.app.field_submitter_name.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Nom de l''auteur'\n+label: \"Nom de l'auteur\""
                },
                {
                    "sha": "3ae239e986b8b08854a242f5fb991632d79c76fb",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.comment.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.comment.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.comment.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.comment.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +0,0 @@\n-label: Commentaires"
                },
                {
                    "sha": "9ec635f80cc563b32196363acabd537e30c18f47",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_dataset_keywords.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_dataset_keywords.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_dataset_keywords.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_dataset_keywords.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,4 +0,0 @@\n-default_value:\n-  -\n-    value: 'Jeu de données'\n-label: 'Mots clés'"
                },
                {
                    "sha": "790e348e7b16b3d59ec59a091cadda968a034829",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_dataset_subject.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_dataset_subject.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_dataset_subject.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_dataset_subject.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +0,0 @@\n-label: Sujet"
                },
                {
                    "sha": "e9d698e7c267b6a39ff1d21c80affe948cf754cd",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_date_published.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_date_published.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_date_published.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_date_published.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +0,0 @@\n-label: 'Date de publication du jeu de données'"
                },
                {
                    "sha": "d533c5a8548bdbe7ece9d2e81ec036fcdce866cc",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_feedback.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_feedback.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_feedback.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_feedback.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +0,0 @@\n-label: Rétroaction"
                },
                {
                    "sha": "9199f737a327ef8e2368a940f624e4c218fd616d",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_organization.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_organization.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_organization.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_organization.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,2 +0,0 @@\n-label: Organisation\n-description: 'Organisation pour le jeu de données proposé'"
                },
                {
                    "sha": "df3f53edaeeb0222974fe8c68a0d868db3e7097f",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_sd_status.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_sd_status.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_sd_status.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_sd_status.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,2 +0,0 @@\n-label: État\n-description: 'État du jeu de données'"
                },
                {
                    "sha": "c90453179436368125c6e689692410d3ec5e073a",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_status_link.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_status_link.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_status_link.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_status_link.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +0,0 @@\n-label: 'Lien de statut'"
                },
                {
                    "sha": "24353be0862d7c6ad3f1177ed9a4551aed062ba5",
                    "filename": "config/language/fr/field.field.node.suggested_dataset.field_vote_up_down.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_vote_up_down.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_vote_up_down.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Ffield.field.node.suggested_dataset.field_vote_up_down.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1 +0,0 @@\n-label: Votez"
                },
                {
                    "sha": "9fd39f88b7ff8cd70bf69e26be184039ea7b6db4",
                    "filename": "config/language/fr/metatag.metatag_defaults.front.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fmetatag.metatag_defaults.front.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fmetatag.metatag_defaults.front.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fmetatag.metatag_defaults.front.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-label: 'Page d''accueil'\n+label: \"Page d'accueil\"\n tags:\n   canonical_url: '[site:url]'\n   shortlink: '[site:url]'"
                },
                {
                    "sha": "8d24053baf99a032971b838b6189ab82120332b3",
                    "filename": "config/language/fr/node.type.page.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fnode.type.page.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fnode.type.page.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fnode.type.page.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,2 +1,2 @@\n name: 'Page de base'\n-description: 'Utilisez les <em>pages de base</em> pour votre contenu statique, tel que la page ''Qui sommes-nous''.'\n+description: \"Utilisez les <em>pages de base</em> pour votre contenu statique, tel que la page 'Qui sommes-nous'.\""
                },
                {
                    "sha": "789de319d68f4a5d56069b245b555d083693329e",
                    "filename": "config/language/fr/node.type.suggested_dataset.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fnode.type.suggested_dataset.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fnode.type.suggested_dataset.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fnode.type.suggested_dataset.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,2 +0,0 @@\n-name: 'Jeu de donnée'\n-description: 'Datasets that have been suggested by users through the web form.'"
                },
                {
                    "sha": "73269623d4d733da485dfc789f632e517f06b529",
                    "filename": "config/language/fr/system.action.node_promote_action.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.node_promote_action.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.node_promote_action.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.action.node_promote_action.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Promouvoir le contenu en page d''accueil'\n+label: \"Promouvoir le contenu en page d'accueil\""
                },
                {
                    "sha": "153e10f1e0bdabea13a1e524729e9051361083a4",
                    "filename": "config/language/fr/system.action.node_unpromote_action.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.node_unpromote_action.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.node_unpromote_action.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.action.node_unpromote_action.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Retirer un contenu de la page d''accueil'\n+label: \"Retirer un contenu de la page d'accueil\""
                },
                {
                    "sha": "f7947487f5e997234af9673372da35bf5e918603",
                    "filename": "config/language/fr/system.action.pathauto_update_alias_node.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.pathauto_update_alias_node.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.pathauto_update_alias_node.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.action.pathauto_update_alias_node.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Mettre à jour l''alias d''URL'\n+label: \"Mettre à jour l'alias d'URL\""
                },
                {
                    "sha": "f7947487f5e997234af9673372da35bf5e918603",
                    "filename": "config/language/fr/system.action.pathauto_update_alias_user.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.pathauto_update_alias_user.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.pathauto_update_alias_user.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.action.pathauto_update_alias_user.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Mettre à jour l''alias d''URL'\n+label: \"Mettre à jour l'alias d'URL\""
                },
                {
                    "sha": "d163016b9828763676994cef428c19ac0f5cd07e",
                    "filename": "config/language/fr/system.action.user_cancel_user_action.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.user_cancel_user_action.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.action.user_cancel_user_action.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.action.user_cancel_user_action.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1 +1 @@\n-label: 'Annuler l''(les) utilisateur(s) sélectionné(s)'\n+label: \"Annuler l'(les) utilisateur(s) sélectionné(s)\""
                },
                {
                    "sha": "2e24f2f9b805544a78be273e2f0c9b84dbaeb880",
                    "filename": "config/language/fr/system.menu.admin.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.menu.admin.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.menu.admin.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.menu.admin.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,2 +1,2 @@\n label: Administration\n-description: 'Liens des tâches d''administration'\n+description: \"Liens des tâches d'administration\""
                },
                {
                    "sha": "ba5f756cfefa3a7505e169a5953590282e9708d0",
                    "filename": "config/language/fr/system.menu.footer.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.menu.footer.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.menu.footer.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.menu.footer.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,2 +1,2 @@\n label: 'Pied de page'\n-description: 'Liens d''informations sur le site'\n+description: \"Liens d'informations sur le site\""
                },
                {
                    "sha": "d8a2da5b527f155361ddacc4be47a37c1d090c64",
                    "filename": "config/language/fr/system.menu.tools.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.menu.tools.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fsystem.menu.tools.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fsystem.menu.tools.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,2 +1,2 @@\n label: Outils\n-description: 'Liens outils de l''utilisateur, souvent ajoutés par des modules'\n+description: \"Liens outils de l'utilisateur, souvent ajoutés par des modules\""
                },
                {
                    "sha": "ff587b794e183407ce8e4d2ba3765d45595cef4f",
                    "filename": "config/language/fr/user.mail.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fuser.mail.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fuser.mail.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fuser.mail.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,6 +1,6 @@\n cancel_confirm:\n   body: \"[user:display-name],\\r\\n\\r\\nUne demande de suppression de votre compte sur [site:name] a été faite.\\r\\n\\r\\nVous pouvez maintenant supprimer votre compte sur [site:url-brief] en cliquant sur le lien ci-dessous ou en le copiant dans votre navigateur : \\r\\n\\r\\n[user:cancel-url]\\r\\n\\r\\nA NOTER : La suppression de votre compte est définitive.\\r\\n\\r\\nCe lien expirera dans un jour et aucune action ne sera lancée s'il n'est pas utilisé.\\r\\n\\r\\n--  L'équipe de [site:name]\"\n-  subject: 'Demande d''annulation du compte [user:display-name] sur [site:name]'\n+  subject: \"Demande d'annulation du compte [user:display-name] sur [site:name]\"\n password_reset:\n   body: \"[user:display-name],\\r\\n\\r\\nUne demande de réinitialisation de votre mot de passe pour votre compte a été faite sur [site:name].\\r\\n\\r\\nVous pouvez maintenant vous connecter en cliquant sur le lien ci-dessous ou en le copiant dans votre navigateur : \\r\\n\\r\\n[user:one-time-login-url]\\r\\n\\r\\nCe lien ne peut être utilisé qu'une seule fois pour vous connecter et vous mènera à la page pour changer votre mot de passe. Il expirera dans un jour et rien ne se passera s'il n'est pas utilisé.\\r\\n\\r\\n--  L'équipe de [site:name]\"\n   subject: 'Modification des informations de connexion pour [user:display-name] sur [site:name]'\n@@ -12,10 +12,10 @@ register_no_approval_required:\n   subject: 'Détails du compte [user:display-name] sur [site:name]'\n register_pending_approval:\n   body: \"[user:display-name],\\r\\n\\r\\nNous vous remercions pour votre demande d'inscription sur [site:name]. Votre demande est actuellement en cours de validation. Une fois la validation faite, vous recevrez un autre courriel de confirmation contenant les informations vous permettant de vous connecter, choisir votre mot de passe ainsi que d'autres détails.\\r\\n\\r\\n\\r\\n--  L'équipe de [site:name]\"\n-  subject: 'Détails du compte [user:display-name] sur [site:name] (en attente de validation d''un administrateur)'\n+  subject: \"Détails du compte [user:display-name] sur [site:name] (en attente de validation d'un administrateur)\"\n register_pending_approval_admin:\n   body: \"[user:display-name] a fait une demande de compte.\\r\\n\\r\\n[user:edit-url]\"\n-  subject: 'Détails du compte [user:display-name] sur [site:name] (en attente de validation d''un administrateur)'\n+  subject: \"Détails du compte [user:display-name] sur [site:name] (en attente de validation d'un administrateur)\"\n status_activated:\n   body: \"[user:display-name],\\r\\n\\r\\nVotre compte sur [site:name] a été activé.\\r\\n\\r\\nVous pouvez maintenant vous connecter en cliquant sur le lien ci-dessous ou en le copiant dans votre navigateur : \\r\\n\\r\\n[user:one-time-login-url]\\r\\n\\r\\nCe lien ne peut être utilisé qu'une seule fois et vous redirigera vers une page où vous pourrez choisir votre mot de passe.\\r\\n\\r\\nAprès avoir choisi votre mot de passe, vous pourrez vous connecter sur [site:login-url] en utilisant :\\r\\n\\r\\nnom d'utilisateur : [user:account-name]\\r\\nmot de passe : Votre mot de passe\\r\\n\\r\\n--  L'équipe de [site:name]\"\n   subject: 'Détails du compte pour [user:display-name] sur [site:name]'"
                },
                {
                    "sha": "17deb886220dab0950473646e2ed9799a5ece37e",
                    "filename": "config/language/fr/views.view.apps_gallery.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.apps_gallery.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.apps_gallery.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.apps_gallery.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-label: 'Galerie d''applis'\n+label: \"Galerie d'applis\"\n display:\n   default:\n     display_options:"
                },
                {
                    "sha": "6950b0692a91cbfc0905628e740624f3d6108ba1",
                    "filename": "config/language/fr/views.view.block_content.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.block_content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.block_content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.block_content.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -47,7 +47,7 @@ display:\n           content: 'Displaying @start - @end of @total'\n       empty:\n         area_text_custom:\n-          content: 'Il n''y a pas de bloc personnalisé disponible.'\n+          content: \"Il n'y a pas de bloc personnalisé disponible.\"\n   page_1:\n     display_title: Page\n     display_options:"
                },
                {
                    "sha": "53dfa1f0a7cd254a85e6195e64505b9ea4613e27",
                    "filename": "config/language/fr/views.view.blog.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 52,
                    "changes": 52,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.blog.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.blog.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.blog.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,52 +0,0 @@\n-display:\n-  recent:\n-    display_options:\n-      title: 'Articles récents'\n-      use_more_text: 'Voir tout'\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          reset_button_label: Réinitialiser\n-          exposed_sorts_label: Trier\n-      pager:\n-        options:\n-          tags:\n-            first: '‹‹ première'\n-            last: 'dernière ››'\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-      title: Blogue\n-      sorts:\n-        created:\n-          expose:\n-            label: Date\n-  all:\n-    display_options:\n-      filters:\n-        combine:\n-          expose:\n-            label: Recherche\n-        field_blog_author_name_target_id:\n-          expose:\n-            label: Auteur\n-      sorts:\n-        title:\n-          expose:\n-            label: Titre\n-      empty:\n-        area_text_custom:\n-          admin_label: '<p><strong>Aucun article de blogue trouvé.</strong></p><br/>'\n-          content: '<p><strong>Aucun article de blogue trouvé.</strong></p><br/>'\n-      header:\n-        result:\n-          content: '<!--<p><strong>@total article de blogue trouvé.</strong></p>-->'\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-10 col-md-9 col-sm-9\\\">\\r\\n    <h2 class=\\\"h3 mrgn-tp-0\\\">{{ title }}</h2>\\r\\n    <p>par {{ field_blog_author_name }} {{ created }}</p> \\r\\n    <p class=\\\"excerpt\\\">{{ body }}</p>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-2 col-md-3 col-sm-3\\\">\\r\\n    <a href=\\\"{{ view_node }}\\\">{{ field_media }}</a>  \\r\\n  </div>\\r\\n</div>\"\n-        field_blog_author_name:\n-          alter:\n-            text: '<a href=\"/fr/taxonomy/term/{{ field_blog_author_name__target_id }}\" title=\"Lire plus de blogs par {{ field_blog_author_name }}\">{{ field_blog_author_name }}</a>'\n-label: Blogue"
                },
                {
                    "sha": "5c3a9db654d1418f521a00e75e7a8286672a3625",
                    "filename": "config/language/fr/views.view.comment.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.comment.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.comment.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.comment.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -49,7 +49,7 @@ display:\n             label: Subject\n         combine:\n           expose:\n-            label: 'Nom de l''auteur'\n+            label: \"Nom de l'auteur\"\n       title: Commentaires\n       empty:\n         area_text_custom:\n@@ -99,7 +99,7 @@ display:\n             label: Subject\n         combine:\n           expose:\n-            label: 'Nom de l''auteur'\n+            label: \"Nom de l'auteur\"\n       fields:\n         comment_bulk_form:\n           action_title: Action"
                },
                {
                    "sha": "3abccdcfa364a59d5eb42d4579ac7cbaf02f274e",
                    "filename": "config/language/fr/views.view.files.yml",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 4,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.files.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.files.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.files.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -56,7 +56,7 @@ display:\n         area_text_custom:\n           content: 'Aucun fichier disponible.'\n   page_1:\n-    display_title: 'Vue d''ensemble des fichiers'\n+    display_title: \"Vue d'ensemble des fichiers\"\n     display_options:\n       menu:\n         title: Fichiers\n@@ -76,14 +76,14 @@ display:\n         entity_label:\n           label: Entité\n         type:\n-          label: 'Type d''entité'\n+          label: \"Type d'entité\"\n         module:\n           label: 'Enregistrement du module'\n         count:\n-          label: 'Nombre d''utilisations'\n+          label: \"Nombre d'utilisations\"\n       title: 'Utilisation du fichier'\n       arguments:\n         fid:\n           exception:\n             title: Tout\n-          title: 'Information d''utilisation du fichier {{ arguments.fid }}'\n+          title: \"Information d'utilisation du fichier {{ arguments.fid }}\""
                },
                {
                    "sha": "ad4e7f6892f8d63c7ca9b33f3404299f2e5450e5",
                    "filename": "config/language/fr/views.view.frontpage.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.frontpage.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.frontpage.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.frontpage.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,5 +1,5 @@\n-label: 'Page d''accueil'\n-description: 'Tout le contenu promu en page d''accueil.'\n+label: \"Page d'accueil\"\n+description: \"Tout le contenu promu en page d'accueil.\"\n display:\n   default:\n     display_title: 'Par défaut'\n@@ -24,7 +24,7 @@ display:\n           sort_desc_label: Desc\n       empty:\n         area_text_custom:\n-          content: 'Aucun contenu de page d''accueil n''a été créé pour l''instant. Suivre le <a href=\"https://www.drupal.org/fr/docs/user_guide/fr/index.html\">Guide utilisateur</a> pour démarrer la construction de votre site.'\n+          content: \"Aucun contenu de page d'accueil n'a été créé pour l'instant. Suivre le <a href=\\\"https://www.drupal.org/fr/docs/user_guide/fr/index.html\\\">Guide utilisateur</a> pour démarrer la construction de votre site.\"\n   feed_1:\n     display_title: Flux\n   page_1:"
                },
                {
                    "sha": "8904386aeabbfa2f09b65665393391ff81eb05f4",
                    "filename": "config/language/fr/views.view.gc_notify_delivery_status.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.gc_notify_delivery_status.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.gc_notify_delivery_status.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.gc_notify_delivery_status.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -39,7 +39,7 @@ display:\n           content: 'Displaying @start - @end of @total'\n       empty:\n         area_text_custom:\n-          content: 'Aucun résultat n''a été trouvé.'\n+          content: \"Aucun résultat n'a été trouvé.\"\n   page_1:\n     display_options:\n       fields:"
                },
                {
                    "sha": "634af7da056bd3d9795d3de29555856a22595b40",
                    "filename": "config/language/fr/views.view.media_library.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.media_library.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.media_library.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.media_library.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -44,7 +44,7 @@ display:\n       sorts:\n         created:\n           expose:\n-            label: 'Les plus récents d''abord'\n+            label: \"Les plus récents d'abord\"\n         name:\n           expose:\n             label: 'Nom (A-Z)'"
                },
                {
                    "sha": "57d5c680bc1420a760323fca2fef5c8bd0118442",
                    "filename": "config/language/fr/views.view.moderated_content.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.moderated_content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.moderated_content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.moderated_content.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -56,6 +56,6 @@ display:\n       title: 'Contenu modéré'\n       empty:\n         area_text_custom:\n-          content: 'Aucun contenu modéré disponible. Seules les versions de contenu en attente, telles que ''Brouillon'', sont listées ici.'\n+          content: \"Aucun contenu modéré disponible. Seules les versions de contenu en attente, telles que 'Brouillon', sont listées ici.\"\n   moderated_content:\n     display_title: 'Contenu modéré'"
                },
                {
                    "sha": "14b823518bffae79ff890ae428c07cbfa64d77a3",
                    "filename": "config/language/fr/views.view.pd_core_ati_details.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.pd_core_ati_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.pd_core_ati_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_ati_details.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,14 +8,14 @@ display:\n           label: 'Numéro de la demande'\n         pages:\n           label: 'Nombre de pages'\n-      title: 'Demande d''accès à l''information informelle dossiers précédemment publiés'\n+      title: \"Demande d'accès à l'information informelle dossiers précédemment publiés\"\n       footer:\n         area_text_custom:\n           content: '<p class=\"mrgn-tp-lg mrgn-bttm-xl\"><a class=\"btn btn-primary\" href=\"/fr/search/ati\">Retour à la recherche&nbsp;<span class=\"fa fa-undo\"></span></a></p>'\n         area_text_custom_1:\n-          content: \"<h2>Demandez une copie des documents</h2>\\r\\n<p>La disponibilité des documents est assujettie aux délais de conservation établis par les institutions. Les demandes faites par le biais de ce formulaire sont considérées comme des demandes informelles et ne sont pas sujettes aux mêmes conditions que les demandes faites en vertu de la Loi sur l’accès à l’information. *Pour plus d’informations, veuillez consulter la page Web « <a href=\\\"[site:url]/au-sujet-demandes-dacces-a-linformation\\\" target=\\\"_blank\\\">Au sujet des demandes d’accès à l’information</a> ».</p>\\r\\n\"\n+          content: \"<h2>Demandez une copie des documents</h2>\\r\\n<p>La disponibilité des documents est assujettie aux délais de conservation établis par les institutions. Les demandes faites par le biais de ce formulaire sont considérées comme des demandes informelles et ne sont pas sujettes aux mêmes conditions que les demandes faites en vertu de la Loi sur l’accès à l’information. *Pour plus d’informations, veuillez consulter la page Web « <a href=\\\"https://www.canada.ca/fr/secretariat-conseil-tresor/services/acces-information-protection-reseignements-personnels.html\\\" target=\\\"_blank\\\">Au sujet de l'accès à l’information et protection des renseignements personnels</a> ».</p>\\r\\n\"\n       empty:\n         area_text_custom:\n           content: \"<br/><br/>\\r\\n<p><strong>Aucun résultat trouvé.</strong></p>\\r\\n<p class=\\\"mrgn-tp-lg mrgn-bttm-xl\\\"><a class=\\\"btn btn-primary\\\" href=\\\"/fr/search/ati\\\">Retour à la recherche&nbsp;<span class=\\\"fa fa-undo\\\"></span></a></p>\\r\\n<br/><br/>\"\n   details:\n-    display_title: 'Demande d''accès à l''information informelle dossiers précédemment publiés'\n+    display_title: \"Demande d'accès à l'information informelle dossiers précédemment publiés\""
                },
                {
                    "sha": "281a921879b8c65061fce102499ac80799142bcf",
                    "filename": "config/language/fr/views.view.pd_core_contracts.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 33,
                    "changes": 33,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_contracts.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_contracts.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_contracts.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,33 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"{% set formatted_contract_value = contract_value|replace({'$': '', ',': ''})|number_format(2, '.', ' ') %}\\r\\n{% set contact_value_array = formatted_contract_value|split('.') %}\\r\\n<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-9\\\">\\r\\n<h4 class=\\\"mrgn-tp-0 mrgn-bttm-sm\\\">{% if nothing_to_report_fr %}<span class=\\\"hgl\\\">{{ nothing_to_report_fr }}</span>{% else %}<a href=\\\"/fr/search/contracts/reference/{{ id }}\\\"><span class=\\\"hgl\\\">{{ description_fr }}</span></a>{%endif%}</h4>\\r\\n<strong>Nom du fournisseur : </strong><span class=\\\"hgl\\\">{{ vendor_name }}</span><br><small><strong>Pays d'origine :</strong> <span class=\\\"hgl\\\">{{ country_of_origin_fr }}</span></small>\\r\\n<p><small><strong>Organisation :</strong> <span class=\\\"hgl\\\">{{ org_name_fr}}</span></small></p>\\r\\n</div>\\r\\n<div class=\\\"col-sm-3 text-right\\\">\\r\\n<span class=\\\"h3 mrgn-tp-0\\\">{{ contact_value_array[0] }}<sup><strong>,{{ contact_value_array[1] }}</strong></sup> $</span><br />\\r\\n<small>{% if nothing_to_report_fr %}{{ quarter_fr }}, {{ year }}{% else %}{{ contract_date }}{% endif %}</small></div>\\r\\n</div>\\r\\n\"\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      sorts:\n-        contract_value:\n-          expose:\n-            label: 'Valeur du contrat'\n-      header:\n-        result:\n-          content: '<p><strong>@total  résultats trouvé(s)</strong></p>'\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "5894747f41f35956d1e6e599968fbb5e9dc21a2c",
                    "filename": "config/language/fr/views.view.pd_core_contracts_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 34,
                    "changes": 34,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_contracts_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_contracts_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_contracts_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,34 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        reference_number:\n-          label: 'Numéro de demande'\n-        procurement_id:\n-          label: 'Numéro d''identification d''approvisionnement'\n-        vendor_name_1:\n-          label: 'Nom du fournisseur'\n-        contract_date:\n-          label: 'Date du contrat'\n-        economic_object_code:\n-          label: 'Code d’article économique'\n-        contract_period_start:\n-          label: 'Date de début du contrat'\n-        delivery_date:\n-          label: 'Date de clôture du contrat ou Date de livraison'\n-        contract_value_1:\n-          label: 'Valeur totale de contrat'\n-        amendment_value:\n-          label: 'Valeur de la modification'\n-        reporting_period:\n-          label: 'Période de déclaration'\n-        standing_offer_number:\n-          label: 'Commande subséquente à une l’offre à commandes ou arrangements en matière d’approvisionnement'\n-        commodity_code:\n-          label: 'Code de produit'\n-        original_value:\n-          label: 'Valeur d''origine du contrat'\n-      title: 'Contrats gouvernementaux'\n-      footer:\n-        area_text_custom:\n-          content: '<p class=\"mrgn-tp-lg mrgn-bttm-xl\"><a class=\"btn btn-primary\" href=\"/fr/search/contrats\">Retour à la recherche&nbsp;<span class=\"fa fa-undo\"></span></a></p>'"
                },
                {
                    "sha": "be3a15e0cd24f81f4fc16a290e17e1af71014af7",
                    "filename": "config/language/fr/views.view.pd_core_grants.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 33,
                    "changes": 33,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_grants.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_grants.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_grants.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,33 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"{% set value_array = agreement_value|replace({',': '', '$': ''})|striptags|trim|number_format('2', '.', ',')|split('.') %}\\r\\n<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-8\\\">\\r\\n{% if nothing_to_report_fr %}\\r\\n  <h2 class=\\\"h4 mrgn-tp-0\\\"><span class=\\\"hgl\\\">{{ nothing_to_report_fr }}</span></h4>\\r\\n{% else %}\\r\\n  <h2 class=\\\"h4 mrgn-tp-0\\\">\\r\\n    <a href=\\\"/fr/search/grants/reference/{{ partial_id }}\\\"><span class=\\\"hgl\\\">{{ recipient_legal_name }}</span></a>\\r\\n  </h2>\\r\\n  <div><span class=\\\"hgl\\\">{{ recipient_city }}, {{ recipient_country_fr }}</span></div>\\r\\n  <div class=\\\"label label-default\\\">{{ agreement_type_fr }}</div>\\r\\n{%endif%}\\r\\n<p><small><strong>Organisation:</strong> <span class=\\\"hgl\\\">{{ org_name_fr}}</span></small></p>\\r\\n</div>\\r\\n<div class=\\\"col-sm-4 text-right\\\">\\r\\n<span class=\\\"h3 mrgn-tp-0\\\">$ {{ value_array[0] }}<sup><strong>,{{ value_array[1] }}</strong></sup></span><br />\\r\\n<small>{% if nothing_to_report_fr %}{{ quarter_fr }}, {{ date_year }}{% else %}{{ date_clean|trim|date('Y-m-d') }}{% endif %}</small><br />\\r\\n</div>\\r\\n</div>\"\n-      header:\n-        result:\n-          content: '<p><strong>@total  résultats trouvé(s)</strong></p>'\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      sorts:\n-        agreement_value:\n-          expose:\n-            label: Valeur\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "c91b8bd535b3a75ee8868f15fc2f9ad51cc6eade",
                    "filename": "config/language/fr/views.view.pd_core_grants_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 35,
                    "changes": 35,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_grants_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_grants_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_grants_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,35 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        ref_number:\n-          label: 'Numéro de demande'\n-        recipient_business_number:\n-          label: 'Numéro de l’entreprise bénéficiaire'\n-        recipient_legal_name:\n-          label: 'Nom légal du bénéficiaire'\n-        recipient_city:\n-          label: Ville\n-        recipient_postal_code:\n-          label: 'Code postal du bénéficiaire'\n-        federal_riding_number:\n-          label: 'Numéro de la circonscription fédérale'\n-        naics_identifier:\n-          label: 'Identificateur du SCIAN'\n-        agreement_number:\n-          label: 'Numéro de l’entente'\n-        agreement_value:\n-          label: 'Valeur de l’entente en dollars canadiens'\n-        agreement_start_date:\n-          label: 'Date de début de l’entente'\n-        coverage:\n-          label: Portée\n-        agreement_end_date:\n-          alter:\n-            text: '{{ agreement_end_date|trim|date(''Y-m-d'') }}'\n-        amendment_date:\n-          label: 'Date de modification'\n-      title: 'Subventions et des contributions gouvernementaux'\n-      footer:\n-        area_text_custom:\n-          content: \"<p class=\\\"mrgn-tp-lg mrgn-bttm-xl\\\"><a class=\\\"btn btn-primary\\\" href=\\\"/fr/search/grants\\\">Retour à la recherche&nbsp;<span class=\\\"fa fa-undo\\\"></span></a></p>\\r\\n\""
                },
                {
                    "sha": "e3a6690661d4392a9d377fc4c43aba298ad1f19d",
                    "filename": "config/language/fr/views.view.pd_core_hospitalityq.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 29,
                    "changes": 29,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_hospitalityq.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_hospitalityq.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_hospitalityq.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,29 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"{% set total_array = total|striptags|trim|number_format('2', '.', ',')|split('.') %}\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n    {% if nothing_to_report_fr %}\\r\\n      <h2 class=\\\"h4 mrgn-tp-0\\\"><span class=\\\"hgl\\\">{{ nothing_to_report_fr }}</span></h2>\\r\\n      <p><small><strong>Organisation :</strong> {{ org_name_fr }}</small></p>\\t\\r\\n    {% else %}\\r\\n      <h2 class=\\\"h4 mrgn-tp-0\\\"><a href=\\\"/fr/search/hospitalityq/reference/{{ id }}\\\"><span class=\\\"hgl\\\">{{ description_fr }}</span></a></h2>\\r\\n      <span class=\\\"hgl\\\">{{ name }}</span><br><small><span class=\\\"hgl\\\">{{ title_fr }}</span></small>\\r\\n      <p><small><strong>Organisation:</strong> <span class=\\\"hgl\\\">{{ org_name_fr }}</span><br>Ref # <span class=\\\"hgl\\\">{{ ref_number }}</span></small></p>\\r\\n    {%endif%}\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-3 text-right\\\">\\r\\n    {% if nothing_to_report_fr %}\\r\\n      <small>{{ month_fr }}, {{ date_year }}</small>\\r\\n    {% else %}\\r\\n      <span class=\\\"h3 mrgn-tp-0\\\">{{ total_array[0]|replace({',':' '}) }}<sup><strong>,{{ total_array[1] }}</strong></sup> $</span><br />\\r\\n      <small>{{ start_date }}{% if (start_date != end_date) and (end_date is not empty) %} <br>au {{ end_date }}{% endif %}</small>\\r\\n    {% endif %}\\r\\n  </div>\\r\\n</div>\"\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      header:\n-        result:\n-          content: '<p><strong>@total résultats trouvé(s)</strong></p>'\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "fb519730d653aa093eb87b5c8a169855208e60bc",
                    "filename": "config/language/fr/views.view.pd_core_hospitalityq_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 23,
                    "changes": 23,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_hospitalityq_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_hospitalityq_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_hospitalityq_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,23 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        ref_number:\n-          label: 'Numéro de demande'\n-        name:\n-          label: Nom\n-        total:\n-          alter:\n-            text: '{{ total|trim|number_format(2, '','', '' '') }} $'\n-        start_date:\n-          label: 'Date de début'\n-        end_date:\n-          label: 'Date d''achèvement'\n-        employee_attendees:\n-          label: 'Participants (employés du gouvernement du Canada)'\n-        guest_attendees:\n-          label: 'Participants (invités)'\n-      title: 'Frais d''accueil gouvernementaux'\n-      footer:\n-        area_text_custom:\n-          content: '<p class=\"mrgn-tp-lg mrgn-bttm-xl\"><a class=\"btn btn-primary\" href=\"/fr/search/hospitalityq\">Retour à la recherche&nbsp;<span class=\"fa fa-undo\"></span></a></p>'"
                },
                {
                    "sha": "b9c480195d5e44995024ed85f620c103e512accf",
                    "filename": "config/language/fr/views.view.pd_core_inventory.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 28,
                    "changes": 28,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_inventory.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_inventory.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_inventory.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,28 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      fields:\n-        date_published:\n-          label: 'Date de publication '\n-        date_released:\n-          label: 'Date de diffusion'\n-        nothing:\n-          label: Votez\n-      header:\n-        result:\n-          content: '<p><strong>@total résultats trouvé(s)</strong></p>'\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "f73514809e7ad233ebed3ae03c96d230ca67438a",
                    "filename": "config/language/fr/views.view.pd_core_inventory_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 14,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_inventory_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_inventory_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_inventory_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,14 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        date_published:\n-          label: 'Date de publication'\n-        date_released:\n-          label: 'Date de diffusion'\n-        nothing:\n-          alter:\n-            text: \"{% set is_valid_url = portal_url_fr|raw|split('http://')|length==1 and portal_url_fr|raw|split('https://')|length==1 ? 0 : 1 %}\\r\\n<div class=\\\"row mrgn-tp-lg\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n    <h2 class=\\\"h4 mrgn-tp-md\\\">Langue :</h2><p>{{ language_fr }}</p>\\r\\n    <h2 class=\\\"h4\\\">Architecture des activités de programme :</h2><p>{{ program_alignment_architecture_fr }}</p>\\r\\n    {% if date_published %}<h2 class=\\\"h4\\\">Date de publication :</h2><p>{{ date_published }}{% endif %}\\r\\n    {% if date_released %}<h2 class=\\\"h4\\\">Date de diffusion :</h2><p>{{ date_released }}</p>{% endif %}\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n    <div class=\\\"well\\\">\\r\\n      <h2 class=\\\"h4 mrgn-tp-0\\\">Organisation :</h2><p>{{ org_name_fr }}</p>\\r\\n      {% if portal_url_fr %}<h2 class=\\\"h4\\\">Enregistrement du Portail du gouvernement ouvert :</h2><p>\\r\\n        {% if is_valid_url %}\\r\\n          <a href=\\\"{{ portal_url_fr }}\\\">{{ portal_url_fr }}</a>\\r\\n        {% else %}\\r\\n          {{ portal_url_fr }}\\r\\n        {% endif %}\\r\\n        </p>\\r\\n      {% endif %}\\r\\n      <h2 class=\\\"h4\\\">Description :</h2><p>{{ description_fr }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n-      footer:\n-        area_text_custom:\n-          content: '<p class=\"mrgn-tp-lg mrgn-bttm-xl\"><a class=\"btn btn-primary\" href=\"/fr/search/inventory\">Retour à la recherche&nbsp;<span class=\"fa fa-undo\"></span></a></p>'"
                },
                {
                    "sha": "7839d6e81978d50b4928431ddff6ca319332f864",
                    "filename": "config/language/fr/views.view.pd_core_reclassification.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 33,
                    "changes": 33,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_reclassification.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_reclassification.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_reclassification.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,33 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"<div class=\\\"row\\\">\\r\\n{% if report_type_fr == \\\"Rien à signaler\\\" %}\\r\\n<div class=\\\"col-sm-8\\\">\\r\\n<h2 class=\\\"h4 mrgn-tp-0\\\">\\r\\n  <span class=\\\"hgl\\\">{{ report_type_fr }}</span>\\r\\n</h2>\\r\\n<p><small><strong>Organisation :</strong> <span class=\\\"hgl\\\">{{ org_name_fr }}</span></small>\\r\\n</div>\\r\\n<div class=\\\"col-sm-4 text-right\\\">\\r\\n  <small>{{ quarter_fr }}, {{ year }}</small>\\r\\n</div>\\r\\n{% else %}\\r\\n<div class=\\\"col-sm-8\\\">\\r\\n<h2 class=\\\"h4 mrgn-tp-0\\\">\\r\\n  <a href=\\\"/fr/search/reclassification/reference/{{ id }}\\\"><span class=\\\"hgl\\\">{{ pos_title_fr }}</span></a>\\r\\n</h2>\\r\\n<p>Poste no. <span class=\\\"hgl\\\">{{ pos_number }}</span></p>\\r\\n<p><small>\\r\\n  <strong>Organisation :</strong> <span class=\\\"hgl\\\">{{ org_name_fr}}</span>\\r\\n  <br />Ref # <span class=\\\"hgl\\\">{{ ref_number }}</span>\\r\\n  </small></p>\\r\\n</div>\\r\\n<div class=\\\"col-sm-4 text-right\\\">\\r\\n  <h3 class=\\\"mrgn-tp-0\\\"><span class=\\\"hgl\\\">{{ old_class_group_code }}-{{ old_class_level }}</span> \\r\\n  <span class=\\\"glyphicon glyphicon-arrow-right\\\"></span> \\r\\n  <span class=\\\"hgl\\\">{{ new_class_group_code }}-{{ new_class_level }}</span>\\r\\n  </h3>\\r\\n  <small>{{ date_clean }}</small>\\r\\n</div>\\r\\n{%endif%}\\r\\n</div>\"\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      sorts:\n-        old_class_group_code:\n-          expose:\n-            label: 'Code du groupe'\n-      header:\n-        result:\n-          content: '<p><strong>@total résultats trouvé(s)</strong></p>'\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "fa9eb2dc580770699fe3b9c67e1ce14fff4bca9f",
                    "filename": "config/language/fr/views.view.pd_core_reclassification_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 16,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_reclassification_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_reclassification_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_reclassification_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,16 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        ref_number:\n-          label: 'Numéro de demande'\n-        date_year:\n-          label: Année\n-        pos_number:\n-          label: 'Numéro du poste'\n-        old_class_level:\n-          label: 'Numéro de niveau de la classification du poste reclassifié'\n-      title: 'Reclassification de poste du gouvernement'\n-      footer:\n-        area_text_custom:\n-          content: '<p class=\"mrgn-tp-lg mrgn-bttm-xl\"><a class=\"btn btn-primary\" href=\"/fr/search/reclassification\">Retour à la recherche&nbsp;<span class=\"fa fa-undo\"></span></a></p>'"
                },
                {
                    "sha": "17838ee9e8274d588e0d8013759c7b0aae67f0c4",
                    "filename": "config/language/fr/views.view.pd_core_travela.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 29,
                    "changes": 29,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travela.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travela.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travela.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,29 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-9\\\">\\r\\n<h2 class=\\\"mrgn-tp-0 mrgn-bttm-sm h4\\\"><a href=\\\"/fr/search/travela/reference/{{ id }}\\\"><span class=\\\"hgl\\\">{{ org_name_fr }}</span></a></h2>\\r\\n</div>\\r\\n<div class=\\\"col-sm-3 text-right\\\">\\r\\n<span class=\\\"h3 mrgn-tp-0\\\">{{ year }}</span>\\r\\n</div>\\r\\n</div>\"\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      header:\n-        result:\n-          content: '<p><strong>@total résultats trouvé(s)</strong></p>'\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "857f3c09f0e990271fdfb49b5b15d8e343f00c44",
                    "filename": "config/language/fr/views.view.pd_core_travela_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 6,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travela_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travela_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travela_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,6 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      footer:\n-        area_text_custom:\n-          content: '<p class=\"mrgn-tp-lg mrgn-bttm-xl\"><a class=\"btn btn-primary\" href=\"/fr/search/travela\">Retour à la recherche&nbsp;<span class=\"fa fa-undo\"></span></a></p>'"
                },
                {
                    "sha": "85da100d1ef90e85e14d6fb82e70454fb0909266",
                    "filename": "config/language/fr/views.view.pd_core_travelq.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 29,
                    "changes": 29,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travelq.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travelq.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travelq.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,29 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"{% set total_array = total|striptags|trim|number_format('2', '.', ',')|split('.') %}\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-8\\\">\\r\\n    {% if nothing_to_report_fr %}\\r\\n      <h2 class=\\\"h4 mrgn-tp-0\\\"><span class=\\\"hgl\\\">{{ nothing_to_report_fr }}</span></h2>\\r\\n      <p><small><strong>Organisation:</strong> <span class=\\\"hgl\\\">{{ org_name_fr }}</span></small></p>\\r\\n    {% else %}\\r\\n      <h2 class=\\\"h4 mrgn-tp-0\\\"><a href=\\\"/fr/search/travelq/reference/{{ id }}\\\"><span class=\\\"hgl\\\">{{ name }}</span></a></h2>\\r\\n      <span class=\\\"hgl\\\">{{ title_fr }}</span><br><small><span class=\\\"hgl\\\">{{ destination_fr }}</span></small>\\r\\n      <p><small><strong>Organisation:</strong> <span class=\\\"hgl\\\">{{ org_name_fr }}</span><br>Ref # <span class=\\\"hgl\\\">{{ ref_number }}</span></small></p>\\r\\n    {%endif%}\\r\\n</div>\\r\\n<div class=\\\"col-sm-4 text-right\\\">\\r\\n  {% if nothing_to_report_fr %}\\r\\n    <small>{{ month_fr }}, {{ date_year }}</small>\\r\\n  {% else %}\\r\\n    <span class=\\\"h3 mrgn-tp-0\\\">{{ total_array[0] }}<sup><strong>,{{ total_array[1] }}</strong></sup> $</span><br />\\r\\n    <small>{{ start_date }}{% if start_date != end_date %} au {{ end_date }}{% endif %}</small>\\r\\n  {% endif %}\\r\\n</div>\\r\\n</div>\"\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      header:\n-        result:\n-          content: '<p><strong>@total résultats trouvé(s)</strong></p>'\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "69eec641c9d0e4d63a09aba8241b4dec58d82614",
                    "filename": "config/language/fr/views.view.pd_core_travelq_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 40,
                    "changes": 40,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travelq_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travelq_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_travelq_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,40 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        ref_number:\n-          label: 'Numéro de demande'\n-        name:\n-          label: Nom\n-        airfare:\n-          label: 'Frais aériens'\n-          alter:\n-            text: '{{ airfare|trim|number_format(2, '','', '' '') }} $'\n-        other_transport:\n-          label: 'Autres frais de transport'\n-          alter:\n-            text: \"{{ other_transport|trim|number_format(2, ',', ' ') }} $\\r\\n\"\n-        lodging:\n-          label: Hébergement\n-          alter:\n-            text: '{{ lodging|trim|number_format(2, '','', '' '') }} $'\n-        meals:\n-          label: 'Frais de repas et frais accessoires'\n-          alter:\n-            text: '{{ meals|trim|number_format(2, '','', '' '') }} $'\n-        other_expenses:\n-          label: 'Autres dépenses'\n-          alter:\n-            text: '{{ other_expenses|trim|number_format(2, '','', '' '') }} $'\n-        total:\n-          label: 'Montant total'\n-          alter:\n-            text: '{{ total|trim|number_format(2, '','', '' '') }} $'\n-        start_date:\n-          label: 'Date du début du voyage'\n-        end_date:\n-          label: 'Date de fin du voyage'\n-      footer:\n-        area_text_custom:\n-          content: '<p class=\"mrgn-tp-lg mrgn-bttm-xl\"><a class=\"btn btn-primary\" href=\"/fr/search/travela\">Retour à la recherche&nbsp;<span class=\"fa fa-undo\"></span></a></p>'\n-      title: 'Frais de voyage gouvernementaux'"
                },
                {
                    "sha": "3c3be7b93c33a627ff7a4030dbad20985194d5bf",
                    "filename": "config/language/fr/views.view.pd_core_wrongdoing.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 29,
                    "changes": 29,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_wrongdoing.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_wrongdoing.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_wrongdoing.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,29 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-8\\\">\\r\\n<h2 class=\\\"h4 mrgn-tp-0\\\"><a href=\\\"/fr/search/wrongdoing/reference/{{ id }}\\\"><span class=\\\"hgl\\\">{{ findings_conclusions_fr }}</span></a></h2>\\r\\n<p><small><strong>Organisation:</strong> <span class=\\\"hgl\\\">{{ org_name_fr}}</span><br />Numéro de demande : <span class=\\\"hgl\\\">{{ ref_number }}</span></small></p>\\r\\n</div>\\r\\n<div class=\\\"col-sm-4 text-right\\\">\\r\\n<span class=\\\"h3 mrgn-tp-0\\\"><span class=\\\"hgl\\\">{{ file_id_number }}</span></small></sup></span><br />\\r\\n<small>{{ date_clean }}</small>\\r\\n</div>\\r\\n</div>\"\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          exposed_sorts_label: Trier\n-          reset_button_label: Effacer\n-      pager:\n-        options:\n-          tags:\n-            previous: '‹ précédent'\n-            next: 'suivant ›'\n-            first: '« première'\n-            last: 'dernière »'\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      header:\n-        result:\n-          content: '<p><strong>@total résultats trouvé(s)</strong></p>'\n-      empty:\n-        area_text_custom:\n-          content: \"<p><strong>Aucun résultat trouvé.</strong></p> \\r\\n<p>Veuillez entrer un nouveau mot-clé.</p>\\r\\n<br/><br/>\\r\\n\""
                },
                {
                    "sha": "a3b0f1788b29595801eaf4b86136ecddf36ce7f8",
                    "filename": "config/language/fr/views.view.pd_core_wrongdoing_details.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 14,
                    "changes": 14,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_wrongdoing_details.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.pd_core_wrongdoing_details.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.pd_core_wrongdoing_details.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,14 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      fields:\n-        ref_number:\n-          label: 'Numéro de demande'\n-        file_id_number:\n-          label: 'Numéro d’identification du fichier'\n-        date_clean:\n-          label: 'Date d’identification du fichier'\n-      title: 'Actes répréhensibles fondés'\n-      footer:\n-        area_text_custom:\n-          content: \"<p class=\\\"mrgn-tp-lg mrgn-bttm-xl\\\"><a class=\\\"btn btn-primary\\\" href=\\\"/fr/search/wrongdoing\\\">Retour à la recherche&nbsp;<span class=\\\"fa fa-undo\\\"></span></a></p>\\r\\n\""
                },
                {
                    "sha": "5bf61921a68114a4618e85d4c7e12777cc2be23e",
                    "filename": "config/language/fr/views.view.suggested_dataset.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 26,
                    "changes": 26,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.suggested_dataset.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.suggested_dataset.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.suggested_dataset.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,26 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          reset_button_label: Effacer\n-          exposed_sorts_label: Trier\n-      header:\n-        result:\n-          content: '<p><strong>@total résultats trouvé(s)</strong></p>'\n-      fields:\n-        nothing:\n-          alter:\n-            text: \"<div class=\\\"row\\\">\\r\\n<div class=\\\"col-sm-10\\\"><h2 class=\\\"h4 mrgn-tp-0 mrgn-bttm-md\\\">{{ title }}</h2></div>\\r\\n<div class=\\\"col-sm-2\\\"><h2 class=\\\"h4 mrgn-tp-0 mrgn-bttm-md\\\">Votes : {{ field_vote_up_down }}</h2></div>\\r\\n</div>\\r\\n<p><strong>Description :</strong> {{ body }}</p>\\r\\n<p><strong>Organisation : </strong> {{ field_organization }}</p>\\r\\n{% if field_sd_status %}<p><strong>État : </strong> {{ field_sd_status }}{% if field_sd_status_1 == 'released' and field_status_link %} <span class=\\\"btn btn-success btn-sm\\\">{{ field_status_link }}</span> {% endif %}</p>{% endif %}\\r\\n<p><strong>Publié : </strong>{{ created }}</p>\\r\\n<p><a href=\\\"/fr/node/{{ nid }}\\\" class=\\\"btn btn-sm btn-default\\\"><span class=\\\"fa fa-comment\\\"></span> Commentaire</a></p>\"\n-        field_status_link:\n-          alter:\n-            text: \"<span class=\\\"glyphicon glyphicon-cog\\\" aria-hidden=\\\"true\\\"></span> <a href={{ field_status_link__uri }}>Obtenir le jeu de données</a>\\r\\n\"\n-      filters:\n-        search_api_fulltext:\n-          expose:\n-            label: Recherche\n-      sorts:\n-        title:\n-          expose:\n-            label: Titre"
                },
                {
                    "sha": "35268ecddadd90650de34f53b4c35f883aadfc85",
                    "filename": "config/language/fr/views.view.suggested_datasets.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 16,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.suggested_datasets.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fviews.view.suggested_datasets.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.suggested_datasets.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,16 +0,0 @@\n-display:\n-  default:\n-    display_options:\n-      exposed_form:\n-        options:\n-          submit_button: Recherche\n-          reset_button_label: Réinitialiser\n-          exposed_sorts_label: Trier\n-      fields:\n-        title:\n-          label: 'Titre du jeu de données '\n-        body:\n-          label: Description\n-        field_vote_up_down:\n-          label: Votez\n-      title: 'Jeux de données suggérés par les utilisateurs'"
                },
                {
                    "sha": "f9a00083b2f9ac3a1c362c0ea60bab5c2fffa26d",
                    "filename": "config/language/fr/views.view.user_admin_people.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.user_admin_people.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.user_admin_people.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.user_admin_people.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -9,7 +9,7 @@ display:\n         user_bulk_form:\n           label: 'Mise à jour en masse'\n         name:\n-          label: 'Nom d''utilisateur'\n+          label: \"Nom d'utilisateur\"\n         status:\n           label: Status\n           settings:\n@@ -45,7 +45,7 @@ display:\n           sort_desc_label: Desc\n       empty:\n         area_text_custom:\n-          content: 'Personne n''est disponible.'\n+          content: \"Personne n'est disponible.\"\n       filters:\n         combine:\n           expose:"
                },
                {
                    "sha": "ee8a43e57d631807ad26fc8e11896dcfb9fd5d8f",
                    "filename": "config/language/fr/views.view.webform_submissions.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.webform_submissions.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.webform_submissions.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.webform_submissions.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -40,7 +40,7 @@ display:\n           content: 'Displaying @start - @end of @total'\n       empty:\n         area_text_custom:\n-          content: 'Aucune soumission n''est disponible.'\n+          content: \"Aucune soumission n'est disponible.\"\n       arguments:\n         in_draft:\n           exception:"
                },
                {
                    "sha": "6279548775ef278e2cbbae982339021d8d89d629",
                    "filename": "config/language/fr/views.view.who_s_online.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.who_s_online.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fviews.view.who_s_online.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fviews.view.who_s_online.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,5 +1,5 @@\n label: 'Bloc \"Qui est connecté\"'\n-description: 'Affiche les noms des utilisateurs les plus actifs récemment et le nombre total d''utilisateurs actifs.'\n+description: \"Affiche les noms des utilisateurs les plus actifs récemment et le nombre total d'utilisateurs actifs.\"\n display:\n   default:\n     display_title: 'Par défaut'\n@@ -19,12 +19,12 @@ display:\n         access:\n           expose:\n             label: 'Dernier accès'\n-            description: 'Durée pendant laquelle on considère qu''un utilisateur est en ligne après qu''il ait vu une page pour la dernière fois.'\n+            description: \"Durée pendant laquelle on considère qu'un utilisateur est en ligne après qu'il ait vu une page pour la dernière fois.\"\n       header:\n         result:\n           content: 'Il y a actuellement @total utilisateurs en ligne.'\n   who_s_online_block:\n     display_title: 'Utilisateurs en ligne'\n     display_options:\n-      display_description: 'Une liste d''utilisateurs actuellement connectés.'\n+      display_description: \"Une liste d'utilisateurs actuellement connectés.\"\n       block_description: 'Utilisateurs en ligne'"
                },
                {
                    "sha": "1c6093aaf1eda5c1f01824b67f8a033d7e98f754",
                    "filename": "config/language/fr/webform.webform.app_vote.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.app_vote.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.app_vote.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fwebform.webform.app_vote.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,4 +6,4 @@ elements: |\n settings:\n   previous_submission_message: 'Vous avez déjà voté sur cet applis'\n   previous_submissions_message: 'Vous avez déjà voté sur cet applis'\n-  confirmation_message: 'Merci d''avoir voté sur cet applis.'\n+  confirmation_message: \"Merci d'avoir voté sur cet applis.\""
                },
                {
                    "sha": "1a011a59edcbf45261195e8a34b54d273fae795f",
                    "filename": "config/language/fr/webform.webform.ati_records.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 3,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.ati_records.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.ati_records.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fwebform.webform.ati_records.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -59,11 +59,11 @@ elements: |\n     '#title': 'Je déclare avoir lu et compris l''énoncé de confidentialité ci-dessus et je l''accepte.'\n   actions:\n     '#title': 'Bouton(s) de soumission'\n-title: 'Demande informelle d''enregistrements AI précédemment publiés'\n+title: \"Demande informelle d'enregistrements AI précédemment publiés\"\n description: '&quot;Informal Request for AI Records Previously Released&quot; webform.'\n settings:\n-  confirmation_title: 'Demande informelle d''enregistrements AI précédemment publiés'\n-  confirmation_message: 'Votre demande informelle d''enregistrements AI précédemment publiés a été soumise.'\n+  confirmation_title: \"Demande informelle d'enregistrements AI précédemment publiés\"\n+  confirmation_message: \"Votre demande informelle d'enregistrements AI précédemment publiés a été soumise.\"\n handlers:\n   confirmation:\n     label: Confirmation"
                },
                {
                    "sha": "aaa30bd060893dde018f1910e51b554bfe2b7319",
                    "filename": "config/language/fr/webform.webform.suggest_a_dataset.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 60,
                    "changes": 60,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_a_dataset.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_a_dataset.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_a_dataset.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,60 +0,0 @@\n-title: 'Proposez un jeu de données'\n-elements: |\n-  page_1:\n-    '#title': Proposition\n-  title_of_dataset:\n-    '#title': 'Titre du jeu de données'\n-    '#description': '<p class=\"text-info\">Ce champ indique le titre en anglais du jeu de données proposé. Exemplar : Comportement du vent au Canada 2016 - 2019</p>'\n-  department:\n-    '#title': 'L’institution gouvernementale qui publie un jeu de données'\n-    '#description': '<p class=\"text-info\">Ce champ décrit l’institution gouvernementale qui publie le jeu de données proposé. Si vous souhaitez obtenir des données provinciales, veuillez vous adresser à la <a href=\"[site:url]/cartes/donnees-ouvertes-au-canada#toc1\">province ou au territoire</a> concerné. Veuillez sélectionner <strong>«Autre»</strong> si vous ne connaissez pas le nom de l’organisation. Exemplar : Environnement et Changement climatique Canada</p>'\n-    '#other__option_label': Autre\n-    '#other__placeholder': 'Veuillez préciser'\n-  description_dataset:\n-    '#title': 'Description du jeu de données que vous aimeriez qui soit rendu disponible'\n-    '#description': '<p class=\"text-info\">Ce champ contient une description du jeu de données proposé. Exemplar : Ce jeu de données devrait contenir des données ayant été recueillies au fil des années 2016-2019, et ayant trait aux configurations des vents canadiens, d’un océan à l’autre.</p>'\n-  additional_comments_and_feedback:\n-    '#title': 'Rétroaction et commentaires supplémentaires'\n-    '#description': '<p class=\"text-info\">Exemplar : Ces données étaient disponible pour les années 2010-2015 mais n’ont pas été publiées depuis.</p>'\n-  dataset_subject:\n-    '#title': 'Proposez des domaines pour ce jeu de données'\n-    '#description': '<p class=\"text-info\">Pour sélectionner plusieurs éléments, cliquez sur chacun d’eux tout en maintenant la touche Ctrl enfoncée. Exemplar : Nature et environnement, Sciences et technologie</p>'\n-  dataset_keywords:\n-    '#title': 'Catégorisez votre jeu de données par des mots descriptifs séparés par des virgules'\n-    '#description': '<p class=\"text-info\">Exemplar : La météo, l’environnement et le Changement climatique Canada, la configuration des vents</p>'\n-  reason:\n-    '#title': 'Raison de la demande d’un jeu de données'\n-    '#description': '<p class=\"text-info\">Exemplar : Pédagogique</p>'\n-  personal_information_optional_:\n-    '#title': 'Renseignements sur les personnes-ressources'\n-    '#prev_button_label': '< Précédent'\n-  first_name:\n-    '#title': Prénom\n-  last_name:\n-    '#title': 'Nom de famille'\n-  title:\n-    '#title': Titre\n-  organization:\n-    '#title': Organisation\n-  e_mail_address:\n-    '#title': 'Adresse électronique'\n-    '#description': '<p class=\"text-info\">Exemplar : user@email.com</p>'\n-  telephone:\n-    '#title': Téléphone\n-  user_consent:\n-    '#title': 'Je consens à ce que mes renseignements personnels soient transmis d’un ministère du gouvernement du Canada à l’autre dans le but de répondre à ma demande.'\n-  actions:\n-    '#title': 'Bouton(s) de soumission'\n-settings:\n-  confirmation_message: 'Merci pour votre soumission. Votre demande sera traitée et ajoutée à la page « Proposez un jeu de données » dès que possible.'\n-  preview_message: 'Veuillez réviser votre soumission. Elle ne sera pas complète tant que vous n’aurez pas appuyé sur le bouton « Soumettre »!'\n-handlers:\n-  email:\n-    label: Courriel\n-    settings:\n-      from_name: default\n-      body: \"Soumis le [webform_submission:created]<br />\\r\\nSoumis par : [webform_submission:user]<br />\\r\\nLes valeurs soumises sont :<br />\\r\\n[webform_submission:values]<br />\\r\\n<br />\\r\\nLes résultats de cette soumission peuvent être vus ici :<br />\\r\\n[webform_submission:url]\\r\\n\"\n-  email_1:\n-    settings:\n-      body: \"<p>Merci pour votre soumission. Votre demande sera traitée et ajoutée à la page « Proposez un jeu de données » dès que possible.</p>\\r\\n[webform_submission:values]\"\n-description: 'Formulaire de proposition d’un jeu de données '"
                },
                {
                    "sha": "e8e14b0aa128543665ab84e0d9db493cc01bfd2e",
                    "filename": "config/language/fr/webform.webform.suggest_an_idea_for_canada_s_4th.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_an_idea_for_canada_s_4th.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_an_idea_for_canada_s_4th.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_an_idea_for_canada_s_4th.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -16,5 +16,5 @@ handlers:\n     label: Courriel\n     settings:\n       from_name: _default\n-      subject: 'Proposez une idée pour le plan d''action sur la transparence gouvernementale'\n+      subject: \"Proposez une idée pour le plan d'action sur la transparence gouvernementale\"\n       body: \"&lt;p&gt;Soumis le [webform_submission:created]&lt;/p&gt;<br />\\r\\n&lt;p&gt;Soumis par : [webform_submission:user]&lt;/p&gt;<br />\\r\\n&lt;p&gt;Les valeurs soumises sont :&lt;/p&gt;<br />\\r\\n[webform_submission:values]<br />\\r\\n<br />\\r\\nLes résultats de cette soumission peuvent être vus ici :<br />\\r\\n[webform_submission:url]\\r\\n\""
                },
                {
                    "sha": "91e57ae1d056da94bef889e9ec9976810ac22be5",
                    "filename": "config/language/fr/webform.webform.suggest_idea.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_idea.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_idea.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_idea.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -17,5 +17,5 @@ handlers:\n     label: Courriel\n     settings:\n       from_name: _default\n-      subject: 'Proposez une idée pour le 2.0 Consultation Plan d''action sur la transparence gouvernementale'\n+      subject: \"Proposez une idée pour le 2.0 Consultation Plan d'action sur la transparence gouvernementale\"\n       body: \"&lt;p&gt;Soumis le [webform_submission:created]&lt;/p&gt;<br />\\r\\n&lt;p&gt;Soumis par : [webform_submission:user]&lt;/p&gt;<br />\\r\\n&lt;p&gt;Les valeurs soumises sont :&lt;/p&gt;<br />\\r\\n[webform_submission:values]<br />\\r\\n<br />\\r\\nLes résultats de cette soumission peuvent être vus ici :<br />\\r\\n[webform_submission:url]\\r\\n\""
                },
                {
                    "sha": "032017bce2645c51979b26d1322af2887a913bc6",
                    "filename": "config/language/fr/webform.webform.suggest_idea_action_plan.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_idea_action_plan.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_idea_action_plan.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Flanguage%2Ffr%2Fwebform.webform.suggest_idea_action_plan.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-title: 'Proposez une idée pour le Consultation Plan d''action'\n+title: \"Proposez une idée pour le Consultation Plan d'action\"\n elements: |\n   add_your_idea:\n     '#title': 'Ajoutez votre idée'\n@@ -16,5 +16,5 @@ handlers:\n     label: Courriel\n     settings:\n       from_name: _default\n-      subject: 'Proposez une idée pour le plan d''action sur la transparence gouvernementale'\n+      subject: \"Proposez une idée pour le plan d'action sur la transparence gouvernementale\"\n       body: \"&lt;p&gt;Soumis le [webform_submission:created]&lt;/p&gt;<br />\\r\\n&lt;p&gt;Soumis par : [webform_submission:user]&lt;/p&gt;<br />\\r\\n&lt;p&gt;Les valeurs soumises sont :&lt;/p&gt;<br />\\r\\n[webform_submission:values]<br />\\r\\n<br />\\r\\nLes résultats de cette soumission peuvent être vus ici :<br />\\r\\n[webform_submission:url]\\r\\n\""
                },
                {
                    "sha": "9de6aadd97747e8fc170dda392fa98fd076c276c",
                    "filename": "config/media.settings.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fmedia.settings.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fmedia.settings.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fmedia.settings.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,6 +1,6 @@\n _core:\n   default_config_hash: mGSTibn3G5f_XQIgH_Z_kcDNAETg9anSk60kZdhXarE\n icon_base_uri: 'public://media-icons/generic'\n-iframe_domain: ''\n+iframe_domain: null\n oembed_providers_url: 'https://oembed.com/providers.json'\n standalone_url: true"
                },
                {
                    "sha": "54e3f82d0b6d3acb882aaa85d487db5804c73a7f",
                    "filename": "config/node.type.idea.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fnode.type.idea.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fnode.type.idea.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fnode.type.idea.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -10,7 +10,7 @@ third_party_settings:\n     parent: ''\n name: Idea\n type: idea\n-description: 'Possible idea''s for areas of improvement related to Open Government.'\n+description: \"Possible idea's for areas of improvement related to Open Government.\"\n help: ''\n new_revision: true\n preview_mode: 1"
                },
                {
                    "sha": "6b3a97cedf1f77eb48a894176d1b783f29ac29c6",
                    "filename": "config/node.type.page.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fnode.type.page.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fnode.type.page.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fnode.type.page.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -13,7 +13,7 @@ _core:\n   default_config_hash: KuyA4NHPXcmKAjRtwa0vQc2ZcyrUJy6IlS2TAyMNRbc\n name: 'Basic page'\n type: page\n-description: 'Use <em>basic pages</em> for your static content, such as an ''About us'' page.'\n+description: \"Use <em>basic pages</em> for your static content, such as an 'About us' page.\"\n help: ''\n new_revision: true\n preview_mode: 1"
                },
                {
                    "sha": "e9d1058634e7a91ef6d4055418b3da728ff65086",
                    "filename": "config/node.type.suggested_dataset.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 17,
                    "changes": 17,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fnode.type.suggested_dataset.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fnode.type.suggested_dataset.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fnode.type.suggested_dataset.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,17 +0,0 @@\n-uuid: 41c86e32-3312-4530-a856-c52fa54b6d80\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - menu_ui\n-third_party_settings:\n-  menu_ui:\n-    available_menus: {  }\n-    parent: ''\n-name: 'Suggested Dataset'\n-type: suggested_dataset\n-description: 'Datasets that have been suggested by users through the web form.'\n-help: ''\n-new_revision: true\n-preview_mode: 1\n-display_submitted: false"
                },
                {
                    "sha": "151a3cea8e07cec6b23f58216018f53647d38ebd",
                    "filename": "config/pathauto.pattern.histoire_d_impact_utilisateur.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fpathauto.pattern.histoire_d_impact_utilisateur.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fpathauto.pattern.histoire_d_impact_utilisateur.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fpathauto.pattern.histoire_d_impact_utilisateur.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -6,7 +6,7 @@ dependencies:\n     - language\n     - node\n id: histoire_d_impact_utilisateur\n-label: 'Histoire d''impact utilisateur'\n+label: \"Histoire d'impact utilisateur\"\n type: 'canonical_entities:node'\n pattern: 'récit/[node:title]'\n selection_criteria:"
                },
                {
                    "sha": "1b569188804f2db052114df94944a31f6a1812c7",
                    "filename": "config/pathauto.pattern.suggested_dataset.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 22,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fpathauto.pattern.suggested_dataset.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fpathauto.pattern.suggested_dataset.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fpathauto.pattern.suggested_dataset.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,22 +0,0 @@\n-uuid: 3a8c302a-e872-45ca-a128-70c7c8506536\n-langcode: en\n-status: true\n-dependencies:\n-  module:\n-    - node\n-id: suggested_dataset\n-label: 'Suggested Dataset'\n-type: 'canonical_entities:node'\n-pattern: 'suggestion/dataset/[node:title]'\n-selection_criteria:\n-  2434a551-2bc6-4cd6-a09c-036ec39d5b9d:\n-    id: 'entity_bundle:node'\n-    negate: false\n-    uuid: 2434a551-2bc6-4cd6-a09c-036ec39d5b9d\n-    context_mapping:\n-      node: node\n-    bundles:\n-      suggested_dataset: suggested_dataset\n-selection_logic: and\n-weight: 5\n-relationships: {  }"
                },
                {
                    "sha": "7254c7a1db3a2869d9f0a23f3aa761abb1c50b4a",
                    "filename": "config/search_api.index.drupal_content.yml",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 35,
                    "changes": 41,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api.index.drupal_content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api.index.drupal_content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.drupal_content.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -3,9 +3,6 @@ langcode: en\n status: true\n dependencies:\n   config:\n-    - field.storage.node.field_dataset_subject\n-    - field.storage.node.field_organization\n-    - field.storage.node.field_sd_status\n     - field.storage.node.field_vote_up_down\n     - field.storage.node.body\n     - search_api.server.drupal_content\n@@ -71,30 +68,6 @@ field_settings:\n     dependencies:\n       module:\n         - node\n-  field_dataset_subject:\n-    label: Subject\n-    datasource_id: 'entity:node'\n-    property_path: field_dataset_subject\n-    type: string\n-    dependencies:\n-      config:\n-        - field.storage.node.field_dataset_subject\n-  field_organization:\n-    label: Organization\n-    datasource_id: 'entity:node'\n-    property_path: field_organization\n-    type: string\n-    dependencies:\n-      config:\n-        - field.storage.node.field_organization\n-  field_sd_status:\n-    label: Status\n-    datasource_id: 'entity:node'\n-    property_path: field_sd_status\n-    type: string\n-    dependencies:\n-      config:\n-        - field.storage.node.field_sd_status\n   field_vote_up_down:\n     label: Votes\n     datasource_id: 'entity:node'\n@@ -124,7 +97,7 @@ field_settings:\n     datasource_id: 'entity:node'\n     property_path: 'body:processed'\n     type: text\n-    boost: !!float 2\n+    boost: 2.0\n     dependencies:\n       config:\n         - field.storage.node.body\n@@ -133,7 +106,7 @@ field_settings:\n     datasource_id: 'entity:node'\n     property_path: title\n     type: text\n-    boost: !!float 3\n+    boost: 3.0\n     dependencies:\n       module:\n         - node\n@@ -157,6 +130,7 @@ processor_settings:\n   add_url: {  }\n   aggregated_field: {  }\n   auto_aggregated_fulltext_field: {  }\n+  custom_value: {  }\n   double_quote_workaround:\n     weights:\n       postprocess_query: 0\n@@ -189,9 +163,6 @@ processor_settings:\n       preprocess_query: -15\n     all_fields: true\n     fields:\n-      - field_dataset_subject\n-      - field_organization\n-      - field_sd_status\n       - moderation_state\n       - processed\n       - title\n@@ -214,10 +185,10 @@ processor_settings:\n       preprocess_index: 0\n     boosts:\n       'entity:node':\n-        datasource_boost: !!float 2\n+        datasource_boost: 2.0\n         bundle_boosts:\n-          landing_page: !!float 5\n-          page: !!float 3\n+          landing_page: 5.0\n+          page: 3.0\n tracker_settings:\n   default:\n     indexing_order: fifo"
                },
                {
                    "sha": "d43a3d3d4718415598b625057b934e19ffb1f062",
                    "filename": "config/search_api.index.pd_core_contracts.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 344,
                    "changes": 344,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_contracts.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_contracts.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_contracts.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,344 +0,0 @@\n-uuid: 7794911c-c1fe-449b-b8e7-50dc5e398626\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_contracts\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_contracts\n-name: 'Proactive Disclosure: Contracts Index'\n-description: 'Read-only search index for Solr core_contracts'\n-read_only: true\n-field_settings:\n-  aboriginal_business_en:\n-    label: 'Aboriginal business en'\n-    datasource_id: solr_document\n-    property_path: aboriginal_business_en\n-    type: string\n-  aboriginal_business_fr:\n-    label: 'Aboriginal business fr'\n-    datasource_id: solr_document\n-    property_path: aboriginal_business_fr\n-    type: string\n-  additional_comments_en:\n-    label: 'Additional comments en'\n-    datasource_id: solr_document\n-    property_path: additional_comments_en\n-    type: string\n-  additional_comments_fr:\n-    label: 'Additional comments fr'\n-    datasource_id: solr_document\n-    property_path: additional_comments_fr\n-    type: string\n-  agreement_type_en:\n-    label: 'Agreement type en'\n-    datasource_id: solr_document\n-    property_path: agreement_type_en\n-    type: string\n-  agreement_type_fr:\n-    label: 'Agreement type fr'\n-    datasource_id: solr_document\n-    property_path: agreement_type_fr\n-    type: string\n-  amendment_value:\n-    label: 'Amendment value'\n-    datasource_id: solr_document\n-    property_path: amendment_value\n-    type: string\n-  comments_en:\n-    label: 'Comments en'\n-    datasource_id: solr_document\n-    property_path: comments_en\n-    type: string\n-  comments_fr:\n-    label: 'Comments fr'\n-    datasource_id: solr_document\n-    property_path: comments_fr\n-    type: string\n-  commodity_code:\n-    label: 'Commodity code'\n-    datasource_id: solr_document\n-    property_path: commodity_code\n-    type: string\n-  commodity_type_en:\n-    label: 'Commodity type en'\n-    datasource_id: solr_document\n-    property_path: commodity_type_en\n-    type: string\n-  commodity_type_fr:\n-    label: 'Commodity type fr'\n-    datasource_id: solr_document\n-    property_path: commodity_type_fr\n-    type: string\n-  contract_date:\n-    label: 'Contract date'\n-    datasource_id: solr_document\n-    property_path: contract_date\n-    type: string\n-  contract_period_start:\n-    label: 'Contract period start'\n-    datasource_id: solr_document\n-    property_path: contract_period_start\n-    type: string\n-  contract_value:\n-    label: 'Contract value'\n-    datasource_id: solr_document\n-    property_path: contract_value\n-    type: string\n-  contract_value_en:\n-    label: 'Contract value en'\n-    datasource_id: solr_document\n-    property_path: contract_value_en\n-    type: string\n-  contract_value_fr:\n-    label: 'Contract value fr'\n-    datasource_id: solr_document\n-    property_path: contract_value_fr\n-    type: string\n-  country_of_origin_en:\n-    label: 'Country of origin en'\n-    datasource_id: solr_document\n-    property_path: country_of_origin_en\n-    type: string\n-  country_of_origin_fr:\n-    label: 'Country of origin fr'\n-    datasource_id: solr_document\n-    property_path: country_of_origin_fr\n-    type: string\n-  date_clean:\n-    label: 'Date clean'\n-    datasource_id: solr_document\n-    property_path: date_clean\n-    type: string\n-  date_year:\n-    label: 'Date year'\n-    datasource_id: solr_document\n-    property_path: date_year\n-    type: string\n-  delivery_date:\n-    label: 'Delivery date'\n-    datasource_id: solr_document\n-    property_path: delivery_date\n-    type: string\n-  description_en:\n-    label: 'Description en'\n-    datasource_id: solr_document\n-    property_path: description_en\n-    type: string\n-  description_fr:\n-    label: 'Description fr'\n-    datasource_id: solr_document\n-    property_path: description_fr\n-    type: string\n-  document_type_en:\n-    label: 'Document type en'\n-    datasource_id: solr_document\n-    property_path: document_type_en\n-    type: string\n-  document_type_fr:\n-    label: 'Document type fr'\n-    datasource_id: solr_document\n-    property_path: document_type_fr\n-    type: string\n-  economic_object_code:\n-    label: 'Economic object code'\n-    datasource_id: solr_document\n-    property_path: economic_object_code\n-    type: string\n-  exemption_en:\n-    label: 'Exemption en'\n-    datasource_id: solr_document\n-    property_path: exemption_en\n-    type: string\n-  exemption_fr:\n-    label: 'Exemption fr'\n-    datasource_id: solr_document\n-    property_path: exemption_fr\n-    type: string\n-  former_public_servant_en:\n-    label: 'Former public servant en'\n-    datasource_id: solr_document\n-    property_path: former_public_servant_en\n-    type: string\n-  former_public_servant_fr:\n-    label: 'Former public servant fr'\n-    datasource_id: solr_document\n-    property_path: former_public_servant_fr\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  intellectual_property_en:\n-    label: 'Intellectual property en'\n-    datasource_id: solr_document\n-    property_path: intellectual_property_en\n-    type: string\n-  intellectual_property_fr:\n-    label: 'Intellectual property fr'\n-    datasource_id: solr_document\n-    property_path: intellectual_property_fr\n-    type: string\n-  limited_tendering_reason_en:\n-    label: 'Limited tendering reason en'\n-    datasource_id: solr_document\n-    property_path: limited_tendering_reason_en\n-    type: string\n-  limited_tendering_reason_fr:\n-    label: 'Limited tendering reason fr'\n-    datasource_id: solr_document\n-    property_path: limited_tendering_reason_fr\n-    type: string\n-  multi_agreement_type_en:\n-    label: 'Multi agreement type en'\n-    datasource_id: solr_document\n-    property_path: multi_agreement_type_en\n-    type: string\n-  multi_agreement_type_fr:\n-    label: 'Multi agreement type fr'\n-    datasource_id: solr_document\n-    property_path: multi_agreement_type_fr\n-    type: string\n-  nothing_to_report_en:\n-    label: 'Nothing to report en'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_en\n-    type: string\n-  nothing_to_report_fr:\n-    label: 'Nothing to report fr'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_fr\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  original_value:\n-    label: 'Original value'\n-    datasource_id: solr_document\n-    property_path: original_value\n-    type: string\n-  potential_commercial_exploitation_en:\n-    label: 'Potential commercial exploitation en'\n-    datasource_id: solr_document\n-    property_path: potential_commercial_exploitation_en\n-    type: string\n-  potential_commercial_exploitation_fr:\n-    label: 'Potential commercial exploitation fr'\n-    datasource_id: solr_document\n-    property_path: potential_commercial_exploitation_fr\n-    type: string\n-  procurement_id:\n-    label: 'Procurement id'\n-    datasource_id: solr_document\n-    property_path: procurement_id\n-    type: text\n-  reference_number:\n-    label: 'Reference number'\n-    datasource_id: solr_document\n-    property_path: reference_number\n-    type: text\n-  reporting_period:\n-    label: 'Reporting period'\n-    datasource_id: solr_document\n-    property_path: reporting_period\n-    type: string\n-  solicitation_procedure_en:\n-    label: 'Solicitation procedure en'\n-    datasource_id: solr_document\n-    property_path: solicitation_procedure_en\n-    type: string\n-  solicitation_procedure_fr:\n-    label: 'Solicitation procedure fr'\n-    datasource_id: solr_document\n-    property_path: solicitation_procedure_fr\n-    type: string\n-  standing_offer_en:\n-    label: 'Standing offer en'\n-    datasource_id: solr_document\n-    property_path: standing_offer_en\n-    type: string\n-  standing_offer_fr:\n-    label: 'Standing offer fr'\n-    datasource_id: solr_document\n-    property_path: standing_offer_fr\n-    type: string\n-  standing_offer_number:\n-    label: 'Standing offer number'\n-    datasource_id: solr_document\n-    property_path: standing_offer_number\n-    type: string\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-  vendor_name:\n-    label: 'Vendor name'\n-    datasource_id: solr_document\n-    property_path: vendor_name\n-    type: string\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range: {  }\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_contracts"
                },
                {
                    "sha": "f71e7100e9e35c2d9b3cbd9e6b40a42489e0bd6e",
                    "filename": "config/search_api.index.pd_core_grants.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 306,
                    "changes": 306,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_grants.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_grants.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_grants.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,306 +0,0 @@\n-uuid: 690c921a-c3b0-468e-ba4e-04324c915052\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_grants\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_grants\n-name: 'Proactive Disclosure: Grants Index'\n-description: 'Read-only search index for Solr core_grants'\n-read_only: true\n-field_settings:\n-  additional_information_en:\n-    label: 'Additional information en'\n-    datasource_id: solr_document\n-    property_path: additional_information_en\n-    type: string\n-  additional_information_fr:\n-    label: 'Additional information fr'\n-    datasource_id: solr_document\n-    property_path: additional_information_fr\n-    type: string\n-  agreement_end_date:\n-    label: 'Agreement end date'\n-    datasource_id: solr_document\n-    property_path: agreement_end_date\n-    type: string\n-  agreement_number:\n-    label: 'Agreement number'\n-    datasource_id: solr_document\n-    property_path: agreement_number\n-    type: string\n-  agreement_start_date:\n-    label: 'Agreement start date'\n-    datasource_id: solr_document\n-    property_path: agreement_start_date\n-    type: string\n-  agreement_title_en:\n-    label: 'Agreement title en'\n-    datasource_id: solr_document\n-    property_path: agreement_title_en\n-    type: string\n-  agreement_title_fr:\n-    label: 'Agreement title fr'\n-    datasource_id: solr_document\n-    property_path: agreement_title_fr\n-    type: string\n-  agreement_type_en:\n-    label: 'Agreement type en'\n-    datasource_id: solr_document\n-    property_path: agreement_type_en\n-    type: string\n-  agreement_type_fr:\n-    label: 'Agreement type fr'\n-    datasource_id: solr_document\n-    property_path: agreement_type_fr\n-    type: string\n-  agreement_value:\n-    label: 'Agreement value'\n-    datasource_id: solr_document\n-    property_path: agreement_value\n-    type: string\n-  amendment_date:\n-    label: 'Amendment date'\n-    datasource_id: solr_document\n-    property_path: amendment_date\n-    type: string\n-  amendment_number:\n-    label: 'Amendment number'\n-    datasource_id: solr_document\n-    property_path: amendment_number\n-    type: string\n-  coverage:\n-    label: Coverage\n-    datasource_id: solr_document\n-    property_path: coverage\n-    type: string\n-  date_clean:\n-    label: 'Date clean'\n-    datasource_id: solr_document\n-    property_path: date_clean\n-    type: string\n-  date_year:\n-    label: 'Date year'\n-    datasource_id: solr_document\n-    property_path: date_year\n-    type: string\n-    boost: !!float 5\n-  description_en:\n-    label: 'Description en'\n-    datasource_id: solr_document\n-    property_path: description_en\n-    type: string\n-  description_fr:\n-    label: 'Description fr'\n-    datasource_id: solr_document\n-    property_path: description_fr\n-    type: string\n-  expected_results_en:\n-    label: 'Expected results en'\n-    datasource_id: solr_document\n-    property_path: expected_results_en\n-    type: string\n-  expected_results_fr:\n-    label: 'Expected results fr'\n-    datasource_id: solr_document\n-    property_path: expected_results_fr\n-    type: string\n-  federal_riding_name_en:\n-    label: 'Federal riding name en'\n-    datasource_id: solr_document\n-    property_path: federal_riding_name_en\n-    type: string\n-  federal_riding_name_fr:\n-    label: 'Federal riding name fr'\n-    datasource_id: solr_document\n-    property_path: federal_riding_name_fr\n-    type: string\n-  federal_riding_number:\n-    label: 'Federal riding number'\n-    datasource_id: solr_document\n-    property_path: federal_riding_number\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  naics_identifier:\n-    label: 'Naics identifier'\n-    datasource_id: solr_document\n-    property_path: naics_identifier\n-    type: string\n-  nothing_to_report_en:\n-    label: 'Nothing to report en'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_en\n-    type: string\n-  nothing_to_report_fr:\n-    label: 'Nothing to report fr'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_fr\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  partial_id:\n-    label: 'Partial id'\n-    datasource_id: solr_document\n-    property_path: partial_id\n-    type: text\n-  prog_name_en:\n-    label: 'Prog name en'\n-    datasource_id: solr_document\n-    property_path: prog_name_en\n-    type: string\n-  prog_name_fr:\n-    label: 'Prog name fr'\n-    datasource_id: solr_document\n-    property_path: prog_name_fr\n-    type: string\n-  prog_purpose_en:\n-    label: 'Prog purpose en'\n-    datasource_id: solr_document\n-    property_path: prog_purpose_en\n-    type: string\n-  prog_purpose_fr:\n-    label: 'Prog purpose fr'\n-    datasource_id: solr_document\n-    property_path: prog_purpose_fr\n-    type: string\n-  quarter_en:\n-    label: 'Quarter en'\n-    datasource_id: solr_document\n-    property_path: quarter_en\n-    type: string\n-  quarter_fr:\n-    label: 'Quarter fr'\n-    datasource_id: solr_document\n-    property_path: quarter_fr\n-    type: string\n-  recipient_business_number:\n-    label: 'Recipient business number'\n-    datasource_id: solr_document\n-    property_path: recipient_business_number\n-    type: string\n-  recipient_city:\n-    label: 'Recipient city'\n-    datasource_id: solr_document\n-    property_path: recipient_city\n-    type: string\n-  recipient_country_en:\n-    label: 'Recipient country en'\n-    datasource_id: solr_document\n-    property_path: recipient_country_en\n-    type: string\n-  recipient_country_fr:\n-    label: 'Recipient country fr'\n-    datasource_id: solr_document\n-    property_path: recipient_country_fr\n-    type: string\n-  recipient_legal_name:\n-    label: 'Recipient legal name'\n-    datasource_id: solr_document\n-    property_path: recipient_legal_name\n-    type: text\n-    boost: !!float 5\n-  recipient_postal_code:\n-    label: 'Recipient postal code'\n-    datasource_id: solr_document\n-    property_path: recipient_postal_code\n-    type: string\n-  recipient_province_en:\n-    label: 'Recipient province en'\n-    datasource_id: solr_document\n-    property_path: recipient_province_en\n-    type: string\n-  recipient_province_fr:\n-    label: 'Recipient province fr'\n-    datasource_id: solr_document\n-    property_path: recipient_province_fr\n-    type: string\n-  recipient_type_en:\n-    label: 'Recipient type en'\n-    datasource_id: solr_document\n-    property_path: recipient_type_en\n-    type: string\n-  recipient_type_fr:\n-    label: 'Recipient type fr'\n-    datasource_id: solr_document\n-    property_path: recipient_type_fr\n-    type: string\n-  ref_number:\n-    label: 'Ref number'\n-    datasource_id: solr_document\n-    property_path: ref_number\n-    type: text\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range: {  }\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_grants"
                },
                {
                    "sha": "325bf8d51bee35dea419ba76f5b4c0a72fcf1561",
                    "filename": "config/search_api.index.pd_core_hospitalityq.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 234,
                    "changes": 234,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_hospitalityq.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_hospitalityq.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_hospitalityq.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,234 +0,0 @@\n-uuid: c3c87eb7-1197-46c5-8867-6f9379c6d40f\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_hospitalityq\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_hospitalityq\n-name: 'Proactive Disclosure: Hospitality (Q) Index'\n-description: 'Read-only search index for Solr core_hospitalityq'\n-read_only: true\n-field_settings:\n-  additional_comments_en:\n-    label: 'Additional comments en'\n-    datasource_id: solr_document\n-    property_path: additional_comments_en\n-    type: string\n-  additional_comments_fr:\n-    label: 'Additional comments fr'\n-    datasource_id: solr_document\n-    property_path: additional_comments_fr\n-    type: string\n-  date_clean:\n-    label: 'Date clean'\n-    datasource_id: solr_document\n-    property_path: date_clean\n-    type: string\n-  date_year:\n-    label: 'Date year'\n-    datasource_id: solr_document\n-    property_path: date_year\n-    type: string\n-  description_en:\n-    label: 'Description en'\n-    datasource_id: solr_document\n-    property_path: description_en\n-    type: string\n-  description_fr:\n-    label: 'Description fr'\n-    datasource_id: solr_document\n-    property_path: description_fr\n-    type: string\n-  disclosure_group_en:\n-    label: 'Disclosure group en'\n-    datasource_id: solr_document\n-    property_path: disclosure_group_en\n-    type: string\n-  disclosure_group_fr:\n-    label: 'Disclosure group fr'\n-    datasource_id: solr_document\n-    property_path: disclosure_group_fr\n-    type: string\n-  employee_attendees:\n-    label: 'Employee attendees'\n-    datasource_id: solr_document\n-    property_path: employee_attendees\n-    type: string\n-  end_date:\n-    label: 'End date'\n-    datasource_id: solr_document\n-    property_path: end_date\n-    type: string\n-  guest_attendees:\n-    label: 'Guest attendees'\n-    datasource_id: solr_document\n-    property_path: guest_attendees\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  location_en:\n-    label: 'Location en'\n-    datasource_id: solr_document\n-    property_path: location_en\n-    type: string\n-  location_fr:\n-    label: 'Location fr'\n-    datasource_id: solr_document\n-    property_path: location_fr\n-    type: string\n-  month_en:\n-    label: 'Month en'\n-    datasource_id: solr_document\n-    property_path: month_en\n-    type: string\n-  month_fr:\n-    label: 'Month fr'\n-    datasource_id: solr_document\n-    property_path: month_fr\n-    type: string\n-  name:\n-    label: Name\n-    datasource_id: solr_document\n-    property_path: name\n-    type: string\n-  nothing_to_report_en:\n-    label: 'Nothing to report en'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_en\n-    type: string\n-  nothing_to_report_fr:\n-    label: 'Nothing to report fr'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_fr\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  ref_number:\n-    label: 'Ref number'\n-    datasource_id: solr_document\n-    property_path: ref_number\n-    type: text\n-  report_type_en:\n-    label: 'Report type en'\n-    datasource_id: solr_document\n-    property_path: report_type_en\n-    type: string\n-  report_type_fr:\n-    label: 'Report type fr'\n-    datasource_id: solr_document\n-    property_path: report_type_fr\n-    type: string\n-  start_date:\n-    label: 'Start date'\n-    datasource_id: solr_document\n-    property_path: start_date\n-    type: string\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-  title_en:\n-    label: 'Title en'\n-    datasource_id: solr_document\n-    property_path: title_en\n-    type: string\n-  title_fr:\n-    label: 'Title fr'\n-    datasource_id: solr_document\n-    property_path: title_fr\n-    type: string\n-  total:\n-    label: Total\n-    datasource_id: solr_document\n-    property_path: total\n-    type: string\n-  total_en:\n-    label: 'Total en'\n-    datasource_id: solr_document\n-    property_path: total_en\n-    type: string\n-  total_fr:\n-    label: 'Total fr'\n-    datasource_id: solr_document\n-    property_path: total_fr\n-    type: string\n-  vendor_en:\n-    label: 'Vendor en'\n-    datasource_id: solr_document\n-    property_path: vendor_en\n-    type: string\n-  vendor_fr:\n-    label: 'Vendor fr'\n-    datasource_id: solr_document\n-    property_path: vendor_fr\n-    type: string\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range: {  }\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_hospitalityq"
                },
                {
                    "sha": "cd5ff32741b1beeb84e073b2cd5d601b30f1c9ab",
                    "filename": "config/search_api.index.pd_core_inventory.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 179,
                    "changes": 179,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_inventory.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_inventory.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_inventory.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,179 +0,0 @@\n-uuid: f449819f-f4ca-4718-abd4-96b17eca81f6\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_inventory\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_inventory\n-name: 'Proactive Disclosure: Inventory'\n-description: 'Read-only search index for Solr core_inventory'\n-read_only: true\n-field_settings:\n-  date_published:\n-    label: 'Date published'\n-    datasource_id: solr_document\n-    property_path: date_published\n-    type: string\n-  date_released:\n-    label: 'Date released'\n-    datasource_id: solr_document\n-    property_path: date_released\n-    type: string\n-  description_en:\n-    label: 'Description en'\n-    datasource_id: solr_document\n-    property_path: description_en\n-    type: string\n-  description_fr:\n-    label: 'Description fr'\n-    datasource_id: solr_document\n-    property_path: description_fr\n-    type: string\n-  eligible_for_release_en:\n-    label: 'Eligible for release en'\n-    datasource_id: solr_document\n-    property_path: eligible_for_release_en\n-    type: string\n-  eligible_for_release_fr:\n-    label: 'Eligible for release fr'\n-    datasource_id: solr_document\n-    property_path: eligible_for_release_fr\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  language_en:\n-    label: 'Language en'\n-    datasource_id: solr_document\n-    property_path: language_en\n-    type: string\n-  language_fr:\n-    label: 'Language fr'\n-    datasource_id: solr_document\n-    property_path: language_fr\n-    type: string\n-  org_name_code:\n-    label: 'Org name code'\n-    datasource_id: solr_document\n-    property_path: org_name_code\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  portal_url_en:\n-    label: 'Portal url en'\n-    datasource_id: solr_document\n-    property_path: portal_url_en\n-    type: string\n-  portal_url_fr:\n-    label: 'Portal url fr'\n-    datasource_id: solr_document\n-    property_path: portal_url_fr\n-    type: string\n-  program_alignment_architecture_en:\n-    label: 'Program alignment architecture en'\n-    datasource_id: solr_document\n-    property_path: program_alignment_architecture_en\n-    type: string\n-  program_alignment_architecture_fr:\n-    label: 'Program alignment architecture fr'\n-    datasource_id: solr_document\n-    property_path: program_alignment_architecture_fr\n-    type: string\n-  publisher_en:\n-    label: 'Publisher en'\n-    datasource_id: solr_document\n-    property_path: publisher_en\n-    type: string\n-  publisher_fr:\n-    label: 'Publisher fr'\n-    datasource_id: solr_document\n-    property_path: publisher_fr\n-    type: string\n-  ref_number:\n-    label: 'Ref number'\n-    datasource_id: solr_document\n-    property_path: ref_number\n-    type: text\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-  title_en:\n-    label: 'Title en'\n-    datasource_id: solr_document\n-    property_path: title_en\n-    type: string\n-  title_fr:\n-    label: 'Title fr'\n-    datasource_id: solr_document\n-    property_path: title_fr\n-    type: string\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range: {  }\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_inventory"
                },
                {
                    "sha": "c2c7e6f6731c57097f044897aa933f118cafaf8b",
                    "filename": "config/search_api.index.pd_core_reclassification.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 206,
                    "changes": 206,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_reclassification.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_reclassification.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_reclassification.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,206 +0,0 @@\n-uuid: 4d9bed3b-2f67-42fe-a09c-e55b23db7105\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_reclassification\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_reclassification\n-name: 'Proactive Disclosure: Reclassification Index'\n-description: 'Read-only search index for Solr core_reclassification'\n-read_only: true\n-field_settings:\n-  date_clean:\n-    label: 'Date clean'\n-    datasource_id: solr_document\n-    property_path: date_clean\n-    type: string\n-  date_year:\n-    label: 'Date year'\n-    datasource_id: solr_document\n-    property_path: date_year\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  new_class_group_code:\n-    label: 'New class group code'\n-    datasource_id: solr_document\n-    property_path: new_class_group_code\n-    type: string\n-  new_class_group_en:\n-    label: 'New class group en'\n-    datasource_id: solr_document\n-    property_path: new_class_group_en\n-    type: string\n-  new_class_group_fr:\n-    label: 'New class group fr'\n-    datasource_id: solr_document\n-    property_path: new_class_group_fr\n-    type: string\n-  new_class_level:\n-    label: 'New class level'\n-    datasource_id: solr_document\n-    property_path: new_class_level\n-    type: string\n-  old_class_group_code:\n-    label: 'Old class group code'\n-    datasource_id: solr_document\n-    property_path: old_class_group_code\n-    type: string\n-  old_class_group_en:\n-    label: 'Old class group en'\n-    datasource_id: solr_document\n-    property_path: old_class_group_en\n-    type: string\n-  old_class_group_fr:\n-    label: 'Old class group fr'\n-    datasource_id: solr_document\n-    property_path: old_class_group_fr\n-    type: string\n-  old_class_level:\n-    label: 'Old class level'\n-    datasource_id: solr_document\n-    property_path: old_class_level\n-    type: string\n-  old_class_level_en:\n-    label: 'Old class level en'\n-    datasource_id: solr_document\n-    property_path: old_class_level_en\n-    type: string\n-  old_class_level_fr:\n-    label: 'Old class level fr'\n-    datasource_id: solr_document\n-    property_path: old_class_level_fr\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  pos_number:\n-    label: 'Pos number'\n-    datasource_id: solr_document\n-    property_path: pos_number\n-    type: string\n-  pos_title_en:\n-    label: 'Pos title en'\n-    datasource_id: solr_document\n-    property_path: pos_title_en\n-    type: string\n-  pos_title_fr:\n-    label: 'Pos title fr'\n-    datasource_id: solr_document\n-    property_path: pos_title_fr\n-    type: string\n-  quarter_en:\n-    label: 'Quarter en'\n-    datasource_id: solr_document\n-    property_path: quarter_en\n-    type: string\n-  quarter_fr:\n-    label: 'Quarter fr'\n-    datasource_id: solr_document\n-    property_path: quarter_fr\n-    type: string\n-  reason_en:\n-    label: 'Reason en'\n-    datasource_id: solr_document\n-    property_path: reason_en\n-    type: string\n-  reason_fr:\n-    label: 'Reason fr'\n-    datasource_id: solr_document\n-    property_path: reason_fr\n-    type: string\n-  ref_number:\n-    label: 'Ref number'\n-    datasource_id: solr_document\n-    property_path: ref_number\n-    type: text\n-  report_type_en:\n-    label: 'Report type en'\n-    datasource_id: solr_document\n-    property_path: report_type_en\n-    type: string\n-  report_type_fr:\n-    label: 'Report type fr'\n-    datasource_id: solr_document\n-    property_path: report_type_fr\n-    type: string\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-  year:\n-    label: Year\n-    datasource_id: solr_document\n-    property_path: year\n-    type: string\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range:\n-    weights:\n-      preprocess_index: 0\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_reclassification"
                },
                {
                    "sha": "ee922696b5bd874098308330b1b2ca5bdb235bea",
                    "filename": "config/search_api.index.pd_core_travela.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 334,
                    "changes": 334,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_travela.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_travela.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_travela.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,334 +0,0 @@\n-uuid: 4801b5a9-e712-4670-b22d-e43e7b27187e\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_travela\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_travela\n-name: 'Proactive Disclosure: Travel (A) Index'\n-description: 'Read-only search index for Solr core_travela'\n-read_only: true\n-field_settings:\n-  conference_fees_compared_fiscal_year_en:\n-    label: 'Conference fees compared fiscal year en'\n-    datasource_id: solr_document\n-    property_path: conference_fees_compared_fiscal_year_en\n-    type: string\n-  conference_fees_compared_fiscal_year_fr:\n-    label: 'Conference fees compared fiscal year fr'\n-    datasource_id: solr_document\n-    property_path: conference_fees_compared_fiscal_year_fr\n-    type: string\n-  conference_fees_kdollars:\n-    label: 'Conference fees kdollars'\n-    datasource_id: solr_document\n-    property_path: conference_fees_kdollars\n-    type: string\n-  conference_fees_kdollars_change:\n-    label: 'Conference fees kdollars change'\n-    datasource_id: solr_document\n-    property_path: conference_fees_kdollars_change\n-    type: string\n-  conference_fees_kdollars_previous_year:\n-    label: 'Conference fees kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: conference_fees_kdollars_previous_year\n-    type: string\n-  hospitality_compared_fiscal_year_en:\n-    label: 'Hospitality compared fiscal year en'\n-    datasource_id: solr_document\n-    property_path: hospitality_compared_fiscal_year_en\n-    type: string\n-  hospitality_compared_fiscal_year_fr:\n-    label: 'Hospitality compared fiscal year fr'\n-    datasource_id: solr_document\n-    property_path: hospitality_compared_fiscal_year_fr\n-    type: string\n-  hospitality_kdollars:\n-    label: 'Hospitality kdollars'\n-    datasource_id: solr_document\n-    property_path: hospitality_kdollars\n-    type: string\n-  hospitality_kdollars_change:\n-    label: 'Hospitality kdollars change'\n-    datasource_id: solr_document\n-    property_path: hospitality_kdollars_change\n-    type: string\n-  hospitality_kdollars_previous_year:\n-    label: 'Hospitality kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: hospitality_kdollars_previous_year\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  internal_governance_kdollars:\n-    label: 'Internal governance kdollars'\n-    datasource_id: solr_document\n-    property_path: internal_governance_kdollars\n-    type: string\n-  internal_governance_kdollars_change:\n-    label: 'Internal governance kdollars change'\n-    datasource_id: solr_document\n-    property_path: internal_governance_kdollars_change\n-    type: string\n-  internal_governance_kdollars_previous_year:\n-    label: 'Internal governance kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: internal_governance_kdollars_previous_year\n-    type: string\n-  key_stakeholders_kdollars:\n-    label: 'Key stakeholders kdollars'\n-    datasource_id: solr_document\n-    property_path: key_stakeholders_kdollars\n-    type: string\n-  key_stakeholders_kdollars_change:\n-    label: 'Key stakeholders kdollars change'\n-    datasource_id: solr_document\n-    property_path: key_stakeholders_kdollars_change\n-    type: string\n-  key_stakeholders_kdollars_previous_year:\n-    label: 'Key stakeholders kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: key_stakeholders_kdollars_previous_year\n-    type: string\n-  mandate_description_en:\n-    label: 'Mandate description en'\n-    datasource_id: solr_document\n-    property_path: mandate_description_en\n-    type: string\n-  mandate_description_fr:\n-    label: 'Mandate description fr'\n-    datasource_id: solr_document\n-    property_path: mandate_description_fr\n-    type: string\n-  minister_compared_fiscal_year_en:\n-    label: 'Minister compared fiscal year en'\n-    datasource_id: solr_document\n-    property_path: minister_compared_fiscal_year_en\n-    type: string\n-  minister_compared_fiscal_year_fr:\n-    label: 'Minister compared fiscal year fr'\n-    datasource_id: solr_document\n-    property_path: minister_compared_fiscal_year_fr\n-    type: string\n-  minister_kdollars:\n-    label: 'Minister kdollars'\n-    datasource_id: solr_document\n-    property_path: minister_kdollars\n-    type: string\n-  minister_kdollars_change:\n-    label: 'Minister kdollars change'\n-    datasource_id: solr_document\n-    property_path: minister_kdollars_change\n-    type: string\n-  minister_kdollars_previous_year:\n-    label: 'Minister kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: minister_kdollars_previous_year\n-    type: string\n-  non_public_servants_kdollars:\n-    label: 'Non public servants kdollars'\n-    datasource_id: solr_document\n-    property_path: non_public_servants_kdollars\n-    type: string\n-  non_public_servants_kdollars_change:\n-    label: 'Non public servants kdollars change'\n-    datasource_id: solr_document\n-    property_path: non_public_servants_kdollars_change\n-    type: string\n-  non_public_servants_kdollars_previous_year:\n-    label: 'Non public servants kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: non_public_servants_kdollars_previous_year\n-    type: string\n-  operational_activities_kdollars:\n-    label: 'Operational activities kdollars'\n-    datasource_id: solr_document\n-    property_path: operational_activities_kdollars\n-    type: string\n-  operational_activities_kdollars_change:\n-    label: 'Operational activities kdollars change'\n-    datasource_id: solr_document\n-    property_path: operational_activities_kdollars_change\n-    type: string\n-  operational_activities_kdollars_previous_year:\n-    label: 'Operational activities kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: operational_activities_kdollars_previous_year\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  other_kdollars:\n-    label: 'Other kdollars'\n-    datasource_id: solr_document\n-    property_path: other_kdollars\n-    type: string\n-  other_kdollars_change:\n-    label: 'Other kdollars change'\n-    datasource_id: solr_document\n-    property_path: other_kdollars_change\n-    type: string\n-  other_kdollars_previous_year:\n-    label: 'Other kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: other_kdollars_previous_year\n-    type: string\n-  public_servants_kdollars:\n-    label: 'Public servants kdollars'\n-    datasource_id: solr_document\n-    property_path: public_servants_kdollars\n-    type: string\n-  public_servants_kdollars_change:\n-    label: 'Public servants kdollars change'\n-    datasource_id: solr_document\n-    property_path: public_servants_kdollars_change\n-    type: string\n-  public_servants_kdollars_previous_year:\n-    label: 'Public servants kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: public_servants_kdollars_previous_year\n-    type: string\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-  total_kdollars:\n-    label: 'Total kdollars'\n-    datasource_id: solr_document\n-    property_path: total_kdollars\n-    type: string\n-  total_kdollars_change:\n-    label: 'Total kdollars change'\n-    datasource_id: solr_document\n-    property_path: total_kdollars_change\n-    type: string\n-  total_kdollars_en:\n-    label: 'Total kdollars en'\n-    datasource_id: solr_document\n-    property_path: total_kdollars_en\n-    type: string\n-  total_kdollars_fr:\n-    label: 'Total kdollars fr'\n-    datasource_id: solr_document\n-    property_path: total_kdollars_fr\n-    type: string\n-  total_kdollars_previous_year:\n-    label: 'Total kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: total_kdollars_previous_year\n-    type: string\n-  total_travel_kdollars:\n-    label: 'Total travel kdollars'\n-    datasource_id: solr_document\n-    property_path: total_travel_kdollars\n-    type: string\n-  total_travel_kdollars_change:\n-    label: 'Total travel kdollars change'\n-    datasource_id: solr_document\n-    property_path: total_travel_kdollars_change\n-    type: string\n-  total_travel_kdollars_previous_year:\n-    label: 'Total travel kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: total_travel_kdollars_previous_year\n-    type: string\n-  training_kdollars:\n-    label: 'Training kdollars'\n-    datasource_id: solr_document\n-    property_path: training_kdollars\n-    type: string\n-  training_kdollars_change:\n-    label: 'Training kdollars change'\n-    datasource_id: solr_document\n-    property_path: training_kdollars_change\n-    type: string\n-  training_kdollars_previous_year:\n-    label: 'Training kdollars previous year'\n-    datasource_id: solr_document\n-    property_path: training_kdollars_previous_year\n-    type: string\n-  travel_compared_fiscal_year_en:\n-    label: 'Travel compared fiscal year en'\n-    datasource_id: solr_document\n-    property_path: travel_compared_fiscal_year_en\n-    type: string\n-  travel_compared_fiscal_year_fr:\n-    label: 'Travel compared fiscal year fr'\n-    datasource_id: solr_document\n-    property_path: travel_compared_fiscal_year_fr\n-    type: string\n-  year:\n-    label: Year\n-    datasource_id: solr_document\n-    property_path: year\n-    type: string\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range: {  }\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_travela"
                },
                {
                    "sha": "0cefa5d8e1e273b5bc7507992be943b959b45a2c",
                    "filename": "config/search_api.index.pd_core_travelq.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 244,
                    "changes": 244,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_travelq.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_travelq.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_travelq.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,244 +0,0 @@\n-uuid: 62154c16-e505-4eac-9efc-c5ba22815844\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_travelq\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_travelq\n-name: 'Proactive Disclosure: Travel (Q) Index'\n-description: ''\n-read_only: true\n-field_settings:\n-  additional_comments_en:\n-    label: 'Additional comments en'\n-    datasource_id: solr_document\n-    property_path: additional_comments_en\n-    type: string\n-  additional_comments_fr:\n-    label: 'Additional comments fr'\n-    datasource_id: solr_document\n-    property_path: additional_comments_fr\n-    type: string\n-  airfare:\n-    label: Airfare\n-    datasource_id: solr_document\n-    property_path: airfare\n-    type: string\n-  date_clean:\n-    label: 'Date clean'\n-    datasource_id: solr_document\n-    property_path: date_clean\n-    type: string\n-  date_year:\n-    label: 'Date year'\n-    datasource_id: solr_document\n-    property_path: date_year\n-    type: string\n-  destination_en:\n-    label: 'Destination en'\n-    datasource_id: solr_document\n-    property_path: destination_en\n-    type: string\n-  destination_fr:\n-    label: 'Destination fr'\n-    datasource_id: solr_document\n-    property_path: destination_fr\n-    type: string\n-  disclosure_group_en:\n-    label: 'Disclosure group en'\n-    datasource_id: solr_document\n-    property_path: disclosure_group_en\n-    type: string\n-  disclosure_group_fr:\n-    label: 'Disclosure group fr'\n-    datasource_id: solr_document\n-    property_path: disclosure_group_fr\n-    type: string\n-  end_date:\n-    label: 'End date'\n-    datasource_id: solr_document\n-    property_path: end_date\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  lodging:\n-    label: Lodging\n-    datasource_id: solr_document\n-    property_path: lodging\n-    type: string\n-  meals:\n-    label: Meals\n-    datasource_id: solr_document\n-    property_path: meals\n-    type: string\n-  month_en:\n-    label: 'Month en'\n-    datasource_id: solr_document\n-    property_path: month_en\n-    type: string\n-  month_fr:\n-    label: 'Month fr'\n-    datasource_id: solr_document\n-    property_path: month_fr\n-    type: string\n-  name:\n-    label: Name\n-    datasource_id: solr_document\n-    property_path: name\n-    type: string\n-  nothing_to_report_en:\n-    label: 'Nothing to report en'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_en\n-    type: string\n-  nothing_to_report_fr:\n-    label: 'Nothing to report fr'\n-    datasource_id: solr_document\n-    property_path: nothing_to_report_fr\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  other_expenses:\n-    label: 'Other expenses'\n-    datasource_id: solr_document\n-    property_path: other_expenses\n-    type: string\n-  other_transport:\n-    label: 'Other transport'\n-    datasource_id: solr_document\n-    property_path: other_transport\n-    type: string\n-  purpose_en:\n-    label: 'Purpose en'\n-    datasource_id: solr_document\n-    property_path: purpose_en\n-    type: string\n-  purpose_fr:\n-    label: 'Purpose fr'\n-    datasource_id: solr_document\n-    property_path: purpose_fr\n-    type: string\n-  ref_number:\n-    label: 'Ref number'\n-    datasource_id: solr_document\n-    property_path: ref_number\n-    type: text\n-  report_type_en:\n-    label: 'Report type en'\n-    datasource_id: solr_document\n-    property_path: report_type_en\n-    type: string\n-  report_type_fr:\n-    label: 'Report type fr'\n-    datasource_id: solr_document\n-    property_path: report_type_fr\n-    type: string\n-  start_date:\n-    label: 'Start date'\n-    datasource_id: solr_document\n-    property_path: start_date\n-    type: string\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-  title_en:\n-    label: 'Title en'\n-    datasource_id: solr_document\n-    property_path: title_en\n-    type: string\n-  title_fr:\n-    label: 'Title fr'\n-    datasource_id: solr_document\n-    property_path: title_fr\n-    type: string\n-  total:\n-    label: Total\n-    datasource_id: solr_document\n-    property_path: total\n-    type: string\n-  total_en:\n-    label: 'Total en'\n-    datasource_id: solr_document\n-    property_path: total_en\n-    type: string\n-  total_fr:\n-    label: 'Total fr'\n-    datasource_id: solr_document\n-    property_path: total_fr\n-    type: string\n-  year:\n-    label: Year\n-    datasource_id: solr_document\n-    property_path: year\n-    type: string\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range: {  }\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_travelq"
                },
                {
                    "sha": "9bd639c1703d8efff0d05d91ca34a10115c8eff6",
                    "filename": "config/search_api.index.pd_core_wrongdoing.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 140,
                    "changes": 140,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_wrongdoing.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.index.pd_core_wrongdoing.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.index.pd_core_wrongdoing.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,140 +0,0 @@\n-uuid: eac1cf70-aee5-46af-b64f-8b188b20ca3c\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api.server.pd_core_wrongdoing\n-  module:\n-    - search_api_solr\n-    - search_api\n-third_party_settings:\n-  search_api_solr:\n-    finalize: false\n-    commit_before_finalize: false\n-    commit_after_finalize: false\n-    highlighter:\n-      maxAnalyzedChars: 51200\n-      fragmenter: gap\n-      usePhraseHighlighter: true\n-      highlightMultiTerm: true\n-      preserveMulti: false\n-      regex:\n-        slop: 0.5\n-        pattern: blank\n-        maxAnalyzedChars: 10000\n-      highlight:\n-        mergeContiguous: false\n-        requireFieldMatch: false\n-        snippets: 3\n-        fragsize: 0\n-    term_modifiers:\n-      slop: 10000000\n-      fuzzy: 2\n-    advanced:\n-      index_prefix: ''\n-    multilingual:\n-      limit_to_content_language: false\n-      include_language_independent: true\n-      use_language_undefined_as_fallback_language: false\n-      specific_languages: {  }\n-      use_universal_collation: false\n-id: pd_core_wrongdoing\n-name: 'Proactive Disclosure: Wrongdoing Index'\n-description: 'Read-only search index for Solr core_wrongdoing'\n-read_only: true\n-field_settings:\n-  case_description_en:\n-    label: 'Case description en'\n-    datasource_id: solr_document\n-    property_path: case_description_en\n-    type: string\n-  case_description_fr:\n-    label: 'Case description fr'\n-    datasource_id: solr_document\n-    property_path: case_description_fr\n-    type: string\n-  date_clean:\n-    label: 'Date clean'\n-    datasource_id: solr_document\n-    property_path: date_clean\n-    type: string\n-  date_year:\n-    label: 'Date year'\n-    datasource_id: solr_document\n-    property_path: date_year\n-    type: string\n-  file_id_number:\n-    label: 'File id number'\n-    datasource_id: solr_document\n-    property_path: file_id_number\n-    type: string\n-  findings_conclusions_en:\n-    label: 'Findings conclusions en'\n-    datasource_id: solr_document\n-    property_path: findings_conclusions_en\n-    type: string\n-  findings_conclusions_fr:\n-    label: 'Findings conclusions fr'\n-    datasource_id: solr_document\n-    property_path: findings_conclusions_fr\n-    type: string\n-  id:\n-    label: Id\n-    datasource_id: solr_document\n-    property_path: id\n-    type: string\n-  org_name_en:\n-    label: 'Org name en'\n-    datasource_id: solr_document\n-    property_path: org_name_en\n-    type: string\n-  org_name_fr:\n-    label: 'Org name fr'\n-    datasource_id: solr_document\n-    property_path: org_name_fr\n-    type: string\n-  recommendations_corrective_measures_en:\n-    label: 'Recommendations corrective measures en'\n-    datasource_id: solr_document\n-    property_path: recommendations_corrective_measures_en\n-    type: string\n-  recommendations_corrective_measures_fr:\n-    label: 'Recommendations corrective measures fr'\n-    datasource_id: solr_document\n-    property_path: recommendations_corrective_measures_fr\n-    type: string\n-  ref_number:\n-    label: 'Ref number'\n-    datasource_id: solr_document\n-    property_path: ref_number\n-    type: text\n-    boost: !!float 5\n-  text:\n-    label: Text\n-    datasource_id: solr_document\n-    property_path: text\n-    type: text\n-datasource_settings:\n-  solr_document:\n-    id_field: unique_id\n-    request_handler: ''\n-    default_query: '*:*'\n-    label_field: ''\n-    language_field: ''\n-    url_field: ''\n-processor_settings:\n-  add_url: {  }\n-  aggregated_field: {  }\n-  auto_aggregated_fulltext_field: {  }\n-  entity_type: {  }\n-  language_with_fallback: {  }\n-  rendered_item: {  }\n-  solr_date_range: {  }\n-tracker_settings:\n-  default:\n-    indexing_order: fifo\n-options:\n-  cron_limit: 50\n-  index_directly: false\n-  track_changes_in_references: true\n-server: pd_core_wrongdoing"
                },
                {
                    "sha": "bc5440d627accfdbf8631764244743ff3e873bb7",
                    "filename": "config/search_api.server.pd_core_contracts.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 69,
                    "changes": 69,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_contracts.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_contracts.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_contracts.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,69 +0,0 @@\n-uuid: 64c5cfd3-0ecb-47ca-a26a-fea222072a7a\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_contracts\n-name: 'Proactive Disclosure: Contracts'\n-description: 'Connector for Solr core_contracts'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb01.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: core_contracts\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "d4c5b539f72402e9a41b0d764166364655160f2a",
                    "filename": "config/search_api.server.pd_core_grants.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 69,
                    "changes": 69,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_grants.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_grants.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_grants.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,69 +0,0 @@\n-uuid: b65d678b-da2f-4838-afc9-af3a584b3c4d\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_grants\n-name: 'Proactive Disclosure: Grant'\n-description: 'Connector for Solr core_grants'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb01.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: core_grants\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "7d6e293c8de234faa55dce4e9acd70b5cc52e7c2",
                    "filename": "config/search_api.server.pd_core_hospitalityq.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 70,
                    "changes": 70,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_hospitalityq.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_hospitalityq.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_hospitalityq.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,70 +0,0 @@\n-uuid: 8f307668-6c0e-4b92-92c4-d14897c501e8\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_hospitalityq\n-name: 'Proactive Disclosure: Hospitality (Q)'\n-description: 'Connector for Solr core_hospitalityq'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb03.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: drupal_hospitalityq\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-    solr_install_dir: ''\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "a6a67385817f4d77007524905bb229f7339eb352",
                    "filename": "config/search_api.server.pd_core_inventory.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 71,
                    "changes": 71,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_inventory.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_inventory.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_inventory.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,71 +0,0 @@\n-uuid: 5d4ecf8f-8568-4aa2-8519-d50e275928ef\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_string_und_6_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_inventory\n-name: 'Proactive Disclosure: Inventory'\n-description: 'Connector for Solr core_inventory'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb03.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: drupal_inventory\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-    solr_install_dir: ''\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "da5e9b1c17eb443939522c94b9569428c551b0c1",
                    "filename": "config/search_api.server.pd_core_reclassification.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 70,
                    "changes": 70,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_reclassification.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_reclassification.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_reclassification.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,70 +0,0 @@\n-uuid: e57dd79b-18c3-4190-b3c7-d475575e3cd8\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_reclassification\n-name: 'Proactive Disclosure: Reclassification'\n-description: 'Connector for Solr core_reclassification'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb03.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: drupal_reclassification\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-    solr_install_dir: ''\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "48577a3e028ed23d0104e1e66ff0143c7314d6fd",
                    "filename": "config/search_api.server.pd_core_travela.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 70,
                    "changes": 70,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_travela.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_travela.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_travela.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,70 +0,0 @@\n-uuid: ce5f1e92-d4dd-47a7-b82b-e7077c8e6249\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_travela\n-name: 'Proactive Disclosure: Travel (A)'\n-description: 'Connector for Solr core_contracts'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb01.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: core_travela\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-    solr_install_dir: ''\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "f50c99ec95c1b7c08b7c2ad91df69dede4353a25",
                    "filename": "config/search_api.server.pd_core_travelq.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 70,
                    "changes": 70,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_travelq.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_travelq.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_travelq.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,70 +0,0 @@\n-uuid: 572e0ee7-61e6-4f28-91eb-650daf5e98eb\n-langcode: en\n-status: false\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_travelq\n-name: 'Proactive Disclosure: Travel (Q)'\n-description: 'Connector for Solr core_reclassification'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb01.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: core_travelq\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-    solr_install_dir: ''\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "e02afc02af0ad8676461ba6d07260801b20c2ef2",
                    "filename": "config/search_api.server.pd_core_wrongdoing.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 70,
                    "changes": 70,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_wrongdoing.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsearch_api.server.pd_core_wrongdoing.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.server.pd_core_wrongdoing.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,70 +0,0 @@\n-uuid: 5e36ce06-a029-4822-8dbb-77ddc2b7dcc4\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - search_api_solr.solr_cache.cache_document_default_7_0_0\n-    - search_api_solr.solr_cache.cache_fieldvalue_default_7_0_0\n-    - search_api_solr.solr_cache.cache_filter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_persegfilter_default_7_0_0\n-    - search_api_solr.solr_cache.cache_queryresult_default_7_0_0\n-    - search_api_solr.solr_field_type.text_edge_und_7_0_0\n-    - search_api_solr.solr_field_type.text_edgestring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_en_7_0_0\n-    - search_api_solr.solr_field_type.text_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_ngram_und_7_0_0\n-    - search_api_solr.solr_field_type.text_ngramstring_und_6_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_en_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_fr_7_0_0\n-    - search_api_solr.solr_field_type.text_phonetic_und_7_0_0\n-    - search_api_solr.solr_field_type.text_und_7_0_0\n-    - search_api_solr.solr_request_dispatcher.request_dispatcher_httpcachingnever_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_autocomplete_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_extract_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_mlt_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_select_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_spell_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_suggest_default_7_0_0\n-    - search_api_solr.solr_request_handler.request_handler_tvrh_default_7_0_0\n-  module:\n-    - search_api_solr\n-id: pd_core_wrongdoing\n-name: 'Proactive Disclosure: Wrongdoing'\n-description: 'Connector for Solr core_wrongdoing'\n-backend: search_api_solr\n-backend_config:\n-  retrieve_data: true\n-  highlight_data: false\n-  site_hash: true\n-  server_prefix: ''\n-  domain: generic\n-  environment: default\n-  connector: standard\n-  connector_config:\n-    scheme: http\n-    host: tbs-solrdb03.t1.tbs-sct.gc.ca\n-    port: 8983\n-    path: /\n-    core: drupal_wrongdoing\n-    timeout: 5\n-    index_timeout: 5\n-    optimize_timeout: 10\n-    finalize_timeout: 30\n-    skip_schema_check: true\n-    solr_version: ''\n-    http_method: AUTO\n-    commit_within: 1000\n-    jmx: false\n-    solr_install_dir: ''\n-  optimize: false\n-  fallback_multiple: true\n-  disabled_field_types: {  }\n-  disabled_caches: {  }\n-  disabled_request_handlers:\n-    - request_handler_elevate_default_7_0_0\n-    - request_handler_replicationmaster_default_7_0_0\n-    - request_handler_replicationslave_default_7_0_0\n-  disabled_request_dispatchers:\n-    - request_dispatcher_httpcaching_default_7_0_0\n-  rows: 10\n-  index_single_documents_fallback_count: 10"
                },
                {
                    "sha": "6cd5bd1ca3b97e4d4fa4f6c2e36a078146ad281f",
                    "filename": "config/search_api.settings.yml",
                    "status": "modified",
                    "additions": 8,
                    "deletions": 8,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api.settings.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api.settings.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api.settings.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -5,7 +5,7 @@ cron_worker_runtime: 15\n default_tracker: default\n tracking_page_size: 100\n boost_factors:\n-  - !!float 0\n+  - 0.0\n   - 0.1\n   - 0.2\n   - 0.3\n@@ -14,15 +14,15 @@ boost_factors:\n   - 0.7\n   - 0.8\n   - 0.9\n-  - !!float 1\n+  - 1.0\n   - 1.1\n   - 1.2\n   - 1.3\n   - 1.4\n   - 1.5\n-  - !!float 2\n-  - !!float 3\n-  - !!float 5\n-  - !!float 8\n-  - !!float 13\n-  - !!float 21\n+  - 2.0\n+  - 3.0\n+  - 5.0\n+  - 8.0\n+  - 13.0\n+  - 21.0"
                },
                {
                    "sha": "9e3049dd37b1e1cc4f6ab82e41e97e4b2f02ee4b",
                    "filename": "config/search_api_solr.solr_cache.cache_document_default_9_0_0.yml",
                    "status": "added",
                    "additions": 17,
                    "deletions": 0,
                    "changes": 17,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_document_default_9_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_document_default_9_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_cache.cache_document_default_9_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1,17 @@\n+uuid: 40bb6d87-7091-4b38-a24e-f006bcf792c1\n+langcode: en\n+status: true\n+dependencies: {  }\n+_core:\n+  default_config_hash: 8US9Yb33EXUGI8LNE2tUeFZGOdYR9ZEQnSmQ9oK_X98\n+id: cache_document_default_9_0_0\n+label: 'Document Cache'\n+minimum_solr_version: 9.0.0\n+environments: {  }\n+cache:\n+  name: document\n+  class: solr.CaffeineCache\n+  size: 512\n+  initialSize: 512\n+  autowarmCount: 0\n+solr_configs: null"
                },
                {
                    "sha": "c98c41077f1d9b8d84debbdbf5a4a802e387142a",
                    "filename": "config/search_api_solr.solr_cache.cache_fieldvalue_default_9_0_0.yml",
                    "status": "added",
                    "additions": 21,
                    "deletions": 0,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_fieldvalue_default_9_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_fieldvalue_default_9_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_cache.cache_fieldvalue_default_9_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1,21 @@\n+uuid: 9dee778c-eb26-47df-a5f0-df9e8b76822e\n+langcode: en\n+status: true\n+dependencies: {  }\n+_core:\n+  default_config_hash: PpXzcu_b6Wkh_EE_vleOz9EJWVHQISeD0BN8Yrd5cY0\n+id: cache_fieldvalue_default_9_0_0\n+label: 'Field Value Cache'\n+minimum_solr_version: 9.0.0\n+environments: {  }\n+cache:\n+  name: fieldValue\n+  class: solr.CaffeineCache\n+  size: 512\n+  autowarmCount: 128\n+  showItems: 32\n+solr_configs:\n+  query:\n+    -\n+      name: enableLazyFieldLoading\n+      VALUE: 'true'"
                },
                {
                    "sha": "9343cc839e8512e077c8566ec49f00a15a045207",
                    "filename": "config/search_api_solr.solr_cache.cache_filter_default_9_0_0.yml",
                    "status": "added",
                    "additions": 21,
                    "deletions": 0,
                    "changes": 21,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_filter_default_9_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_filter_default_9_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_cache.cache_filter_default_9_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1,21 @@\n+uuid: d0963a6a-74ee-4d6b-9f47-fc0e542d8192\n+langcode: en\n+status: true\n+dependencies: {  }\n+_core:\n+  default_config_hash: kPqER5Lz5zFQ-x9Mmadmzp6QuCx8HkqXZaPkTNWoN64\n+id: cache_filter_default_9_0_0\n+label: 'Filter Cache'\n+minimum_solr_version: 9.0.0\n+environments: {  }\n+cache:\n+  name: filter\n+  class: solr.CaffeineCache\n+  size: 512\n+  initialSize: 512\n+  autowarmCount: 0\n+solr_configs:\n+  query:\n+    -\n+      name: useFilterForSortedQuery\n+      VALUE: 'false'"
                },
                {
                    "sha": "1f68438f3c6175b75eb00e79ecdfe5bd58fdb429",
                    "filename": "config/search_api_solr.solr_cache.cache_persegfilter_default_9_0_0.yml",
                    "status": "added",
                    "additions": 18,
                    "deletions": 0,
                    "changes": 18,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_persegfilter_default_9_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_persegfilter_default_9_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_cache.cache_persegfilter_default_9_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1,18 @@\n+uuid: 43831c68-58c0-4ce3-b74f-a945573a62b6\n+langcode: en\n+status: true\n+dependencies: {  }\n+_core:\n+  default_config_hash: Dg7CT1jTSkupnhVxZ8Md-1x6rHDP4Z2_E59GpmPXxVM\n+id: cache_persegfilter_default_9_0_0\n+label: 'Per Segment Filter Cache'\n+minimum_solr_version: 9.0.0\n+environments: {  }\n+cache:\n+  name: perSegFilter\n+  class: solr.CaffeineCache\n+  size: 10\n+  initialSize: 0\n+  autowarmCount: 10\n+  regenerator: solr.NoOpRegenerator\n+solr_configs: null"
                },
                {
                    "sha": "c32d92f667f2c6dffb2187ddc0ba28284b9c01f8",
                    "filename": "config/search_api_solr.solr_cache.cache_queryresult_default_9_0_0.yml",
                    "status": "added",
                    "additions": 27,
                    "deletions": 0,
                    "changes": 27,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_queryresult_default_9_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_cache.cache_queryresult_default_9_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_cache.cache_queryresult_default_9_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1,27 @@\n+uuid: bae969c3-54dc-456a-b045-64e80de12ebc\n+langcode: en\n+status: true\n+dependencies: {  }\n+_core:\n+  default_config_hash: ltEiX6t3a_eaBraAs0zu-1Df4H0PfE6RPu2vl8ti3Io\n+id: cache_queryresult_default_9_0_0\n+label: 'Query Result Cache'\n+minimum_solr_version: 9.0.0\n+environments: {  }\n+cache:\n+  name: queryResult\n+  class: solr.CaffeineCache\n+  size: 512\n+  initialSize: 512\n+  autowarmCount: 0\n+solr_configs:\n+  query:\n+    -\n+      name: queryResultWindowSize\n+      VALUE: '20'\n+    -\n+      name: queryResultMaxDocsCached\n+      VALUE: '200'\n+    -\n+      name: maxBooleanClauses\n+      VALUE: '1024'"
                },
                {
                    "sha": "be359c7b9e006952d3c7e6906432f2da45d25a13",
                    "filename": "config/search_api_solr.solr_field_type.text_edge_und_7_0_0.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_edge_und_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_edge_und_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_edge_und_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -38,8 +38,6 @@ field_type:\n           preserveOriginal: 1\n           catenateAll: 0\n           catenateWords: 1\n-        -\n-          class: solr.FlattenGraphFilterFactory\n         -\n           class: solr.LengthFilterFactory\n           min: 2"
                },
                {
                    "sha": "f8f618d367c4e7f2714512c2ea5e873ed07545b8",
                    "filename": "config/search_api_solr.solr_field_type.text_en_6_0_0.yml",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 5,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_en_6_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_en_6_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_en_6_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -25,7 +25,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.StopFilterFactory\n@@ -60,7 +60,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.SynonymFilterFactory\n@@ -93,6 +93,7 @@ field_type:\n           language: English\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n unstemmed_field_type:\n   name: text_unstemmed_en\n   class: solr.TextField\n@@ -105,7 +106,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.StopFilterFactory\n@@ -136,7 +137,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.SynonymFilterFactory\n@@ -165,6 +166,7 @@ unstemmed_field_type:\n           class: solr.LowerCaseFilterFactory\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n collated_field_type:\n   name: collated_en\n   class: solr.ICUCollationField\n@@ -243,10 +245,13 @@ solr_configs:\n               VALUE: sm_context_tags\n             -\n               name: buildOnCommit\n-              VALUE: 'true'\n+              VALUE: 'false'\n             -\n               name: buildOnStartup\n               VALUE: 'false'\n+            -\n+              name: indexPath\n+              VALUE: ./en\n text_files:\n   stopwords: |\n     a"
                },
                {
                    "sha": "8673bd3820ede12bf47696389d99172bbe3f6098",
                    "filename": "config/search_api_solr.solr_field_type.text_en_7_0_0.yml",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 5,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_en_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_en_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_en_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -25,7 +25,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.StopFilterFactory\n@@ -62,7 +62,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.SynonymGraphFilterFactory\n@@ -95,6 +95,7 @@ field_type:\n           language: English\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n unstemmed_field_type:\n   name: text_unstemmed_en\n   class: solr.TextField\n@@ -107,7 +108,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.StopFilterFactory\n@@ -140,7 +141,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_en.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.SynonymGraphFilterFactory\n@@ -169,6 +170,7 @@ unstemmed_field_type:\n           class: solr.LowerCaseFilterFactory\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n collated_field_type:\n   name: collated_en\n   class: solr.ICUCollationField\n@@ -247,10 +249,13 @@ solr_configs:\n               VALUE: sm_context_tags\n             -\n               name: buildOnCommit\n-              VALUE: 'true'\n+              VALUE: 'false'\n             -\n               name: buildOnStartup\n               VALUE: 'false'\n+            -\n+              name: indexPath\n+              VALUE: ./en\n text_files:\n   stopwords: |\n     a"
                },
                {
                    "sha": "7c2fb26c5d89ef64b7f695075583788d372e60a4",
                    "filename": "config/search_api_solr.solr_field_type.text_fr_6_0_0.yml",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 5,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_fr_6_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_fr_6_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_fr_6_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -22,7 +22,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.ElisionFilterFactory\n@@ -55,7 +55,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.ElisionFilterFactory\n@@ -86,6 +86,7 @@ field_type:\n           language: French\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n unstemmed_field_type:\n   name: text_unstemmed_fr\n   class: solr.TextField\n@@ -98,7 +99,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.ElisionFilterFactory\n@@ -127,7 +128,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.WordDelimiterFilterFactory\n@@ -152,6 +153,7 @@ unstemmed_field_type:\n           words: stopwords_fr.txt\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n spellcheck_field_type: null\n collated_field_type:\n   name: collated_fr\n@@ -231,10 +233,13 @@ solr_configs:\n               VALUE: sm_context_tags\n             -\n               name: buildOnCommit\n-              VALUE: 'true'\n+              VALUE: 'false'\n             -\n               name: buildOnStartup\n               VALUE: 'false'\n+            -\n+              name: indexPath\n+              VALUE: ./fr\n text_files:\n   stopwords: |\n     au"
                },
                {
                    "sha": "139234f34a045dd205ee422ad0abd8a7fb11a12b",
                    "filename": "config/search_api_solr.solr_field_type.text_fr_7_0_0.yml",
                    "status": "modified",
                    "additions": 10,
                    "deletions": 5,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_fr_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_fr_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_fr_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -22,7 +22,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.ElisionFilterFactory\n@@ -57,7 +57,7 @@ field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.ElisionFilterFactory\n@@ -88,6 +88,7 @@ field_type:\n           language: French\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n unstemmed_field_type:\n   name: text_unstemmed_fr\n   class: solr.TextField\n@@ -100,7 +101,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.ElisionFilterFactory\n@@ -131,7 +132,7 @@ unstemmed_field_type:\n           class: solr.MappingCharFilterFactory\n           mapping: accents_fr.txt\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.WordDelimiterGraphFilterFactory\n@@ -156,6 +157,7 @@ unstemmed_field_type:\n           words: stopwords_fr.txt\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n spellcheck_field_type: null\n collated_field_type:\n   name: collated_fr\n@@ -235,10 +237,13 @@ solr_configs:\n               VALUE: sm_context_tags\n             -\n               name: buildOnCommit\n-              VALUE: 'true'\n+              VALUE: 'false'\n             -\n               name: buildOnStartup\n               VALUE: 'false'\n+            -\n+              name: indexPath\n+              VALUE: ./fr\n text_files:\n   stopwords: |\n     au"
                },
                {
                    "sha": "6e32dd95e8ce4c163648f18ced10fdf93c81c456",
                    "filename": "config/search_api_solr.solr_field_type.text_ngram_und_7_0_0.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_ngram_und_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_ngram_und_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_ngram_und_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -38,8 +38,6 @@ field_type:\n           preserveOriginal: 1\n           catenateAll: 0\n           catenateWords: 1\n-        -\n-          class: solr.FlattenGraphFilterFactory\n         -\n           class: solr.LengthFilterFactory\n           min: 2"
                },
                {
                    "sha": "f33619b6bd08807c8616f3940a208f3f1ff169fe",
                    "filename": "config/search_api_solr.solr_field_type.text_phonetic_en_7_0_0.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_phonetic_en_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_phonetic_en_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_phonetic_en_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -20,7 +20,7 @@ field_type:\n     -\n       type: index\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.StopFilterFactory\n@@ -55,7 +55,7 @@ field_type:\n     -\n       type: query\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.StopFilterFactory\n@@ -85,5 +85,6 @@ field_type:\n           concat: true\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n solr_configs: {  }\n text_files: {  }"
                },
                {
                    "sha": "26cdf321d5203e60348e7a400ff49cb9666c3bb6",
                    "filename": "config/search_api_solr.solr_field_type.text_phonetic_fr_7_0_0.yml",
                    "status": "modified",
                    "additions": 3,
                    "deletions": 2,
                    "changes": 5,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_phonetic_fr_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_phonetic_fr_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_phonetic_fr_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -20,7 +20,7 @@ field_type:\n     -\n       type: index\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.ElisionFilterFactory\n@@ -53,7 +53,7 @@ field_type:\n     -\n       type: query\n       tokenizer:\n-        class: solr.WhitespaceTokenizerFactory\n+        class: solr.StandardTokenizerFactory\n       filters:\n         -\n           class: solr.WordDelimiterGraphFilterFactory\n@@ -79,5 +79,6 @@ field_type:\n           concat: true\n         -\n           class: solr.RemoveDuplicatesTokenFilterFactory\n+  storeOffsetsWithPositions: true\n solr_configs: {  }\n text_files: {  }"
                },
                {
                    "sha": "7d32316d41d4772ab9cda24fb5b19a588d12b332",
                    "filename": "config/search_api_solr.solr_field_type.text_phonetic_und_7_0_0.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_phonetic_und_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_phonetic_und_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_phonetic_und_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -34,8 +34,6 @@ field_type:\n           preserveOriginal: 1\n           catenateAll: 0\n           catenateWords: 1\n-        -\n-          class: solr.FlattenGraphFilterFactory\n         -\n           class: solr.LengthFilterFactory\n           min: 2"
                },
                {
                    "sha": "e63665ddc445a2409abcd3862fcd8d651cceaf6f",
                    "filename": "config/search_api_solr.solr_field_type.text_string_und_6_0_0.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 1,
                    "changes": 3,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_string_und_6_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_string_und_6_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_string_und_6_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -3,7 +3,7 @@ langcode: en\n status: true\n dependencies: {  }\n _core:\n-  default_config_hash: FXULm2mt03ExX95R8L1xo0F9iEHVPEfogRZG8oj07Ec\n+  default_config_hash: vdoqZyPxL2QPQ0fVwyjjhHZYz9sDDWD62-Ou86DFOs4\n id: text_string_und_6_0_0\n label: 'Fulltext String Field'\n minimum_solr_version: 6.0.0\n@@ -14,6 +14,7 @@ field_type:\n   name: text_string\n   class: solr.TextField\n   positionIncrementGap: 100\n+  storeOffsetsWithPositions: true\n   analyzers:\n     -\n       type: index"
                },
                {
                    "sha": "b02813106a136a4e2314b396b53f5a903fa56eb9",
                    "filename": "config/search_api_solr.solr_field_type.text_und_6_0_0.yml",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 4,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_und_6_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_und_6_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_und_6_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -57,9 +57,9 @@ field_type:\n       filters:\n         -\n           class: solr.SynonymFilterFactory\n-          ignoreCase: true\n           synonyms: synonyms_und.txt\n           expand: true\n+          ignoreCase: true\n         -\n           class: solr.StopFilterFactory\n           ignoreCase: true\n@@ -106,7 +106,7 @@ spellcheck_field_type:\n collated_field_type:\n   name: collated_und\n   class: solr.ICUCollationField\n-  locale: null\n+  locale: en\n   strength: primary\n   caseLevel: false\n solr_configs:\n@@ -185,9 +185,14 @@ solr_configs:\n             -\n               name: buildOnStartup\n               VALUE: 'false'\n+            -\n+              name: indexPath\n+              VALUE: ./und\n text_files:\n   stopwords: |\n \n+  synonyms: |\n+    drupal, durpal\n   protwords: |\n \n   accents: |\n@@ -339,5 +344,3 @@ text_files:\n     \"\\uFB05\" => \"st\"\n     # ﬆ => st\n     \"\\uFB06\" => \"st\"\n-  synonyms: |\n-    drupal, durpal"
                },
                {
                    "sha": "f0af377fccc126d944472c1f933d2a9aa9c0f6c3",
                    "filename": "config/search_api_solr.solr_field_type.text_und_7_0_0.yml",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 6,
                    "changes": 13,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_und_7_0_0.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsearch_api_solr.solr_field_type.text_und_7_0_0.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsearch_api_solr.solr_field_type.text_und_7_0_0.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -38,8 +38,6 @@ field_type:\n           preserveOriginal: 1\n           catenateAll: 0\n           catenateWords: 1\n-        -\n-          class: solr.FlattenGraphFilterFactory\n         -\n           class: solr.LengthFilterFactory\n           min: 2\n@@ -59,9 +57,9 @@ field_type:\n       filters:\n         -\n           class: solr.SynonymGraphFilterFactory\n-          ignoreCase: true\n           synonyms: synonyms_und.txt\n           expand: true\n+          ignoreCase: true\n         -\n           class: solr.StopFilterFactory\n           ignoreCase: true\n@@ -108,7 +106,7 @@ spellcheck_field_type:\n collated_field_type:\n   name: collated_und\n   class: solr.ICUCollationField\n-  locale: null\n+  locale: en\n   strength: primary\n   caseLevel: false\n solr_configs:\n@@ -187,9 +185,14 @@ solr_configs:\n             -\n               name: buildOnStartup\n               VALUE: 'false'\n+            -\n+              name: indexPath\n+              VALUE: ./und\n text_files:\n   stopwords: |\n \n+  synonyms: |\n+    drupal, durpal\n   protwords: |\n \n   accents: |\n@@ -341,5 +344,3 @@ text_files:\n     \"\\uFB05\" => \"st\"\n     # ﬆ => st\n     \"\\uFB06\" => \"st\"\n-  synonyms: |\n-    drupal, durpal"
                },
                {
                    "sha": "6bda8943bccde1bb7717f1d73341af0375fc7030",
                    "filename": "config/simple_sitemap.bundle_settings.default.node.app.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.app.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.app.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsimple_sitemap.bundle_settings.default.node.app.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-index: true\n+index: false\n priority: '0.5'\n changefreq: ''\n include_images: false"
                },
                {
                    "sha": "6bda8943bccde1bb7717f1d73341af0375fc7030",
                    "filename": "config/simple_sitemap.bundle_settings.default.node.article.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.article.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.article.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsimple_sitemap.bundle_settings.default.node.article.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-index: true\n+index: false\n priority: '0.5'\n changefreq: ''\n include_images: false"
                },
                {
                    "sha": "6bda8943bccde1bb7717f1d73341af0375fc7030",
                    "filename": "config/simple_sitemap.bundle_settings.default.node.idea.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.idea.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.idea.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsimple_sitemap.bundle_settings.default.node.idea.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-index: true\n+index: false\n priority: '0.5'\n changefreq: ''\n include_images: false"
                },
                {
                    "sha": "6bda8943bccde1bb7717f1d73341af0375fc7030",
                    "filename": "config/simple_sitemap.bundle_settings.default.node.map.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.map.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.map.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsimple_sitemap.bundle_settings.default.node.map.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-index: true\n+index: false\n priority: '0.5'\n changefreq: ''\n include_images: false"
                },
                {
                    "sha": "8e55877d33c3154cf0067befbdb6b91847d400b5",
                    "filename": "config/simple_sitemap.bundle_settings.default.node.suggested_dataset.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 4,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsimple_sitemap.bundle_settings.default.node.suggested_dataset.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fsimple_sitemap.bundle_settings.default.node.suggested_dataset.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsimple_sitemap.bundle_settings.default.node.suggested_dataset.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,4 +0,0 @@\n-index: true\n-priority: '0.5'\n-changefreq: ''\n-include_images: false"
                },
                {
                    "sha": "6bda8943bccde1bb7717f1d73341af0375fc7030",
                    "filename": "config/simple_sitemap.bundle_settings.default.node.webform.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.webform.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.bundle_settings.default.node.webform.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsimple_sitemap.bundle_settings.default.node.webform.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,4 +1,4 @@\n-index: true\n+index: false\n priority: '0.5'\n changefreq: ''\n include_images: false"
                },
                {
                    "sha": "bac2eb9fa6ddd53291ec0d94565d11395f6e1191",
                    "filename": "config/simple_sitemap.settings.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.settings.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsimple_sitemap.settings.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsimple_sitemap.settings.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -11,6 +11,8 @@ xsl: true\n base_url: 'https://open.canada.ca'\n default_variant: default\n custom_links_include_images: false\n+disable_language_hreflang: false\n+hide_branding: true\n excluded_languages: {  }\n enabled_entity_types:\n   - node"
                },
                {
                    "sha": "7169df08b7758aafc3c1755075263cce1a065abc",
                    "filename": "config/system.feature_flags.yml",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.feature_flags.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.feature_flags.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsystem.feature_flags.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -0,0 +1 @@\n+linkset_endpoint: false"
                },
                {
                    "sha": "75cfcddc597a2d483b14683a74f5d5b09e3b0c81",
                    "filename": "config/system.mail.yml",
                    "status": "modified",
                    "additions": 7,
                    "deletions": 0,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.mail.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.mail.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsystem.mail.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -4,3 +4,10 @@ interface:\n   default: php_mail\n   webform: webform_php_mail\n   webform_resend: html_formatter_mail\n+mailer_dsn:\n+  scheme: sendmail\n+  host: default\n+  user: null\n+  password: null\n+  port: null\n+  options: {  }"
                },
                {
                    "sha": "c802d60e1dc2e1722c6e678fd35588ea7770629a",
                    "filename": "config/system.performance.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.performance.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.performance.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsystem.performance.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -14,4 +14,3 @@ fast_404:\n js:\n   preprocess: false\n   gzip: true\n-stale_file_threshold: 2592000"
                },
                {
                    "sha": "d679a179f08095401776897fa07710b72bfd5f8f",
                    "filename": "config/system.theme.global.yml",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.theme.global.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fsystem.theme.global.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fsystem.theme.global.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -12,5 +12,5 @@ features:\n   node_user_picture: true\n logo:\n   path: libraries/theme-gcweb/assets/sig-blk-en.svg\n-  url: ''\n+  url: null\n   use_default: true"
                },
                {
                    "sha": "282b116f8b1573b37ce7d38581c01b8a405e9bb1",
                    "filename": "config/taxonomy.vocabulary.blog_author.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 8,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ftaxonomy.vocabulary.blog_author.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Ftaxonomy.vocabulary.blog_author.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Ftaxonomy.vocabulary.blog_author.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,8 +0,0 @@\n-uuid: 46843fb3-f54c-4f6f-b857-2289672ef6c4\n-langcode: und\n-status: true\n-dependencies: {  }\n-name: 'Blog author'\n-vid: blog_author\n-description: 'Name of author for blog articles'\n-weight: 0"
                },
                {
                    "sha": "f8b9c424b175a5bc79c8a95fead4ae05ede3c222",
                    "filename": "config/user.role.authenticated.yml",
                    "status": "modified",
                    "additions": 6,
                    "deletions": 0,
                    "changes": 6,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.authenticated.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.authenticated.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fuser.role.authenticated.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -2,7 +2,11 @@ uuid: ff9133d8-4285-4e03-a4b0-2923a518905b\n langcode: en\n status: true\n dependencies:\n+  config:\n+    - filter.format.webform_default\n   module:\n+    - file\n+    - filter\n     - fontawesome\n     - media\n     - system\n@@ -15,4 +19,6 @@ is_admin: false\n permissions:\n   - 'access content'\n   - 'access fontawesome additional settings'\n+  - 'delete own files'\n+  - 'use text format webform_default'\n   - 'view media'"
                },
                {
                    "sha": "08dd413c0679614ff12e9bedf58cb80499c2d239",
                    "filename": "config/user.role.business_owner.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 2,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.business_owner.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.business_owner.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fuser.role.business_owner.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -4,12 +4,12 @@ status: true\n dependencies:\n   config:\n     - filter.format.rich_text\n-    - node.type.suggested_dataset\n     - workflows.workflow.editorial\n   module:\n     - book\n     - content_moderation\n     - content_translation\n+    - file\n     - filter\n     - node\n     - webform\n@@ -24,7 +24,7 @@ permissions:\n   - 'administer webform submission'\n   - 'create content translations'\n   - 'delete content translations'\n-  - 'translate suggested_dataset node'\n+  - 'delete own files'\n   - 'update content translations'\n   - 'use editorial transition archive'\n   - 'use editorial transition archived_draft'"
                },
                {
                    "sha": "e70e42f45be261109c80465efa09a400d78f247e",
                    "filename": "config/user.role.comment_moderator.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 5,
                    "changes": 7,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.comment_moderator.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.comment_moderator.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fuser.role.comment_moderator.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -4,12 +4,11 @@ status: true\n dependencies:\n   config:\n     - filter.format.rich_text\n-    - node.type.suggested_dataset\n     - workflows.workflow.editorial\n   module:\n     - content_moderation\n-    - content_translation\n     - contextual\n+    - file\n     - filter\n     - node\n     - system\n@@ -25,11 +24,9 @@ permissions:\n   - 'access contextual links'\n   - 'access toolbar'\n   - 'access webform overview'\n-  - 'edit any suggested_dataset content'\n-  - 'translate suggested_dataset node'\n+  - 'delete own files'\n   - 'use editorial transition review'\n   - 'use text format rich_text'\n   - 'view any unpublished content'\n   - 'view latest version'\n-  - 'view suggested_dataset revisions'\n   - 'view the administration theme'"
                },
                {
                    "sha": "b4c6539dfc709aca4f6a2669c5d1a6582dad2d3d",
                    "filename": "config/user.role.editor.yml",
                    "status": "modified",
                    "additions": 4,
                    "deletions": 11,
                    "changes": 15,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.editor.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.editor.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fuser.role.editor.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -21,13 +21,11 @@ dependencies:\n     - node.type.landing_page\n     - node.type.map\n     - node.type.page\n-    - node.type.suggested_dataset\n     - node.type.theme_and_topic_page\n     - node.type.webform\n     - taxonomy.vocabulary.app_categories\n     - taxonomy.vocabulary.app_freetags\n     - taxonomy.vocabulary.app_ribbon\n-    - taxonomy.vocabulary.blog_author\n     - taxonomy.vocabulary.commitment_freetags\n     - taxonomy.vocabulary.consultation_status\n     - taxonomy.vocabulary.departments\n@@ -60,13 +58,16 @@ weight: 3\n is_admin: null\n permissions:\n   - 'access administration pages'\n+  - 'access block library'\n   - 'access content'\n   - 'access content overview'\n   - 'access contextual links'\n   - 'access files overview'\n   - 'access media overview'\n   - 'access taxonomy overview'\n   - 'access toolbar'\n+  - 'administer block content'\n+  - 'administer block types'\n   - 'administer blocks'\n   - 'administer book outlines'\n   - 'administer menu'\n@@ -87,7 +88,6 @@ permissions:\n   - 'create media'\n   - 'create page content'\n   - 'create slideshow media'\n-  - 'create suggested_dataset content'\n   - 'create terms in app_categories'\n   - 'create terms in app_freetags'\n   - 'create terms in app_ribbon'\n@@ -110,7 +110,6 @@ permissions:\n   - 'delete any impact_story content'\n   - 'delete any landing_page content'\n   - 'delete any page content'\n-  - 'delete any suggested_dataset content'\n   - 'delete any theme_and_topic_page content'\n   - 'delete any webform content'\n   - 'delete app revisions'\n@@ -120,13 +119,13 @@ permissions:\n   - 'delete own commitment content'\n   - 'delete own consultation content'\n   - 'delete own file media'\n+  - 'delete own files'\n   - 'delete own idea content'\n   - 'delete own image media'\n   - 'delete own impact_story content'\n   - 'delete own landing_page content'\n   - 'delete own page content'\n   - 'delete own slideshow media'\n-  - 'delete own suggested_dataset content'\n   - 'delete own theme_and_topic_page content'\n   - 'delete own webform content'\n   - 'edit any app content'\n@@ -141,7 +140,6 @@ permissions:\n   - 'edit any landing_page content'\n   - 'edit any page content'\n   - 'edit any slideshow media'\n-  - 'edit any suggested_dataset content'\n   - 'edit any theme_and_topic_page content'\n   - 'edit any webform content'\n   - 'edit own app content'\n@@ -155,7 +153,6 @@ permissions:\n   - 'edit own landing_page content'\n   - 'edit own page content'\n   - 'edit own slideshow media'\n-  - 'edit own suggested_dataset content'\n   - 'edit own theme_and_topic_page content'\n   - 'edit own webform content'\n   - 'edit terms in app_categories'\n@@ -179,7 +176,6 @@ permissions:\n   - 'revert landing_page revisions'\n   - 'revert map revisions'\n   - 'revert page revisions'\n-  - 'revert suggested_dataset revisions'\n   - 'revert theme_and_topic_page revisions'\n   - 'revert webform revisions'\n   - 'translate any entity'\n@@ -189,7 +185,6 @@ permissions:\n   - 'translate app_ribbon taxonomy_term'\n   - 'translate article node'\n   - 'translate block_content'\n-  - 'translate blog_author taxonomy_term'\n   - 'translate commitment node'\n   - 'translate consultation node'\n   - 'translate consultation_status taxonomy_term'\n@@ -206,7 +201,6 @@ permissions:\n   - 'translate site_structure taxonomy_term'\n   - 'translate slideshow media'\n   - 'translate subscriptions taxonomy_term'\n-  - 'translate suggested_dataset node'\n   - 'translate theme_and_topic_page node'\n   - 'translate webform node'\n   - 'update any media'\n@@ -231,7 +225,6 @@ permissions:\n   - 'view own unpublished content'\n   - 'view own unpublished media'\n   - 'view page revisions'\n-  - 'view suggested_dataset revisions'\n   - 'view the administration theme'\n   - 'view theme_and_topic_page revisions'\n   - 'view webform revisions'"
                },
                {
                    "sha": "503eb3de6a7e9a68a3ca7976e8faf55f0af83557",
                    "filename": "config/user.role.reviewer.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.reviewer.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.reviewer.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fuser.role.reviewer.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -11,6 +11,7 @@ dependencies:\n     - content_moderation\n     - content_translation\n     - contextual\n+    - file\n     - filter\n     - node\n     - system\n@@ -24,6 +25,7 @@ permissions:\n   - 'access content overview'\n   - 'access contextual links'\n   - 'access toolbar'\n+  - 'delete own files'\n   - 'translate article node'\n   - 'translate page node'\n   - 'use editorial transition review'"
                },
                {
                    "sha": "95a408d9de418bcd89dca500db94d7bc37884d14",
                    "filename": "config/user.role.sd_moderator.yml",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 0,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.sd_moderator.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fuser.role.sd_moderator.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fuser.role.sd_moderator.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -4,6 +4,7 @@ status: true\n dependencies:\n   module:\n     - content_moderation\n+    - file\n     - node\n     - toolbar\n id: sd_moderator\n@@ -13,4 +14,5 @@ is_admin: null\n permissions:\n   - 'access content overview'\n   - 'access toolbar'\n+  - 'delete own files'\n   - 'view any unpublished content'"
                },
                {
                    "sha": "aaba173b0b6fac4ab13159114497a3dca1532aa4",
                    "filename": "config/views.settings.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.settings.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.settings.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.settings.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,7 +1,6 @@\n _core:\n   default_config_hash: RaRd9EIcwA4u3qCSRLL8EnCicbda1kV__ASmVbyehvQ\n display_extenders: {  }\n-skip_cache: false\n sql_signature: false\n ui:\n   show:"
                },
                {
                    "sha": "ea40986e028eba88dc9cfaa53e1cf29b1e63b2d3",
                    "filename": "config/views.view.apps_gallery.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 2,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.apps_gallery.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.apps_gallery.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.apps_gallery.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -728,7 +728,6 @@ display:\n         - 'languages:language_interface'\n         - url\n         - url.query_args\n-        - user\n         - 'user.node_grants:view'\n         - user.permissions\n       tags:\n@@ -1598,7 +1597,6 @@ display:\n         - 'languages:language_interface'\n         - url\n         - url.query_args\n-        - user\n         - 'user.node_grants:view'\n         - user.permissions\n       tags:"
                },
                {
                    "sha": "ef94e9e54b7f4f3c0c3e63b81ec8df751cbd91af",
                    "filename": "config/views.view.block_content.yml",
                    "status": "modified",
                    "additions": 16,
                    "deletions": 6,
                    "changes": 22,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.block_content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.block_content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.block_content.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -8,7 +8,7 @@ dependencies:\n _core:\n   default_config_hash: BmeDSOTSaTVy5QLgxgJ5ye_ZseG5t88JXRP1apFoBkk\n id: block_content\n-label: 'Custom block library'\n+label: 'Content blocks'\n module: views\n description: 'Find and manage custom blocks.'\n tag: default\n@@ -209,6 +209,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n         operations:\n           id: operations\n           table: block_content\n@@ -291,7 +300,7 @@ display:\n       access:\n         type: perm\n         options:\n-          perm: 'administer blocks'\n+          perm: 'access block library'\n       cache:\n         type: tag\n         options: {  }\n@@ -580,14 +589,15 @@ display:\n     position: 1\n     display_options:\n       display_extenders: {  }\n-      path: admin/structure/block/block-content\n+      path: admin/content/block\n       menu:\n         type: tab\n-        title: 'Custom block library'\n-        description: ''\n+        title: Blocks\n+        description: 'Create and edit block content.'\n         weight: 0\n+        expanded: false\n         menu_name: admin\n-        parent: block.admin_display\n+        parent: system.admin_content\n         context: '0'\n     cache_metadata:\n       max-age: -1"
                },
                {
                    "sha": "0ddf26b34c18dcb6e4211bd0fb9a531100aef428",
                    "filename": "config/views.view.blog.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 2062,
                    "changes": 2062,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fviews.view.blog.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fviews.view.blog.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.blog.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,2062 +0,0 @@\n-uuid: d41a30f1-7d5e-4f5b-92c9-92455a15d658\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.body\n-    - field.storage.node.field_blog_author_name\n-    - field.storage.node.field_media\n-    - node.type.article\n-    - taxonomy.vocabulary.blog_author\n-  module:\n-    - node\n-    - taxonomy\n-    - text\n-    - user\n-id: blog\n-label: Blog\n-module: views\n-description: 'List of all blogs'\n-tag: ''\n-base_table: node_field_data\n-base_field: nid\n-display:\n-  default:\n-    id: default\n-    display_title: Master\n-    display_plugin: default\n-    position: 0\n-    display_options:\n-      title: Blog\n-      fields:\n-        title:\n-          id: title\n-          table: node_field_data\n-          field: title\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: title\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: false\n-            ellipsis: false\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: string\n-          settings:\n-            link_to_entity: true\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        comment_count:\n-          id: comment_count\n-          table: comment_entity_statistics\n-          field: comment_count\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: numeric\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          set_precision: false\n-          precision: 0\n-          decimal: .\n-          separator: ','\n-          format_plural: false\n-          format_plural_string: !!binary MQNAY291bnQ=\n-          prefix: ''\n-          suffix: ''\n-        created:\n-          id: created\n-          table: node_field_data\n-          field: created\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: created\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: timestamp\n-          settings:\n-            date_format: custom\n-            custom_date_format: '''l, Y-m-d'''\n-            timezone: ''\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_media:\n-          id: field_media\n-          table: node__field_media\n-          field: field_media\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: target_id\n-          type: entity_reference_label\n-          settings:\n-            link: true\n-          group_column: target_id\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        body:\n-          id: body\n-          table: node__body\n-          field: body\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: text_summary_or_trimmed\n-          settings:\n-            trim_length: 600\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        nothing:\n-          id: nothing\n-          table: views\n-          field: nothing\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: custom\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: true\n-            text: \"<div class=\\\"row\\\">\\r\\n<h2 class=\\\"h4 col-md-9 mrgn-tp-md\\\">{{ title }}</h2>\\r\\n<div class=\\\"col-md-3 hidden-sm hidden-xs brdr-lft text-left\\\">\\r\\n{% trans %}\\r\\n<span class=\\\"glyphicon glyphicon-comment\\\"></span> Comment ({{ comment_count }})\\r\\n{% endtrans %}\\r\\n</div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n<p class=\\\"pagetag col-md-12 small\\\">{{ created }}</p>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n<div class=\\\"col-md-3 hidden-sm hidden-xs\\\">{{ field_media }}</div>\\r\\n<div class=\\\"col-md-9 col-sm-12\\\">\\r\\n  {{ body }}\\r\\n  {% trans %} Continue reading \\\"{{ title_1 }}\\\"... {% endtrans %}\\r\\n</div>\\r\\n</div>\"\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: false\n-      pager:\n-        type: full\n-        options:\n-          offset: 0\n-          items_per_page: 15\n-          total_pages: null\n-          id: 0\n-          tags:\n-            next: ››\n-            previous: ‹‹\n-            first: '« First'\n-            last: 'Last »'\n-          expose:\n-            items_per_page: false\n-            items_per_page_label: 'Items per page'\n-            items_per_page_options: '5, 10, 25, 50'\n-            items_per_page_options_all: false\n-            items_per_page_options_all_label: '- All -'\n-            offset: false\n-            offset_label: Offset\n-          quantity: 9\n-      exposed_form:\n-        type: basic\n-        options:\n-          submit_button: Search\n-          reset_button: false\n-          reset_button_label: Reset\n-          exposed_sorts_label: Sort\n-          expose_sort_order: false\n-          sort_asc_label: Asc\n-          sort_desc_label: Desc\n-      access:\n-        type: perm\n-        options:\n-          perm: 'access content'\n-      cache:\n-        type: tag\n-        options: {  }\n-      empty: {  }\n-      sorts:\n-        created:\n-          id: created\n-          table: node_field_data\n-          field: created\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: created\n-          plugin_id: date\n-          order: DESC\n-          expose:\n-            label: 'Authored on'\n-            field_identifier: created\n-          exposed: false\n-          granularity: second\n-      arguments: {  }\n-      filters:\n-        status:\n-          id: status\n-          table: node_field_data\n-          field: status\n-          entity_type: node\n-          entity_field: status\n-          plugin_id: boolean\n-          value: '1'\n-          group: 1\n-          expose:\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        type:\n-          id: type\n-          table: node_field_data\n-          field: type\n-          entity_type: node\n-          entity_field: type\n-          plugin_id: bundle\n-          value:\n-            article: article\n-          expose:\n-            operator_limit_selection: false\n-            operator_list: {  }\n-      style:\n-        type: default\n-        options:\n-          grouping: {  }\n-          row_class: 'blog-striped mrgn-bttm-lg'\n-          default_row_class: true\n-      row:\n-        type: fields\n-        options:\n-          default_field_elements: true\n-          inline:\n-            title: title\n-            field_image: field_image\n-          separator: ''\n-          hide_empty: true\n-      query:\n-        type: views_query\n-        options:\n-          query_comment: ''\n-          disable_sql_rewrite: false\n-          distinct: false\n-          replica: false\n-          query_tags: {  }\n-      relationships: {  }\n-      css_class: ''\n-      header: {  }\n-      footer: {  }\n-      display_extenders: {  }\n-    cache_metadata:\n-      max-age: -1\n-      contexts:\n-        - 'languages:language_content'\n-        - 'languages:language_interface'\n-        - url.query_args\n-        - 'user.node_grants:view'\n-        - user.permissions\n-      tags:\n-        - 'config:field.storage.node.body'\n-        - 'config:field.storage.node.field_media'\n-  all:\n-    id: all\n-    display_title: 'All blogs list'\n-    display_plugin: block\n-    position: 1\n-    display_options:\n-      fields:\n-        title:\n-          id: title\n-          table: node_field_data\n-          field: title\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: title\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: false\n-            ellipsis: false\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: string\n-          settings:\n-            link_to_entity: true\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        comment_count:\n-          id: comment_count\n-          table: comment_entity_statistics\n-          field: comment_count\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: numeric\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          set_precision: false\n-          precision: 0\n-          decimal: .\n-          separator: ','\n-          format_plural: false\n-          format_plural_string: !!binary MQNAY291bnQ=\n-          prefix: ''\n-          suffix: ''\n-        created:\n-          id: created\n-          table: node_field_data\n-          field: created\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: created\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: timestamp\n-          settings:\n-            date_format: blog_date\n-            custom_date_format: 'F j, Y'\n-            timezone: ''\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_media:\n-          id: field_media\n-          table: node__field_media\n-          field: field_media\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: target_id\n-          type: entity_reference_entity_view\n-          settings:\n-            view_mode: default\n-          group_column: target_id\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        view_node:\n-          id: view_node\n-          table: node\n-          field: view_node\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          plugin_id: entity_link\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          text: ''\n-          output_url_as_text: true\n-          absolute: false\n-        body:\n-          id: body\n-          table: node__body\n-          field: body\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: true\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 400\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: true\n-            trim: true\n-            preserve_tags: '<markup>'\n-            html: false\n-          element_type: p\n-          element_class: panel-body\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: text_default\n-          settings: {  }\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_blog_author_name:\n-          id: field_blog_author_name\n-          table: node__field_blog_author_name\n-          field: field_blog_author_name\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: true\n-            text: '<a href=\"/taxonomy/term/{{ field_blog_author_name__target_id }}\" title=\"Read more blogs by {{ field_blog_author_name }}\">{{ field_blog_author_name }}</a>'\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: target_id\n-          type: entity_reference_label\n-          settings:\n-            link: false\n-          group_column: target_id\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        nothing:\n-          id: nothing\n-          table: views\n-          field: nothing\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: custom\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: true\n-            text: \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-10 col-md-9 col-sm-9\\\">\\r\\n    <h2 class=\\\"h3 mrgn-tp-0\\\">{{ title }}</h2>\\r\\n    <p>By {{ field_blog_author_name }} on {{ created }}</p> \\r\\n    <p class=\\\"excerpt\\\">{{ body }}</p>\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-2 col-md-3 col-sm-3\\\">\\r\\n    <a href=\\\"{{ view_node }}\\\">{{ field_media }}</a>  \\r\\n  </div>\\r\\n</div>\"\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: false\n-      empty:\n-        area_text_custom:\n-          id: area_text_custom\n-          table: views\n-          field: area_text_custom\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: text_custom\n-          empty: true\n-          content: '<p><strong>No blog post found.</strong></p><br/>'\n-          tokenize: false\n-      sorts:\n-        created:\n-          id: created\n-          table: node_field_data\n-          field: created\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: created\n-          plugin_id: date\n-          order: DESC\n-          expose:\n-            label: Date\n-            field_identifier: created\n-          exposed: true\n-          granularity: second\n-        title:\n-          id: title\n-          table: node_field_data\n-          field: title\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: title\n-          plugin_id: standard\n-          order: ASC\n-          expose:\n-            label: Title\n-            field_identifier: title\n-          exposed: true\n-      arguments: {  }\n-      filters:\n-        status:\n-          id: status\n-          table: node_field_data\n-          field: status\n-          entity_type: node\n-          entity_field: status\n-          plugin_id: boolean\n-          value: '1'\n-          group: 1\n-          expose:\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        type:\n-          id: type\n-          table: node_field_data\n-          field: type\n-          entity_type: node\n-          entity_field: type\n-          plugin_id: bundle\n-          value:\n-            article: article\n-          group: 1\n-          expose:\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        langcode:\n-          id: langcode\n-          table: node_field_data\n-          field: langcode\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: langcode\n-          plugin_id: language\n-          operator: in\n-          value:\n-            '***LANGUAGE_language_interface***': '***LANGUAGE_language_interface***'\n-          group: 1\n-          exposed: false\n-          expose:\n-            operator_id: ''\n-            label: ''\n-            description: ''\n-            use_operator: false\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-            identifier: ''\n-            required: false\n-            remember: false\n-            multiple: false\n-            remember_roles:\n-              authenticated: authenticated\n-            reduce: false\n-          is_grouped: false\n-          group_info:\n-            label: ''\n-            description: ''\n-            identifier: ''\n-            optional: true\n-            widget: select\n-            multiple: false\n-            remember: false\n-            default_group: All\n-            default_group_multiple: {  }\n-            group_items: {  }\n-        combine:\n-          id: combine\n-          table: views\n-          field: combine\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: combine\n-          operator: allwords\n-          value: ''\n-          group: 1\n-          exposed: true\n-          expose:\n-            operator_id: combine_op\n-            label: Search\n-            description: ''\n-            use_operator: false\n-            operator: combine_op\n-            operator_limit_selection: false\n-            operator_list: {  }\n-            identifier: combine\n-            required: false\n-            remember: false\n-            multiple: false\n-            remember_roles:\n-              authenticated: authenticated\n-              anonymous: '0'\n-              administrator: '0'\n-              editor: '0'\n-              comment_moderator: '0'\n-              reviewer: '0'\n-            placeholder: ''\n-          is_grouped: false\n-          group_info:\n-            label: 'Combine fields filter'\n-            description: null\n-            identifier: combine\n-            optional: true\n-            widget: select\n-            multiple: false\n-            remember: false\n-            default_group: All\n-            default_group_multiple: {  }\n-            group_items:\n-              1: {  }\n-              2: {  }\n-              3: {  }\n-          fields:\n-            title: title\n-            body: body\n-        field_blog_author_name_target_id:\n-          id: field_blog_author_name_target_id\n-          table: node__field_blog_author_name\n-          field: field_blog_author_name_target_id\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: taxonomy_index_tid\n-          operator: or\n-          value: {  }\n-          group: 1\n-          exposed: true\n-          expose:\n-            operator_id: field_blog_author_name_target_id_op\n-            label: Author\n-            description: ''\n-            use_operator: false\n-            operator: field_blog_author_name_target_id_op\n-            operator_limit_selection: false\n-            operator_list: {  }\n-            identifier: field_blog_author_name_target_id\n-            required: false\n-            remember: false\n-            multiple: false\n-            remember_roles:\n-              authenticated: authenticated\n-              anonymous: '0'\n-              administrator: '0'\n-              editor: '0'\n-              comment_moderator: '0'\n-              reviewer: '0'\n-            reduce: false\n-          is_grouped: false\n-          group_info:\n-            label: ''\n-            description: ''\n-            identifier: ''\n-            optional: true\n-            widget: select\n-            multiple: false\n-            remember: false\n-            default_group: All\n-            default_group_multiple: {  }\n-            group_items: {  }\n-          reduce_duplicates: false\n-          vid: blog_author\n-          type: select\n-          hierarchy: false\n-          limit: true\n-          error_message: true\n-      filter_groups:\n-        operator: AND\n-        groups:\n-          1: AND\n-      defaults:\n-        empty: false\n-        use_ajax: false\n-        fields: false\n-        sorts: false\n-        arguments: false\n-        filters: false\n-        filter_groups: false\n-        header: false\n-      use_ajax: true\n-      display_description: ''\n-      header:\n-        result:\n-          id: result\n-          table: views\n-          field: result\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: result\n-          empty: false\n-          content: '<!--<p><strong>Found @total blog post(s).</strong></p>-->'\n-      display_extenders:\n-        metatag_display_extender: {  }\n-    cache_metadata:\n-      max-age: -1\n-      contexts:\n-        - 'languages:language_content'\n-        - 'languages:language_interface'\n-        - url\n-        - url.query_args\n-        - 'url.query_args:sort_by'\n-        - user\n-        - 'user.node_grants:view'\n-        - user.permissions\n-      tags:\n-        - 'config:field.storage.node.body'\n-        - 'config:field.storage.node.field_blog_author_name'\n-        - 'config:field.storage.node.field_media'\n-  feed_1:\n-    id: feed_1\n-    display_title: Feed\n-    display_plugin: feed\n-    position: 3\n-    display_options:\n-      title: 'Latest blogs'\n-      fields:\n-        title:\n-          id: title\n-          table: node_field_data\n-          field: title\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: title\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: false\n-            ellipsis: false\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: string\n-          settings:\n-            link_to_entity: false\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        view_node:\n-          id: view_node\n-          table: node\n-          field: view_node\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          plugin_id: entity_link\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          text: view\n-          output_url_as_text: true\n-          absolute: false\n-        nothing:\n-          id: nothing\n-          table: views\n-          field: nothing\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: custom\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: true\n-            text: 'Open Government, Government of Canada'\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: false\n-        body:\n-          id: body\n-          table: node__body\n-          field: body\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: text_summary_or_trimmed\n-          settings:\n-            trim_length: 600\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        created:\n-          id: created\n-          table: node_field_data\n-          field: created\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: created\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: timestamp\n-          settings:\n-            date_format: custom\n-            custom_date_format: '''l, Y-m-d'''\n-            timezone: ''\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-      filters:\n-        status:\n-          id: status\n-          table: node_field_data\n-          field: status\n-          entity_type: node\n-          entity_field: status\n-          plugin_id: boolean\n-          value: '1'\n-          group: 1\n-          expose:\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        type:\n-          id: type\n-          table: node_field_data\n-          field: type\n-          entity_type: node\n-          entity_field: type\n-          plugin_id: bundle\n-          value:\n-            article: article\n-          expose:\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        langcode:\n-          id: langcode\n-          table: node_field_data\n-          field: langcode\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: langcode\n-          plugin_id: language\n-          operator: in\n-          value:\n-            '***LANGUAGE_language_interface***': '***LANGUAGE_language_interface***'\n-          group: 1\n-          exposed: false\n-          expose:\n-            operator_id: ''\n-            label: ''\n-            description: ''\n-            use_operator: false\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-            identifier: ''\n-            required: false\n-            remember: false\n-            multiple: false\n-            remember_roles:\n-              authenticated: authenticated\n-            reduce: false\n-          is_grouped: false\n-          group_info:\n-            label: ''\n-            description: ''\n-            identifier: ''\n-            optional: true\n-            widget: select\n-            multiple: false\n-            remember: false\n-            default_group: All\n-            default_group_multiple: {  }\n-            group_items: {  }\n-      filter_groups:\n-        operator: AND\n-        groups:\n-          1: AND\n-      row:\n-        type: rss_fields\n-        options:\n-          title_field: title\n-          link_field: view_node\n-          description_field: body\n-          creator_field: nothing\n-          date_field: created\n-          guid_field_options:\n-            guid_field: view_node\n-            guid_field_is_permalink: true\n-      defaults:\n-        title: false\n-        fields: false\n-        filters: false\n-        filter_groups: false\n-        sitename_title: false\n-      display_extenders:\n-        metatag_display_extender: {  }\n-      path: blog/feed\n-      sitename_title: false\n-      displays:\n-        all: all\n-        default: '0'\n-        recent: '0'\n-    cache_metadata:\n-      max-age: -1\n-      contexts:\n-        - 'languages:language_content'\n-        - 'languages:language_interface'\n-        - 'user.node_grants:view'\n-        - user.permissions\n-      tags:\n-        - 'config:field.storage.node.body'\n-  recent:\n-    id: recent\n-    display_title: 'Recent blog posts'\n-    display_plugin: block\n-    position: 1\n-    display_options:\n-      title: 'Recent blog posts'\n-      fields:\n-        nid:\n-          id: nid\n-          table: node_field_data\n-          field: nid\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: nid\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: number_integer\n-          settings:\n-            thousand_separator: ''\n-            prefix_suffix: true\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        title:\n-          id: title\n-          table: node_field_data\n-          field: title\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: title\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: false\n-            ellipsis: false\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: string\n-          settings:\n-            link_to_entity: true\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_media:\n-          id: field_media\n-          table: node__field_media\n-          field: field_media\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: true\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: target_id\n-          type: entity_reference_entity_view\n-          settings:\n-            view_mode: default\n-          group_column: target_id\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        nothing:\n-          id: nothing\n-          table: views\n-          field: nothing\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: custom\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: true\n-            text: \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-4\\\">{{ field_media}}</div>\\r\\n  <div class=\\\"col-sm-8\\\">{{ title }}</div>\\r\\n</div>\"\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: false\n-      pager:\n-        type: some\n-        options:\n-          offset: 0\n-          items_per_page: 10\n-      sorts:\n-        created:\n-          id: created\n-          table: node_field_data\n-          field: created\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: created\n-          plugin_id: date\n-          order: DESC\n-          expose:\n-            label: 'Authored on'\n-            field_identifier: created\n-          exposed: false\n-          granularity: second\n-      filters:\n-        status:\n-          id: status\n-          table: node_field_data\n-          field: status\n-          entity_type: node\n-          entity_field: status\n-          plugin_id: boolean\n-          value: '1'\n-          group: 1\n-          expose:\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        type:\n-          id: type\n-          table: node_field_data\n-          field: type\n-          entity_type: node\n-          entity_field: type\n-          plugin_id: bundle\n-          value:\n-            article: article\n-          expose:\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        langcode:\n-          id: langcode\n-          table: node_field_data\n-          field: langcode\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: langcode\n-          plugin_id: language\n-          operator: in\n-          value:\n-            '***LANGUAGE_language_interface***': '***LANGUAGE_language_interface***'\n-          group: 1\n-          exposed: false\n-          expose:\n-            operator_id: ''\n-            label: ''\n-            description: ''\n-            use_operator: false\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-            identifier: ''\n-            required: false\n-            remember: false\n-            multiple: false\n-            remember_roles:\n-              authenticated: authenticated\n-            reduce: false\n-          is_grouped: false\n-          group_info:\n-            label: ''\n-            description: ''\n-            identifier: ''\n-            optional: true\n-            widget: select\n-            multiple: false\n-            remember: false\n-            default_group: All\n-            default_group_multiple: {  }\n-            group_items: {  }\n-      filter_groups:\n-        operator: AND\n-        groups:\n-          1: AND\n-      style:\n-        type: default\n-        options:\n-          grouping: {  }\n-          row_class: views-striped\n-          default_row_class: true\n-      row:\n-        type: fields\n-        options:\n-          default_field_elements: true\n-          inline: {  }\n-          separator: ''\n-          hide_empty: true\n-      defaults:\n-        title: false\n-        use_ajax: false\n-        pager: false\n-        use_more: false\n-        use_more_always: false\n-        use_more_text: false\n-        link_display: false\n-        link_url: false\n-        style: false\n-        row: false\n-        fields: false\n-        sorts: false\n-        filters: false\n-        filter_groups: false\n-      use_ajax: false\n-      display_description: ''\n-      use_more: true\n-      use_more_always: true\n-      use_more_text: 'View all'\n-      link_display: custom_url\n-      link_url: /en/blog\n-      display_extenders:\n-        metatag_display_extender: {  }\n-    cache_metadata:\n-      max-age: -1\n-      contexts:\n-        - 'languages:language_content'\n-        - 'languages:language_interface'\n-        - 'user.node_grants:view'\n-        - user.permissions\n-      tags:\n-        - 'config:field.storage.node.field_media'"
                },
                {
                    "sha": "9ead5fa63a358ac6ee3e1a43a3360dd053cd4a99",
                    "filename": "config/views.view.comment.yml",
                    "status": "modified",
                    "additions": 37,
                    "deletions": 1,
                    "changes": 38,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.comment.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.comment.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.comment.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,6 +1,6 @@\n uuid: d5980f29-5c1f-4cac-9ec4-ee79813ca41f\n langcode: en\n-status: true\n+status: false\n dependencies:\n   config:\n     - field.storage.comment.comment_body\n@@ -403,6 +403,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true\n@@ -1402,6 +1411,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true\n@@ -2453,6 +2471,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true\n@@ -3205,6 +3232,15 @@ display:\n             date_format: og_date\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true"
                },
                {
                    "sha": "23df736979065ace86bd3bec373d6baf91e908c2",
                    "filename": "config/views.view.comments_recent.yml",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 0,
                    "changes": 18,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.comments_recent.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.comments_recent.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.comments_recent.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -149,6 +149,15 @@ display:\n             date_format: medium\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true\n@@ -982,6 +991,15 @@ display:\n             date_format: custom\n             custom_date_format: 'F d, Y'\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true"
                },
                {
                    "sha": "a40e62245c45453cea67f52db73e42f4eb5b4697",
                    "filename": "config/views.view.content.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 0,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.content.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -168,6 +168,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n         moderation_state:\n           id: moderation_state\n           table: node_field_data"
                },
                {
                    "sha": "3f7cc29ba46ea6fe858a1045e1c08f4c24eeec71",
                    "filename": "config/views.view.export_content.yml",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 830,
                    "changes": 830,
                    "blob_url": "https://github.com/open-data/opengov/blob/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fviews.view.export_content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/9e44e51b62992c6ff984418c5a13de70b61ef8b5/config%2Fviews.view.export_content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.export_content.yml?ref=9e44e51b62992c6ff984418c5a13de70b61ef8b5",
                    "patch": "@@ -1,830 +0,0 @@\n-uuid: 72335bc9-cea2-4f69-95a8-5185687b059e\n-langcode: en\n-status: true\n-dependencies:\n-  config:\n-    - field.storage.node.body\n-    - field.storage.node.field_organization\n-    - field.storage.node.field_sd_status\n-    - field.storage.node.field_status_link\n-    - field.storage.node.field_vote_up_down\n-    - node.type.suggested_dataset\n-    - user.role.administrator\n-    - user.role.business_owner\n-  module:\n-    - csv_serialization\n-    - link\n-    - node\n-    - options\n-    - rest\n-    - serialization\n-    - text\n-    - user\n-id: export_content\n-label: 'Export: Content'\n-module: views\n-description: ''\n-tag: ''\n-base_table: node_field_data\n-base_field: nid\n-display:\n-  default:\n-    id: default\n-    display_title: Master\n-    display_plugin: default\n-    position: 0\n-    display_options:\n-      title: 'Suggested Dataset'\n-      fields:\n-        nid:\n-          id: nid\n-          table: node_field_data\n-          field: nid\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: nid\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: number_integer\n-          settings:\n-            thousand_separator: ''\n-            prefix_suffix: true\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        title:\n-          id: title\n-          table: node_field_data\n-          field: title\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: title\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            make_link: false\n-            absolute: false\n-            word_boundary: false\n-            ellipsis: false\n-            strip_tags: false\n-            trim: false\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: true\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: string\n-          settings:\n-            link_to_entity: true\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        body:\n-          id: body\n-          table: node__body\n-          field: body\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: text_default\n-          settings: {  }\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_organization:\n-          id: field_organization\n-          table: node__field_organization\n-          field: field_organization\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: Department/Organization\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: list_default\n-          settings: {  }\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_sd_status:\n-          id: field_sd_status\n-          table: node__field_sd_status\n-          field: field_sd_status\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: true\n-            text: '{{ field_sd_status__value }}'\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: list_default\n-          settings: {  }\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_status_link:\n-          id: field_status_link\n-          table: node__field_status_link\n-          field: field_status_link\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: uri\n-          type: link\n-          settings:\n-            trim_length: 80\n-            url_only: false\n-            url_plain: false\n-            rel: '0'\n-            target: '0'\n-          group_column: ''\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        field_vote_up_down:\n-          id: field_vote_up_down\n-          table: node__field_vote_up_down\n-          field: field_vote_up_down\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: number_integer\n-          settings:\n-            thousand_separator: ''\n-            prefix_suffix: true\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        langcode:\n-          id: langcode\n-          table: node_field_revision\n-          field: langcode\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: langcode\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: language\n-          settings:\n-            link_to_entity: false\n-            native_language: false\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-        created:\n-          id: created\n-          table: node_field_data\n-          field: created\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: created\n-          plugin_id: field\n-          label: ''\n-          exclude: false\n-          alter:\n-            alter_text: false\n-            text: ''\n-            make_link: false\n-            path: ''\n-            absolute: false\n-            external: false\n-            replace_spaces: false\n-            path_case: none\n-            trim_whitespace: false\n-            alt: ''\n-            rel: ''\n-            link_class: ''\n-            prefix: ''\n-            suffix: ''\n-            target: ''\n-            nl2br: false\n-            max_length: 0\n-            word_boundary: true\n-            ellipsis: true\n-            more_link: false\n-            more_link_text: ''\n-            more_link_path: ''\n-            strip_tags: false\n-            trim: false\n-            preserve_tags: ''\n-            html: false\n-          element_type: ''\n-          element_class: ''\n-          element_label_type: ''\n-          element_label_class: ''\n-          element_label_colon: false\n-          element_wrapper_type: ''\n-          element_wrapper_class: ''\n-          element_default_classes: true\n-          empty: ''\n-          hide_empty: false\n-          empty_zero: false\n-          hide_alter_empty: true\n-          click_sort_column: value\n-          type: timestamp\n-          settings:\n-            date_format: html_date\n-            custom_date_format: ''\n-            timezone: ''\n-          group_column: value\n-          group_columns: {  }\n-          group_rows: true\n-          delta_limit: 0\n-          delta_offset: 0\n-          delta_reversed: false\n-          delta_first_last: false\n-          multi_type: separator\n-          separator: ', '\n-          field_api_classes: false\n-      pager:\n-        type: mini\n-        options:\n-          offset: 0\n-          items_per_page: 10\n-          total_pages: null\n-          id: 0\n-          tags:\n-            next: ››\n-            previous: ‹‹\n-          expose:\n-            items_per_page: false\n-            items_per_page_label: 'Items per page'\n-            items_per_page_options: '5, 10, 25, 50'\n-            items_per_page_options_all: false\n-            items_per_page_options_all_label: '- All -'\n-            offset: false\n-            offset_label: Offset\n-      exposed_form:\n-        type: basic\n-        options:\n-          submit_button: Apply\n-          reset_button: false\n-          reset_button_label: Reset\n-          exposed_sorts_label: 'Sort by'\n-          expose_sort_order: true\n-          sort_asc_label: Asc\n-          sort_desc_label: Desc\n-      access:\n-        type: role\n-        options:\n-          role:\n-            administrator: administrator\n-            business_owner: business_owner\n-      cache:\n-        type: tag\n-        options: {  }\n-      empty: {  }\n-      sorts:\n-        nid:\n-          id: nid\n-          table: node_field_data\n-          field: nid\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: nid\n-          plugin_id: standard\n-          order: DESC\n-          expose:\n-            label: ''\n-            field_identifier: nid\n-          exposed: false\n-        langcode:\n-          id: langcode\n-          table: node_field_data\n-          field: langcode\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: langcode\n-          plugin_id: standard\n-          order: ASC\n-          expose:\n-            label: ''\n-            field_identifier: langcode\n-          exposed: false\n-      arguments: {  }\n-      filters:\n-        status:\n-          id: status\n-          table: node_field_data\n-          field: status\n-          entity_type: node\n-          entity_field: status\n-          plugin_id: boolean\n-          value: '1'\n-          group: 1\n-          expose:\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-        type:\n-          id: type\n-          table: node_field_data\n-          field: type\n-          relationship: none\n-          group_type: group\n-          admin_label: ''\n-          entity_type: node\n-          entity_field: type\n-          plugin_id: bundle\n-          operator: in\n-          value:\n-            suggested_dataset: suggested_dataset\n-          group: 1\n-          exposed: false\n-          expose:\n-            operator_id: ''\n-            label: ''\n-            description: ''\n-            use_operator: false\n-            operator: ''\n-            operator_limit_selection: false\n-            operator_list: {  }\n-            identifier: ''\n-            required: false\n-            remember: false\n-            multiple: false\n-            remember_roles:\n-              authenticated: authenticated\n-            reduce: false\n-          is_grouped: false\n-          group_info:\n-            label: ''\n-            description: ''\n-            identifier: ''\n-            optional: true\n-            widget: select\n-            multiple: false\n-            remember: false\n-            default_group: All\n-            default_group_multiple: {  }\n-            group_items: {  }\n-      style:\n-        type: default\n-        options:\n-          grouping: {  }\n-          row_class: ''\n-          default_row_class: true\n-          uses_fields: false\n-      row:\n-        type: fields\n-        options:\n-          default_field_elements: true\n-          inline: {  }\n-          separator: ''\n-          hide_empty: false\n-      query:\n-        type: views_query\n-        options:\n-          query_comment: ''\n-          disable_sql_rewrite: false\n-          distinct: false\n-          replica: false\n-          query_tags: {  }\n-      relationships: {  }\n-      header: {  }\n-      footer: {  }\n-      display_extenders: {  }\n-    cache_metadata:\n-      max-age: -1\n-      contexts:\n-        - 'languages:language_content'\n-        - 'languages:language_interface'\n-        - url.query_args\n-        - 'user.node_grants:view'\n-        - user.roles\n-      tags:\n-        - 'config:field.storage.node.body'\n-        - 'config:field.storage.node.field_organization'\n-        - 'config:field.storage.node.field_sd_status'\n-        - 'config:field.storage.node.field_status_link'\n-        - 'config:field.storage.node.field_vote_up_down'\n-  rest_export_1:\n-    id: rest_export_1\n-    display_title: 'Suggested Dataset'\n-    display_plugin: rest_export\n-    position: 1\n-    display_options:\n-      pager:\n-        type: none\n-        options:\n-          offset: 0\n-      style:\n-        type: serializer\n-        options:\n-          formats:\n-            csv: csv\n-      row:\n-        type: data_field\n-        options:\n-          field_options:\n-            nid:\n-              alias: ID\n-              raw_output: true\n-            title:\n-              alias: Title\n-              raw_output: true\n-            body:\n-              alias: Description\n-              raw_output: true\n-            field_suggested_dataset_dept:\n-              alias: Organization\n-              raw_output: true\n-            field_sd_status:\n-              alias: Status\n-              raw_output: false\n-            field_status_link:\n-              alias: StatusLink\n-              raw_output: true\n-            field_vote_up_down:\n-              alias: Votes\n-              raw_output: true\n-            langcode:\n-              alias: Language\n-              raw_output: false\n-            created:\n-              alias: PublishedDate\n-              raw_output: false\n-      display_description: ''\n-      display_extenders: {  }\n-      path: export/suggested-dataset.csv\n-    cache_metadata:\n-      max-age: -1\n-      contexts:\n-        - 'languages:language_content'\n-        - 'languages:language_interface'\n-        - request_format\n-        - 'user.node_grants:view'\n-        - user.roles\n-      tags:\n-        - 'config:field.storage.node.body'\n-        - 'config:field.storage.node.field_organization'\n-        - 'config:field.storage.node.field_sd_status'\n-        - 'config:field.storage.node.field_status_link'\n-        - 'config:field.storage.node.field_vote_up_down'"
                },
                {
                    "sha": "7ae96d296a8d965c7add0512c69e9917f1cc3782",
                    "filename": "config/views.view.external_content.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 0,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.external_content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.external_content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.external_content.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -168,6 +168,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n         moderation_state:\n           id: moderation_state\n           table: node_field_data"
                },
                {
                    "sha": "49ba26cbc0ee5f30e0bcd0f63f87bcca9120cab0",
                    "filename": "config/views.view.files.yml",
                    "status": "modified",
                    "additions": 18,
                    "deletions": 1,
                    "changes": 19,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.files.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.files.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.files.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -335,6 +335,15 @@ display:\n             date_format: medium\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n         changed:\n           id: changed\n           table: file_managed\n@@ -391,6 +400,15 @@ display:\n             date_format: medium\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n         count:\n           id: count\n           table: file_usage\n@@ -1023,7 +1041,6 @@ display:\n           default_argument_type: fixed\n           default_argument_options:\n             argument: ''\n-          default_argument_skip_url: false\n           summary_options:\n             base_path: ''\n             count: true"
                },
                {
                    "sha": "b962f8fee6cbb8d5ac05ea084f5af9ed7ba9d828",
                    "filename": "config/views.view.filtered_comments.yml",
                    "status": "modified",
                    "additions": 37,
                    "deletions": 1,
                    "changes": 38,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.filtered_comments.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.filtered_comments.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.filtered_comments.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,6 +1,6 @@\n uuid: faf1fb0b-5f58-4fb8-8b21-e6a4c0c0a0fc\n langcode: en\n-status: true\n+status: false\n dependencies:\n   config:\n     - field.storage.comment.comment_body\n@@ -403,6 +403,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true\n@@ -1402,6 +1411,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true\n@@ -2453,6 +2471,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true\n@@ -3205,6 +3232,15 @@ display:\n             date_format: og_date\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true"
                },
                {
                    "sha": "9514bbb13b0e747ae9f7783fcc69862700ee5882",
                    "filename": "config/views.view.gc_notify_delivery_status.yml",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 1,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.gc_notify_delivery_status.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.gc_notify_delivery_status.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.gc_notify_delivery_status.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1809,7 +1809,6 @@ display:\n           default_argument_options:\n             index: 4\n             use_alias: false\n-          default_argument_skip_url: false\n           summary_options:\n             base_path: ''\n             count: true"
                },
                {
                    "sha": "97c2a640c35d275c2dd15a87381ee6fa34b15e0f",
                    "filename": "config/views.view.glossary.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 2,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.glossary.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.glossary.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.glossary.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -183,6 +183,15 @@ display:\n             date_format: long\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n       pager:\n         type: mini\n         options:\n@@ -239,7 +248,6 @@ display:\n           default_argument_type: fixed\n           default_argument_options:\n             argument: a\n-          default_argument_skip_url: false\n           summary_options: {  }\n           summary:\n             format: default_summary\n@@ -406,7 +414,6 @@ display:\n           default_argument_type: fixed\n           default_argument_options:\n             argument: a\n-          default_argument_skip_url: false\n           summary_options:\n             items_per_page: 25\n             inline: true"
                },
                {
                    "sha": "d76e90592be53104a1cb14f0f48f4123ded457c6",
                    "filename": "config/views.view.guidebook.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 3,
                    "changes": 12,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.guidebook.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.guidebook.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.guidebook.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -1,6 +1,6 @@\n uuid: 1523772e-8c0a-4bec-a40e-021468c1375e\n langcode: en\n-status: true\n+status: false\n dependencies:\n   config:\n     - search_api.index.drupal_content\n@@ -376,7 +376,10 @@ display:\n         - 'languages:language_interface'\n         - url\n         - url.query_args\n-      tags: {  }\n+        - 'user.node_grants:view'\n+      tags:\n+        - 'config:search_api.index.drupal_content'\n+        - 'search_api_list:drupal_content'\n   block_1:\n     id: block_1\n     display_title: Block\n@@ -391,4 +394,7 @@ display:\n         - 'languages:language_interface'\n         - url\n         - url.query_args\n-      tags: {  }\n+        - 'user.node_grants:view'\n+      tags:\n+        - 'config:search_api.index.drupal_content'\n+        - 'search_api_list:drupal_content'"
                },
                {
                    "sha": "90cd9a3bbb544868c320fea542f2e5ce675f1cd1",
                    "filename": "config/views.view.media.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 0,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.media.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.media.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.media.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -448,6 +448,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true"
                },
                {
                    "sha": "c670e6d995fc44e0822ab79719057468ee8f6314",
                    "filename": "config/views.view.media_library.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 2,
                    "changes": 11,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.media_library.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.media_library.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.media_library.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -956,7 +956,6 @@ display:\n           default_argument_type: fixed\n           default_argument_options:\n             argument: ''\n-          default_argument_skip_url: false\n           summary_options:\n             base_path: ''\n             count: true\n@@ -1225,6 +1224,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n       access:\n         type: perm\n         options:\n@@ -1250,7 +1258,6 @@ display:\n           default_argument_type: fixed\n           default_argument_options:\n             argument: ''\n-          default_argument_skip_url: false\n           summary_options:\n             base_path: ''\n             count: true"
                },
                {
                    "sha": "3a8a59a3c87b8e6d7661c34048e091c687d4c3c7",
                    "filename": "config/views.view.moderated_content.yml",
                    "status": "modified",
                    "additions": 9,
                    "deletions": 0,
                    "changes": 9,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.moderated_content.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.moderated_content.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.moderated_content.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -341,6 +341,15 @@ display:\n             date_format: short\n             custom_date_format: ''\n             timezone: ''\n+            tooltip:\n+              date_format: ''\n+              custom_date_format: ''\n+            time_diff:\n+              enabled: false\n+              future_format: '@interval hence'\n+              past_format: '@interval ago'\n+              granularity: 2\n+              refresh: 60\n           group_column: value\n           group_columns: {  }\n           group_rows: true"
                },
                {
                    "sha": "5e20cdc3307068aa4767a2008afddf6c5a869249",
                    "filename": "config/views.view.pd_core_ati.yml",
                    "status": "modified",
                    "additions": 13,
                    "deletions": 7,
                    "changes": 20,
                    "blob_url": "https://github.com/open-data/opengov/blob/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.pd_core_ati.yml",
                    "raw_url": "https://github.com/open-data/opengov/raw/62897d7c5f6d35fbf858632c273e0df199eff68a/config%2Fviews.view.pd_core_ati.yml",
                    "contents_url": "https://api.github.com/repos/open-data/opengov/contents/config%2Fviews.view.pd_core_ati.yml?ref=62897d7c5f6d35fbf858632c273e0df199eff68a",
                    "patch": "@@ -787,7 +787,9 @@ display:\n       contexts:\n         - 'languages:language_interface'\n         - url.query_args\n-      tags: {  }\n+      tags:\n+        - 'config:search_api.index.pd_core_ati'\n+        - 'search_api_list:pd_core_ati'\n   block_1:\n     id: block_1\n     display_title: 'ATI Search'\n@@ -1256,14 +1258,14 @@ display:\n             suffix: ''\n             target: ''\n             nl2br: false\n-            max_length: 0\n+            max_length: 250\n             word_boundary: true\n             ellipsis: true\n             more_link: false\n             more_link_text: ''\n             more_link_path: ''\n             strip_tags: false\n-            trim: false\n+            trim: true\n             preserve_tags: ''\n             html: false\n           element_type: ''\n@@ -1309,14 +1311,14 @@ display:\n             suffix: ''\n             target: ''\n             nl2br: false\n-            max_length: 0\n+            max_length: 250\n             word_boundary: true\n             ellipsis: true\n             more_link: false\n             more_link_text: ''\n             more_link_path: ''\n             strip_tags: false\n-            trim: false\n+            trim: true\n             preserve_tags: ''\n             html: false\n           element_type: ''\n@@ -1663,7 +1665,9 @@ display:\n         - url.query_args\n         - 'url.query_args:sort_by'\n         - 'url.query_args:sort_order'\n-      tags: {  }\n+      tags:\n+        - 'config:search_api.index.pd_core_ati'\n+        - 'search_api_list:pd_core_ati'\n   block_2:\n     id: block_2\n     display_title: 'Latest ATI requests'\n@@ -2052,4 +2056,6 @@ display:\n       max-age: -1\n       contexts:\n         - 'languages:language_interface'\n-      tags: {  }\n+      tags:\n+        - 'config:search_api.index.pd_core_ati'\n+        - 'search_api_list:pd_core_ati'"
                }
            ]
        },
        "og": {
            "url": "https://api.github.com/repos/open-data/og/compare/2fe0995e986d0a8eeadf1275ba21d756e568e4c3...e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
            "html_url": "https://github.com/open-data/og/compare/2fe0995e986d0a8eeadf1275ba21d756e568e4c3...e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
            "permalink_url": "https://github.com/open-data/og/compare/open-data:2fe0995...open-data:e8ffb46",
            "diff_url": "https://github.com/open-data/og/compare/2fe0995e986d0a8eeadf1275ba21d756e568e4c3...e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d.diff",
            "patch_url": "https://github.com/open-data/og/compare/2fe0995e986d0a8eeadf1275ba21d756e568e4c3...e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d.patch",
            "base_commit": {
                "sha": "2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                "node_id": "C_kwDODLi6CdoAKDJmZTA5OTVlOTg2ZDBhOGVlYWRmMTI3NWJhMjFkNzU2ZTU2OGU0YzM",
                "commit": {
                    "author": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-13T17:53:18Z"
                    },
                    "committer": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-13T17:53:18Z"
                    },
                    "message": "Merge branch 'ati-comment'",
                    "tree": {
                        "sha": "412682d3ad40a4b663d1cce1fc42eee938d01814",
                        "url": "https://api.github.com/repos/open-data/og/git/trees/412682d3ad40a4b663d1cce1fc42eee938d01814"
                    },
                    "url": "https://api.github.com/repos/open-data/og/git/commits/2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/og/commits/2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                "html_url": "https://github.com/open-data/og/commit/2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                "comments_url": "https://api.github.com/repos/open-data/og/commits/2fe0995e986d0a8eeadf1275ba21d756e568e4c3/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "58c92c2943eacb9a21945a69f039fd12bf1262af",
                        "url": "https://api.github.com/repos/open-data/og/commits/58c92c2943eacb9a21945a69f039fd12bf1262af",
                        "html_url": "https://github.com/open-data/og/commit/58c92c2943eacb9a21945a69f039fd12bf1262af"
                    },
                    {
                        "sha": "b3ec3659465b89dfa5bce87cd3b944e22817ebd8",
                        "url": "https://api.github.com/repos/open-data/og/commits/b3ec3659465b89dfa5bce87cd3b944e22817ebd8",
                        "html_url": "https://github.com/open-data/og/commit/b3ec3659465b89dfa5bce87cd3b944e22817ebd8"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                "node_id": "C_kwDODLi6CdoAKDJmZTA5OTVlOTg2ZDBhOGVlYWRmMTI3NWJhMjFkNzU2ZTU2OGU0YzM",
                "commit": {
                    "author": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-13T17:53:18Z"
                    },
                    "committer": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-13T17:53:18Z"
                    },
                    "message": "Merge branch 'ati-comment'",
                    "tree": {
                        "sha": "412682d3ad40a4b663d1cce1fc42eee938d01814",
                        "url": "https://api.github.com/repos/open-data/og/git/trees/412682d3ad40a4b663d1cce1fc42eee938d01814"
                    },
                    "url": "https://api.github.com/repos/open-data/og/git/commits/2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/og/commits/2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                "html_url": "https://github.com/open-data/og/commit/2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                "comments_url": "https://api.github.com/repos/open-data/og/commits/2fe0995e986d0a8eeadf1275ba21d756e568e4c3/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "58c92c2943eacb9a21945a69f039fd12bf1262af",
                        "url": "https://api.github.com/repos/open-data/og/commits/58c92c2943eacb9a21945a69f039fd12bf1262af",
                        "html_url": "https://github.com/open-data/og/commit/58c92c2943eacb9a21945a69f039fd12bf1262af"
                    },
                    {
                        "sha": "b3ec3659465b89dfa5bce87cd3b944e22817ebd8",
                        "url": "https://api.github.com/repos/open-data/og/commits/b3ec3659465b89dfa5bce87cd3b944e22817ebd8",
                        "html_url": "https://github.com/open-data/og/commit/b3ec3659465b89dfa5bce87cd3b944e22817ebd8"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 4,
            "behind_by": 0,
            "total_commits": 4,
            "commits": [
                {
                    "sha": "383bf5fd2465253905d9cf469ec8189f5e7fcd8a",
                    "node_id": "C_kwDODLi6CdoAKDM4M2JmNWZkMjQ2NTI1MzkwNWQ5Y2Y0NjllYzgxODlmNWU3ZmNkOGE",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T20:08:03Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T20:08:03Z"
                        },
                        "message": "remove deprecated code for the feature suggested datasets",
                        "tree": {
                            "sha": "64fc4588c517167dbcc1ac9f536b5d7578884156",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/64fc4588c517167dbcc1ac9f536b5d7578884156"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/383bf5fd2465253905d9cf469ec8189f5e7fcd8a",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/383bf5fd2465253905d9cf469ec8189f5e7fcd8a",
                    "html_url": "https://github.com/open-data/og/commit/383bf5fd2465253905d9cf469ec8189f5e7fcd8a",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/383bf5fd2465253905d9cf469ec8189f5e7fcd8a/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "58c92c2943eacb9a21945a69f039fd12bf1262af",
                            "url": "https://api.github.com/repos/open-data/og/commits/58c92c2943eacb9a21945a69f039fd12bf1262af",
                            "html_url": "https://github.com/open-data/og/commit/58c92c2943eacb9a21945a69f039fd12bf1262af"
                        }
                    ]
                },
                {
                    "sha": "3a13d985a1f5ab2364e3169677298fdbfd882ae7",
                    "node_id": "C_kwDODLi6CdoAKDNhMTNkOTg1YTFmNWFiMjM2NGUzMTY5Njc3Mjk4ZmRiZmQ4ODJhZTc",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T20:14:09Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T20:14:09Z"
                        },
                        "message": "remove deprecated sd code from voting webform controller",
                        "tree": {
                            "sha": "7b2e7f801af2f145dfcdb993c65be406db0e4ad5",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/7b2e7f801af2f145dfcdb993c65be406db0e4ad5"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/3a13d985a1f5ab2364e3169677298fdbfd882ae7",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/3a13d985a1f5ab2364e3169677298fdbfd882ae7",
                    "html_url": "https://github.com/open-data/og/commit/3a13d985a1f5ab2364e3169677298fdbfd882ae7",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/3a13d985a1f5ab2364e3169677298fdbfd882ae7/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "383bf5fd2465253905d9cf469ec8189f5e7fcd8a",
                            "url": "https://api.github.com/repos/open-data/og/commits/383bf5fd2465253905d9cf469ec8189f5e7fcd8a",
                            "html_url": "https://github.com/open-data/og/commit/383bf5fd2465253905d9cf469ec8189f5e7fcd8a"
                        }
                    ]
                },
                {
                    "sha": "b450457f7021feaf5ef2abe0580286550add688d",
                    "node_id": "C_kwDODLi6CdoAKGI0NTA0NTdmNzAyMWZlYWY1ZWYyYWJlMDU4MDI4NjU1MGFkZDY4OGQ",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T14:21:00Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T14:21:00Z"
                        },
                        "message": "Merge branch 'remove-deprecated-code'",
                        "tree": {
                            "sha": "f777440594a6103298ee25dfa6135b7aeab450b7",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/f777440594a6103298ee25dfa6135b7aeab450b7"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/b450457f7021feaf5ef2abe0580286550add688d",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/b450457f7021feaf5ef2abe0580286550add688d",
                    "html_url": "https://github.com/open-data/og/commit/b450457f7021feaf5ef2abe0580286550add688d",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/b450457f7021feaf5ef2abe0580286550add688d/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                            "url": "https://api.github.com/repos/open-data/og/commits/2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                            "html_url": "https://github.com/open-data/og/commit/2fe0995e986d0a8eeadf1275ba21d756e568e4c3"
                        },
                        {
                            "sha": "3a13d985a1f5ab2364e3169677298fdbfd882ae7",
                            "url": "https://api.github.com/repos/open-data/og/commits/3a13d985a1f5ab2364e3169677298fdbfd882ae7",
                            "html_url": "https://github.com/open-data/og/commit/3a13d985a1f5ab2364e3169677298fdbfd882ae7"
                        }
                    ]
                },
                {
                    "sha": "e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "node_id": "C_kwDODLi6CdoAKGU4ZmZiNDYwN2QxZWI4NjFiZmY2OWRkNWRhN2JjNWJjYWI3MWU5NGQ",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T14:22:28Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T14:22:28Z"
                        },
                        "message": "add changelog for SD removal",
                        "tree": {
                            "sha": "246b83a9ebc566a456c37d766e49402609f55ff5",
                            "url": "https://api.github.com/repos/open-data/og/git/trees/246b83a9ebc566a456c37d766e49402609f55ff5"
                        },
                        "url": "https://api.github.com/repos/open-data/og/git/commits/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/og/commits/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "html_url": "https://github.com/open-data/og/commit/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "comments_url": "https://api.github.com/repos/open-data/og/commits/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "b450457f7021feaf5ef2abe0580286550add688d",
                            "url": "https://api.github.com/repos/open-data/og/commits/b450457f7021feaf5ef2abe0580286550add688d",
                            "html_url": "https://github.com/open-data/og/commit/b450457f7021feaf5ef2abe0580286550add688d"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "110a2eee54770e8acc982140fe0c4c49d73a88f0",
                    "filename": "changes/008.removal",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/og/blob/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/changes%2F008.removal",
                    "raw_url": "https://github.com/open-data/og/raw/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/changes%2F008.removal",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/changes%2F008.removal?ref=e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "patch": "@@ -0,0 +1 @@\n+Remove deprecated code for the 'Suggested Datasets' feature."
                },
                {
                    "sha": "7d5ef0a51b75308f3690cba8fb3c2774bb800933",
                    "filename": "modules/custom/alter_field/alter_field.module",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 283,
                    "changes": 283,
                    "blob_url": "https://github.com/open-data/og/blob/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Falter_field%2Falter_field.module",
                    "raw_url": "https://github.com/open-data/og/raw/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Falter_field%2Falter_field.module",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/modules%2Fcustom%2Falter_field%2Falter_field.module?ref=e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "patch": "@@ -63,286 +63,3 @@ function read_options_from_json($field_name) {\n \n   return $options;\n }\n-\n-/**\n- * Provide dynamic allowed values for the status field of Suggested Dataset\n- */\n-function get_suggested_dataset_status() {\n-  $langcode = \\Drupal::languageManager()->getCurrentLanguage()->getId();\n-  if ($langcode == 'fr') {\n-    $options = [\n-      'department_contacted' => 'Envoyée au détenteur des données – En attente d’une réponse',\n-      'under_review' => 'Réponse reçue – Le détenteur des données enquête',\n-      'in_progress' => 'Le détenteur des données s’affaire à la publication du jeu de données',\n-      'released' => 'Jeu de données publié',\n-      'not_collected' => 'Jeu de données non détenu',\n-    ];\n-  }\n-  else {\n-    $options = [\n-      'department_contacted' => 'Referred to data-holder - Awaiting Response',\n-      'under_review' => 'Response received – data-holder investigating',\n-      'in_progress' => 'Data-holder working on releasing dataset',\n-      'released' => 'Dataset Published',\n-      'not_collected' => 'Dataset not held',\n-    ];\n-  }\n-\n-  return $options;\n-}\n-\n-/**\n- * Provide dynamic allowed values for the subject field of Suggested Dataset\n- */\n-function get_dataset_subject() {\n-  return read_options_from_json('subject');\n-}\n-\n-/**\n- * Migrate values for new fields of Suggested Dataset\n- * New fields include:\n- * Allowed list for field_organization\n- * Allowed list for field_sd_status\n- * field_date_published for dataset release date\n- */\n-function alter_field_update_8001() {\n-  // 1. gather organizations\n-  $filename = 'sites/default/files/od-do-orgs.jsonl';\n-  $contents = file($filename);\n-  $organization_en = [];\n-  $organization_fr = [];\n-\n-  foreach ($contents as $line)\n-  {\n-    $data = json_decode($line);\n-    $title = explode('|', $data->title);\n-    if (array_key_exists(0, $title)) { $organization_en[trim($title[0])] = trim($title[0]); }\n-    if (array_key_exists(1, $title)) { $organization_fr[trim($title[1])] = trim($title[1]); }\n-  }\n-\n-  // 2. gather status\n-  $status_en = [\n-    'department_contacted' => 'Department Contacted',\n-    'under_review' => 'Under Review',\n-    'in_progress' => 'In-progress',\n-    'released' => 'Released',\n-    'not_collected' => 'Not Collected by the Government of Canada',\n-  ];\n-\n-  $status_fr = [\n-    'department_contacted' => 'Ministère contacté',\n-    'under_review' => 'Sous examen',\n-    'in_progress' => 'En cours',\n-    'released' => 'Publié',\n-    'not_collected' => 'Non recueillies par le gouvernement du Canada',\n-  ];\n-\n-  // 3. fetch the file with clean data\n-  $module_handler = \\Drupal::service('module_handler');\n-  $module_path = $module_handler->getModule(basename(__FILE__, '.module'))->getPath();\n-  $files = $this->fileSystem->scanDirectory($module_path, '/.csv$/');\n-\n-  foreach($files as $file) {\n-    $csv = fopen($file->uri, 'r');\n-    $fields = fgetcsv($csv);\n-    $key_nid = array_search('ID', $fields);\n-    $key_org = array_search('Organization', $fields);\n-    $key_status = array_search('Status', $fields);\n-    $key_released = array_search('Date Dataset was Released', $fields);\n-    $key_statuslink = array_search('StatusLink', $fields);\n-    $key_langcode = array_search('Language', $fields);\n-\n-    while (($row = fgetcsv($csv, 1024, \",\")) !== FALSE) {\n-      $row = array_map(\"utf8_encode\", $row);\n-      if ($row[$key_nid]) {\n-        try {\n-          $node = \\Drupal::entityTypeManager()->getStorage('node')->load($row[$key_nid]);\n-          if ($node && $node->bundle() == 'suggested_dataset') {\n-            $organization = $row[$key_langcode] == 'English' ? $organization_en : $organization_fr;\n-            $status = $row[$key_langcode] == 'English' ? $status_en : $status_fr;\n-            if ($row[$key_langcode] != 'English') {\n-              $node = $node->getTranslation('fr');\n-            }\n-\n-            // check if valid organization name\n-            if (array_search($row[$key_org], $organization) == FALSE) {\n-              \\Drupal::logger('migration')->error($row[$key_langcode] . ' - ' . $row[$key_nid] . ' - Invalid organization: ' . $row[$key_org]);\n-            } else {\n-              $node->set('field_organization', $row[$key_org]);\n-            }\n-            // check if valid status\n-            $idx = array_search($row[$key_status], $status);\n-            if ($idx === FALSE) {\n-              \\Drupal::logger('migration')->error($row[$key_langcode] . ' - ' . $row[$key_nid] . ' - Invalid status: ' . $row[$key_status]);\n-            } else {\n-              $node->set('field_sd_status', $idx);\n-              if ($idx == 'released' && $row[$key_released]) {\n-                // check if valid released date\n-                if (preg_match(\"/^[0-9]{4}\\/(0[1-9]|1[0-2])\\/(0[1-9]|[1-2][0-9]|3[0-1])$/\", $row[$key_released])) { // YYYY/MM/DD format\n-                  $released_date = DateTime::createFromFormat('Y/m/d', $row[$key_released])->format('Y-m-d');\n-                } else if (preg_match('/^[0-9]{4}\\/(0[1-9]|1[0-2])$/', $row[$key_released])) { // YYYY/MM format\n-                  $released_date = DateTime::createFromFormat('Y/m', $row[$key_released])->format('Y-m-01');\n-                } else if (preg_match('/^[0-9]{4}$/', $row[$key_released])) { // YYYY format\n-                  $released_date = DateTime::createFromFormat('Y', $row[$key_released])->format('Y-01-01');\n-                }\n-                if ($released_date === FALSE) {\n-                  \\Drupal::logger('migration')->error($row[$key_langcode] . ' - ' . $row[$key_nid] . ' - Invalid date: ' . $row[$key_released]);\n-                } else {\n-                  $node->set('field_date_published', $released_date);\n-                }\n-                // check if valid status link\n-                if ($row[$key_statuslink] && filter_var($row[$key_statuslink], FILTER_VALIDATE_URL) === FALSE) {\n-                  \\Drupal::logger('migration')->error($row[$key_statuslink] . ' - ' . $row[$key_nid] . ' - Invalid Status Link: ' . $row[$key_statuslink]);\n-                } else {\n-                  $node->set('field_status_link', $row[$key_statuslink]);\n-                }\n-              }\n-            }\n-            $node->save();\n-          } else {\n-            // node not found\n-            \\Drupal::logger('migration')->error($row[$key_langcode] . $row[$key_nid] . ' node not found');\n-          }\n-        } catch (\\Exception $e) {\n-          \\Drupal::logger('migration')->error($e->getMessage());\n-        }\n-      }\n-    }\n-\n-    fclose($csv);\n-  }\n-}\n-\n-/**\n- * Update field_organization for content type Suggested Dataset\n- * change field value to field code\n- * for example changes Treasury Board to tbs-sct\n- */\n-function alter_field_update_8005()\n-{\n-  // find allowed values for field_organization\n-  $entityManager = \\Drupal::service('entity_field.manager');\n-  $fields = $entityManager->getFieldDefinitions('node', 'suggested_dataset');\n-  $field_org = $fields['field_organization']->getFieldStorageDefinition();\n-  $options = options_allowed_values($field_org);\n-  $options = array_map('trim', $options);\n-\n-  $nids = \\Drupal::entityQuery('node')\n-    ->condition('type', 'suggested_dataset')\n-    ->condition('status', 1)\n-    ->execute();\n-\n-  if ($nids) {\n-    $nodes = Node::loadMultiple($nids);\n-\n-    foreach ($nodes as $node) {\n-      // replace existing value with matching allowed value\n-      if (!$node->get('field_organization')->getValue()) {\n-        \\Drupal::logger('migration')->error('No organization found for node ' . $node->id());\n-      }\n-\n-      $existing_value = $node->get('field_organization')->getValue()[0]['value'];\n-      if (!array_key_exists($existing_value, $options)) {\n-        $new_value = array_search($existing_value, $options);\n-        if (!$new_value) {\n-          \\Drupal::logger('migration')->error('Invalid organization \"' . $existing_value . '\" found for node ' . $node->id());\n-        }\n-\n-        $node->set('field_organization', $new_value);\n-        if ($node->hasTranslation('fr')) {\n-          $node_fr = $node->getTranslation('fr');\n-          $node_fr->set('field_organization', $new_value);\n-          dump($new_value);\n-          $node_fr->save();\n-        }\n-        $node->save();\n-      }\n-    }\n-  }\n-}\n-\n-/**\n- * Add field_dataset_subject for content type Suggested Dataset\n- * add subject for existing suggested dataset nodes\n- */\n-function alter_field_update_8006()\n-{\n-  // find allowed values for field_dataset_subject\n-  $entityManager = \\Drupal::service('entity_field.manager');\n-  $fields = $entityManager->getFieldDefinitions('node', 'suggested_dataset');\n-  $field_subject = $fields['field_dataset_subject']->getFieldStorageDefinition();\n-  $options = options_allowed_values($field_subject);\n-  $options = array_map('trim', $options);\n-\n-  $module_handler = \\Drupal::service('module_handler');\n-  $module_path = $module_handler->getModule(basename(__FILE__, '.module'))->getPath();\n-  $files = $this->fileSystem->scanDirectory($module_path, '/.csv$/');\n-\n-  foreach ($files as $file) {\n-    $csv = fopen($file->uri, 'r');\n-    $fields = fgetcsv($csv);\n-    $key_nid = array_search('ID', $fields);\n-    $key_subject = array_search('Subject', $fields);\n-    $key_langcode = array_search('Language', $fields);\n-\n-    while (($row = fgetcsv($csv, 1024, \",\")) !== FALSE) {\n-      $row = array_map(\"utf8_encode\", $row);\n-      if ($row[$key_nid] && $row[$key_langcode] == 'English') {\n-        $node = \\Drupal::entityTypeManager()->getStorage('node')->load($row[$key_nid]);\n-        if ($node && $node->bundle() == 'suggested_dataset') {\n-          $subject = $row[$key_subject];\n-          if (array_key_exists($subject, $options)) {\n-            $node->set('field_dataset_subject', $subject);\n-            $node->save();\n-          } else\n-            \\Drupal::logger('migration')->error('Invalid subject ' . $subject . ' for node ' . $node->id());\n-        }\n-      }\n-    }\n-\n-    fclose($csv);\n-  }\n-}\n-\n-/**\n- * Set default values for Suggested Dataset fields\n- * set default status for any missing status for field_sd_status\n- * set default keywords for any missing keywords for field_dataset_keywords\n- */\n-function alter_field_update_8007()\n-{\n-  // find default value for fields\n-  $entityManager = \\Drupal::service('entity_field.manager');\n-  $fields = $entityManager->getFieldDefinitions('node', 'suggested_dataset');\n-  $default_status = $fields['field_sd_status']->getDefaultValueLiteral()[0]['value'];\n-  $default_keywords_en = $fields['field_dataset_keywords']->getDefaultValueLiteral()[0]['value'];\n-  $default_keywords_fr = 'Jeu de données';\n-\n-  $nids = \\Drupal::entityQuery('node')\n-    ->condition('type', 'suggested_dataset')\n-    ->execute();\n-\n-  if ($nids) {\n-    $nodes = Node::loadMultiple($nids);\n-    foreach ($nodes as $node) {\n-      // set default if no value exists for field_sd_status\n-      if (!$node->get('field_sd_status')->getValue())\n-        $node->set('field_sd_status', $default_status);\n-\n-      // set default if no value exists for field_dataset_keywords\n-      if (!$node->get('field_dataset_keywords')->getValue())\n-        $node->set('field_dataset_keywords', $default_keywords_en);\n-\n-      $node->save();\n-\n-      // set default if no value exists for field_dataset_keywords for node translation\n-      if ($node->hasTranslation('fr')) {\n-        $node_fr = $node->getTranslation('fr');\n-        if (!$node_fr->get('field_dataset_keywords')->getValue()) {\n-          $node_fr->set('field_dataset_keywords', $default_keywords_fr);\n-          $node_fr->save();\n-        }\n-      }\n-    }\n-  }\n-}"
                },
                {
                    "sha": "06ce4721c688ce52baef046d109002b6404242a5",
                    "filename": "modules/custom/alter_view/alter_view.module",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 10,
                    "changes": 10,
                    "blob_url": "https://github.com/open-data/og/blob/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Falter_view%2Falter_view.module",
                    "raw_url": "https://github.com/open-data/og/raw/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Falter_view%2Falter_view.module",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/modules%2Fcustom%2Falter_view%2Falter_view.module?ref=e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "patch": "@@ -50,16 +50,6 @@ function alter_view_views_pre_render(ViewExecutable $view) {\n       }\n     }\n   }\n-  elseif ($view->id() === 'suggested_dataset_moderation' && $view->current_display === 'untranslated') {\n-    $position = 0;\n-    foreach ($view->result as $row) {\n-      $node = Node::load($row->nid);\n-      if ($node->hasTranslation('en') && $node->hasTranslation('fr')) {\n-        unset($view->result[$position]);\n-      }\n-      $position++;\n-    }\n-  }\n }\n \n /**"
                },
                {
                    "sha": "261a5621581455862d58730ec4b783385f9f42e6",
                    "filename": "modules/custom/og_ext_cron/src/Utils/CronFunctions.php",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 178,
                    "changes": 178,
                    "blob_url": "https://github.com/open-data/og/blob/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Fog_ext_cron%2Fsrc%2FUtils%2FCronFunctions.php",
                    "raw_url": "https://github.com/open-data/og/raw/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Fog_ext_cron%2Fsrc%2FUtils%2FCronFunctions.php",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/modules%2Fcustom%2Fog_ext_cron%2Fsrc%2FUtils%2FCronFunctions.php?ref=e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "patch": "@@ -65,184 +65,6 @@ private function _getNodeFieldValue(&$_node, $_field, $_stripTags = false, $_def\n \n     }\n \n-    /**\n-     * @method exportSuggestedDatasets\n-     * @return void\n-     * \n-     * Export all published comments into a csv file\n-     */\n-    public function exportSuggestedDatasets()\n-    {\n-        // fetch suggested dataset nodes\n-        $nids = \\Drupal::entityQuery('node')\n-            ->condition('status', 1)\n-            ->condition('type', 'suggested_dataset')\n-            ->execute();\n-\n-        $export_data = [];\n-\n-        // if dataset suggestions exist\n-        if ($nids) {\n-            $nodes = Node::loadMultiple($nids);\n-\n-            foreach ($nodes as $node) {\n-                // get translation of node\n-                $node_en = $node->hasTranslation('en')\n-                  ? $node->getTranslation('en')\n-                  : $node;\n-                $node_fr = $node->hasTranslation('fr')\n-                  ? $node->getTranslation('fr')\n-                  : null;\n-\n-                if ($node_en && $node_fr) {\n-                    // set default values\n-                    $subject = $node->get('field_dataset_subject')->getValue()\n-                    ? $this->_implodeAllValues(\n-                        $node\n-                            ->get('field_dataset_subject')\n-                            ->getValue()\n-                    )\n-                    : 'information_and_communications';\n-                    $keywords_en = $node_en\n-                        ->get('field_dataset_keywords')\n-                        ->getValue()\n-                    ? $this->_implodeAllValues(\n-                        $node_en\n-                            ->get('field_dataset_keywords')\n-                            ->getValue()\n-                    )\n-                    : 'dataset';\n-                    $keywords_fr = $node_fr\n-                        ->get('field_dataset_keywords')\n-                        ->getValue()\n-                    ? $this->_implodeAllValues(\n-                        $node_fr\n-                            ->get('field_dataset_keywords')\n-                            ->getValue()\n-                    )\n-                    : 'Jeu de données';\n-                    $status = $this->_getNodeFieldValue(\n-                        $node,\n-                        'field_sd_status',\n-                        false,\n-                        'department_contacted'\n-                    );\n-                    $organization = $this->_getNodeFieldValue(\n-                        $node,\n-                        'field_organization'\n-                    );\n-                    $description_en = $this->_getNodeFieldValue(\n-                        $node_en,\n-                        'body',\n-                        true\n-                    );\n-                    $description_fr = $this->_getNodeFieldValue(\n-                        $node_fr,\n-                        'body',\n-                        true\n-                    );\n-                    $status_link = $this->_getNodeFieldValue(\n-                        $node,\n-                        'field_status_link'\n-                    );\n-                    $date_published = $this->_getNodeFieldValue(\n-                        $node,\n-                        'field_date_published'\n-                    );\n-                    $votes = $this->_getNodeFieldValue(\n-                        $node,\n-                        'field_vote_up_down'\n-                    );\n-                    $feedback_en = $this->_getNodeFieldValue(\n-                        $node_en,\n-                        'field_feedback'\n-                    );\n-                    $feedback_fr = $this->_getNodeFieldValue(\n-                        $node_fr,\n-                        'field_feedback'\n-                    );\n-                    $data = [\n-                    'uuid' => $node->uuid(),\n-                    'suggestion_id' => $node->id(),\n-                    'date_created' => date('Y-m-d', $node->getCreatedTime()),\n-                    'title_en' => $node_en->getTitle(),\n-                    'title_fr' => $node_fr->getTitle(),\n-                    'organization' => $organization,\n-                    'description_en' => $description_en,\n-                    'description_fr' => $description_fr,\n-                    'dataset_suggestion_status' => $status,\n-                    'dataset_suggestion_status_link' => $status_link,\n-                    'dataset_released_date' => $date_published,\n-                    'votes' => $votes,\n-                    'subject' => $subject,\n-                    'keywords_en' => $keywords_en,\n-                    'keywords_fr' => $keywords_fr,\n-                    'additional_comments_and_feedback_en' =>  $feedback_en,\n-                    'additional_comments_and_feedback_fr' =>  $feedback_fr,\n-                    ];\n-\n-                    // get webform submission for suggested datasets\n-                    if (! is_null(\n-                        $wid = $this->_getNodeFieldValue(\n-                            $node,\n-                            'field_webform_submission_id'\n-                        )\n-                    )\n-                    ) {\n-                        if ($webform_submission = WebformSubmission::load($wid)) {\n-                              $webform_data = [\n-                            'webform_submission_id' => $wid,\n-                            'reason' => $webform_submission\n-                              ->getElementData('reason'),\n-                            'email' => $webform_submission\n-                              ->getElementData('e_mail_address'),\n-                              ];\n-                              $data = array_merge($data, $webform_data);\n-                        }\n-                    }\n-                    $export_data[] = $data;\n-                }\n-\n-                $node_en = null;\n-                $node_fr = null;\n-            }\n-\n-            $nodes = null;\n-        }\n-\n-        $header = [\n-        'uuid',\n-        'suggestion_id',\n-        'date_created',\n-        'title_en',\n-        'title_fr',\n-        'organization',\n-        'description_en',\n-        'description_fr',\n-        'dataset_suggestion_status',\n-        'dataset_suggestion_status_link',\n-        'dataset_released_date',\n-        'votes',\n-        'subject',\n-        'keywords_en',\n-        'keywords_fr',\n-        'additional_comments_and_feedback_en',\n-        'additional_comments_and_feedback_fr',\n-        'webform_submission_id',\n-        'reason',\n-        'email',\n-        ];\n-\n-        // export as csv\n-        $this->_writeToCsv('suggested-dataset.csv', $export_data, $header, false);\n-\n-        // log results\n-        \\Drupal::logger('cron')->notice('Suggested datasets exported');\n-\n-        $nids = null;\n-        $export_data = null;\n-    }\n-\n     /**\n      * @method exportCumulativeDatasetRatings\n      * @return void"
                },
                {
                    "sha": "c460c8731aa07c650b5a57c197c1c1e6ab93e725",
                    "filename": "modules/custom/og_ext_webform/src/Plugin/WebformHandler/SuggestedDatasetFormHandler.php",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 54,
                    "changes": 54,
                    "blob_url": "https://github.com/open-data/og/blob/2fe0995e986d0a8eeadf1275ba21d756e568e4c3/modules%2Fcustom%2Fog_ext_webform%2Fsrc%2FPlugin%2FWebformHandler%2FSuggestedDatasetFormHandler.php",
                    "raw_url": "https://github.com/open-data/og/raw/2fe0995e986d0a8eeadf1275ba21d756e568e4c3/modules%2Fcustom%2Fog_ext_webform%2Fsrc%2FPlugin%2FWebformHandler%2FSuggestedDatasetFormHandler.php",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/modules%2Fcustom%2Fog_ext_webform%2Fsrc%2FPlugin%2FWebformHandler%2FSuggestedDatasetFormHandler.php?ref=2fe0995e986d0a8eeadf1275ba21d756e568e4c3",
                    "patch": "@@ -1,54 +0,0 @@\n-<?php\n-\n-namespace Drupal\\og_ext_webform\\Plugin\\WebformHandler;\n-\n-use Drupal\\node\\Entity\\Node;\n-use Drupal\\webform\\Plugin\\WebformHandlerBase;\n-use Drupal\\webform\\webformSubmissionInterface;\n-\n-/**\n- * Form submission handler.\n- *\n- * @WebformHandler(\n- *   id = \"suggested_dataset_form_handler\",\n- *   label = @Translation(\"Suggested Dataset Form Handler\"),\n- *   category = @Translation(\"Form Handler\"),\n- *   description = @Translation(\"Create a suggested dataset node from webform submission values\"),\n- *   cardinality = \\Drupal\\webform\\Plugin\\WebformHandlerInterface::CARDINALITY_SINGLE,\n- *   results = \\Drupal\\webform\\Plugin\\WebformHandlerInterface::RESULTS_PROCESSED,\n- * )\n- */\n-class SuggestedDatasetFormHandler extends WebformHandlerBase\n-{\n-\n-    public function postSave(WebformSubmissionInterface $webform_submission, $update = true)\n-    {\n-        // create new suggested dataset node for the submission\n-        $node = Node::create(\n-            array(\n-            'type' => 'suggested_dataset',\n-            'title' => $webform_submission\n-              ->getElementData('title_of_dataset'),\n-            'field_organization' => $webform_submission\n-              ->getElementData('department'),\n-            'body' => $webform_submission\n-              ->getElementData('description_dataset'),\n-            'field_dataset_subject' => $webform_submission\n-              ->getElementData('dataset_subject'),\n-            'field_dataset_keywords' => $webform_submission\n-              ->getElementData('dataset_keywords'),\n-            'field_feedback' => $webform_submission\n-              ->getElementData('additional_comments_and_feedback'),\n-            'field_webform_submission_id'=> $webform_submission\n-              ->id(),\n-            'langcode' => \\Drupal::languageManager()\n-                ->getCurrentLanguage()\n-                ->getId(),\n-            'status' => 0,\n-            )\n-        );\n-\n-        $node->save();\n-    }\n-\n-}"
                },
                {
                    "sha": "36cdf40742834ccba76a6d1a00ef6fec6b0e0ce0",
                    "filename": "modules/custom/voting_webform/src/Controller/VotingWebformController.php",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 3,
                    "changes": 4,
                    "blob_url": "https://github.com/open-data/og/blob/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Fvoting_webform%2Fsrc%2FController%2FVotingWebformController.php",
                    "raw_url": "https://github.com/open-data/og/raw/e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d/modules%2Fcustom%2Fvoting_webform%2Fsrc%2FController%2FVotingWebformController.php",
                    "contents_url": "https://api.github.com/repos/open-data/og/contents/modules%2Fcustom%2Fvoting_webform%2Fsrc%2FController%2FVotingWebformController.php?ref=e8ffb4607d1eb861bff69dd5da7bc5bcab71e94d",
                    "patch": "@@ -122,9 +122,7 @@ public function validate(Request $request, $id, $type)\n               ->warning($type. ': No uuid given for vote');\n             return false;\n \n-        } elseif ($type != 'suggest-dataset'\n-            && ($id != $referer_id || !in_array(strlen($id), [ 36, 32]))\n-        ) {\n+        } elseif ($id != $referer_id || !in_array(strlen($id), [ 36, 32])) {\n             // condition 4 - invalid uuid\n             \\Drupal::logger('vote')\n               ->warning($type . ': Invalid UUID');"
                }
            ]
        },
        "gcweb_bootstrap": {
            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/compare/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132...595c588c6726bafec2254a7efbb6f6711e759909",
            "html_url": "https://github.com/open-data/gcweb_bootstrap/compare/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132...595c588c6726bafec2254a7efbb6f6711e759909",
            "permalink_url": "https://github.com/open-data/gcweb_bootstrap/compare/open-data:0f376ac...open-data:595c588",
            "diff_url": "https://github.com/open-data/gcweb_bootstrap/compare/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132...595c588c6726bafec2254a7efbb6f6711e759909.diff",
            "patch_url": "https://github.com/open-data/gcweb_bootstrap/compare/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132...595c588c6726bafec2254a7efbb6f6711e759909.patch",
            "base_commit": {
                "sha": "0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                "node_id": "C_kwDOChTdWdoAKDBmMzc2YWNlOGZkNTlkNGJmN2Y5YjJkODhlMzNiZGU2ZWYwYTQxMzI",
                "commit": {
                    "author": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-07T18:32:48Z"
                    },
                    "committer": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-07T18:32:48Z"
                    },
                    "message": "remove citation js from libraries",
                    "tree": {
                        "sha": "78ea1f6173e03c38aa48fc3cfc966d1af94602f0",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/78ea1f6173e03c38aa48fc3cfc966d1af94602f0"
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "afa537aa7064c79b3589c3aac84b47bd63541fd3",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/afa537aa7064c79b3589c3aac84b47bd63541fd3",
                        "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/afa537aa7064c79b3589c3aac84b47bd63541fd3"
                    }
                ]
            },
            "merge_base_commit": {
                "sha": "0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                "node_id": "C_kwDOChTdWdoAKDBmMzc2YWNlOGZkNTlkNGJmN2Y5YjJkODhlMzNiZGU2ZWYwYTQxMzI",
                "commit": {
                    "author": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-07T18:32:48Z"
                    },
                    "committer": {
                        "name": "RabiaSajjad",
                        "email": "rabiasajjad.dev@gmail.com",
                        "date": "2025-01-07T18:32:48Z"
                    },
                    "message": "remove citation js from libraries",
                    "tree": {
                        "sha": "78ea1f6173e03c38aa48fc3cfc966d1af94602f0",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/78ea1f6173e03c38aa48fc3cfc966d1af94602f0"
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "comment_count": 0,
                    "verification": {
                        "verified": false,
                        "reason": "unsigned",
                        "signature": null,
                        "payload": null,
                        "verified_at": null
                    }
                },
                "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/comments",
                "author": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "committer": {
                    "login": "RabiaSajjad",
                    "id": 25936398,
                    "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                    "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/RabiaSajjad",
                    "html_url": "https://github.com/RabiaSajjad",
                    "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                    "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                    "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                    "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                    "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                    "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                    "type": "User",
                    "user_view_type": "public",
                    "site_admin": false
                },
                "parents": [
                    {
                        "sha": "afa537aa7064c79b3589c3aac84b47bd63541fd3",
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/afa537aa7064c79b3589c3aac84b47bd63541fd3",
                        "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/afa537aa7064c79b3589c3aac84b47bd63541fd3"
                    }
                ]
            },
            "status": "ahead",
            "ahead_by": 3,
            "behind_by": 0,
            "total_commits": 3,
            "commits": [
                {
                    "sha": "5d42196e10dd95080fc12ea66f45c056e09e8458",
                    "node_id": "C_kwDOChTdWdoAKDVkNDIxOTZlMTBkZDk1MDgwZmMxMmVhNjZmNDVjMDU2ZTA5ZTg0NTg",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-07T19:53:36Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-07T19:53:36Z"
                        },
                        "message": "remove code for the deprecated citation block",
                        "tree": {
                            "sha": "853326bbb21d55dcfd38523a4c4a1b770b630d56",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/853326bbb21d55dcfd38523a4c4a1b770b630d56"
                        },
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/5d42196e10dd95080fc12ea66f45c056e09e8458",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/5d42196e10dd95080fc12ea66f45c056e09e8458",
                    "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/5d42196e10dd95080fc12ea66f45c056e09e8458",
                    "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/5d42196e10dd95080fc12ea66f45c056e09e8458/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                            "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132"
                        }
                    ]
                },
                {
                    "sha": "49db5b1c1b3c620f9667b80330561a33e9cc1cb4",
                    "node_id": "C_kwDOChTdWdoAKDQ5ZGI1YjFjMWIzYzYyMGY5NjY3YjgwMzMwNTYxYTMzZTljYzFjYjQ",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T20:09:09Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-22T20:09:09Z"
                        },
                        "message": "remove deprecated code for the feature suggested datasets",
                        "tree": {
                            "sha": "a517a3339e410e23515b2fc2ad441bf1886d27fc",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/a517a3339e410e23515b2fc2ad441bf1886d27fc"
                        },
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/49db5b1c1b3c620f9667b80330561a33e9cc1cb4",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/49db5b1c1b3c620f9667b80330561a33e9cc1cb4",
                    "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/49db5b1c1b3c620f9667b80330561a33e9cc1cb4",
                    "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/49db5b1c1b3c620f9667b80330561a33e9cc1cb4/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "5d42196e10dd95080fc12ea66f45c056e09e8458",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/5d42196e10dd95080fc12ea66f45c056e09e8458",
                            "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/5d42196e10dd95080fc12ea66f45c056e09e8458"
                        }
                    ]
                },
                {
                    "sha": "595c588c6726bafec2254a7efbb6f6711e759909",
                    "node_id": "C_kwDOChTdWdoAKDU5NWM1ODhjNjcyNmJhZmVjMjI1NGE3ZWZiYjZmNjcxMWU3NTk5MDk",
                    "commit": {
                        "author": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T14:10:26Z"
                        },
                        "committer": {
                            "name": "RabiaSajjad",
                            "email": "rabiasajjad.dev@gmail.com",
                            "date": "2025-01-29T14:10:26Z"
                        },
                        "message": "add changelog for SD removal",
                        "tree": {
                            "sha": "c1da66d993e7f8bdaee492302d19c62d34542bf7",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/trees/c1da66d993e7f8bdaee492302d19c62d34542bf7"
                        },
                        "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/git/commits/595c588c6726bafec2254a7efbb6f6711e759909",
                        "comment_count": 0,
                        "verification": {
                            "verified": false,
                            "reason": "unsigned",
                            "signature": null,
                            "payload": null,
                            "verified_at": null
                        }
                    },
                    "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/595c588c6726bafec2254a7efbb6f6711e759909",
                    "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/595c588c6726bafec2254a7efbb6f6711e759909",
                    "comments_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/595c588c6726bafec2254a7efbb6f6711e759909/comments",
                    "author": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "committer": {
                        "login": "RabiaSajjad",
                        "id": 25936398,
                        "node_id": "MDQ6VXNlcjI1OTM2Mzk4",
                        "avatar_url": "https://avatars.githubusercontent.com/u/25936398?v=4",
                        "gravatar_id": "",
                        "url": "https://api.github.com/users/RabiaSajjad",
                        "html_url": "https://github.com/RabiaSajjad",
                        "followers_url": "https://api.github.com/users/RabiaSajjad/followers",
                        "following_url": "https://api.github.com/users/RabiaSajjad/following{/other_user}",
                        "gists_url": "https://api.github.com/users/RabiaSajjad/gists{/gist_id}",
                        "starred_url": "https://api.github.com/users/RabiaSajjad/starred{/owner}{/repo}",
                        "subscriptions_url": "https://api.github.com/users/RabiaSajjad/subscriptions",
                        "organizations_url": "https://api.github.com/users/RabiaSajjad/orgs",
                        "repos_url": "https://api.github.com/users/RabiaSajjad/repos",
                        "events_url": "https://api.github.com/users/RabiaSajjad/events{/privacy}",
                        "received_events_url": "https://api.github.com/users/RabiaSajjad/received_events",
                        "type": "User",
                        "user_view_type": "public",
                        "site_admin": false
                    },
                    "parents": [
                        {
                            "sha": "49db5b1c1b3c620f9667b80330561a33e9cc1cb4",
                            "url": "https://api.github.com/repos/open-data/gcweb_bootstrap/commits/49db5b1c1b3c620f9667b80330561a33e9cc1cb4",
                            "html_url": "https://github.com/open-data/gcweb_bootstrap/commit/49db5b1c1b3c620f9667b80330561a33e9cc1cb4"
                        }
                    ]
                }
            ],
            "files": [
                {
                    "sha": "110a2eee54770e8acc982140fe0c4c49d73a88f0",
                    "filename": "changes/005.removal",
                    "status": "added",
                    "additions": 1,
                    "deletions": 0,
                    "changes": 1,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/595c588c6726bafec2254a7efbb6f6711e759909/changes%2F005.removal",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/595c588c6726bafec2254a7efbb6f6711e759909/changes%2F005.removal",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/changes%2F005.removal?ref=595c588c6726bafec2254a7efbb6f6711e759909",
                    "patch": "@@ -0,0 +1 @@\n+Remove deprecated code for the 'Suggested Datasets' feature."
                },
                {
                    "sha": "8a951224cc6b4ace5a08895d4901da761a57bb79",
                    "filename": "css/style.css",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 66,
                    "changes": 66,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/595c588c6726bafec2254a7efbb6f6711e759909/css%2Fstyle.css",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/595c588c6726bafec2254a7efbb6f6711e759909/css%2Fstyle.css",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/css%2Fstyle.css?ref=595c588c6726bafec2254a7efbb6f6711e759909",
                    "patch": "@@ -1,69 +1,3 @@\n-/*citation*/\n-.wb-overlay.open.wb-popup-mid{\n-  height: 450px;\n-  width: 520px;\n-  overflow: auto;\n-}\n-.modal-header{\n-  text-align: center;\n-}\n-.modal-body{\n-  font-size: small;\n-}\n-#selectableAPA, #selectableMLA{\n-  max-width:400px;\n-  width: auto;\n-  font-size: 15px;\n-  color: black;\n-  line-height: 20px;\n-}\n-.modal-body th{\n-  width: 65px;\n-  text-align: right;\n-  font-weight: normal;\n-  color: #777;\n-  padding-right: 16px;\n-  white-space: nowrap;\n-  vertical-align: top;\n-  overflow-x: hidden;\n-}\n-.modal-body tr:hover{\n-  background-color: #f2f2f2;\n-  overflow-y: auto;\n-  box-sizing: border-box;\n-  padding: 24px 41px 0 41px;\n-}\n-.modal-body table{\n-  border-collapse:separate;\n-  border-spacing:0 8px;\n-}\n-.reportLink{\n-  font-size: small;\n-  text-align: center;\n-  margin-left: 15px;\n-}\n-.clip-citation{\n-  width: 25px;\n-  height: 32px;\n-  background-color: #fff;\n-  background-image: url(\"../images/Octicons-clippy.svg\");\n-  background-size: 25px 30px;\n-  background-repeat:no-repeat;\n-  border-style: solid;\n-  border-radius: 5px;\n-  border-color: #fff;\n-}\n-.clip-citation:hover{\n-  background-color: #b3d9ff;\n-  border-color: #b3d9ff;\n-  border-style: solid;\n-  border-width: 2px;\n-  border-radius: 5px;\n-}\n-.copyAlert{\n-  font-size: small;\n-}\n-\n /* comments */\n .indented {\n   border-left: 5px solid #eaebed;"
                },
                {
                    "sha": "2b7610efe9e45d2eb16c2a588b423f54a2091115",
                    "filename": "css/style.min.css",
                    "status": "modified",
                    "additions": 1,
                    "deletions": 1,
                    "changes": 2,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/595c588c6726bafec2254a7efbb6f6711e759909/css%2Fstyle.min.css",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/595c588c6726bafec2254a7efbb6f6711e759909/css%2Fstyle.min.css",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/css%2Fstyle.min.css?ref=595c588c6726bafec2254a7efbb6f6711e759909",
                    "patch": "@@ -1 +1 @@\n-.copyAlert,.modal-body,.reportLink{font-size:small}.ajax-comments-form-reply,.form-item,.js-comment{margin-top:30px}.btn-success a,ul.subjects li a:hover,ul.subjects li a:hover span{text-decoration:none!important}.box,.map-gallery{float:left;position:relative}.wb-overlay.open.wb-popup-mid{height:450px;width:520px;overflow:auto}.modal-header{text-align:center}#selectableAPA,#selectableMLA{max-width:400px;width:auto;font-size:15px;color:#000;line-height:20px}.modal-body th{width:65px;text-align:right;font-weight:400;color:#777;padding-right:16px;white-space:nowrap;vertical-align:top;overflow-x:hidden}.map-gallery,.reportLink,.ribbon span,ul.subjects,ul.subjects li a{text-align:center}.modal-body tr:hover{background-color:#f2f2f2;overflow-y:auto;box-sizing:border-box;padding:24px 41px 0}.modal-body table{border-collapse:separate;border-spacing:0 8px}.reportLink{margin-left:15px}.clip-citation{width:25px;height:32px;background-color:#fff;background-image:url(\"../images/Octicons-clippy.svg\");background-size:25px 30px;background-repeat:no-repeat;border-style:solid;border-radius:5px;border-color:#fff}.clip-citation:hover{background-color:#b3d9ff;border:2px solid #b3d9ff;border-radius:5px}.indented{border-left:5px solid #eaebed;padding-left:1.5em}.js-comment{margin-bottom:30px}.js-comment:first-of-type{margin-top:20px}.form-required:after{content:\"(required)\";display:inline;color:#e00;vertical-align:baseline;margin-left:4px;background-image:none}.form-required:lang(fr):after{content:\"(requis)\"}.form-required:before{color:#e00;content:\"* \"}.form-inline .form-item{margin-top:0}.form-item h4.label{border:none;padding:0;display:inline-block;text-align:left;color:#000;font-size:100%}.ribbon span::after,.ribbon span::before{content:'';top:100%;z-index:-1;border-bottom:3px solid transparent;border-top:3px solid #8f0808}.views-exposed-form>.form-inline>.form-type-textfield>.form-text{max-width:200px!important}.form-inline .select-wrapper{max-width:150px}.webform-submission-form{margin-top:10px;background:#eee;border:1px solid #ddd;border-radius:4px;padding:1em}.webform-progress-tracker.progress-tracker{margin-bottom:50px!important}.form-item .panel-title{font-size:16px;font-weight:700}.facets-soft-limit-link,.form-item .panel-body,.help-block{font-size:14px}.webform-submission-suggest-a-dataset-form,.webform-submission-user-contributed-content-form,.webform-submission-user-stories-form{background:0 0;border:none}.progress-marker{z-index:unset}div.svg div.rateit-range{background:url(../images/rating/mapleleaf-normal.svg)}div.svg div.rateit-hover{background:url(../images/rating/mapleleaf-hover.svg)}div.svg div.rateit-selected{background:url(../images/rating/mapleleaf-selected.svg)}div.svg div.rateit-preset{background:url(../images/rating/mapleleaf-preset.svg)}.vote-thumbs-up-down{padding:0!important;background:0 0!important;color:#26374a!important;border:none!important;font-size:25px!important;font-family:\"Lucida Grande\",\"Lucida Sans Unicode\",\"liberation sans\",\"Glyphicons Halflings\",sans-serif!important}.webform-submission-vote-up-down-add-form,.webform-submission-vote-up-down-external-add-form{padding:5px 0 0!important;display:inline-block!important}.webform-submission-app-vote-form{background-color:#fff;margin:0;border:0;padding:0}ul.subjects{margin:0 0 50px;padding:0;list-style:none}ul.subjects li{margin:0;padding:0;list-style:none;vertical-align:top;display:inline-block}ul.subjects li a{display:inline-block;margin:0 16px 20px;outline:0;height:80px;width:80px;clear:both;padding-top:16px;font-size:40px;color:#284162}ul.subjects li a:hover{color:#8792a4}ul.subjects li a span{display:block;width:90px;font-size:15px}.icon{font-size:inherit;min-height:0;min-width:0}.facet-item__count,.facet-item__value{display:inline;font-size:14px;font-weight:400!important}.btn .icon{padding-left:0;min-height:0}.views-striped{border-bottom:1px solid #ccc;padding:10px 0}.views-striped:nth-of-type(odd){background-color:#f5f5f5}.views-striped:last-child{border-bottom:none}.dataTables_wrapper .dataTables_paginate .paginate_button.previous::before,.pager>li:first-child [rel=prev]::before,.pagination>li:first-child [rel=prev]::before,[dir=rtl] .dataTables_wrapper .dataTables_paginate .paginate_button.next::before,[dir=rtl] .pager [rel=next]::before,[dir=rtl] .pagination [rel=next]::before{content:\"\\e079\"!important;margin:0!important}.dataTables_wrapper .dataTables_paginate .paginate_button.next::after,.pager>li:last-child [rel=next]::after,.pagination>li:last-child [rel=next]::after,[dir=rtl] .dataTables_wrapper .dataTables_paginate .paginate_button.previous::after,[dir=rtl] .pager [rel=prev]::after,[dir=rtl] .pagination [rel=prev]::after{content:\"\\e080\"!important;margin:0!important}.pager li>a{padding:0 10px!important}#drupal-off-canvas select{-webkit-appearance:none;-moz-appearance:none}#drupal-off-canvas *,#drupal-off-canvas :not(div){word-spacing:normal;background:inherit;font-family:\"Lucida Grande\",\"Lucida Sans Unicode\",\"liberation sans\",\"Glyphicons Halflings\",sans-serif}#drupal-off-canvas ol li,#drupal-off-canvas ul li{padding:0;border-bottom:none}mark{background-color:#ff0!important}#wb-sec .is-active{background-color:#243850!important;color:#fff!important}.btn-success a{color:#fff!important}.map-gallery a,.provisional.followus-vertical a{text-decoration:none}#myCarousel{padding-top:3em;width:100%;height:500px;overflow-y:scroll}.carousel-inner>.item>a>img,.carousel-inner>.item>img,.thumbnail a>img,.thumbnail>img{margin:auto}ul.js-facets-checkbox-links{margin-left:-1.1em;margin-right:-1.1em}ul.js-facets-checkbox-links .facet-item label{display:inline}.facet-item.list-group-item{border-bottom:0!important;border-top:1px solid #ccc!important;border-left:0!important;border-right:0!important;border-radius:unset!important;padding-top:0;padding-bottom:0}.facet-item.list-group-item:first-child{border-top:0!important}.facet-item__value{margin-left:5px}.panel-primary>.panel-heading{background-color:#335075!important}.panel-title{padding:0 15px}.blog-striped,.box{padding:15px;transition:box-shadow .3s}.facet-summary-item--clear{background-color:#eaebed!important}.blog-striped:nth-of-type(odd),.box,.map-gallery{background:#eee}.facet-summary-item--clear a{font-size:16px!important}.glyphicon-remove.facet-item__status{color:red!important;font-size:14px!important;margin-right:5px}.comment-add{display:none!important}.device-format,.device-format-icon{display:inline-block}.map-gallery{width:100%;margin:0!important}.map-gallery a{padding:5px}.box{border:1px solid #bbb}.blog-striped:hover,.box:hover{box-shadow:0 0 20px rgba(33,33,33,.2)}.ribbon{position:absolute;right:-5px;top:-5px;z-index:1;overflow:hidden;width:75px;height:75px;text-align:right}.ribbon span{font-size:14px;color:#fff;text-transform:uppercase;font-weight:700;line-height:20px;transform:rotate(45deg);width:100px;display:block;background:#79a70a;background:linear-gradient(#f70505 0,#8f0808 100%);box-shadow:0 3px 10px -5px #000;position:absolute;top:19px;right:-21px}.ribbon span::before{position:absolute;left:0;border-left:3px solid #8f0808;border-right:3px solid transparent}.ribbon span::after{position:absolute;right:0;border-right:3px solid #8f0808;border-left:3px solid transparent}.public span{background:linear-gradient(#9bc90d 0,#79a70a 100%)}.public span::before{border-left-color:#79a70a;border-top-color:#79a70a}.public span::after{border-right-color:#79a70a;border-top-color:#79a70a}.code span{background:linear-gradient(#2989d8 0,#1e5799 100%)}.code span::before{border-left-color:#1e5799;border-top-color:#1e5799}.code span::after{border-right-color:#1e5799;border-top-color:#1e5799}.device-format-icon{font-size:larger}.device-format-icon-fa-globe{color:#5f9ea0}.device-format-icon-fa-app-store{color:#1e90ff}.device-format-icon-fa-android{color:#9acd32}.device-format-icon-fa-blackberry{color:#000}.blog-striped{border:1px solid #bbb}[class*=colcount-]>li{margin-left:0!important}#wb-bc ol{margin-top:15px;padding-left:0!important}.provisional.most-requested-bullets li{font-family:Lato,sans-serif;font-size:17px;font-weight:600;line-height:26px;margin-top:0}.provisional.followus,.provisional.followus-vertical{background-color:transparent}.provisional.followus-vertical{line-height:0}.provisional.followus{padding:0}.provisional.followus h2{display:block;font-size:1.1em;margin-top:10px}.provisional.followus-vertical ul{display:block;list-style-type:none;margin-block-start:1em;padding-inline-start:1em;font-size:16px;margin-block-end:0em}.provisional.followus h2,.provisional.followus ul{margin-left:0}.provisional.followus .facebook{background:url(https://design.canada.ca/images/social-media/facebook.png) 0 0/cover no-repeat}.provisional.followus .twitter{background:url(https://design.canada.ca/images/social-media/twitter.png) 0 0/cover no-repeat}.provisional.followus .facebook,.provisional.followus .instagram,.provisional.followus .linkedin,.provisional.followus .twitter,.provisional.followus .youtube{display:block;height:38px;width:38px}.provisional.followus-vertical ul li{margin-bottom:15px}.provisional.followus-vertical li{display:block;background-position:left}.provisional.followus ul li a{border:none}.provisional.followus-vertical ul li a{border:none;padding:0 5px}.provisional .social-lnk{position:relative;bottom:-18px;left:45px}.provisional.from{font-size:17px;margin-top:7px}.provisional.contributors{font-size:16px;font-weight:600}.provisional.contributors ul{margin-block-start:0em;margin-block-end:0em;margin-inline-start:-50px;margin-inline-end:0;padding-inline-start:0px}.provisional.contributors li{display:inline-block;margin-right:.7em}.container.gc-srvinfo{padding-left:0;padding-right:0}h1 span.stacked{display:flex;flex-direction:column-reverse;margin-left:-9999px}h1 span.stacked span:first-child{margin-top:-1.1em;margin-left:9999px}h1 span.stacked span:nth-child(2){margin-left:9999px;font-size:26px;color:#555;font-weight:500;margin-bottom:.17em}.topic-doormat{border:1px solid #e3e3e3;border-left:4px solid #26374a;border-radius:6px;background-color:#fff;margin:15px;padding:0 15px 15px}.topic-doormat:hover{box-shadow:1px 4px 4px gray}.guide figure img{border:1px solid #ddd!important}\n\\ No newline at end of file\n+.indented{border-left:5px solid #eaebed;padding-left:1.5em}.ajax-comments-form-reply{margin-top:30px}.js-comment{margin-top:30px;margin-bottom:30px}.js-comment:first-of-type{margin-top:20px}.form-required:after{content:\"(required)\";display:inline;color:#e00;vertical-align:baseline;margin-left:4px;background-image:none}.form-required:lang(fr):after{content:\"(requis)\"}.form-required:before{color:#e00;content:\"* \"}.form-item{margin-top:30px}.form-inline .form-item{margin-top:0}.form-item h4.label{border:none;padding:0;display:inline-block;text-align:left;color:#000;font-size:100%}.views-exposed-form>.form-inline>.form-type-textfield>.form-text{max-width:200px!important}.form-inline .select-wrapper{max-width:150px}.webform-submission-form{margin-top:10px;background:#eee;border:1px solid #ddd;border-radius:4px;padding:1em}.webform-progress-tracker.progress-tracker{margin-bottom:50px!important}.form-item .panel-title{font-size:16px;font-weight:700}.form-item .panel-body{font-size:14px}.webform-submission-user-contributed-content-form,.webform-submission-suggest-a-dataset-form,.webform-submission-user-stories-form{background:none;border:none}.help-block{font-size:14px}.progress-marker{z-index:unset}div.svg div.rateit-range{background:url(../images/rating/mapleleaf-normal.svg)}div.svg div.rateit-hover{background:url(../images/rating/mapleleaf-hover.svg)}div.svg div.rateit-selected{background:url(../images/rating/mapleleaf-selected.svg)}div.svg div.rateit-preset{background:url(../images/rating/mapleleaf-preset.svg)}.vote-thumbs-up-down{padding:0px!important;background:transparent!important;color:#26374a!important;border:none!important;font-size:25px!important;font-family:\"Lucida Grande\",\"Lucida Sans Unicode\",\"liberation sans\",\"Glyphicons Halflings\",sans-serif!important}.webform-submission-vote-up-down-add-form,.webform-submission-vote-up-down-external-add-form{padding:5px 0 0 0!important;display:inline-block!important}.webform-submission-app-vote-form{background-color:#fff;margin:0;border:0;padding:0}ul.subjects{margin:0 0 50px 0;padding:0;text-align:center;list-style:none}ul.subjects li{margin:0;padding:0;list-style:none;vertical-align:top;display:inline-block}ul.subjects li a:hover,ul.subjects li a:hover span{text-decoration:none!important}ul.subjects li a{display:inline-block;margin:0 16px 20px 16px;outline:0;height:80px;width:80px;text-align:center;clear:both;padding-top:16px;font-size:40px;color:#284162}ul.subjects li a:hover{color:#8792A4}ul.subjects li a:hover,ul.subjects li a:hover span{text-decoration:none!important}ul.subjects li a span{display:block;width:90px;font-size:15px}.icon{font-size:inherit;min-height:0;min-width:0}.btn .icon{padding-left:0;min-height:0}.views-striped{border-bottom:1px solid #ccc;padding:10px 0}.views-striped:nth-of-type(odd){background-color:#f5f5f5}.views-striped:last-child{border-bottom:none}.dataTables_wrapper .dataTables_paginate .paginate_button.previous::before,.pager>li:first-child [rel=\"prev\"]::before,.pagination>li:first-child [rel=\"prev\"]::before,[dir=\"rtl\"] .dataTables_wrapper .dataTables_paginate .paginate_button.next::before,[dir=\"rtl\"] .pager [rel=\"next\"]::before,[dir=\"rtl\"] .pagination [rel=\"next\"]::before{content:\"\\e079\"!important;margin:0!important}.dataTables_wrapper .dataTables_paginate .paginate_button.next::after,.pager>li:last-child [rel=\"next\"]::after,.pagination>li:last-child [rel=\"next\"]::after,[dir=\"rtl\"] .dataTables_wrapper .dataTables_paginate .paginate_button.previous::after,[dir=\"rtl\"] .pager [rel=\"prev\"]::after,[dir=\"rtl\"] .pagination [rel=\"prev\"]::after{content:\"\\e080\"!important;margin:0!important}.pager li>a{padding:0 10px!important}#drupal-off-canvas select{-webkit-appearance:none;-moz-appearance:none}#drupal-off-canvas *,#drupal-off-canvas *:not(div){word-spacing:normal;background:inherit;font-family:\"Lucida Grande\",\"Lucida Sans Unicode\",\"liberation sans\",\"Glyphicons Halflings\",sans-serif}#drupal-off-canvas ul li,#drupal-off-canvas ol li{padding:0;border-bottom:none}mark{background-color:yellow!important}#wb-sec .is-active{background-color:#243850!important;color:#fff!important}.btn-success a{color:#fff!important;text-decoration:none!important}#myCarousel{padding-top:3em;width:100%;height:500px;overflow-y:scroll}.thumbnail>img,.thumbnail a>img,.carousel-inner>.item>img,.carousel-inner>.item>a>img{margin:auto}ul.js-facets-checkbox-links{margin-left:-1.1em;margin-right:-1.1em}ul.js-facets-checkbox-links .facet-item label{display:inline}.facet-item.list-group-item{border-bottom:0!important;border-top:1px solid #ccc!important;border-left:0!important;border-right:0!important;border-radius:unset!important;padding-top:0;padding-bottom:0}.facet-item.list-group-item:first-child{border-top:0!important}.facet-item__value{display:inline;font-size:14px;font-weight:400!important;margin-left:5px}.facet-item__count{display:inline;font-size:14px;font-weight:400!important}.panel-primary>.panel-heading{background-color:#335075!important}.panel-title{padding:0 15px}.facets-soft-limit-link{font-size:14px}.facet-summary-item--clear{background-color:#eaebed!important}.facet-summary-item--clear a{font-size:16px!important}.glyphicon-remove.facet-item__status{color:red!important;font-size:14px!important;margin-right:5px}.comment-add{display:none!important}.map-gallery{position:relative;float:left;width:100%;text-align:center;background:#eee;margin:0!important}.map-gallery a{text-decoration:none;padding:5px}.box{position:relative;border:1px solid #BBB;background:#eee;float:left;padding:15px;transition:box-shadow .3s}.box:hover{box-shadow:0 0 20px rgb(33 33 33 / .2)}.ribbon{position:absolute;right:-5px;top:-5px;z-index:1;overflow:hidden;width:75px;height:75px;text-align:right}.ribbon span{font-size:14px;color:#fff;text-transform:uppercase;text-align:center;font-weight:700;line-height:20px;transform:rotate(45deg);width:100px;display:block;background:#79A70A;background:linear-gradient(#F70505 0%,#8F0808 100%);box-shadow:0 3px 10px -5px #000;position:absolute;top:19px;right:-21px}.ribbon span::before{content:'';position:absolute;left:0;top:100%;z-index:-1;border-left:3px solid #8F0808;border-right:3px solid #fff0;border-bottom:3px solid #fff0;border-top:3px solid #8F0808}.ribbon span::after{content:'';position:absolute;right:0;top:100%;z-index:-1;border-right:3px solid #8F0808;border-left:3px solid #fff0;border-bottom:3px solid #fff0;border-top:3px solid #8F0808}.public span{background:linear-gradient(#9BC90D 0%,#79A70A 100%)}.public span::before{border-left-color:#79A70A;border-top-color:#79A70A}.public span::after{border-right-color:#79A70A;border-top-color:#79A70A}.code span{background:linear-gradient(#2989d8 0%,#1e5799 100%)}.code span::before{border-left-color:#1e5799;border-top-color:#1e5799}.code span::after{border-right-color:#1e5799;border-top-color:#1e5799}.device-format{display:inline-block}.device-format-icon{display:inline-block;font-size:larger}.device-format-icon-fa-globe{color:cadetblue}.device-format-icon-fa-app-store{color:dodgerblue}.device-format-icon-fa-android{color:yellowgreen}.device-format-icon-fa-blackberry{color:#000}.blog-striped{border:1px solid #BBB;padding:15px;transition:box-shadow .3s}.blog-striped:nth-of-type(odd){background:#eee}.blog-striped:hover{box-shadow:0 0 20px rgb(33 33 33 / .2)}[class*=colcount-]>li{margin-left:0!important}#wb-bc ol{margin-top:15px;padding-left:0px!important;padding-right:0 !improtant}.provisional.most-requested-bullets li{font-family:'Lato',sans-serif;font-size:17px;font-weight:600;line-height:26px;margin-top:0}.provisional.followus-vertical,.provisional.followus{background-color:#fff0}.provisional.followus-vertical{line-height:0em}.provisional.followus{padding:0}.provisional.followus h2,.provisional.followus ul{margin-left:0}.provisional.followus h2{display:block}.provisional.followus h2{font-size:1.1em;margin-top:10px}.provisional.followus-vertical ul{display:block;list-style-type:none;margin-block-start:1em;padding-inline-start:1em;font-size:16px;margin-block-end:0em}.provisional.followus h2,.provisional.followus ul{margin-left:0}.provisional.followus .facebook{background:url(https://design.canada.ca/images/social-media/facebook.png) 0 0 / cover no-repeat}.provisional.followus .twitter{background:url(https://design.canada.ca/images/social-media/twitter.png) 0 0 / cover no-repeat}.provisional.followus .facebook,.provisional.followus .twitter,.provisional.followus .youtube,.provisional.followus .instagram,.provisional.followus .linkedin{display:block;height:38px;width:38px}.provisional.followus-vertical ul li{margin-bottom:15px}.provisional.followus-vertical li{display:block;background-position:left}.provisional.followus ul li a{border:none}.provisional.followus-vertical ul li a{border:none;padding:0 5px}.provisional.followus-vertical a{text-decoration:none}.provisional .social-lnk{position:relative;bottom:-18px;left:45px}.provisional.from{font-size:17px;margin-top:7px}.provisional.contributors{font-size:16px;font-weight:600}.provisional.contributors ul{margin-block-start:0em;margin-block-end:0em;margin-inline-start:-50px;margin-inline-end:0;padding-inline-start:0}.provisional.contributors li{display:inline-block;margin-right:.7em}.container.gc-srvinfo{padding-left:0;padding-right:0}h1 span.stacked{display:flex;flex-direction:column-reverse;margin-left:-9999px}h1 span.stacked span:nth-child(1){margin-top:-1.1em;margin-left:9999px}h1 span.stacked span:nth-child(2){margin-left:9999px;font-size:26px;color:#555;font-weight:500;margin-bottom:.17em}.topic-doormat{border:1px solid #e3e3e3;border-left:4px solid #26374a;border-radius:6px;background-color:#fff;margin:15px;padding:0 15px 15px 15px}.topic-doormat:hover{box-shadow:1px 4px 4px gray}.guide figure img{border:1px #ddd solid!important}\n\\ No newline at end of file"
                },
                {
                    "sha": "d0f236c51bf01dcbe5441caa1d18e0bba49af550",
                    "filename": "gcweb.theme",
                    "status": "modified",
                    "additions": 0,
                    "deletions": 8,
                    "changes": 8,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/595c588c6726bafec2254a7efbb6f6711e759909/gcweb.theme",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/595c588c6726bafec2254a7efbb6f6711e759909/gcweb.theme",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/gcweb.theme?ref=595c588c6726bafec2254a7efbb6f6711e759909",
                    "patch": "@@ -26,14 +26,6 @@ function gcweb_preprocess_page(&$variables) {\n       $response->send();\n     }\n \n-    // redirect to suggested dataset page on django based search\n-    if ($node->getType() == 'suggested_dataset' && $variables['is_admin'] == false) {\n-      $domain = \\Drupal\\Core\\Site\\Settings::get('sd_search');\n-      $path = $domain[$variables['langcode']] . $node->uuid();\n-      $response = new TrustedRedirectResponse($path);\n-      $response->send();\n-    }\n-\n     // date modified\n     $time = $node->getChangedTime();\n     $variables['date_modified'] = \\Drupal::service('date.formatter')->format($time, 'custom', 'Y-m-d');"
                },
                {
                    "sha": "7152b0e17144e43c72c5e1a715583d72fd23e949",
                    "filename": "templates/field/field--node--field-dataset-keywords--suggested-dataset.html.twig",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 82,
                    "changes": 82,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-dataset-keywords--suggested-dataset.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-dataset-keywords--suggested-dataset.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Ffield%2Ffield--node--field-dataset-keywords--suggested-dataset.html.twig?ref=0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "patch": "@@ -1,82 +0,0 @@\n-{#\n-/**\n- * @file\n- * Theme override for a field.\n- *\n- * To override output, copy the \"field.html.twig\" from the templates directory\n- * to your theme's directory and customize it, just like customizing other\n- * Drupal templates such as page.html.twig or node.html.twig.\n- *\n- * Instead of overriding the theming for all fields, you can also just override\n- * theming for a subset of fields using\n- * @link themeable Theme hook suggestions. @endlink For example,\n- * here are some theme hook suggestions that can be used for a field_foo field\n- * on an article node type:\n- * - field--node--field-foo--article.html.twig\n- * - field--node--field-foo.html.twig\n- * - field--node--article.html.twig\n- * - field--field-foo.html.twig\n- * - field--text-with-summary.html.twig\n- * - field.html.twig\n- *\n- * Available variables:\n- * - attributes: HTML attributes for the containing element.\n- * - label_hidden: Whether to show the field label or not.\n- * - title_attributes: HTML attributes for the title.\n- * - label: The label for the field.\n- * - multiple: TRUE if a field can contain multiple items.\n- * - items: List of all the field items. Each item contains:\n- *   - attributes: List of HTML attributes for each item.\n- *   - content: The field item's content.\n- * - entity_type: The entity type to which the field belongs.\n- * - field_name: The name of the field.\n- * - field_type: The type of the field.\n- * - label_display: The display settings for the label.\n- *\n- * @ingroup templates\n- *\n- * @see template_preprocess_field()\n- */\n-#}\n-{%\n-  set classes = [\n-    'field',\n-    'field--name-' ~ field_name|clean_class,\n-    'field--type-' ~ field_type|clean_class,\n-    'field--label-' ~ label_display,\n-    'mrgn-bttm-lg',\n-  ]\n-%}\n-{%\n-  set title_classes = [\n-    'field--label',\n-    label_display == 'visually_hidden' ? 'sr-only',\n-  ]\n-%}\n-\n-{% if label_hidden %}\n-  {% if multiple %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-      {% endfor %}\n-    </div>\n-  {% else %}\n-    {% for item in items %}\n-      <div{{ attributes.addClass(classes, 'field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-  {% endif %}\n-{% else %}\n-  <div{{ attributes.addClass(classes) }}>\n-    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>\n-    {% if multiple %}\n-      <div class=\"field--items\">\n-    {% endif %}\n-    {% for item in items %}\n-      <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-    {% if multiple %}\n-      </div>\n-    {% endif %}\n-  </div>\n-{% endif %}"
                },
                {
                    "sha": "c5577e3a328f7a61cf1a78963492a2fa64a532d8",
                    "filename": "templates/field/field--node--field-dataset-subject--suggested-dataset.html.twig",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 82,
                    "changes": 82,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-dataset-subject--suggested-dataset.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-dataset-subject--suggested-dataset.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Ffield%2Ffield--node--field-dataset-subject--suggested-dataset.html.twig?ref=0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "patch": "@@ -1,82 +0,0 @@\n-{#\n-/**\n- * @file\n- * Theme override for a field.\n- *\n- * To override output, copy the \"field.html.twig\" from the templates directory\n- * to your theme's directory and customize it, just like customizing other\n- * Drupal templates such as page.html.twig or node.html.twig.\n- *\n- * Instead of overriding the theming for all fields, you can also just override\n- * theming for a subset of fields using\n- * @link themeable Theme hook suggestions. @endlink For example,\n- * here are some theme hook suggestions that can be used for a field_foo field\n- * on an article node type:\n- * - field--node--field-foo--article.html.twig\n- * - field--node--field-foo.html.twig\n- * - field--node--article.html.twig\n- * - field--field-foo.html.twig\n- * - field--text-with-summary.html.twig\n- * - field.html.twig\n- *\n- * Available variables:\n- * - attributes: HTML attributes for the containing element.\n- * - label_hidden: Whether to show the field label or not.\n- * - title_attributes: HTML attributes for the title.\n- * - label: The label for the field.\n- * - multiple: TRUE if a field can contain multiple items.\n- * - items: List of all the field items. Each item contains:\n- *   - attributes: List of HTML attributes for each item.\n- *   - content: The field item's content.\n- * - entity_type: The entity type to which the field belongs.\n- * - field_name: The name of the field.\n- * - field_type: The type of the field.\n- * - label_display: The display settings for the label.\n- *\n- * @ingroup templates\n- *\n- * @see template_preprocess_field()\n- */\n-#}\n-{%\n-  set classes = [\n-    'field',\n-    'field--name-' ~ field_name|clean_class,\n-    'field--type-' ~ field_type|clean_class,\n-    'field--label-' ~ label_display,\n-    'mrgn-bttm-lg',\n-]\n-%}\n-{%\n-  set title_classes = [\n-    'field--label',\n-    label_display == 'visually_hidden' ? 'sr-only',\n-  ]\n-%}\n-\n-{% if label_hidden %}\n-  {% if multiple %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-      {% endfor %}\n-    </div>\n-  {% else %}\n-    {% for item in items %}\n-      <div{{ attributes.addClass(classes, 'field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-  {% endif %}\n-{% else %}\n-  <div{{ attributes.addClass(classes) }}>\n-    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>\n-    {% if multiple %}\n-      <div class=\"field--items\">\n-    {% endif %}\n-    {% for item in items %}\n-      <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-    {% if multiple %}\n-      </div>\n-    {% endif %}\n-  </div>\n-{% endif %}"
                },
                {
                    "sha": "7152b0e17144e43c72c5e1a715583d72fd23e949",
                    "filename": "templates/field/field--node--field-date-published--suggested-dataset.html.twig",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 82,
                    "changes": 82,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-date-published--suggested-dataset.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-date-published--suggested-dataset.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Ffield%2Ffield--node--field-date-published--suggested-dataset.html.twig?ref=0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "patch": "@@ -1,82 +0,0 @@\n-{#\n-/**\n- * @file\n- * Theme override for a field.\n- *\n- * To override output, copy the \"field.html.twig\" from the templates directory\n- * to your theme's directory and customize it, just like customizing other\n- * Drupal templates such as page.html.twig or node.html.twig.\n- *\n- * Instead of overriding the theming for all fields, you can also just override\n- * theming for a subset of fields using\n- * @link themeable Theme hook suggestions. @endlink For example,\n- * here are some theme hook suggestions that can be used for a field_foo field\n- * on an article node type:\n- * - field--node--field-foo--article.html.twig\n- * - field--node--field-foo.html.twig\n- * - field--node--article.html.twig\n- * - field--field-foo.html.twig\n- * - field--text-with-summary.html.twig\n- * - field.html.twig\n- *\n- * Available variables:\n- * - attributes: HTML attributes for the containing element.\n- * - label_hidden: Whether to show the field label or not.\n- * - title_attributes: HTML attributes for the title.\n- * - label: The label for the field.\n- * - multiple: TRUE if a field can contain multiple items.\n- * - items: List of all the field items. Each item contains:\n- *   - attributes: List of HTML attributes for each item.\n- *   - content: The field item's content.\n- * - entity_type: The entity type to which the field belongs.\n- * - field_name: The name of the field.\n- * - field_type: The type of the field.\n- * - label_display: The display settings for the label.\n- *\n- * @ingroup templates\n- *\n- * @see template_preprocess_field()\n- */\n-#}\n-{%\n-  set classes = [\n-    'field',\n-    'field--name-' ~ field_name|clean_class,\n-    'field--type-' ~ field_type|clean_class,\n-    'field--label-' ~ label_display,\n-    'mrgn-bttm-lg',\n-  ]\n-%}\n-{%\n-  set title_classes = [\n-    'field--label',\n-    label_display == 'visually_hidden' ? 'sr-only',\n-  ]\n-%}\n-\n-{% if label_hidden %}\n-  {% if multiple %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-      {% endfor %}\n-    </div>\n-  {% else %}\n-    {% for item in items %}\n-      <div{{ attributes.addClass(classes, 'field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-  {% endif %}\n-{% else %}\n-  <div{{ attributes.addClass(classes) }}>\n-    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>\n-    {% if multiple %}\n-      <div class=\"field--items\">\n-    {% endif %}\n-    {% for item in items %}\n-      <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-    {% if multiple %}\n-      </div>\n-    {% endif %}\n-  </div>\n-{% endif %}"
                },
                {
                    "sha": "c064d7cda80230dab42e4c08b1ac0c13fb7b2904",
                    "filename": "templates/field/field--node--field-feedback--suggested-dataset.html.twig",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 81,
                    "changes": 81,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-feedback--suggested-dataset.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-feedback--suggested-dataset.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Ffield%2Ffield--node--field-feedback--suggested-dataset.html.twig?ref=0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "patch": "@@ -1,81 +0,0 @@\n-{#\n-/**\n- * @file\n- * Theme override for a field.\n- *\n- * To override output, copy the \"field.html.twig\" from the templates directory\n- * to your theme's directory and customize it, just like customizing other\n- * Drupal templates such as page.html.twig or node.html.twig.\n- *\n- * Instead of overriding the theming for all fields, you can also just override\n- * theming for a subset of fields using\n- * @link themeable Theme hook suggestions. @endlink For example,\n- * here are some theme hook suggestions that can be used for a field_foo field\n- * on an article node type:\n- * - field--node--field-foo--article.html.twig\n- * - field--node--field-foo.html.twig\n- * - field--node--article.html.twig\n- * - field--field-foo.html.twig\n- * - field--text-with-summary.html.twig\n- * - field.html.twig\n- *\n- * Available variables:\n- * - attributes: HTML attributes for the containing element.\n- * - label_hidden: Whether to show the field label or not.\n- * - title_attributes: HTML attributes for the title.\n- * - label: The label for the field.\n- * - multiple: TRUE if a field can contain multiple items.\n- * - items: List of all the field items. Each item contains:\n- *   - attributes: List of HTML attributes for each item.\n- *   - content: The field item's content.\n- * - entity_type: The entity type to which the field belongs.\n- * - field_name: The name of the field.\n- * - field_type: The type of the field.\n- * - label_display: The display settings for the label.\n- *\n- * @ingroup templates\n- *\n- * @see template_preprocess_field()\n- */\n-#}\n-{%\n-  set classes = [\n-    'field',\n-    'field--name-' ~ field_name|clean_class,\n-    'field--type-' ~ field_type|clean_class,\n-    'field--label-' ~ label_display,\n-  ]\n-%}\n-{%\n-  set title_classes = [\n-    'field--label',\n-    label_display == 'visually_hidden' ? 'sr-only',\n-  ]\n-%}\n-\n-{% if label_hidden %}\n-  {% if multiple %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-      {% endfor %}\n-    </div>\n-  {% else %}\n-    {% for item in items %}\n-      <div{{ attributes.addClass(classes, 'field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-  {% endif %}\n-{% else %}\n-  <div{{ attributes.addClass(classes) }}>\n-    <h2{{ title_attributes.addClass(title_classes) }}>{{ label }}</h2>\n-    {% if multiple %}\n-      <div class=\"field--items\">\n-    {% endif %}\n-    {% for item in items %}\n-      <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-    {% if multiple %}\n-      </div>\n-    {% endif %}\n-  </div>\n-{% endif %}"
                },
                {
                    "sha": "cbcdf7b44c714b8ae0fd1b885e395b79742b047f",
                    "filename": "templates/field/field--node--field-organization--suggested-dataset.html.twig",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 82,
                    "changes": 82,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-organization--suggested-dataset.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-organization--suggested-dataset.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Ffield%2Ffield--node--field-organization--suggested-dataset.html.twig?ref=0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "patch": "@@ -1,82 +0,0 @@\n-{#\n-/**\n- * @file\n- * Theme override for a field.\n- *\n- * To override output, copy the \"field.html.twig\" from the templates directory\n- * to your theme's directory and customize it, just like customizing other\n- * Drupal templates such as page.html.twig or node.html.twig.\n- *\n- * Instead of overriding the theming for all fields, you can also just override\n- * theming for a subset of fields using\n- * @link themeable Theme hook suggestions. @endlink For example,\n- * here are some theme hook suggestions that can be used for a field_foo field\n- * on an article node type:\n- * - field--node--field-foo--article.html.twig\n- * - field--node--field-foo.html.twig\n- * - field--node--article.html.twig\n- * - field--field-foo.html.twig\n- * - field--text-with-summary.html.twig\n- * - field.html.twig\n- *\n- * Available variables:\n- * - attributes: HTML attributes for the containing element.\n- * - label_hidden: Whether to show the field label or not.\n- * - title_attributes: HTML attributes for the title.\n- * - label: The label for the field.\n- * - multiple: TRUE if a field can contain multiple items.\n- * - items: List of all the field items. Each item contains:\n- *   - attributes: List of HTML attributes for each item.\n- *   - content: The field item's content.\n- * - entity_type: The entity type to which the field belongs.\n- * - field_name: The name of the field.\n- * - field_type: The type of the field.\n- * - label_display: The display settings for the label.\n- *\n- * @ingroup templates\n- *\n- * @see template_preprocess_field()\n- */\n-#}\n-{%\n-  set classes = [\n-    'field',\n-    'field--name-' ~ field_name|clean_class,\n-    'field--type-' ~ field_type|clean_class,\n-    'field--label-' ~ label_display,\n-  ]\n-%}\n-{%\n-  set title_classes = [\n-    'field--label',\n-    'mrgn-tp-0',\n-    label_display == 'visually_hidden' ? 'sr-only',\n-  ]\n-%}\n-\n-{% if label_hidden %}\n-  {% if multiple %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-      {% endfor %}\n-    </div>\n-  {% else %}\n-    {% for item in items %}\n-      <div{{ attributes.addClass(classes, 'field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-  {% endif %}\n-{% else %}\n-  <div{{ attributes.addClass(classes) }}>\n-    <h2{{ title_attributes.addClass(title_classes) }}>{{ label }}</h2>\n-    {% if multiple %}\n-      <div class=\"field--items\">\n-    {% endif %}\n-    {% for item in items %}\n-      <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-    {% if multiple %}\n-      </div>\n-    {% endif %}\n-  </div>\n-{% endif %}"
                },
                {
                    "sha": "7152b0e17144e43c72c5e1a715583d72fd23e949",
                    "filename": "templates/field/field--node--field-sd-status--suggested-dataset.html.twig",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 82,
                    "changes": 82,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-sd-status--suggested-dataset.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-sd-status--suggested-dataset.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Ffield%2Ffield--node--field-sd-status--suggested-dataset.html.twig?ref=0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "patch": "@@ -1,82 +0,0 @@\n-{#\n-/**\n- * @file\n- * Theme override for a field.\n- *\n- * To override output, copy the \"field.html.twig\" from the templates directory\n- * to your theme's directory and customize it, just like customizing other\n- * Drupal templates such as page.html.twig or node.html.twig.\n- *\n- * Instead of overriding the theming for all fields, you can also just override\n- * theming for a subset of fields using\n- * @link themeable Theme hook suggestions. @endlink For example,\n- * here are some theme hook suggestions that can be used for a field_foo field\n- * on an article node type:\n- * - field--node--field-foo--article.html.twig\n- * - field--node--field-foo.html.twig\n- * - field--node--article.html.twig\n- * - field--field-foo.html.twig\n- * - field--text-with-summary.html.twig\n- * - field.html.twig\n- *\n- * Available variables:\n- * - attributes: HTML attributes for the containing element.\n- * - label_hidden: Whether to show the field label or not.\n- * - title_attributes: HTML attributes for the title.\n- * - label: The label for the field.\n- * - multiple: TRUE if a field can contain multiple items.\n- * - items: List of all the field items. Each item contains:\n- *   - attributes: List of HTML attributes for each item.\n- *   - content: The field item's content.\n- * - entity_type: The entity type to which the field belongs.\n- * - field_name: The name of the field.\n- * - field_type: The type of the field.\n- * - label_display: The display settings for the label.\n- *\n- * @ingroup templates\n- *\n- * @see template_preprocess_field()\n- */\n-#}\n-{%\n-  set classes = [\n-    'field',\n-    'field--name-' ~ field_name|clean_class,\n-    'field--type-' ~ field_type|clean_class,\n-    'field--label-' ~ label_display,\n-    'mrgn-bttm-lg',\n-  ]\n-%}\n-{%\n-  set title_classes = [\n-    'field--label',\n-    label_display == 'visually_hidden' ? 'sr-only',\n-  ]\n-%}\n-\n-{% if label_hidden %}\n-  {% if multiple %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-      {% endfor %}\n-    </div>\n-  {% else %}\n-    {% for item in items %}\n-      <div{{ attributes.addClass(classes, 'field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-  {% endif %}\n-{% else %}\n-  <div{{ attributes.addClass(classes) }}>\n-    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>\n-    {% if multiple %}\n-      <div class=\"field--items\">\n-    {% endif %}\n-    {% for item in items %}\n-      <div{{ item.attributes.addClass('field--item') }}>{{ item.content }}</div>\n-    {% endfor %}\n-    {% if multiple %}\n-      </div>\n-    {% endif %}\n-  </div>\n-{% endif %}"
                },
                {
                    "sha": "c704f69c31611696a26b2a7f24155f940cf26fb6",
                    "filename": "templates/field/field--node--field-status-link--suggested-dataset.html.twig",
                    "status": "removed",
                    "additions": 0,
                    "deletions": 90,
                    "changes": 90,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-status-link--suggested-dataset.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132/templates%2Ffield%2Ffield--node--field-status-link--suggested-dataset.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Ffield%2Ffield--node--field-status-link--suggested-dataset.html.twig?ref=0f376ace8fd59d4bf7f9b2d88e33bde6ef0a4132",
                    "patch": "@@ -1,90 +0,0 @@\n-{#\n-/**\n- * @file\n- * Theme override for a field.\n- *\n- * To override output, copy the \"field.html.twig\" from the templates directory\n- * to your theme's directory and customize it, just like customizing other\n- * Drupal templates such as page.html.twig or node.html.twig.\n- *\n- * Instead of overriding the theming for all fields, you can also just override\n- * theming for a subset of fields using\n- * @link themeable Theme hook suggestions. @endlink For example,\n- * here are some theme hook suggestions that can be used for a field_foo field\n- * on an article node type:\n- * - field--node--field-foo--article.html.twig\n- * - field--node--field-foo.html.twig\n- * - field--node--article.html.twig\n- * - field--field-foo.html.twig\n- * - field--text-with-summary.html.twig\n- * - field.html.twig\n- *\n- * Available variables:\n- * - attributes: HTML attributes for the containing element.\n- * - label_hidden: Whether to show the field label or not.\n- * - title_attributes: HTML attributes for the title.\n- * - label: The label for the field.\n- * - multiple: TRUE if a field can contain multiple items.\n- * - items: List of all the field items. Each item contains:\n- *   - attributes: List of HTML attributes for each item.\n- *   - content: The field item's content.\n- * - entity_type: The entity type to which the field belongs.\n- * - field_name: The name of the field.\n- * - field_type: The type of the field.\n- * - label_display: The display settings for the label.\n- *\n- * @ingroup templates\n- *\n- * @see template_preprocess_field()\n- */\n-#}\n-{%\n-  set classes = [\n-    'field',\n-    'field--name-' ~ field_name|clean_class,\n-    'field--type-' ~ field_type|clean_class,\n-    'field--label-' ~ label_display,\n-    'mrgn-bttm-lg',\n-  ]\n-%}\n-{%\n-  set title_classes = [\n-    'field--label',\n-    label_display == 'visually_hidden' ? 'sr-only',\n-  ]\n-%}\n-\n-{% if label_hidden %}\n-  {% if multiple %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item', 'btn', 'btn-success') }}>\n-          <a href=\"{{ item.content['#url'] }}\">{{ 'Get Dataset'|t }}</a>\n-        </div>\n-      {% endfor %}\n-    </div>\n-  {% else %}\n-    <div{{ attributes.addClass(classes, 'field--items') }}>\n-      {% for item in items %}\n-        <div{{ item.attributes.addClass('field--item', 'btn', 'btn-success') }}>\n-          <a href=\"{{ item.content['#url'] }}\">{{ 'Get Dataset'|t }}</a>\n-        </div>\n-      {% endfor %}\n-    </div>\n-  {% endif %}\n-{% else %}\n-  <div{{ attributes.addClass(classes) }}>\n-    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>\n-    {% if multiple %}\n-      <div class=\"field--items\">\n-    {% endif %}\n-    {% for item in items %}\n-      <div{{ item.attributes.addClass('field--item', 'btn', 'btn-success') }}>\n-        <a href=\"{{ item.content['#url'] }}\">{{ 'Get Dataset'|t }}</a>\n-      </div>\n-    {% endfor %}\n-    {% if multiple %}\n-      </div>\n-    {% endif %}\n-  </div>\n-{% endif %}"
                },
                {
                    "sha": "9f6c9b4db1c17ed67d1d57d0d9ad1854c5257d86",
                    "filename": "templates/views/views-view-table.html.twig",
                    "status": "modified",
                    "additions": 2,
                    "deletions": 14,
                    "changes": 16,
                    "blob_url": "https://github.com/open-data/gcweb_bootstrap/blob/595c588c6726bafec2254a7efbb6f6711e759909/templates%2Fviews%2Fviews-view-table.html.twig",
                    "raw_url": "https://github.com/open-data/gcweb_bootstrap/raw/595c588c6726bafec2254a7efbb6f6711e759909/templates%2Fviews%2Fviews-view-table.html.twig",
                    "contents_url": "https://api.github.com/repos/open-data/gcweb_bootstrap/contents/templates%2Fviews%2Fviews-view-table.html.twig?ref=595c588c6726bafec2254a7efbb6f6711e759909",
                    "patch": "@@ -38,7 +38,7 @@\n   {% endif %}\n   {%\n     set classes = [\n-    view.storage.id == 'suggested_datasets' ? 'wb-tables',\n+    'wb-tables',\n     'table',\n     bordered ? 'table-bordered',\n     condensed ? 'table-condensed',\n@@ -47,11 +47,7 @@\n     sticky ? 'sticky-enabled',\n   ]\n   %}\n-  {% if view.storage.id == 'suggested_datasets' %}\n-    <table{{ attributes.addClass(classes).setAttribute('data-wb-tables', '{ \"columnDefs\": [ { \"orderData\": 4, \"targets\": 4 } ], \"order\": [[ 4, \"desc\" ]] }') }}>\n-  {% else %}\n-      <table{{ attributes.addClass(classes) }}>\n-  {% endif %}\n+    <table{{ attributes.addClass(classes) }}>\n       {% if caption_needed %}\n         <caption>\n           {% if caption %}\n@@ -114,15 +110,7 @@\n                 {% set column_classes = column_classes|merge(['views-field-' ~ field]) %}\n               {% endfor %}\n             {% endif %}\n-            {% if (view.storage.id == 'suggested_datasets') and (key == 'field_vote_up_down') %}\n-              {% set dataOrder = 1 %}\n-              {% for content in column.content %}\n-                {% set dataOrder = content.field_output|render|striptags|trim %}\n-              {% endfor %}\n             <td{{ column.attributes.addClass(column_classes) }}>\n-            {% else %}\n-              <td{{ column.attributes.addClass(column_classes) }}>\n-            {% endif %}\n             {%- if column.wrapper_element -%}\n               <{{ column.wrapper_element }}>\n               {% for content in column.content %}"
                }
            ]
        }
    }
}